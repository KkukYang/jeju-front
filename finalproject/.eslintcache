[{"/Users/yang-mac/jeju-front-react/finalproject/src/index.js":"1","/Users/yang-mac/jeju-front-react/finalproject/src/reportWebVitals.js":"2","/Users/yang-mac/jeju-front-react/finalproject/src/App.js":"3","/Users/yang-mac/jeju-front-react/finalproject/src/component/footer/FooterComp.js":"4","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/MainComp.js":"5","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/HeaderComp.js":"6","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/reservation/ReservationPageComp.js":"7","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/MainPageComp.js":"8","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/notice/NoticePageComp.js":"9","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/admin/MemberListPageComp.js":"10","/Users/yang-mac/jeju-front-react/finalproject/src/redux/store.js":"11","/Users/yang-mac/jeju-front-react/finalproject/src/redux/config.js":"12","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/TourPageComp.js":"13","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/MypagePageComp.js":"14","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/ShareBoardPageComp.js":"15","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/LoginPageComp.js":"16","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/SearchComp.js":"17","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/admin/RowItem.js":"18","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/ShareBoardMiniComp.js":"19","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/NoticeMiniComp.js":"20","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/GoogleLoginBtnComp.js":"21","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/GoogleLogoutBtnComp.js":"22","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/refreshToken.js":"23","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/Menu.js":"24","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/index.js":"25","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Notice.js":"26","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/ShareBoard.js":"27","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Reservation.js":"28","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Tour.js":"29","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/MyPage.js":"30","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Login.js":"31","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Home.js":"32","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Admin.js":"33","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Join.js":"34","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/ShareBoardFormComp.js":"35","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/join/SignupPageComp.js":"36","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/ShareBoardRowItem.js":"37","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/ItemComp.js":"38","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/PageComp.js":"39","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/DetailTourComp.js":"40","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/TourList.js":"41","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/MemberUpdateFormComp.js":"42","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/HotPlaceComp.js":"43","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/DetailReviewComp.js":"44","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/MapComp.js":"45","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/ReviewListComp.js":"46","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/ReviewItemComp.js":"47","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/EtcBoardComp.js":"48","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/MainPhotoComp.js":"49","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/MyPlanComp.js":"50","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/Tourintro.js":"51","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/ShareBoardUpdateForm.js":"52","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/theme.js":"53","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/WaveBorder.js":"54","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/NaverLoginBtnComp.js":"55","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/notice/BoardItem.js":"56","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/FaceBookLoginBtnComp.js":"57","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/Modal.js":"58","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/ShareReview.js":"59","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/ReviewItem.js":"60","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/BoardSample.js":"61","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/MySchedule.js":"62","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/Calendar.js":"63","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/DayItem.js":"64","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/AroundModal.js":"65","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/UseModal.js":"66","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/Header.js":"67","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/notice/BoardForm.js":"68","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/notice/NoticeContent.js":"69","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/AroundModalDetail.js":"70","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/SearchResultComp.js":"71","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/join/SubmitBtn.js":"72","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/join/SubmitBtn2.js":"73","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/MyReview.js":"74","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/MyWishlist.js":"75","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/ReviewList.js":"76","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/MakeLoginBtn.js":"77","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/BoardSampleItem.js":"78","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/DayDetail.js":"79"},{"size":881,"mtime":1611748210856,"results":"80","hashOfConfig":"81"},{"size":362,"mtime":1607874095804,"results":"82","hashOfConfig":"81"},{"size":7792,"mtime":1611823338632,"results":"83","hashOfConfig":"81"},{"size":1354,"mtime":1611641105003,"results":"84","hashOfConfig":"81"},{"size":3840,"mtime":1611291054008,"results":"85","hashOfConfig":"81"},{"size":755,"mtime":1611290228785,"results":"86","hashOfConfig":"81"},{"size":441,"mtime":1610602808575,"results":"87","hashOfConfig":"81"},{"size":2352,"mtime":1611728393830,"results":"88","hashOfConfig":"81"},{"size":3003,"mtime":1611732105611,"results":"89","hashOfConfig":"81"},{"size":2472,"mtime":1611271006445,"results":"90","hashOfConfig":"81"},{"size":3126,"mtime":1611818183334,"results":"91","hashOfConfig":"81"},{"size":1658,"mtime":1611888099153,"results":"92","hashOfConfig":"81"},{"size":5694,"mtime":1611814864152,"results":"93","hashOfConfig":"81"},{"size":8250,"mtime":1611816015695,"results":"94","hashOfConfig":"81"},{"size":3141,"mtime":1611646846466,"results":"95","hashOfConfig":"81"},{"size":4517,"mtime":1611796982055,"results":"96","hashOfConfig":"81"},{"size":5030,"mtime":1611810795940,"results":"97","hashOfConfig":"81"},{"size":546,"mtime":1611271006446,"results":"98","hashOfConfig":"81"},{"size":1546,"mtime":1611737115426,"results":"99","hashOfConfig":"81"},{"size":1531,"mtime":1611737115433,"results":"100","hashOfConfig":"81"},{"size":2521,"mtime":1611736670137,"results":"101","hashOfConfig":"81"},{"size":740,"mtime":1610931080015,"results":"102","hashOfConfig":"81"},{"size":696,"mtime":1610931080016,"results":"103","hashOfConfig":"81"},{"size":9083,"mtime":1611808556078,"results":"104","hashOfConfig":"81"},{"size":606,"mtime":1611190029673,"results":"105","hashOfConfig":"81"},{"size":280,"mtime":1610931073538,"results":"106","hashOfConfig":"81"},{"size":298,"mtime":1610931073539,"results":"107","hashOfConfig":"81"},{"size":305,"mtime":1610931073538,"results":"108","hashOfConfig":"81"},{"size":238,"mtime":1611420308453,"results":"109","hashOfConfig":"81"},{"size":274,"mtime":1610931073538,"results":"110","hashOfConfig":"81"},{"size":271,"mtime":1610931073538,"results":"111","hashOfConfig":"81"},{"size":1447,"mtime":1610931073537,"results":"112","hashOfConfig":"81"},{"size":271,"mtime":1610931073537,"results":"113","hashOfConfig":"81"},{"size":308,"mtime":1610932165874,"results":"114","hashOfConfig":"81"},{"size":7344,"mtime":1611822099705,"results":"115","hashOfConfig":"81"},{"size":16657,"mtime":1611736670138,"results":"116","hashOfConfig":"81"},{"size":9176,"mtime":1611749208237,"results":"117","hashOfConfig":"81"},{"size":2197,"mtime":1611532355379,"results":"118","hashOfConfig":"81"},{"size":2569,"mtime":1611814980802,"results":"119","hashOfConfig":"81"},{"size":10619,"mtime":1611808556083,"results":"120","hashOfConfig":"81"},{"size":246,"mtime":1611420308453,"results":"121","hashOfConfig":"81"},{"size":6973,"mtime":1611816015694,"results":"122","hashOfConfig":"81"},{"size":20605,"mtime":1611888706691,"results":"123","hashOfConfig":"81"},{"size":6986,"mtime":1611749208237,"results":"124","hashOfConfig":"81"},{"size":18511,"mtime":1611726059210,"results":"125","hashOfConfig":"81"},{"size":3969,"mtime":1611749208239,"results":"126","hashOfConfig":"81"},{"size":8640,"mtime":1611796982056,"results":"127","hashOfConfig":"81"},{"size":2085,"mtime":1611541151579,"results":"128","hashOfConfig":"81"},{"size":2777,"mtime":1611821012423,"results":"129","hashOfConfig":"81"},{"size":7094,"mtime":1611496053986,"results":"130","hashOfConfig":"81"},{"size":19179,"mtime":1611815800807,"results":"131","hashOfConfig":"81"},{"size":5326,"mtime":1611641205029,"results":"132","hashOfConfig":"81"},{"size":574,"mtime":1611641105006,"results":"133","hashOfConfig":"81"},{"size":3163,"mtime":1611749511894,"results":"134","hashOfConfig":"81"},{"size":7322,"mtime":1611420308454,"results":"135","hashOfConfig":"81"},{"size":718,"mtime":1611732105610,"results":"136","hashOfConfig":"81"},{"size":1555,"mtime":1611420308453,"results":"137","hashOfConfig":"81"},{"size":989,"mtime":1611446566311,"results":"138","hashOfConfig":"81"},{"size":1435,"mtime":1611641205030,"results":"139","hashOfConfig":"81"},{"size":5941,"mtime":1611678230221,"results":"140","hashOfConfig":"81"},{"size":4781,"mtime":1611849688700,"results":"141","hashOfConfig":"81"},{"size":1905,"mtime":1611711108926,"results":"142","hashOfConfig":"81"},{"size":5754,"mtime":1611816015691,"results":"143","hashOfConfig":"81"},{"size":1902,"mtime":1611816015692,"results":"144","hashOfConfig":"81"},{"size":959,"mtime":1611726059208,"results":"145","hashOfConfig":"81"},{"size":266,"mtime":1611676544124,"results":"146","hashOfConfig":"81"},{"size":3006,"mtime":1611816015692,"results":"147","hashOfConfig":"81"},{"size":2612,"mtime":1611716113845,"results":"148","hashOfConfig":"81"},{"size":2067,"mtime":1611732105610,"results":"149","hashOfConfig":"81"},{"size":3944,"mtime":1611726059209,"results":"150","hashOfConfig":"81"},{"size":7681,"mtime":1611815874677,"results":"151","hashOfConfig":"81"},{"size":379,"mtime":1611732105608,"results":"152","hashOfConfig":"81"},{"size":599,"mtime":1611736670138,"results":"153","hashOfConfig":"81"},{"size":2295,"mtime":1611736670138,"results":"154","hashOfConfig":"81"},{"size":459,"mtime":1611736670139,"results":"155","hashOfConfig":"81"},{"size":1444,"mtime":1611736670140,"results":"156","hashOfConfig":"81"},{"size":2042,"mtime":1611816015690,"results":"157","hashOfConfig":"81"},{"size":523,"mtime":1611808556081,"results":"158","hashOfConfig":"81"},{"size":3580,"mtime":1611816015691,"results":"159","hashOfConfig":"81"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},"9tj91f",{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"162"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"173"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"162"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"162"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"162"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"162"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"162"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"162"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"162"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"162"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"162"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"162"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"162"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"162"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"162"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"162"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"162"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"162"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"162"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"162"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"162"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"162"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"162"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"162"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"162"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"162"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"162"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"162"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"162"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"162"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"162"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"162"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"162"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"162"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"162"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"162"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"162"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"162"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"162"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"162"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"162"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"162"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"162"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"162"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"162"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"162"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"162"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"162"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"162"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"162"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"162"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"162"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"162"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"162"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"162"},"/Users/yang-mac/jeju-front-react/finalproject/src/index.js",[],["376","377"],"/Users/yang-mac/jeju-front-react/finalproject/src/reportWebVitals.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/App.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/footer/FooterComp.js",["378"],"import React, {Component} from \"react\";\nimport Logo2 from \"../../image/logo2.png\";\n\nclass FooterComp extends Component {\n\n    constructor(props) {\n        super(props);\n        // console.log(\"FooterComp constructor\", props);\n    }\n\n    render() {\n        // console.log(\"FooterComp render()\", this.props);\n        return (\n            <div className=\"footerComp\">\n                <hr/>\n                <img src={Logo2}\n                     style={{width: \"150px\"}}\n                     alt=\"logo2\"/>\n                <br/>\n                <p>\n                    (주)멘도롱소랑 | 경기도 서초구 강남대로 459 (서초동 1300-34)<br/>\n                    사업자 번호 147-14-12345 | 전화번호:02-123-1234 | 팩스 02-1234-1234 | 이메일 help@naver.com\n                </p>\n            </div>\n        )\n    }\n}\n\nexport default FooterComp;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/MainComp.js",["379","380","381","382","383","384","385","386","387","388","389","390","391","392","393"],"import React, {Component} from \"react\";\nimport MainPageComp from \"./mainpage/MainPageComp\";\nimport ReservationPageComp from \"./reservation/ReservationPageComp\";\nimport NoticePageComp from \"./notice/NoticePageComp\";\nimport ShareBoardPageComp from \"./shareboard/ShareBoardPageComp\";\nimport LoginPageComp from \"./auth/LoginPageComp\";\nimport MemberListPageComp from \"./admin/MemberListPageComp\";\nimport MypagePageComp from \"./mypage/MypagePageComp\";\nimport TourPageComp from \"./tour/TourPageComp\";\nimport SignupPageComp from \"./join/SignupPageComp\";\nimport store from \"../../redux/store\";\nimport {mainViewType} from \"../../redux/config\";\nimport \"./MainComp.css\"\nimport DetailTourComp from \"./tour/DetailTourComp\";\nimport {MyPage, Tour, TourList} from \"../header/menus\";\nimport {Route} from \"react-router-dom\";\n\nclass MainComp extends Component {\n\n    constructor(props) {\n        super(props);\n        console.log(\"MainComp constructor\", props, store.getState().mainView);\n\n        store.subscribe(function () {\n            console.log(\"MainComp subscribe()\", store.getState().mainView);\n            this.setState({\n                mainView: store.getState().mainView,\n            });\n        }.bind(this));\n    }\n\n    setMainView = () => {\n        const _mainView = store.getState().mainView;\n        console.log(\"MainComp setMainView()\", _mainView, mainViewType.MainPage);\n\n        if (_mainView == mainViewType.MainPage) {\n            return (\n                // <MainPageComp/>\n                <Route exact path=\"/\" component={MainPageComp}/>\n            )\n        } else if (_mainView == mainViewType.Reservation) {\n            return (\n                // <ReservationPageComp/>\n                <Route path=\"/Reservation/:name?\" component={ReservationPageComp}/>\n            )\n        } else if (_mainView == mainViewType.Notice) {\n            return (\n                // <NoticePageComp/>\n                <Route path=\"/Notice/:name?\" component={NoticePageComp}/>\n            )\n        } else if (_mainView == mainViewType.Tour) {\n            return (\n                // <DetailTourComp/>\n                <Route path=\"/Tour/:name?\" component={DetailTourComp}/>\n            )\n        } else if (_mainView == mainViewType.TourList) {\n            return (\n                // <TourPageComp/>\n                <Route path=\"/TourList/:name?\" component={TourPageComp}></Route>\n            )\n        } else if (_mainView == mainViewType.ShareBoard) {\n            return (\n                // <ShareBoardPageComp/>\n                <Route path=\"/ShareBoard/:name?\" component={ShareBoardPageComp}/>\n            )\n        } else if (_mainView == mainViewType.MyPage) {\n            return (\n                // <MypagePageComp/>\n                <Route path=\"/MyPage/:name?\" component={MainPageComp}/>\n            )\n        } else if (_mainView == mainViewType.Login) {\n            return (\n                // <LoginPageComp/>\n                <Route path=\"/Login/:name?\" component={LoginPageComp}/>\n            )\n        } else if (_mainView == mainViewType.Admin) {\n            return (\n                // <MemberListPageComp/>\n                <Route path=\"/Admin:name?\" component={MemberListPageComp}/>\n            )\n        } else if (_mainView == mainViewType.JoinForm) {\n            return (\n                // <SignupPageComp/>\n                <Route path=\"/Join:name?\" component={SignupPageComp}/>\n            )\n        } else {\n            return (\n                <p>\n                    Not Found...\n                </p>\n            )\n        }\n\n    }\n\n    render() {\n        console.log(\"MainComp render()\", this.props);\n        var style_hr = {\n            margin: \"0px\"\n        }\n        return (\n            <div className=\"mainComp\">\n                {this.setMainView()}\n            </div>\n        )\n    }\n\n}\n\nexport default MainComp;\n",["394","395"],"/Users/yang-mac/jeju-front-react/finalproject/src/component/header/HeaderComp.js",["396"],"import React, {Component} from \"react\";\nimport {\n    BrowserRouter\n} from \"react-router-dom\";\nimport Menu from \"./Menu\";\n\nclass HeaderComp extends Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(\"HeaderComp constructor\", props);\n    }\n\n    render() {\n        const {logged, onLogout} = this.props;\n\n        // console.log(\"HeaderComp render\", this.props, this.state);\n\n        return (\n            <div className=\"headerComp\">\n                {/*<BrowserRouter>*/}\n                    <Menu logged={logged}\n                          onLogout={onLogout}\n                          type=\"normal\"\n                    />\n                {/*</BrowserRouter>*/}\n            </div>\n        )\n    }\n}\n\nexport default HeaderComp;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/reservation/ReservationPageComp.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/MainPageComp.js",["397","398"],"import React, {Component} from \"react\";\nimport SearchComp from \"./SearchComp\";\nimport HotPlaceComp from \"./HotPlaceComp\";\nimport NoticeMiniComp from \"./NoticeMiniComp\";\nimport ShareBoardMiniComp from \"./ShareBoardMiniComp\";\nimport axios from \"axios\";\nimport {URL} from \"../../../redux/config\";\nimport \"./MainPageComp.css\"\nimport MainPhotoComp from \"./MainPhotoComp\";\nimport MyPlanComp from \"./MyPlanComp\";\nimport EtcBoardComp from \"./EtcBoardComp\";\n\nclass MainPageComp extends Component {\n\n    /**\n     * props\n     * setMainView={this.props.setMainView}\n     */\n    constructor(props) {\n        super(props);\n        // console.log(\"MainPageComp constructor\", props);\n\n        this.state = {\n            shareBoardList: [],\n            noticeList: [],\n        }\n    }\n\n    componentWillMount() {\n        this.getNoticeList.bind(this)();\n        this.getShareBoardList.bind(this)();\n    }\n\n    getNoticeList = () => {\n        // console.log(\"getNoticeList()\");\n        var url = URL + \"/notice/list\";\n\n        axios.get(url\n        ).then((res) => {\n            // console.log(\"getNoticeList success : \", res);\n            this.setState({\n                noticeList: res.data\n            });\n        }).catch((error) => {\n            // console.log(\"getNoticeList error\", error);\n        });\n    }\n\n    getShareBoardList = () => {\n        // console.log(\"getShareBoardList()\");\n        var url = URL + \"/share/list?start=0&perPage=5\";\n\n        axios.get(url\n        ).then((res) => {\n            // console.log(\"getShareBoardList success : \", res);\n            this.setState({\n                shareBoardList: res.data\n            });\n        }).catch((error) => {\n            // console.log(\"getShareBoardList error\", error);\n        });\n    }\n\n\n    /**\n     * MainPhotoComp\n     * SearchComp | MyPlanComp\n     * HotPlaceComp\n     * EtcBoardComp\n     */\n    render() {\n        // console.log(\"MainPageComp render()\", this.props);\n        return (\n            <div className=\"mainPageComp\">\n                <MainPhotoComp/>\n                <div className=\"search-myplan\">\n                    <SearchComp history={this.props.history}/>\n                    <MyPlanComp/>\n                </div>\n                <HotPlaceComp history={this.props.history}/>\n                <EtcBoardComp/>\n            </div>\n        )\n    }\n\n}\n\nexport default MainPageComp;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/notice/NoticePageComp.js",["399","400"],"import React, {Component} from \"react\";\nimport PlusImg from \"../../../image/plus.png\";\nimport BoardItem from \"./BoardItem\";\nimport axios from 'axios';\nimport './NoticeCss.css';\nimport {URL} from '../../../redux/config';\nimport BoardForm from './BoardForm';\nimport NoticeContent from './NoticeContent';\n\nclass NoticePageComp extends Component {\n    state={\n        maxNo:7,\n        listData:[]\n        \n    }\n\n    list=()=>{\n        let url= URL + \"/notice/list\";\n        console.log(url);\n\n        axios.get(url)\n        .then(res=>{\n            this.setState({\n                listData:res.data\n            })\n        })\n    }\n\n    componentWillMount()\n    {\n        this.list();\n    }\n    render() {\n        const {boards}=this.state;\n\n        return (\n            <div>\n                {/*<a href=\"#NoticeMiniComp\">{this.props.name}</a>*/}\n                <BoardForm list={this.list.bind(this)}/>\n                <br/>\n                {this.props.name}<br/>\n                <button>\n                    <img src={PlusImg}\n                         style={{width: \"50px\"}}\n                    />\n                </button>\n                <table style={{width:'400px'}} id=\"noticeTable\">\n                    <caption><b>공지사항</b></caption>\n                    <thead>\n                    <tr style={{backgroundColor:'orange'}}>\n                        <th style={{width:'60px'}}>#</th>\n                        <th style={{width:'200px'}}>제목</th>\n                        <th style={{width:'50px'}}>작성일</th>\n                        <th style={{width:'50px'}}>⭐</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                      this.state.listData.map((row,idx)=>(\n                        <BoardItem row={row} key={idx} idx={idx}\n                        history={this.props.history}/>\n                        ))\n                    }\n                    {/* <tr>\n                        <td>\n                            <a href=\"#\">\n                                <span>1제목 입니다.</span>\n                            </a>\n                        </td>\n                        <td>1작성일 입니다.</td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <a href=\"#\">\n                                <span>2제목 입니다.</span>\n                            </a>\n                        </td>\n                        <td>2작성일 입니다.</td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <a href=\"#\">\n                                <span>3제목 입니다.</span>\n                            </a>\n                        </td>\n                        <td>3작성일 입니다.</td>\n                    </tr> */}\n                    </tbody>\n                </table>\n\n                    {/* <NoticeContent/> */}\n            </div>\n        )\n    }\n\n}\n\nexport default NoticePageComp;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/admin/MemberListPageComp.js",["401","402"],"import React, {Component} from \"react\";\nimport axios from 'axios';\nimport RowItem from \"./RowItem\";\nimport store from \"../../../redux/store\";\nimport { URL, actionType, mainViewType } from \"../../../redux/config\";\n\nclass MemberListPageComp extends Component {\n    constructor(props) {\n        super(props);\n        console.log(\"LoginPageComp constructor\", props);\n        \n        // this.state={\n        //     // id:'',  //아이디를 저장하고 있을 state\n        //     // password:'',\n        //     // pwCheck: \"\",//비밀번호 두개가 일치하는가\n        //     // name : \"\",\n        //     // birth_date: \"\",\n        //     // phone : \"\",\n        //     // email : \"\",\n        //     // address : \"\",\n        //     // idcanUse: false,//중복된 아이디찾기 true여야 로그인가능\n\n        //     memberData: []\n        // }\n    }\n\n    // 스프링에서 목록 가져오기\n    list = () => {\n        let url = URL + \"/member/list\";\n        axios.get(url)\n        .then(response=>{\n            this.setState({\n                memberData:response.data\n            })\n        }).catch(err=>{\n            console.log(\"목록 오류:\"+err);\n        })\n    }\n    \n    MEMBERLIST = () => {\n        console.log(\"회원목록 보기 dispatch\");\n        let url = URL + \"/member/list\";\n        axios.get(url)\n        .then(response=>{\n            this.setState({\n                memberData:response.data\n            })\n        }).catch(err=>{\n            console.log(\"목록 오류:\"+err);\n        })\n    }\n\n    componentDidMount() {\n        // this.list(); //처음 시작시 백엔드로부터 데이타 가졍괴\n        \n        store.dispatch({ type: actionType.MEMBER_LIST });\n        store.subscribe(this.MEMBERLIST);\n    }\n\n    \n\n    render() {\n        console.log(\"MemberListPageComp render()\", this.props);\n        return (\n            <div>\n                <div>\n                    <b>회원 목록</b>\n                    <div>\n                        번호&nbsp;아이디&nbsp;이메일&nbsp;이름&nbsp;이미지&nbsp;휴대폰\n                    </div>\n                    {/* <div>\n                        {\n                            this.props.store.memberData.map((row, idx) => (\n                                <RowItem row={row} key={idx} />\n                            ))\n                        }\n                    </div> */}\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default MemberListPageComp;\n","/Users/yang-mac/jeju-front-react/finalproject/src/redux/store.js",["403"],"import {createStore} from \"redux\";\nimport {actionType, mainViewType} from \"./config\";\nimport {persistReducer} from 'redux-persist';\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n    key: \"root\",\n    storage\n}\nconst footerStyle = {\n    sizeIn: {\n        position: \"absolute\",\n        width: \"100%\",\n        bottom: \"2.5%\",\n    },\n    sizeOver: {\n        width: \"100%\",\n    }\n}\n\nconst setPositionFooter = () => {\n    let menuElement = document.querySelector(\".menu\");\n    let mainFrameElement = document.querySelector(\".mainFrame\");\n\n    let menuHeight = (menuElement) ? menuElement.offsetHeight : 0;\n    let mainFrameHeight = (mainFrameElement) ? mainFrameElement.offsetHeight : 0;\n    let footerComp = document.querySelector(\".footerComp\");\n    let topContentHeight = menuHeight + mainFrameHeight;\n    console.log(mainFrameHeight, menuHeight, topContentHeight, window.visualViewport.height);\n\n    if (footerComp) {\n        if (window.visualViewport.height > topContentHeight) {\n            footerComp.style.width = footerStyle.sizeIn.width;\n            footerComp.style.position = footerStyle.sizeIn.position;\n            footerComp.style.bottom = footerStyle.sizeIn.bottom;\n        } else {\n            footerComp.style.width = footerStyle.sizeOver.width;\n            footerComp.style.position = \"\";\n            footerComp.style.bottom = \"\";\n        }\n    } else {\n        window.setTimeout(setPositionFooter, 100);\n    }\n}\n\n\nconst reducer = function (state, action) {\n\n    //state 초기화.\n    if (state === undefined) {\n        return {\n            mainView: mainViewType.MainPage,\n            logged: false,\n            memberData: [], // 회원목록\n            id: '',\n            loginId: '',\n            googleOn: false,\n            mainSearch: {\n                category: \"all\",\n                searchVal: \"\",\n                searchResultDataList: [],\n            },\n\n        }\n    }\n\n    // state 불변성 유지해야함. immutability\n    // newState 새로 파서 기존꺼 + 변경할거 넣은다음 redux의 state 바꿔치기.\n    let newState = {};\n\n    //action.type 별로 로직처리 다르게 하기.\n    if (action.type === actionType.setMainView) {\n        // window.setTimeout(setPositionFooter, 100);\n        newState = Object.assign({}, state, {\n            mainView: action.mainView,\n        });\n    } else if (action.type === actionType.SIGN_UP) {\n\n        newState = Object.assign({}, state, {\n            mainView: action.mainView,\n        });\n    } else if (action.type === actionType.LOG_IN) {\n        newState = Object.assign({}, state, {\n            loginId: action.loginId,\n        logged: action.logged\n            });\n        } else if (action.type === actionType.LOG_OUT) {\n            newState = Object.assign({}, state, {\n                loginId: action.loginId,\n                logged: action.logged});\n    } else if (action.type === actionType.LOGIN_REQUEST) {\n        newState = Object.assign({}, state, {});\n    } else if (action.type === actionType.LOGIN_SUCCESS) {\n        newState = Object.assign({}, state, {\n            logged: true,\n            id: action.type.id,\n        });\n    } else if (action.type === actionType.LOGIN_FAILURE) {\n        newState = Object.assign({}, state, {\n            logged: false,\n            id: \"\",\n        });\n    } else if (action.type === actionType.MEMBER_LIST) {\n        newState = Object.assign({}, state, {\n            memberData: action.payload\n        });\n    } else if (action.type === actionType.shareBoardUpdate) {\n        newState = Object.assign({}, state);\n    } else if (action.type === actionType.googleLogin) {\n        newState = Object.assign({}, state, {\n            googleOn: action.googleOn\n        })\n    } else if (action.type === actionType.setSearchResultDataList) {\n        newState = Object.assign({}, state, {\n            mainSearch: {\n                category: action.category,\n                searchVal: action.searchVal,\n                searchResultDataList: action.searchResultDataList,\n            },\n        });\n    }\n\n    console.log(\"reducer()\", state, action, newState);\n    return newState;\n}\n\nconst enhancedReducer = persistReducer(persistConfig, reducer);\n\nexport default createStore(enhancedReducer\n    , window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\n","/Users/yang-mac/jeju-front-react/finalproject/src/redux/config.js",["404","405","406","407","408"],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/TourPageComp.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/MypagePageComp.js",["409"],"import React, {Component} from \"react\";\nimport MemberUpdateFormComp from \"./MemberUpdateFormComp\";\nimport axios from 'axios';\nimport {Route, Link} from \"react-router-dom\";\nimport {URL} from \"../../../redux/config\";\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport MySchedule from './MySchedule';\n\nclass MypagePageComp extends Component {\n    \n    constructor(props) {\n        super(props);\n        console.log(\"MypagePageComp constructor\", props);\n\n        this.state = {\n            memberData: [],\n            reviewList: [],\n            pageNum: '0',\n            value: 0\n        }\n    }\n    tabProps = (index) => {\n        return {\n          id: `simple-tab-${index}`,\n          'aria-controls': `simple-tabpanel-${index}`,\n        };\n      }\n      handleChange = (event, newValue) => {\n        this.setState({ value: newValue });\n      }\n    // 스프링에서 목록 가져오기\n    // member\n    getMyData = () => {\n        let url = URL + '/member/getdata?id=sanghee';\n        axios.get(url)\n            .then(response => {\n                this.setState({\n                    memberData: response.data\n                })\n            }).catch(err => {\n            console.log(\"목록 오류:\" + err);\n        })\n    }\n    getMyReview = () => {\n        let url = URL + '/reivew/getdata?id=sanghee';\n        axios.get(url)\n            .then(response => {\n                this.setState({\n                    reviewList: response.data\n                })\n            }).catch(err => {\n            console.log(\"목록 오류:\" + err);\n        })\n    }\n\n    // getWishlist = () => {\n    //     let url = URL + '/reivew/getdata?id=sanghee';\n    //     axios.get(url)\n    //     .then(response=>{\n    //         this.setState({\n    //             reviewList:response.data\n    //         })\n    //     }).catch(err=>{\n    //         console.log(\"목록 오류:\"+err);\n    //     })\n    // }\n\n    componentDidMount() {\n        this.getMyData(); //처음 시작시 백엔드로부터 데이타 가져오기\n        this.getMyReview();\n        //this.getWishlist();\n    }\n\n    render() {\n        console.log(\"MypagePageComp render()\", this.props);\n\n        return (\n            <div>\n                <h1><b>내 정보 관리</b></h1>\n                <table>\n                    <tr>\n                        <div>\n                            <Link to=\"./mypage/MemberUpdateFormComp\">\n                                <button type=\"button\">정보수정</button>\n                            </Link>\n                            <Route exact path=\"/mypage/MemberUpdateFormComp\" component={MemberUpdateFormComp}/>\n                        </div>\n                        <span class=\"glyphicon glyphicon-leaf\"></span>&nbsp;&nbsp;<b>I D &nbsp;:&nbsp;&nbsp; </b>\n                        {this.state.memberData.id}<br/>\n                        <span class=\"glyphicon glyphicon-user\"></span>&nbsp;&nbsp;<b>이름 &nbsp;:&nbsp;&nbsp; </b>\n                        {this.state.memberData.name}<br/>\n                        <span class=\"glyphicon glyphicon-phone\"></span>&nbsp;&nbsp;<b>H P &nbsp;:&nbsp;&nbsp; </b>\n                        {this.state.memberData.hp}<br/>\n                        <span class=\"glyphicon glyphicon-envelope\"></span>&nbsp;&nbsp;<b>Email &nbsp;:&nbsp;&nbsp; </b>\n                        {this.state.memberData.email}@{this.state.memberData.email2}<br/>\n                        <span class=\"glyphicon glyphicon-home\"></span>&nbsp;&nbsp;<b>주소 &nbsp;:&nbsp;&nbsp; </b>\n                        {this.state.memberData.address},&nbsp;{this.state.memberData.addrdetail}<br/>\n                    </tr>\n                </table>\n                {/* <MySchedule/> */}\n                <AppBar position=\"static\">\n                    <Tabs value={this.state.value} onChange={this.handleChange} aria-label=\"simple tabs example\">\n                        <Tab label=\"나의 일정\" {...this.tabProps(0)} />\n                        <Tab label=\"나의 후기\" {...this.tabProps(1)} />\n                        <Tab label=\"나의 예약\" {...this.tabProps(2)} />\n                    </Tabs>\n                </AppBar>\n                <TabPanel value={this.state.value} index={0}>\n                    <MySchedule/>\n                </TabPanel>\n                    <TabPanel value={this.state.value} index={1}>\n                    Item Two\n                </TabPanel>\n                    <TabPanel value={this.state.value} index={2}>\n                    나의 예약\n                </TabPanel>\n            </div>\n            \n        )\n        \n        \n    }\n}\nclass TabPanel extends Component {\n    render() {\n      return (\n        <Typography component=\"div\" hidden={this.props.value !== this.props.index}>\n          <Box p={3}>{this.props.children}</Box>\n        </Typography>\n      );\n    }\n  }\nexport default MypagePageComp;\n\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/ShareBoardPageComp.js",["410","411"],"import React, {Component} from \"react\";\nimport {Route, Link} from \"react-router-dom\";\nimport ShareBoardFormComp from \"./ShareBoardFormComp\";\nimport ShareBoardRowItem from \"./ShareBoardRowItem\";\nimport {URL, actionType} from '../../../redux/config';\nimport axios from \"axios\";\nimport store from \"../../../redux/store\";\n\n\nclass ShareBoardPageComp extends Component {\n\n    state = {\n        listData: []\n    }\n\n    constructor(props) {\n        super(props);\n        console.log(\"ShareBoardPageComp constructor\", this.props);\n\n        store.subscribe(this.getShareListByPaging.bind(this));\n        store.dispatch({\n            type: actionType.shareBoardUpdate,\n        });\n    }\n\n    getShareListByPaging = () => {\n        let url = URL + \"/share/list?start=0&perPage=3\";\n\n        console.log(url);\n        axios.get(url\n        ).then(res => {\n            console.log(\"getShareListByPaging() res\", res);\n            this.setState({\n                listData: res.data\n            })\n        }).catch(err => {\n            console.log(\"getShareListByPaging() err\", err);\n        });\n    }\n\n    searchShareList = () => {\n        let url = URL + \"/share/search\" +\n            \"?start=0\" +\n            \"&perPage=3\" +\n            \"&search=\" + this.refs.search.value;\n\n        console.log(url);\n\n        axios.get(url\n        ).then(res => {\n            console.log(\"searchShareList() res\", res);\n            this.setState({\n                listData: res.data\n            });\n        }).catch(err => {\n            console.log(\"searchShareList() err\", err);\n        });\n    }\n\n    componentWillMount() {\n        this.getShareListByPaging();\n    }\n\n    render() {\n        return (\n            <div>\n                {/* 제목 */}\n                <div>\n                    <b>맛집 공유게시판</b>\n                </div>\n\n                {/*/!* 공유버튼 *!/*/}\n                <div>\n                    <Link to=\"/share/insert\">\n                        <button type=\"button\">맛집공유</button>\n                    </Link>\n                    &nbsp;\n                    <button type=\"button\"\n                            onClick={this.getShareListByPaging.bind(this)}\n                    >전 체 글\n                    </button>\n                    &nbsp;\n                    <input type=\"text\" placeholder=\"검색할 단어를 입력하세요.\" ref=\"search\"/>\n                    &nbsp;\n                    <button type=\"button\"\n                            onClick={this.searchShareList.bind(this)}\n                    >검 색\n                    </button>\n                </div>\n\n                {/* 게시판 폼 */}\n                <div>\n                    {\n                        this.state.listData.map((row, idx) => (\n                            <ShareBoardRowItem row={row} key={idx}\n                                               list={this.getShareListByPaging.bind(this)}\n                                               history={this.props.history}\n                            />\n                        ))\n                    }\n                </div>\n\n\n            </div>\n        )\n    }\n\n}\n\nexport default ShareBoardPageComp;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/LoginPageComp.js",["412","413"],"import React, {Component} from \"react\";\nimport axios from 'axios';\nimport GoogleLoginBtnComp from \"./GoogleLoginBtnComp\";\nimport GoogleLogoutBtnComp from \"./GoogleLogoutBtnComp\";\nimport store from \"../../../redux/store\";\nimport { URL, actionType, mainViewType } from \"../../../redux/config\";\nimport NaverLoginBtnComp from \"./NaverLoginBtnComp\";\nimport FaceBookLoginBtnComp from \"./FaceBookLoginBtnComp\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nimport MakeLoginBtn from \"./MakeLoginBtn\";\nimport { FaThemeisle } from \"react-icons/fa\";\n\nclass LoginPageComp extends Component {\n\n    constructor(props) {\n        super(props);\n        console.log(\"LoginPageComp constructor\", props);\n        \n        this.state={\n            id:'',  //아이디를 저장하고 있을 state\n            pass:'',\n            pwCheck: \"\",//비밀번호 두개가 일치하는가\n            name : \"\",\n            birth_date: \"\",\n            phone : \"\",\n            email : \"\",\n            address : \"\",\n            idcanUse: false,//중복된 아이디찾기 true여야 로그인가능\n            logged:this.props.logged,\n            onLogin:this.onLogin,\n        }\n\n        //함수 선언\n    }\n\n    setLoginId = (loginId) => {\n        console.log(\"LoginPage setLoginId()\");\n        store.dispatch({\n            type: actionType.LOG_IN,\n            // mainView: mainViewType.MainPage\n            loginId: loginId,\n            logged: true\n        });\n    }\n\n    // 변수 선언시 state 영역에 추가했을 경우에만 나중에 값변경이 가능하다\n    // 값 변경시에는 setState 를 이용해야만 한다\n    // 이벤트\n    changeEvent=(e)=>{\n        \n        // console.log(e.target.id+\":\"+e.target.value);\n        // 만약 엔터 누를때만 변경되도록 하고 싶으면\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    }\n\n    onLogin=()=>{\n        // console.log(\"로그인할 아이디는 \" + this.state.id + \"비밀번호는 \" + this.state.pass);\n        const data = {\n            id: this.state.id,\n            pass: this.state.pass\n        }\n        let url = URL + \"/member/login\";\n\n        axios.post(url, data)\n        .then(response => {\n            console.log(response.data);\n            if(response.data){\n                // this.props.onLogin();\n                this.setLoginId(data.id);\n                // alert(store.getState().loginId+ \"가 스토어에 저장된 아이디입니다\");\n                this.props.history.push(\"/\");\n            }\n            else{\n                alert(\"아이디와 비밀번호가 맞지않습니다.\");\n                this.setState({\n                    pass: '',\n                })\n            }\n        }).catch(err => {\n            console.log(\"로그인시 오류남:\"+err);\n        })\n    }\n\n    render() {\n        // console.log(\"LoginPageComp render()\", this.props);\n        // console.log(\"스토어에 있는 로그인 아이디 상태는 : \" + store.getState().loginId);\n        const parentOnLoginHandler = this.onLogin.bind(this);\n        return (\n            <div>\n                <h4>로그인</h4>\n                <div>\n                    {this.state.id}\n                    <h4 className=\"showIdResult\">{this.state.showIdResult}</h4>\n                </div>\n                <br />\n                \n                <TextField id=\"standard-secondary\" label=\"아이디\" color=\"secondary\" \n                type=\"text\" name=\"id\" value={ this.state.id }\n                onChange = { this.changeEvent.bind(this) } />\n\n                <br />\n\n                <TextField id=\"standard-secondary\" label=\"비밀번호\" color=\"secondary\" \n                type=\"password\" name=\"pass\" value={ this.state.pass }\n                onChange = { this.changeEvent.bind(this) } />\n\n                <br />\n                <button type=\"button\"\n                onClick={this.onLogin.bind(this)}>\n                    Sign in\n                </button>\n                <MakeLoginBtn \n                parentOnLoginHandler={parentOnLoginHandler} />\n                <h5>\n                    내 아이디는 {this.state.id} 입니다\n                    내 비밀번호는 {this.state.pass} 입니다\n                </h5>\n                <GoogleLoginBtnComp />\n                <GoogleLogoutBtnComp />\n                <br />\n                <br />\n                <NaverLoginBtnComp />\n                <br />\n                <FaceBookLoginBtnComp />\n            </div>\n        )\n    }\n\n}\n\nexport default LoginPageComp;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/SearchComp.js",["414","415"],"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {actionType, URL} from \"../../../redux/config\";\nimport axios from \"axios\";\nimport store from \"../../../redux/store\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        // margin: theme.spacing(1),\n        // minWidth: 120,\n        width: \"150px\",\n        // height:\"40px\"\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    root: {\n        '& > *': {\n            // margin: theme.spacing(1),\n            width: '300px',\n        },\n    },\n}));\n\n\nexport default function SearchComp(props) {\n\n    const classes = useStyles();\n    const [category, setCategory] = React.useState(\"all\");\n    const [searchVal, setSearchVal] = React.useState(\"\");\n    const [searchDataList, setSearchDataList] = React.useState(null);\n    // console.log(\"SearchComp props\", props);\n\n    const setCategoryHandler = (e) => {\n        // console.log(e.target.value);\n        setCategory(e.target.value);\n    };\n\n    const setSearchValHandler = (e) => {\n        // console.log(e.target.value);\n        setSearchVal(e.target.value);\n\n    }\n\n    //input 내용에 따라 버튼 색깔 변화\n    const updateButtonType = () => {\n        const searchButton = document.querySelector(\".searchButton\");\n\n        if (searchButton == null) {   //초반에 null일경우 스킵.\n            return;\n        }\n\n        if (searchVal == \"\") {\n            searchButton.classList.remove(\"MuiButton-containedPrimary\");\n        } else {\n            if (!searchButton.classList.contains(\"MuiButton-containedPrimary\")) {\n                searchButton.classList.add(\"MuiButton-containedPrimary\");\n            }\n        }\n    }\n\n    const doSearchHandler = () => {\n        console.log(category, searchVal);\n        // store.dispatch({\n        //     type: actionType.setSearchResultDataList,\n        //     category: category,\n        //     searchVal: searchVal,\n        //     searchResultDataList: res.data,\n        // });\n        // props.history.push(`/search/${category}/${searchVal}`);\n\n        //search action.\n        let perPage = 10;\n        let url = URL + \"/spot/searchlist\" +\n            \"?start=0\" +\n            \"&perPage=\" + perPage +\n            \"&category=\" + category +\n            \"&search=\" + searchVal;\n\n        console.log(url);\n\n        axios.get(url\n        ).then(res => {\n            console.log(\"doSearchHandler() res:\", res.data, searchDataList);\n            setSearchDataList(res.data);\n\n            //dispatch\n            store.dispatch({\n                type: actionType.setSearchResultDataList,\n                category: category,\n                searchVal: searchVal,\n                searchResultDataList: res.data,\n            });\n\n            ///search/:category?/:keyword?\n            props.history.push(`/search/${category}/${searchVal}`);\n        }).catch(err => {\n            console.log(\"doSearchHandler() err:\", err);\n        });\n    }\n\n    return (\n        <div className=\"searchComp\" style={{height: \"500px\", padding: \"20px\"}}>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-outlined-label\">Category</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    value={category}\n                    onChange={setCategoryHandler}\n                    label=\"Category\"\n                >\n                    <MenuItem value=\"all\">\n                        <em>All</em>\n                    </MenuItem>\n                    <MenuItem value=\"area\">Area</MenuItem>\n                    <MenuItem value=\"spot\">Spot</MenuItem>\n                    <MenuItem value=\"tag\">Tag</MenuItem>\n                </Select>\n            </FormControl>\n            <br/><br/>\n            <TextField id=\"outlined-basic\" label=\"Input For Search.\" variant=\"outlined\"\n                       autoComplete=\"off\" className={classes.root}\n                       value={searchVal}\n                       onChange={setSearchValHandler}\n            />\n            <br/><br/>\n            <Button variant=\"contained\" color=\"primary\" className=\"searchButton\"\n                    onClick={doSearchHandler}\n            > Search </Button>\n            {updateButtonType()}\n        </div>\n\n    )\n\n}\n\n//활성화\n//<button class=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary\" tabindex=\"0\" type=\"button\">\n// <span class=\"MuiButton-label\">Search</span>\n// <span class=\"MuiTouchRipple-root\"></span>\n// </button>\n\n\n\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/admin/RowItem.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/ShareBoardMiniComp.js",["416","417","418","419"],"import React, {Component} from \"react\";\nimport PlusImg from \"../../../image/plus.png\";\n\nclass ShareBoardMiniComp extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return (\n            <div>\n                <br/>\n                <h5>공유게시판</h5>\n                <button>\n                    <img src={PlusImg}\n                         style={{width: \"50px\"}}\n                    />\n                </button>\n                <table className=\"shareBoardList\">\n                    <thead>\n                    <tr>\n                        <th>제목</th>\n                        <th>작성일</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.props.list.map(function (e, i) {\n                        // console.log(i, e);\n                        if (i < 5) {\n                            return (\n                                <tr key={i}>\n                                    <td>\n                                        <a href=\"#\">\n                                            <span>{e.subject}</span>\n                                        </a>\n                                    </td>\n                                    <td>{e.writeday}</td>\n                                </tr>\n                            );\n                        } else {\n\n                        }\n                    })}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n\n}\n\nexport default ShareBoardMiniComp;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/NoticeMiniComp.js",["420","421","422","423"],"import React, {Component} from \"react\";\nimport PlusImg from \"../../../image/plus.png\";\n\nclass NoticeMiniComp extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return (\n            <div>\n                <br/>\n                <h5>공지사항</h5>\n                <button>\n                    <img src={PlusImg}\n                         style={{width: \"50px\"}}\n                    />\n                </button>\n                <table className=\"noticeList\">\n                    <thead>\n                    <tr>\n                        <th>제목</th>\n                        <th>작성일</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.props.list.map(function (e, i) {\n                        // console.log(i, e);\n                        if (i < 5) {\n                            return (\n                                <tr key={i}>\n                                    <td>\n                                        <a href=\"#\">\n                                            <span>{e.subject}</span>\n                                        </a>\n                                    </td>\n                                    <td>{e.writeday}</td>\n                                </tr>\n                            );\n                        } else {\n\n                        }\n                    })}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n\n}\n\nexport default NoticeMiniComp;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/GoogleLoginBtnComp.js",["424","425"],"import React , { Component } from 'react';\nimport reactDOM from 'react-dom';\nimport GoogleLogin from 'react-google-login';\nimport { refreshTokenSetup } from \"./refreshToken\";\n\n\nclass GoogleLoginBtnComp extends Component\n{\n    // 백엔드에 정보를 저장하기 위해 state에 id, name, provider를 저장함\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: '',\n            name: '',\n            provider: '',\n        }\n    }\n\n    render() {\n        const responseGoogle = (response) => {\n            console.log(response);\n        }\n        \n        // 로그인에 성공하면 json을 반환해줌 => onSuccess함수에서 state에 id, name을 저장\n        const onSuccess = (res) => {\n            console.log('[Login Success] 로그인한 사용자:', res.profileObj);\n            console.log('로그인한 사용자 id : ' +  res.googleId);\n\n            this.setState({\n                id: res.googleId,\n                name: res.profileObj.name,\n                provider: 'google'\n            });\n\n            // initializing the setup\n            refreshTokenSetup(res);\n        };\n\n        // 로그인에 실패한 경우에는 에러를 넘겨줌 => onFailure함수에서 error 출력\n        const onFailure = (res) => {\n            console.log('[Login failed] res:', res);\n        };\n\n        return (\n            <>\n            <br />\n            <br />\n            <GoogleLogin\n                clientId=\"256166181377-83u2uuteqgosooa3um2i3o36ho1325md.apps.googleusercontent.com\"\n                buttonText=\"Login\"\n                onSuccess={onSuccess}\n                onFailure={onFailure}\n                cookiePolicy={'single_host_origin'}\n                isSignedIn={true}\n            />\n            </>\n        );\n    }\n}\n\nexport default GoogleLoginBtnComp;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/GoogleLogoutBtnComp.js",["426","427"],"import React , { Component } from 'react';\nimport reactDOM from 'react-dom';\nimport { GoogleLogout } from 'react-google-login';\n\n\nclass GoogleLogoutBtnComp extends Component\n{\n    render() {\n        const responseGoogle = (response) => {\n            console.log(response);\n        }\n\n        const onSuccess = (res) => {\n            alert('Logout 되었습니다');\n        };\n\n        return (\n            <>\n            <br />\n            <br />\n            <GoogleLogout\n                clientId=\"256166181377-83u2uuteqgosooa3um2i3o36ho1325md.apps.googleusercontent.com\"\n                buttonText=\"Logout\"\n                onLogoutSuccess={onSuccess}\n            />\n            </>\n        );\n    }\n}\n\nexport default GoogleLogoutBtnComp;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/refreshToken.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/header/Menu.js",["428","429","430","431","432","433","434","435","436","437","438","439","440"],"import React, {Component} from 'react';\nimport {NavLink, Route} from \"react-router-dom\";\nimport {Home, Login, ShareBoard, MyPage, Notice, Reservation, Admin, TourList, Tour} from './menus';\nimport store from \"../../redux/store\";\nimport {actionType, mainViewType} from \"../../redux/config\";\nimport \"./Menu.css\";\nimport Logo2 from \"../../image/logo2.png\";\nimport TourPageComp from '../main/tour/TourPageComp';\n\nclass Menu extends Component {\n\n    constructor(props) {\n        super(props);\n        // console.log(\"Menu constructor \", this.props)\n\n        this.state = {\n            type: this.props.type,\n            onLogin: this.props.onLogin,\n            onLogout: this.props.onLogout,\n            logged: store.getState().logged\n        }\n\n        store.subscribe(function () {\n            console.log(\"Menu subscribe()\", store.getState().logged);\n            this.setState({\n                logged: store.getState().logged,\n            });\n        }.bind(this));\n    }\n\n    setMainView = (mainView) => {\n        console.log(\"Home setMainView()\");\n        store.dispatch({\n            type: actionType.setMainView,\n            // mainView: mainViewType.MainPage\n            mainView: mainView\n        });\n    }\n\n    setLogOut = () => {\n        console.log(\"Menu setLogOut()\");\n        \n        store.dispatch({\n            type: actionType.LOG_IN,\n            // mainView: mainViewType.MainPage\n            loginId: '',\n            logged: false\n        });\n    }\n    \n    render() {\n        console.log(\"메뉴에서 스토어 상태 : \" + store.getState().loginId);\n        console.log(\"메뉴에서 스토어 로그인 상태 : \" + store.getState().logged);\n        // 부모컴포넌트(App->HeaderComp)에서 받아온 logged, onLogout을 통해 로그인 전에는 '로그인'을 로그인 후에는 '로그아웃'으로 글씨 변경\n        // 로그아웃일 경우 onLogout함수를 통해 logged를 다시 false로 바꿔준다.\n        // 부모컴포넌트가 HeaderComp->App이므로 props를 통해 value를 전달받을 수 있다. 그러나 Login컴포넌트의경우는 여러번 전달해야함.\n        // 따라서 전역적인 상태가 필요하다.\n\n\n        // let {logged} = this.props;\n        // console.log(\"Menu render \", this.props);\n\n        var className_div_menu = `${this.state.type} menu`;\n\n        return (\n            <div className={className_div_menu}>\n                <ul className=\"menu\">\n                    <li className=\"logo\">\n                        <NavLink exact to=\"/\"\n                                 onClick={() => {\n                                     console.log(\"Home NavLink onClick\");\n                                     this.setMainView(mainViewType.MainPage);\n                                 }}\n                        >\n                            Home\n                        </NavLink>\n                    </li>\n\n                    <li>\n                        <NavLink exact to=\"/admin\"\n                                 onClick={() => {\n                                     console.log(\"Admin NavLink onClick\");\n                                     this.setMainView(mainViewType.Admin);\n                                 }}\n                        >Admin</NavLink>\n                    </li>\n                    <li>\n                        {this.state.logged ?\n                            <NavLink exact to=\"/\"\n                                     onClick={() => {\n                                         console.log(\"Logout NavLink onClick\");\n                                         this.setMainView(mainViewType.MainPage);\n                                         this.setLogOut();\n                                     }}>Logout</NavLink>\n                            :\n                            <NavLink exact to=\"/login\"\n                                     onClick={() => {\n                                         console.log(\"Login NavLink onClick\");\n                                         this.setMainView(mainViewType.Login);\n                                     }}\n                            >Login</NavLink>\n                        }\n                    </li>\n                    <li>\n                        <NavLink exact to=\"/join\"\n                                 onClick={() => {\n                                     console.log(\"Join NavLink onClick\");\n                                     this.setMainView(mainViewType.JoinForm);\n                                 }}\n                        >Join</NavLink>\n                    </li>\n                    <li>\n                        <NavLink exact to=\"/mypage\"\n                                 onClick={() => {\n                                     console.log(\"Mypage NavLink onClick\");\n                                     this.setMainView(mainViewType.MyPage);\n                                 }}\n                        >MyPage</NavLink>\n                    </li>\n                    <li>\n                        <NavLink exact to=\"/share\"\n                                 onClick={() => {\n                                     console.log(\"ShareBoard NavLink onClick\");\n                                     this.setMainView(mainViewType.ShareBoard);\n                                 }}\n                        >Share</NavLink>\n                    </li>\n                    {/*<li class=\"dropdown\">*/}\n                    <li className=\"dropdown\">\n                        <a>Tour</a>\n                            {/*<div class=\"dropdown-content\" >*/}\n                            <div className=\"dropdown-content\" >\n                                <a href=\"/tourlist/jeju/1\">제주</a>\n                                <a href=\"/TourList/jocheon/1\">조천</a>\n                                <a href=\"/TourList/gujwa/1\">구좌</a>\n                                <a href=\"/TourList/sungsan/1\">성산</a>\n                                <a href=\"/TourList/pyoseon/1\">표선</a>\n\n                                <a href=\"/TourList/namwon/1\">남원</a>\n                                <a href=\"/TourList/seogwipo/1\">서귀포</a>\n                                <a href=\"/TourList/andeok/1\">안덕</a>\n                                <a href=\"/TourList/daejung/1\">대정</a>\n                                <a href=\"/TourList/hangyeong/1\">한경</a>\n\n                                <a href=\"/TourList/hanrim/1\">한림</a>\n                                <a href=\"/TourList/aewol/1\">애월</a>\n                                <a href=\"/TourList/udo/1\">우도</a>\n                            </div>\n                            {/* <NavLink exact to=\"/tour\"\n                                    onClick={() => {\n                                        console.log(\"Tour NavLink onClick\");\n                                        this.setMainView(mainViewType.TourList);\n                                    }}\n                            >Tour</NavLink> */}\n\n\n                    </li>\n                    <li>\n                        <NavLink exact to=\"/notice\"\n                                 onClick={() => {\n                                     console.log(\"Notice NavLink onClick\");\n                                     this.setMainView(mainViewType.Notice);\n                                 }}\n                        >Notice</NavLink>\n                    </li>\n                    <li>\n                        <NavLink exact to=\"/reservation\"\n                                 onClick={() => {\n                                     console.log(\"Reservation NavLink onClick\");\n                                     this.setMainView(mainViewType.Reservation);\n                                 }}\n                        >Reservation</NavLink>\n                    </li>\n                </ul>\n\n\n                {/*<hr style={{clear: 'both'}}/>*/}\n\n                {/* <Route exact path=\"/\"> */}\n                    {/*<Home></Home>*/}\n                {/* </Route> */}\n                {/* <Route exact path=\"/Reservation/:name?\"> */}\n                    {/*<Reservation></Reservation>*/}\n                {/* </Route> */}\n                 {/* <Route exact path=\"/Notice/:name?\"> */}\n                    {/*<Notice></Notice>*/}\n                {/* </Route> */}\n\n                {/* <Route exact path=\"/TourList/:name?\" component={TourList}></Route> */}\n                {/* <Route exact path=\"/TourList/:name?\" component={TourPageComp}></Route> */}\n                {/* <Route exact path=\"/Tour/:name?\" component={Tour}></Route> */}\n\n                {/* <Route exact path=\"/ShareBoard/:name?\"> */}\n                    {/*<ShareBoard></ShareBoard>*/}\n                {/* </Route> */}\n                {/* <Route exact path=\"/MyPage/:name?\" component={MyPage}> */}\n                    {/*<MyPage></MyPage>*/}\n                {/* </Route>\n                <Route exact path=\"/Login/:name?\"> */}\n                    {/*<Login></Login>*/}\n                {/* </Route>\n                <Route exact path=\"/Admin:name?\"> */}\n                    {/*<Admin></Admin>*/}\n                {/* </Route> */}\n            </div>\n        )\n    }\n}\n\nexport default Menu;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/index.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Notice.js",["441"],"import React, {Component} from \"react\";\n\nclass Notice extends Component{\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                {/*<b>공지사항</b>*/}\n            </div>\n        )\n    }\n}\n\nexport default Notice;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/ShareBoard.js",["442"],"import React, {Component} from 'react';\n\nclass ShareBoard extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                {/*<b>맛집공유게시판</b>*/}\n            </div>\n        )\n    }\n}\n\nexport default ShareBoard;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Reservation.js",["443"],"import React, {Component} from \"react\";\n\n\nclass Reservation extends Component{\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                {/*<b>비행기 렌터카 예약</b>*/}\n            </div>\n        )\n    }\n}\n\nexport default Reservation;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Tour.js",["444"],"import React, {Component} from \"react\";\n\nclass Tour extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n    \n    render(){\n        return(\n            <div>\n            </div>\n        )\n    }\n}\n\nexport default Tour;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/MyPage.js",["445"],"import React, {Component} from \"react\";\n\nclass MyPage extends Component{\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                {/*<b>MyPage</b>*/}\n            </div>\n        )\n    }\n}\n\nexport default MyPage;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Login.js",["446"],"import React, {Component} from \"react\";\n\nclass Login extends Component{\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                {/*<b>Login</b>*/}\n            </div>\n        )\n    }\n}\n\nexport default Login;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Home.js",["447","448","449"],"import React, {Component} from \"react\";\n// import BigText from '../component/BigText';\n// import Header from \"../component/Header\";\nimport store from \"../../../redux/store\";\nimport {actionType, mainViewType} from \"../../../redux/config\";\n\n// page init\n// constructor -> componentWillMount -> render\n\n// 다른메뉴 -> Home menu click\n// constructor -> componentWillMount -> render -> componentDidMount\n\n// Home menu 에서 -> 다른메뉴로 갈때.\n// componentWillUnmount\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n        console.log(\"Home constructor\", this.props, this.state, store.getState());\n    }\n\n    componentWillMount() {\n        console.log(\"Home componentWillMount()\");\n    }\n\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        console.log(\"Home componentWillUpdate()\");\n    }\n\n\n    componentWillUnmount() {\n        console.log(\"Home componentWillUnmount()\");\n    }\n\n\n    render() {\n        console.log(\"Home render()\");\n        return (\n            <div>\n                {/*<Header />*/}\n                {/*<BigText>홈</BigText>*/}\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        console.log(\"Home componentDidMount()\");\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        console.log(\"Home componentDidUpdate()\");\n    }\n\n    componentWillUnmount() {\n        console.log(\"Home componentWillUnmount()\");\n    }\n}\n\nexport default Home;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Admin.js",["450"],"import React, {Component} from \"react\";\n\nclass Admin extends Component{\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                {/*<b>Admin</b>*/}\n            </div>\n        )\n    }\n}\n\nexport default Admin;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Join.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/ShareBoardFormComp.js",["451","452"],"import React, {Component} from \"react\";\nimport {Route, Link} from \"react-router-dom\";\nimport ShareBoardPageComp from \"./ShareBoardPageComp\";\nimport axios from \"axios\";\nimport {URL} from '../../../redux/config';\nimport \"./Share.css\";\n// import AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\n\n\n\n\n\nclass ShareBoardFormComp extends Component {\n\n    state = {\n        photoname: ''\n    }\n\n    constructor(props) {\n        super(props);\n        console.log(\"ShareBoardFormComp constructor\", props);\n\n    }\n\n    //서버에 이미지 업로드하는 함수\n    uploadImage = (e) => {\n        const uploadFile = e.target.files[0];\n        const upload = new FormData();\n        upload.append(\"uploadFile\", uploadFile);\n\n        let url = URL + \"/share/upload\";\n\n        axios({\n            method: 'post',\n            url: url,\n            data: upload,\n            headers: {'Content-Type': 'multipart/form-data'}\n        }).then(res => {\n            this.setState({\n                photoname: res.data.photoname\n            })\n        }).catch(err => {\n            console.log(\"shareboard upload 오류 : \" + err);\n        })\n\n    }\n\n    onDataInsert = (resolve = null) => {\n        //입력값 state 변수에 저장하기\n        let subject = this.refs.subject.value;\n        let addr = this.refs.addr.value;\n        let content = this.refs.content.value;\n        let star = 0;\n\n        console.log(subject + \", \" + addr + \", \" + content);\n\n        //db 에 insert\n        let url = URL + \"/share/insert\";\n\n        axios.post(url, {subject, addr, content, star}\n        ).then(res => {\n            //값 지우기\n            this.refs.subject.value = '';\n            this.refs.addr.value = '';\n            this.refs.content.value = '';\n\n            //이미지도 지우기\n            this.setState({\n                photoname: ''\n            });\n\n            if (resolve != null) {\n                resolve();\n            }\n        }).catch(err => {\n            console.log(\"shareboard insert 오류 : \" + err);\n        })\n\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let _promise = new Promise((resolve, reject) => {\n            this.onDataInsert(resolve);\n        });\n\n        _promise.then(() => {\n            alert('공유하였습니다. 목록확인하세요 ' + this.state.subject);\n        }).then(() => {\n            this.props.history.push(\"/share\");\n        });\n    }\n\n    render() {\n        //const url=\"http://localhost:9002/photo/\";\n        console.log(\"ShareBoardFormComp render()\", this.props);\n\n     \n            \n\n        return (\n            <div>\n                <div id=\"ShareFormSubject\">\n                <h3>맛집공유</h3>\n                </div>\n\n             \n                <table id=\"ShareFormAll\" className=\"table table-bordered\" style={{borderRadius:'50px'}}>\n                    <tr>\n                        <th style={{verticalAlign:'middle'}}><span>맛집이름</span></th>\n                        <td>\n                            <input className=\"form-control\" type=\"text\" style={{width: '200px', height: '60px'}}\n                                   placeholder=\"맛집이름을 적어주세요\" ref=\"subject\"/>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <th style={{verticalAlign:'middle'}}><span >맛집주소</span></th>\n                        <td>\n                            <input className=\"form-control\" type=\"text\" style={{width: '400px', height: '60px'}}\n                                   placeholder=\"맛집주소를 적어주세요\" ref=\"addr\"/>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <th style={{verticalAlign:'middle'}}><span>이미지</span></th>\n                        <td>\n                            <input type=\"file\" onChange={this.uploadImage.bind(this)}/>\n                            {/* <img src={url + this.state.photoname} alt=\"이미지없음\" style={{width:'200px',height:'300px'}}/> */}\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <th style={{verticalAlign:'middle'}}><span>리뷰</span></th>\n                        <td>\n                         <textarea maxLength=\"1000\" className=\"form-control\"\n                                   style={{width: '600px', height: '150px', resize: 'none',cursor:'auto'}}\n                                   ref=\"content\" placeholder=\"리뷰를 입력하세요\">\n                         </textarea>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <th style={{verticalAlign:'middle'}}><span>평가</span></th>\n                        <td>\n                            <b>별점 이미지</b>\n                        </td>\n                    </tr>\n\n                </table>\n              \n                \n                <div id=\"ShareFormButton\">\n                <button type=\"button\" className=\"btn btn-outline-warning\"\n                        style={{color:'darkorange'}}\n                        onClick={this.handleSubmit.bind(this)}\n                >공유하기\n                </button>\n                <Link to=\"/share\">\n                    <button type=\"button\" className=\"btn btn-outline-warning\"\n                    style={{color:'darkorange'}}>목록</button>\n                </Link>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default ShareBoardFormComp;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/join/SignupPageComp.js",["453","454","455","456","457","458","459","460","461","462"],"import React, { Component, useState } from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport axios from 'axios';\nimport {URL} from \"../../../redux/config\";\nimport { makeStyles, createStyles, WithStyles, withStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\nimport PropTypes from \"prop-types\";\n// import { withStyles } from \"@material-ui/styles\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { Upload } from \"@progress/kendo-react-upload\";\n\nimport Button from \"@material-ui/core/Button\";\nimport { green, grey, orange } from \"@material-ui/core/colors\";\n\nimport { createRipples } from \"react-ripples\";\n\nimport RippleBtn from \"./SubmitBtn\";\nimport RippleBtn2 from \"./SubmitBtn2\";\n\nconst styles = theme => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n});\n\nconst genders = [\n    '남성',\n    '여성',\n];\n\nconst fileStatuses = [\n    'UploadFailed',\n    'Initial',\n    'Selected',\n    'Uploading',\n    'Uploaded',\n    'RemoveFailed',\n    'Removing'\n];\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        color: theme.palette.getContrastText(orange[200]),\n        '&:hover': {\n            backgroundColor: grey[100],\n        },\n        outline: 'none !important',\n        \n    },\n}))(Button);\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: green,\n    },\n});\n\nconst MyRipples = createRipples({\n    color: 'orange',\n    during: 2200,\n})\n\nlet uploadFile = null;\n\nclass SignupPageComp extends Component {\n\n\n    constructor(props) {\n        super(props);\n\n        console.log(\"SignupPageComp constructor\", props);\n        \n        this.state={\n            id:'',  //아이디를 저장하고 있을 state\n            pass:'',\n            pwCheck: \"\",//비밀번호 두개가 일치하는가\n            name : '',\n            gender: '',\n            photo: null,\n            photoname: '',\n            address : '',\n            addrdetail: '',\n            email : '',\n            hp : \"\",\n            idcanUse: false,//중복된 아이디찾기 true여야 로그인가능\n            files: [],\n            events: [],\n            filePreviews: {},\n        };\n\n        //함수 선언\n        this.onIdChk=this.onIdChk.bind(this);\n    }\n\n    // 변수 선언시 state 영역에 추가했을 경우에만 나중에 값변경이 가능하다\n    // 값 변경시에는 setState 를 이용해야만 한다\n    // 이벤트\n    changeEvent=(e)=>{\n        \n        console.log(e.target.id+\":\"+e.target.value);\n        // 만약 엔터 누를때만 변경되도록 하고 싶으면\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    }\n\n    //방법2\n    onIdChk=(e)=>{\n        e.preventDefault();\n        console.log(this.state.id);\n        const data = {\n            id: this.state.id//현재 id state 값을 data.id에 넣는다\n        }\n        // ↓은 백엔드로 fetch해서 입력된 값을 POST\n        let url = URL + '/member/checkid?id=' + this.state.id;\n        axios.get(url)\n        .then(response=>{\n            alert(response.data.idcanUse + \"를 받았습니다\");\n            if(response.data.idcanUse === \"true\")\n            {\n                alert(\"사용가능한 아이디입니다\");\n                this.setState({\n                    idcanUse: true\n                })\n            }\n            else if(response.data.idcanUse === \"false\")\n            {\n                alert(\"다른 아이디를입력해주세요\");\n                this.setState({\n                    id: '',\n                })\n            }\n        }).catch(err => {\n            console.log(\"아이디체크시 오류남:\"+err);\n        })\n    }\n\n    onSubmitHandler = (e) => {\n        e.preventDefault();\n        this.onInsertMember();\n    };\n\n    //사진 업로드시 호출되는 함수\n    imageUpload=(e)=>{\n        const uploadFile = e.target.files[0];\n\n        //서버에 업로드\n        const memberFile = new FormData();\n        memberFile.append(\"uploadFile\",uploadFile);\n\n        axios({\n            method: 'post',\n            url: URL + '/member/upload',\n            data: memberFile,\n            headers: {'Content-Type':'multipart/form-data'}\n        }).then(response=>{\n            alert(response.data.photoname+\" 이미지명으로 저장합니다\");\n            //이미지명 변경\n            this.setState({\n                photoname: response.data.photoname\n            })\n        }).catch(err=>{\n            console.log(\"이미지 업로드시 오류남:\"+err);\n        })\n    }\n\n    //사진 업로드시 호출되는 함수\n    // imageUpload=(e)=>{\n    //     uploadFile = e.affectedFiles[0].name;\n    //     alert(\"업로드할 파일은 : \" + uploadFile);\n\n    //     //서버에 업로드\n    //     const memberFile = new FormData();\n    //     memberFile.append(\"uploadFile\",uploadFile);\n\n    //     axios({\n    //         method: 'post',\n    //         url: URL + '/member/upload',\n    //         data: memberFile,\n    //         headers: {'Content-Type':'multipart/form-data'}\n    //     }).then(response=>{\n    //         alert(response.data.photoname+\" 이미지명으로 저장합니다\");\n    //         //이미지명 변경\n    //         this.setState({\n    //             photoname: response.data.photoname\n    //         })\n    //     }).catch(err=>{\n    //         console.log(\"이미지 업로드시 오류남:\"+err);\n    //     })\n    // }\n\n    onInsertMember = () => {\n        let data = this.state;\n        let url = URL + \"/member/insert\";\n\n        axios.post(url, data)\n        .then(response => {\n            //성공시\n            //입력값 지우기\n            this.setState({\n                id:'',  //아이디를 저장하고 있을 state\n                pass:'',\n                pwCheck: \"\",//비밀번호 두개가 일치하는가\n                name : '',\n                gender: '',\n                photo: null,\n                photoname: '',\n                address : '',\n                addrdetail: '',\n                email : '',\n                hp : \"\",\n                idcanUse: false,//중복된 아이디찾기 true여야 로그인가능\n            })\n\n            // 예전 location.href 와 같은 코드\n            this.props.history.push(\"/login\");//저장 성공후 로그인으로 이동되도록 한다\n        }).catch(err=>{\n            console.log(\"회원가입시 오류남:\"+err);\n        })\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            gender: event.target.value,\n        });\n    };\n\n    onAdd = (event) => {\n        const afterStateChange = () => {\n            event.affectedFiles\n                .filter(file => !file.validationErrors)\n                .forEach(file => {\n                    const reader = new FileReader();\n\n                    reader.onloadend = (ev) => {\n                        this.setState({\n                            filePreviews: {\n                                ...this.state.filePreviews,\n                                [file.uid]: ev.target.result\n                            }\n                        });\n                    };\n\n                    reader.readAsDataURL(file.getRawFile());\n                });\n        };\n\n        this.setState({\n            files: event.newState,\n            events: [\n                ...this.state.events,\n                `선택된 파일: ${event.affectedFiles[0].name}`\n            ],\n        }, afterStateChange);\n\n        uploadFile = event.affectedFiles[0].name;\n    }\n\n    onRemove = (event) => {\n        const filePreviews = {\n            ...this.state.filePreviews\n        };\n\n        event.affectedFiles.forEach(file => {\n            delete filePreviews[file.uid];\n        });\n\n        this.setState({\n            files: event.newState,\n            events: [\n                ...this.state.events,\n                `파일 제거됨: ${event.affectedFiles[0].name}`\n            ],\n            filePreviews: filePreviews\n        });\n    }\n\n    onProgress = (event) => {\n        this.setState({\n            files: event.newState,\n            events: [\n                ...this.state.events,\n                `진행 정도: ${event.affectedFiles[0].progress} %`\n            ]\n        });\n    }\n\n    onStatusChange = (event) => {\n        const file = event.affectedFiles[0];\n\n        this.setState({\n            files: event.newState,\n            events: [\n                ...this.state.events,\n                `File '${file.name}' status changed to: ${fileStatuses[file.status]}`\n            ]\n        });\n    }\n    \n    render() {\n        const { classes } = this.props;\n        console.log(\"SingupPageComp render()\", this.props);\n        return (\n            <div>\n                <form\n                className={classes.root}\n                noValidate autoComplete=\"off\"\n                onSubmit = { this.onSubmitHandler.bind(this) }\n                >\n                <h1>회원가입</h1>\n                <div>\n                    {this.state.id}\n                    <h4 className=\"showIdResult\">{this.state.showIdResult}</h4>\n                </div>\n                <br />\n                <TextField id=\"standard-secondary\" label=\"이메일\" color=\"secondary\" \n                type=\"email\" name=\"email\" value={ this.state.email }\n                onChange = { this.changeEvent.bind(this) } />\n                \n                {/* <label>이메일</label>\n                <input type=\"email\" name = \"email\" value = { this.state.email } onChange={this.changeEvent.bind(this)} /> */}\n                <br />\n                \n                {/* <label>이름</label>\n                <input type=\"text\" name = \"name\" value = { this.state.name } onChange={this.changeEvent.bind(this)} /> */}\n                \n                <TextField id=\"standard-secondary\" label=\"이름\" color=\"secondary\" \n                type=\"text\" name=\"name\" value={ this.state.name }\n                onChange = { this.changeEvent.bind(this) } />\n\n                <br />\n                {/* 아이디 :\n                <input type=\"text\" name=\"id\"\n                onChange={this.changeEvent.bind(this)}\n                value={this.state.id}\n                /> */}\n                <TextField id=\"standard-secondary\" label=\"아이디\" color=\"secondary\" \n                type=\"text\" name=\"id\" value={ this.state.id }\n                onChange = { this.changeEvent.bind(this) } />\n\n                <button type=\"button\"\n                onClick={this.onIdChk.bind(this)}>\n                    아이디 확인\n                </button>\n                <br />\n                {/* <label>비밀번호</label>\n                <input type=\"password\" name=\"pass\"\n                onChange={this.changeEvent.bind(this)}\n                value={this.state.pass}\n                autoComplete=\"new-password\"\n                /> */}\n                <TextField id=\"standard-secondary\" label=\"비밀번호\" color=\"secondary\" \n                type=\"password\" name=\"pass\" value={ this.state.pass }\n                onChange = { this.changeEvent.bind(this) } />\n\n                <br />\n                {/* <label>비밀번호 확인</label>\n                <input\n                type = \"password\"\n                name = \"pwCheck\"\n                value = { this.state.pwCheck }\n                onChange = { this.changeEvent.bind(this) }\n                /> */}\n                <TextField id=\"standard-secondary\" label=\"비밀번호 확인\" color=\"secondary\" \n                type=\"password\" name=\"pwCheck\" value={ this.state.pwCheck }\n                onChange = { this.changeEvent.bind(this) } />\n\n                <br />\n                {/* <select name=\"gender\"\n                onChange = {this.changeEvent.bind(this)}\n                value = { this.state.gender }>\n                    <option value=\"\">성별선택</option>\n                    <option value=\"여성\">여성</option>\n                    <option value=\"남성\">남성</option>\n                </select> */}\n\n                <InputLabel id=\"demo-simple-select-label\">성별</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={this.state.gender}\n                    onChange={this.handleChange}\n                >\n                    {genders.map((gender) => (\n                        <MenuItem key={gender} value={gender}>\n                            {gender}\n                        </MenuItem>\n                    ))}\n                </Select>\n\n                <br />\n                사진 : &nbsp;\n                <input type=\"file\" name=\"photo\"\n                onChange={this.imageUpload.bind(this)}\n                ></input>\n\n                {/* <div>\n                    <InputLabel id=\"demo-simple-select-label\">사진</InputLabel>\n                    <br />\n                    <Upload \n                        batch={false}\n                        multiple={true}\n                        files={this.state.files}\n                        onAdd={this.onAdd}\n                        onRemove={this.onRemove}\n                        onProgress={this.onProgress}\n                        onStatusChange={this.onSatusChange}\n                        withCredentials={false}\n                        // saveUrl={URL + '/member/upload'}\n                        removeUrl={'https://demos.telerik.com/kendo-ui/service-v4/upload/remove'}\n                        onChange={this.imageUpload.bind(this)}\n                    />\n                    <div className={'example-config'} style={{ marginTop: 20 }}>\n                        <ul className={'event-log'}>\n                            {\n                                this.state.events.map(event => <li key={event}>{event}</li>)\n                            }\n                        </ul>\n                    </div>\n                    {\n                        this.state.files.length ? \n                        <div className={'img-preview example-config'}>\n                            <h3>선택된그림들 미리보기</h3>\n                            {\n                                Object.keys(this.state.filePreviews)\n                                    .map((fileKey, index) => (<img \n                                        src={this.state.filePreviews[fileKey]} \n                                        alt={index}\n                                        style={{ width: 200, margin: 10 }} \n                                    />))\n                            }\n                        </div> : undefined\n                    }\n                </div> */}\n\n\n                <br />\n                {/* 주소 : &nbsp;\n                <input type=\"text\" name=\"address\"\n                onChange={this.changeEvent.bind(this)}\n                value = { this.state.address }></input> */}\n\n                <TextField id=\"standard-secondary\" label=\"주소\" color=\"secondary\" \n                type=\"text\" name=\"address\" value={ this.state.address }\n                onChange = { this.changeEvent.bind(this) } />\n\n                {/* <input type=\"text\" name=\"addrdetail\"\n                onChange={this.changeEvent.bind(this)}\n                value = { this.state.addrdetail }></input> */}\n                \n                <TextField id=\"standard-secondary\" label=\"상세주소\" color=\"secondary\" \n                type=\"text\" name=\"addrdetail\" value={ this.state.addrdetail }\n                onChange = { this.changeEvent.bind(this) } />\n\n                <br />\n                {/* 휴대폰 : &nbsp;\n                <input type=\"text\" name=\"hp\"\n                onChange={this.changeEvent.bind(this)}\n                value = { this.state.hp }></input> */}\n\n                <TextField id=\"standard-secondary\" label=\"휴대폰\" color=\"secondary\" \n                type=\"text\" name=\"hp\" value={ this.state.hp }\n                onChange = { this.changeEvent.bind(this) } />\n\n                <br />\n                <b>\n                    내 아이디는 {this.state.id} 입니다\n                    내 비밀번호는 {this.state.pass} 입니다\n                    내 확인비밀번호는 { this.state.pwCheck } 입니다\n                    내 이메일은 { this.state.email } 입니다\n                    내 이름은 { this.state.name } 입니다\n                    내 성별은 { this.state.gender } 입니다\n                    내 사진은 { this.state.photo } 입니다\n                    내 주소1 { this.state.address} 입니다\n                    내 주소2 {this.state.addrdetail} 입니다\n                    내 휴대폰 { this.state.hp } 입니다\n                </b>\n                <br />\n                {/* <MyRipples>\n                <button type = \"submit\">회원 가입</button>\n                </MyRipples> */}\n                <RippleBtn2 />\n                </form>\n            </div>\n        );\n    }\n\n}\n\nSignupPageComp.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SignupPageComp);\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/ShareBoardRowItem.js",["463","464","465","466","467"],"import React, {Component, useState} from \"react\";\nimport {Route, Link} from \"react-router-dom\";\nimport ShareBoardUpdateForm from \"./ShareBoardUpdateForm\";\nimport Modal from './Modal';\nimport axios from \"axios\";\nimport {actionType, URL} from '../../../redux/config';\nimport ShareReview from './ShareReview';\nimport store from \"../../../redux/store\";\nimport Box from '@material-ui/core/Box';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport BuildIcon from '@material-ui/icons/Build';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\n\nimport './Share.css';\n\n/*\nrow:\n    addr: \"제주시 제주동 제주읍 제주리 제주제주\"\n    content: \"맛있습니다. 맛있습니다. 맛있습니다. 맛있습니다.↵맛있습니다. 맛있습니다. 맛있습니다. 맛있습니다↵맛있습니다. 맛있습니다. 맛있습니다. 맛있습니다\"\n    id: \"hee0134\"\n    likes: 0\n    num: \"422\"\n    photo: \"jeju20210122102347.png\"\n    regroup: 422\n    relevel: 0\n    restep: 0\n    star: \"4\"\n    subject: \"제주도 맛집맛집\"\n    writeday: \"2021-01-22\"\n */\nclass ShareBoardRowItem extends Component {\n\n    state = {\n        modalOpen: false\n\n    }\n\n    constructor(props) {\n        super(props);\n        console.log(\"constructor\", this.props);\n        //스크롤\n        this.myRef = React.createRef()\n        this.state = {scrollTop: 0}\n    }\n\n\n    //스크롤\n    onScroll = () => {\n        const scrollY = window.scrollY //Don't get confused by what's scrolling - It's not the window\n        const scrollTop = this.myRef.current.scrollTop\n        // console.log(`onScroll, window.scrollY: ${scrollY} myRef.scrollTop: ${scrollTop}`);\n        this.setState({\n            scrollTop: scrollTop\n        })\n    }\n\n\n    //삭제하는 함수 이벤트\n    onDeleteData = (e) => {\n        e.preventDefault();\n        let num = this.props.row.num;\n        let regroup = this.props.row.regroup;\n        let url = URL + \"/share/delete\";\n        let data = {\n            num: num,\n            regroup: regroup,\n        }\n\n        // console.log(\"onDeleteData\", url, data);\n\n        if (window.confirm(\"삭제하시겠습니까?\")) {\n            axios.post(url, data\n            ).then(res => {\n                // console.log(\"onDeleteData() res\", res);\n                store.dispatch({\n                    type: actionType.shareBoardUpdate,\n                });\n                this.props.history.push(\"/share\");\n            }).catch(err => {\n                console.log(\"onDeleteData() err\", err);\n            });\n        }\n    }\n\n    onInsertAnswer = () => {\n        // 원본 리뷰글의 댓글\n        // regroup 현재꺼 / relevel 1 / restep 현재꺼 /\n        let num = this.props.row.num;\n        let regroup = this.props.row.regroup;\n        let relevel = this.props.row.relevel;\n        let restep = this.props.row.restep;\n        let content = this.refs.content.value;\n        let star = 0;\n        let url = URL + \"/share/insert\" +\n            \"?\" +\n            \"relevel=\" + relevel +\n            \"&restep=\" + restep +\n            \"&regroup=\" + regroup;\n        let data = {\n            num: num,\n            // regroup: regroup,\n            // relevel: relevel,\n            // restep: restep,\n            content: content,\n            star: star,\n        }\n\n        console.log(url, data);\n\n        axios.post(url, data\n        ).then(res => {\n            console.log(\"onInsertAnswer res\", res);\n            store.dispatch({\n                type: actionType.shareBoardUpdate,\n            });\n        }).catch(err => {\n            console.log(\"onInsertAnswer err\", err);\n        })\n\n    }\n\n    openModal = () => {\n        this.setState({modalOpen: true})\n    }\n\n    closeModal = () => {\n        this.setState({modalOpen: false})\n    }\n\n    // componentDidUpdate() {\n    //     console.log(\"state변경\");\n    // }\n\n\n    render() {\n        const {row} = this.props;\n        //스크롤\n        const {\n            scrollTop\n        } = this.state\n\n       \n\n         \n\n        return (\n            \n            <div>\n                <React.Fragment>\n                  \n                   <Box m={1} id=\"ShareListBox\">\n                    <div>\n                     {/* onClick={this.openModal.bind(this)}  */}\n                        \n                        <div id=\"ShareImg\" onClick={this.openModal.bind(this)}>\n                              {row.photo}\n                        </div>\n                             \n                        <div id=\"ShareListSubject\"  onClick={this.openModal.bind(this)}>\n                              {row.subject}      \n                        </div>\n\n                        <div id=\"ShareContentDiv\">\n                            <div id=\"ShareContent\">평점:{row.star}</div>\n                            <div>주소:{row.addr}</div>\n                        </div>\n                        <div>\n                            <div style={{width: '400px', height: '65px',backgroundColor:'#FaFaFa'}}>\n                              {/* 좋아요 버튼 */}\n                              <ThumbUpAltIcon id=\"ShareThumbIcon\"/>\n\n                              \n                              {/* 삭제 버튼 */}\n                              <DeleteForeverIcon  id=\"DeleteButton\" onClick={this.onDeleteData.bind(this)}/>\n                             \n\n                              <Link to={`/share/update/${this.props.row.num}`}>\n                              <BuildIcon id=\"UpdateButton\"/>\n                              </Link>\n                              \n                                              \n                            </div>\n                        </div>\n                    </div>\n                    </Box>\n                   \n\n                    {/* //header 부분에 텍스트를 입력한다. */}\n                    <Modal open={this.state.modalOpen} close={this.closeModal.bind(this)} title=\"share\">\n\n                        {/* // Modal.js <main> { props.children } </main>에 내용이 입력된다.  */}\n                        <div id=\"ShareModalAll\" ref={this.myRef} onScroll={this.onScroll}>\n                             \n                            <div style={{width:\"1150px\",height:\"140px\"}}> \n                                <div style={{float:'left'}}>\n                                 {/* 좋아요 버튼 */}\n                                 <ThumbUpAltIcon id=\"ShareModalThumbIcon\"/>\n                                 \n                                <p style={{marginTop:\"10px\",marginBottom:'45px'}}>(작성자) 님이 공유하신 맛집입니다.</p>\n\n                                <b>맛집이름:{row.subject}</b>\n                                </div>\n                                \n                                {/* 찜하기 버튼 */}\n                                <div id=\"ShareHeart\" className=\"heart\"></div>\n\n                                \n                            </div>\n\n                            <div id=\"ShareModalMidBox\">\n                                <div id=\"ShareModalImg\">{row.photo}</div>\n                                   \n                                \n                                <div id=\"ShareModalContent\">\n                                    <div id=\"ShareModalContent1\">평점:{row.star}</div>\n                                    <div id=\"ShareModalContent2\">주소:{row.addr}</div>\n                                    <div id=\"ShareModalContent3\">리뷰:{row.content}</div>\n                                    <div id=\"ShareModalContent4\">작성일:{row.writeday}</div>\n                                </div>\n                            </div>\n\n\n                            <div id=\"ShareReviewWrite\">\n                                <div>\n                                    <div style={{float: 'left'}}>ID</div>\n\n                                    {/* 댓글 이미지 추가 아이콘 */}\n                                    <AddAPhotoIcon id=\"ShareReviewPhotoIcon\"/>\n                                </div>\n\n                                <div>\n                                    <div>\n                                        <textarea placeholder=\"댓글을 입력하세요\"\n                                                  style={{width: '900px', height: '100px', float: 'left'}}\n                                                  ref=\"content\"\n                                        />\n                                    </div>\n\n                                    <div>\n                                    <button type=\"button\" className=\"btn btn-warning\" id=\"ShareReviewSave\" \n                                    onClick={this.onInsertAnswer.bind(this)}><b>작&nbsp;성</b></button>\n                                    </div>\n                                </div>\n                            </div>\n                            <div>\n                                <ShareReview regroup={row.regroup}\n                                />\n                            </div>\n                        </div>\n                    </Modal>\n                </React.Fragment>\n            </div>\n        )\n    }\n\n}\n\n\nexport default ShareBoardRowItem\n\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/ItemComp.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/PageComp.js",["468","469","470","471","472","473"],"import React, {Component} from 'react';\nimport './TourCss.css';\n\nclass PageComp extends Component {\n\n    render() {\n        const {area, startPage, endPage, currentPage, totalPage, paginate, category, search, type} = this.props;\n\n        let prev = startPage > 1 ?\n            <li className=\"page-item\">\n                <a className=\"page-link\" style={{color: 'black'}} href={`/tourlist/${area}/${startPage - 1}`}>◀</a>\n            </li> : \"\";\n\n        let next = endPage < totalPage ?\n            <li className=\"page-item\">\n                <a className=\"page-link\" style={{color: 'black'}} href={`/tourlist/${area}/${endPage + 1}`}>▶</a>\n            </li> : \"\";\n\n        let page = [];\n\n        for (let i = startPage; i <= endPage; i++) {\n            page.push(i);\n        }\n\n        let pages = page.map(function (num, idx) {\n            return (\n                <li className=\"page-item\">\n                    <a className=\"page-link\"\n                       style={{\n                           color: num == currentPage ? \"#D1CC38\" : \"black\",\n                           fontWeight: num == currentPage ? \"700\" : \"\"\n                       }}\n                       href={(type == \"tour\")\n                           ? `/tourlist/${area}/${num}`\n                           : (type == \"search\")\n                               ? `/search/${category}/${search}/${num}`\n                               : \"\"}\n                    >{num}</a>\n                </li>\n            )\n        });\n\n        let pagination = '';\n        if (matchMedia(\"screen and (max-width:770px)\").matches) {\n            pagination =\n                <ul className='pagination pagination-sm' style={{justifyContent: 'center', marginBottom: '100px'}}>\n                    {prev}\n                    {pages}\n                    {next}\n                </ul>;\n        } else {\n            pagination =\n                <ul className='pagination' style={{justifyContent: 'center', marginBottom: '100px'}}>\n                    {prev}\n                    {pages}\n                    {next}\n                </ul>;\n        }\n\n        return (\n            <div>\n                {pagination}\n                {/* <ul className='pagination' style={{justifyContent: 'center', marginBottom: '100px'}}>\n                    {prev}\n                    {pages}\n                    {next}\n\t\t\t    </ul> */}\n                {/* <Pagination id=\"tourListPage\" color=\"primary\" count={totalPage} page={currentPage} onChange={this.handleChange.bind(this)}/> */}\n            </div>\n        );\n    }\n}\n\nexport default PageComp;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/DetailTourComp.js",["474","475","476","477","478","479","480"],"import React,{Component} from 'react';\nimport axios from 'axios';\nimport MapComp from './MapComp';\nimport ReviewListComp from './ReviewListComp';\nimport {URL} from '../../../redux/config';\nimport './TourDetailCss.css';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\nclass DetailTourComp extends Component {\n\n    constructor({match}, props) {\n        super(props);\n\n        this.state = {\n            spotdata:[],\n            contentsid: match.params.name,\n            open: false, \n            setOpen: false,\n            alertOpen: false,\n            alertSetOpen: false\n        }\n\n    }\n\n    componentDidUpdate() {\n        window.scrollTo(0,0);\n    }\n\n    getData=()=>{\n        const url = URL + \"/spot/select?contentsid=\" + this.state.contentsid;\n\n        axios.get(url)\n            .then(res=>{\n                this.setState({\n                    spotdata : res.data\n                })\n            }).catch(err=>{\n                console.log(\"DetailTourComp getData 오류 : \" + err);\n            })\n    }\n\n    componentWillMount(){\n        this.getData();\n    }\n\n    heartClick=(e)=>{\n        if(e.target.className == 'heart clickheart'){\n            e.target.className = 'heart';       \n        }\n        else{\n            // e.target.className = 'heart clickheart';\n            this.handleOpen();\n        }\n            \n    }\n\n    // modal 함수\n    handleOpen = () => {\n        this.setState({\n            open: true\n        })\n    };\n\n    handleClose = () => {\n        this.setState({\n            open: false\n        })\n    };\n\n    // alert 함수\n    alertOpen = () => {\n        this.setState({\n            alertOpen: true\n        })\n    };\n\n    alertClose = () => {\n        this.setState({\n            alertOpen: false\n        })\n        this.refs.thumbHeart.className=\"heart clickheart\";\n    };\n\n    insertWish=()=>{\n        // console.log(this.refs.wishday.value);\n\n        let url = URL + \"/wish/insertspot\";\n        let memId = 'sanghee'; // 나중에 로그인 아이디로 넣기\n        let spotId = this.state.contentsid;\n        let content = this.state.spotdata.roadaddr;\n        let wishday = this.refs.wishday.value;\n        let wishtime = this.refs.wishtime.value;\n\n        console.log(this.refs.wishday.value);\n        if(wishday == '' || wishtime == '')\n            alert(\"날짜와 시간을 모두 선택해주세요.\");\n        else{\n            axios.post(url, {memId, spotId, content, wishday, wishtime})\n            .then(res=>{\n                this.setState({\n                    open: false,\n                    alertOpen: true\n                })\n            }).catch(err=>{\n                console.log(\"spotwish insert 오류 : \" + err);\n            })\n        }\n        \n    }\n      \n\n    render() {\n        var star = this.state.spotdata.star==5?\n        <span id=\"thumbStar\" style={{color: \"#F0CD58\"}}><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span>\n                                                            <span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span></span>\n            :this.state.spotdata.star==4?\n            <span id=\"thumbStar\" style={{color: \"#F0CD58\"}}><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span>\n                                                            <span class=\"fas fa-star\"></span><span class=\"far fa-star\"></span></span>\n            :this.state.spotdata.star==3?\n            <span id=\"thumbStar\" style={{color: \"#F0CD58\"}}><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span>\n                                                            <span class=\"far fa-star\"></span><span class=\"far fa-star\"></span></span>\n            :this.state.spotdata.star==2?\n            <span id=\"thumbStar\" style={{color: \"#F0CD58\"}}><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span><span class=\"far fa-star\"></span>\n                                                            <span class=\"far fa-star\"></span><span class=\"far fa-star\"></span></span>\n            :<span id=\"thumbStar\" style={{color: \"#F0CD58\"}}><span class=\"fas fa-star\"></span><span class=\"far fa-star\"></span><span class=\"far fa-star\"></span>\n                                                            <span class=\"far fa-star\"></span><span class=\"far fa-star\"></span></span>;\n        \n        return (\n            <div>\n                {/* 이미지, spot 정보 */}\n                <img src={this.state.spotdata.img} alt=\"이미지 없음\" style={{width: '100%'}}/>\n                <div style={{color: 'whitesmoke'}} class=\"thumbText\">\n                    <b id=\"thumbTitle\">{this.state.spotdata.title}</b><br/>\n                    <span id=\"thumbTag\" style={{color: '#bbb'}}>{this.state.spotdata.tag}</span><br/>\n                    <span id=\"thumbRoad\" style={{color: '#bbb'}}><span class=\"fa fa-map-marker\"></span>&nbsp;&nbsp;{this.state.spotdata.roadaddr}</span><br/>\n                    \n                    <span id=\"thumbHeart\" ref=\"thumbHeart\" className='heart' style={{position: 'absolute', cursor: 'pointer'}} onClick={this.heartClick.bind(this)}></span>\n                </div>\n                <br/><br/>\n\n                {/* 일정 추가 모달 */}\n                <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    className=\"spotmodal\"\n                    open={this.state.open}\n                    onClose={this.handleClose.bind(this)}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                    timeout: 500,\n                    }}\n                >\n                    <Fade in={this.state.open}>\n                    <div className=\"spotpaper\">\n                        <span className=\"spotmodalTitle\">일정 추가</span><br/>\n                        🏰&nbsp;&nbsp;{this.state.spotdata.title}<br/>\n                        🗺&nbsp;&nbsp;{this.state.spotdata.roadaddr}<br/>\n                        🗓&nbsp;&nbsp;여행 날짜\n                        <input type=\"date\" class=\"form-control form-control-sm\" ref=\"wishday\"></input>\n                        ⏰&nbsp;&nbsp;예정 시간\n                        <input type=\"time\" class=\"form-control form-control-sm\" ref=\"wishtime\"></input><br/>\n                        <div style={{textAlign: 'center'}}>\n                            <button type=\"button\" class=\"btn btn-warning spotmodalBtn\" onClick={this.insertWish.bind(this)}><b>추가</b></button>\n                        </div>\n                    </div>\n                    </Fade>\n                </Modal>\n\n                {/* 소개 */}\n                <div className=\"detailTitle\">\n                    <span className=\"detailTitleContent\" style={{backgroundColor:'white', color: '#3073BD'}}>\n                        &nbsp;&nbsp;&nbsp;소개&nbsp;&nbsp;&nbsp;\n                    </span>\n                </div>\n                <br/>\n                <div id=\"thumbIntro\">\n                    {star}<br/>\n                    {this.state.spotdata.introduction}\n                </div>\n                \n                {/* 주변 정보 */}\n                <div className=\"detailTitle\">\n                    <span className=\"detailTitleContent\" style={{backgroundColor:'white', color: '#3073BD'}}>\n                        &nbsp;&nbsp;주변 정보&nbsp;&nbsp;\n                    </span>\n                </div>\n                <br/>\n                \n                {/* 카카오 지도 */}\n                <MapComp longitude={this.state.spotdata.longitude} latitude={this.state.spotdata.latitude}\n                    title={this.state.spotdata.title}/>\n                <br/><br/>\n\n                <div className=\"detailTitle\">\n                    <span className=\"detailTitleContent\" style={{backgroundColor:'white', color: '#3073BD'}}>\n                        &nbsp;&nbsp;&nbsp;후기&nbsp;&nbsp;&nbsp;\n                    </span>\n                </div>\n                <br/>\n\n                {/* 후기 */}\n                <ReviewListComp contentsid={this.state.contentsid}/>\n\n                {/* alert 창 */}\n                <Dialog\n                    open={this.state.alertOpen}\n                    onClose={this.alertClose.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"일정 추가 완료\"}</DialogTitle>\n                    <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Mypage로 이동하여 확인하시겠습니까?\n                    </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                    <Button onClick={this.alertClose.bind(this)} color=\"primary\">\n                        NO\n                    </Button>\n                    <Button onClick={\n                        ()=>{\n                            this.setState({\n                                alertOpen: false\n                            })\n                            this.refs.thumbHeart.className=\"heart clickheart\";\n                            this.props.history.push(\"/mypage\");\n                        }\n                    } color=\"primary\" autoFocus>\n                        YES\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default DetailTourComp;","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/TourList.js",["481"],"import React, {Component} from \"react\";\n\nclass TourList extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n    \n    render(){\n        return(\n            <div>\n            </div>\n        )\n    }\n}\n\nexport default TourList;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/MemberUpdateFormComp.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/HotPlaceComp.js",["482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526"],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/DetailReviewComp.js",["527","528"],"import React,{Component} from 'react';\nimport axios from 'axios';\nimport {URL} from '../../../redux/config';\nimport Rating from '@material-ui/lab/Rating';\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\nimport Box from '@material-ui/core/Box';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport './TourDetailCss.css';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Chip from '@material-ui/core/Chip';\n\nconst customIcons = {\n    1: {\n      icon: <SentimentVeryDissatisfiedIcon />,\n      label: 'Very Dissatisfied',\n    },\n    2: {\n      icon: <SentimentDissatisfiedIcon />,\n      label: 'Dissatisfied',\n    },\n    3: {\n      icon: <SentimentSatisfiedIcon />,\n      label: 'Neutral',\n    },\n    4: {\n      icon: <SentimentSatisfiedAltIcon />,\n      label: 'Satisfied',\n    },\n    5: {\n      icon: <SentimentVerySatisfiedIcon />,\n      label: 'Very Satisfied',\n    },\n  };\n\n  function IconContainer(props) {\n    const { value, ...other } = props;\n    return <span {...other}>{customIcons[value].icon}</span>;\n  }\n  \n  IconContainer.propTypes = {\n    value: PropTypes.number.isRequired,\n  };\n\nclass DetailReviewComp extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state={\n            content:'',\n            upload:'',\n            star: '1'\n        }\n\n        this.contentsid = this.props.contentsid;\n\n    }\n\n    changeHandler=(e)=>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n    insertReview=()=>{\n        let memNum = 'sanghee'; // 나중에 로그인상태의 아이디 집어넣기\n        let star = this.state.star;\n        let content = this.state.content;\n        let contentsid = this.contentsid;\n\n        // let url = \"http://localhost:9002/sreview/insert\";\n        let url = URL + \"/sreview/insert\";\n\n        axios.post(url, {contentsid, memNum, star, content})\n            .then(res=>{\n                this.setState({\n                    content : \"\",\n                    upload: ''\n                })\n                //window.location.reload();\n                this.props.getList();\n            }).catch(err=>{\n                console.log(\"DetailReviewComp insert 오류 : \" + err);\n            })\n\n    }\n\n    uploadImage=(e)=>{\n        const uploadFile=e.target.files[0];\n        const imageFile=new FormData();\n        imageFile.append(\"uploadFile\",uploadFile);\n\n        let url = URL + \"/sreview/upload\";\n        \n        axios({\n            method:'post',\n            url:url,\n            data:imageFile,\n            headers:{'Content-Type':'multipart/form-data'}\n        }).then(res=>{\n            this.setState({\n                upload:res.data.photoname\n            })\n        })\n\n    }\n\n    handleDelete = () => {\n        let url = URL + \"/sreview/delupload\";\n        axios.get(url)\n            .then(res=>{\n                this.setState({\n                    upload:''\n                })\n            })\n    };\n\n    render() {\n\n        const chip = this.state.upload==''?\"\":<Chip\n                                                variant=\"outlined\"\n                                                size=\"small\"\n                                                label={this.state.upload}\n                                                onDelete={this.handleDelete.bind(this)}\n                                            />;\n        return (\n            <div>\n                <Box\n                        display=\"flex\"\n                        flexWrap=\"wrap\"\n                        p={1}\n                        m={1}\n                        bgcolor=\"background.paper\"\n                        justifyContent=\"center\"\n                        css={{ maxWidth: '100%' }}\n                    >\n                        <Box m={1} id=\"detailReField\">\n                           \n                            <label htmlFor=\"srContent\" style={{verticalAlign: 'middle', height: '45px'}}>\n                            <Box component=\"fieldset\" borderColor=\"transparent\">\n                            &nbsp;&nbsp;\n                                <Rating\n                                    name=\"customized-icons\"\n                                    defaultValue={1}\n                                    getLabelText={(value) => customIcons[value].label}\n                                    IconContainerComponent={IconContainer}\n                                    onChange={\n                                        (e)=>{\n                                            this.setState({\n                                                star : e.target.value\n                                            })\n                                        }\n                                    }\n                                    />\n                                    \n                                    {/* &nbsp;&nbsp;<MoreVertIcon style={{marginBottom: '10px', color: \"#ddd\"}}/>&nbsp; */}\n                                    \n                            </Box> \n                            \n                            <textarea name=\"content\" id=\"srContent\" style={{resize: 'none'}} value={this.state.content} \n                                    className=\"form-control\" onChange={this.changeHandler.bind(this)}></textarea>\n                            <input style={{display:'none'}} id=\"review-icon-button-file\" type=\"file\" onChange={this.uploadImage.bind(this)}/>\n                                    <label htmlFor=\"review-icon-button-file\">\n                                        \n                                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" style={{marginBottom: '10px'}}>\n                                            <PhotoCamera />\n                                        </IconButton>  \n                                        {/* <span style={{display:'inline-block', paddingBottom: '20px'}}>{this.state.upload}</span> */}\n                                    </label>\n                                    {chip}\n                            </label>\n                                    \n                        </Box>\n                        <Box m={1}>\n                            <button type=\"button\" className=\"btn btn-warning\" id=\"btnInsertReview\" style={{marginTop: '21px'}}\n                                    onClick={this.insertReview.bind(this)}><b>작&nbsp;성</b></button>\n                        </Box>\n                </Box>\n                                   \n                \n            </div>\n        );\n    }\n}\n\nexport default DetailReviewComp;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/MapComp.js",["529","530","531","532","533","534","535","536","537","538","539","540","541"],"/*global kakao */\nimport React, { useEffect, useState } from \"react\";\nimport './kakaomap.css';\nimport Box from '@material-ui/core/Box';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\nimport LocalCafeIcon from '@material-ui/icons/LocalCafe';\nimport HotelIcon from '@material-ui/icons/Hotel';\n\nconst MapComp=(props)=> {\n\n    let longitude = useState(0);\n    let latitude = useState(0);\n    let title = useState(\"\");\n    const [value, setValue] = React.useState(0);\n\n    console.log(\"longitude : \" + props.longitude);\n    useEffect(() => {\n        \n        longitude = props.longitude;\n        latitude = props.latitude;\n        title = props.title;\n\n        mapscript();\n    });\n\n  const mapscript = () => {\n    \n    //let markers = [];\n    let placeOverlay = new kakao.maps.CustomOverlay({zIndex:1}), \n        contentNode = document.createElement('div'), // 커스텀 오버레이의 컨텐츠 엘리먼트 입니다 \n        markers = [], // 마커를 담을 배열입니다\n        currCategory = '';\n\n\n    let mapContainer = document.getElementById(\"map\"), mapOption = {\n        center: new kakao.maps.LatLng(latitude, longitude), // 지도의 중심좌표\n        level: 3 // 지도의 확대 레벨\n    };\n\n    const map = new kakao.maps.Map(mapContainer, mapOption);\n    let ps = new kakao.maps.services.Places(map);\n    \n    //마커가 표시 될 위치\n    let markerPosition = new kakao.maps.LatLng(\n        latitude,\n        longitude\n    );\n\n    // 마커를 생성\n    let marker = new kakao.maps.Marker({\n        map:map,\n      position: markerPosition,\n      title: title\n    });\n\n    let content = '<div className=\"wrap\"><div className=\"info\"><div className=\"mtitle\">' + title\n            + '<div className=\"close\" onClick={this.closeOverlay.bind(this)} title=\"닫기\"></div></div></div></div>';\n\n    //마커 위에 커스텀오버레이를 표시합니다\n    //마커를 중심으로 커스텀 오버레이를 표시하기위해 CSS를 이용해 위치를 설정했습니다\n    let overlay = new kakao.maps.CustomOverlay({\n        content: content,\n        map: map,\n        position: marker.getPosition()       \n    });\n    //마커를 클릭했을 때 커스텀 오버레이를 표시합니다\n    kakao.maps.event.addListener(marker, 'click', function() {\n        overlay.setMap(map);\n    });\n    // 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\n    let infowindow = new kakao.maps.InfoWindow({zIndex:1});\n\n    //커스텀 오버레이를 닫기 위해 호출되는 함수입니다 \n    function closeOverlay() {\n        overlay.setMap(null);     \n    }\n    // 지도에 idle 이벤트를 등록합니다\n    kakao.maps.event.addListener(map, 'idle', searchPlaces);\n    // 커스텀 오버레이의 컨텐츠 노드에 css class를 추가합니다 \n    contentNode.className = 'placeinfo_wrap';\n    // 커스텀 오버레이의 컨텐츠 노드에 mousedown, touchstart 이벤트가 발생했을때\n    // 지도 객체에 이벤트가 전달되지 않도록 이벤트 핸들러로 kakao.maps.event.preventMap 메소드를 등록합니다 \n    addEventHandle(contentNode, 'mousedown', kakao.maps.event.preventMap);\n    addEventHandle(contentNode, 'touchstart', kakao.maps.event.preventMap);\n    // 커스텀 오버레이 컨텐츠를 설정합니다\n    placeOverlay.setContent(contentNode);  \n    // 각 카테고리에 클릭 이벤트를 등록합니다\n    addCategoryClickEvent();   \n    \n    //searchPlaces();\n\n    function addEventHandle(target, type, callback) {\n        if (target.addEventListener) {\n            target.addEventListener(type, callback);\n        } else {\n            target.attachEvent('on' + type, callback);\n        }\n    }\n    // 키워드 검색을 요청하는 함수입니다\n    function searchPlaces() {\n        if (!currCategory) {\n            return;\n        }\n        \n        // 커스텀 오버레이를 숨깁니다 \n        placeOverlay.setMap(null);\n        // 지도에 표시되고 있는 마커를 제거합니다\n        removeMarker();\n        \n        ps.categorySearch(currCategory, placesSearchCB, {useMapBounds:true});\n        \n    }\n    // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\nfunction placesSearchCB(data, status, pagination) {\n\n    if (status === kakao.maps.services.Status.OK) {\n         // 정상적으로 검색이 완료됐으면 지도에 마커를 표출합니다\n\n         displayPlaces(data);\n         \n      // 페이지 번호를 표출합니다\n         displayPagination(pagination);\n     } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\n         // 검색결과가 없는경우 해야할 처리가 있다면 이곳에 작성해 주세요\n         displayPlaces(null);\n     } else if (status === kakao.maps.services.Status.ERROR) {\n         // 에러로 인해 검색결과가 나오지 않은 경우 해야할 처리가 있다면 이곳에 작성해 주세요\n         \n     }\n }\n // 검색 결과 목록과 마커를 표출하는 함수입니다\n function displayPlaces(places) {\n    // 몇번째 카테고리가 선택되어 있는지 얻어옵니다\n     // 이 순서는 스프라이트 이미지에서의 위치를 계산하는데 사용됩니다\n     var order = document.getElementById(currCategory).getAttribute('data-order');\n     var listEl = document.getElementById('placesList'), \n     menuEl = document.getElementById('menu_wrap'),\n     fragment = document.createDocumentFragment(), \n     bounds = new kakao.maps.LatLngBounds(), \n     listStr = '';\n  // 검색 결과 목록에 추가된 항목들을 제거합니다\n     removeAllChildNods(listEl);\n     // 지도에 표시되고 있는 마커를 제거합니다\n     removeMarker();\n     \n     if(places == null){\n        itemEl = getListItem(-1, null);\n        fragment.appendChild(itemEl);\n     }\n    else{\n        for ( var i=0; i<places.length; i++ ) {\n            // 마커를 생성하고 지도에 표시합니다\n            var placePosition = new kakao.maps.LatLng(places[i].y, places[i].x),\n                marker = addMarker(placePosition, i), \n                itemEl = getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다\n            // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\n            // LatLngBounds 객체에 좌표를 추가합니다\n            bounds.extend(placePosition);\n            // 마커와 검색결과 항목에 mouseover 했을때\n            // 해당 장소에 인포윈도우에 장소명을 표시합니다\n            // mouseout 했을 때는 인포윈도우를 닫습니다\n            (function(marker, place) {\n                kakao.maps.event.addListener(marker, 'click', function() {\n                    displayPlaceInfo(place);\n                });\n            })(marker, places[i]);\n            fragment.appendChild(itemEl);\n        }\n    }\n    \n     // 검색결과 항목들을 검색결과 목록 Elemnet에 추가합니다\n     listEl.appendChild(fragment);\n    // menuEl.scrollTop = 0;\n     // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\n     //map.setBounds(bounds);\n }\n // 검색결과 항목을 Element로 반환하는 함수입니다\n function getListItem(index, places) {\n     \n     if(index == -1){\n        var el = document.createElement('li'),\n        itemStr = \"<div><br/>검색 결과가 존재하지 않습니다.</div>\";\n        el.innerHTML = itemStr;\n        el.className = 'item';\n    \n        return el;\n     }\n    else{\n        var el = document.createElement('li'),\n        itemStr = '<table className=\"table table-bordered\" id=\"placeListTable\"><tr>' +\n                    '<td style={{width:\"20%\"}}><span class=\"markerbg marker_' + (index+1) + '\"></span></td>' +\n                    '<td style={{width:\"60%\"}}><a class=\"info\" href=\"' + places.place_url + '\" target=\"_blank\" title=\"' + places.place_name + '\">' +\n                    '<p>' + places.place_name + '</p>';\n        itemStr += '<span class=\"gray\">' +  places.address_name  + '</span>';      \n        itemStr += '<span class=\"tel\">' + places.phone  + '</span>' + \n                    '</a></td>' +\n                    '<td style={{width:\"20%\"}}>일정추가</td></tr></table>';\n                    el.innerHTML = itemStr;\n                    el.className = 'item';\n                \n                    return el;\n    }\n    \n     \n }\n // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\n function addMarker(position, idx, title) {\n     var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png', // 마커 이미지 url, 스프라이트 이미지를 씁니다\n         imageSize = new kakao.maps.Size(36, 37),  // 마커 이미지의 크기\n         imgOptions =  {\n             spriteSize : new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기\n             spriteOrigin : new kakao.maps.Point(0, (idx*46)+10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n             offset: new kakao.maps.Point(13, 37) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\n         },\n         markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\n             marker = new kakao.maps.Marker({\n             position: position, // 마커의 위치\n             image: markerImage \n         });\n     marker.setMap(map); // 지도 위에 마커를 표출합니다\n     markers.push(marker);  // 배열에 생성된 마커를 추가합니다\n     return marker;\n }\n // 지도 위에 표시되고 있는 마커를 모두 제거합니다\n function removeMarker() {\n     for ( var i = 0; i < markers.length; i++ ) {\n         markers[i].setMap(null);\n     }   \n     markers = [];\n }\n // 검색결과 목록 하단에 페이지번호를 표시는 함수입니다\n function displayPagination(pagination) {\n     var paginationEl = document.getElementById('pagination'),\n         fragment = document.createDocumentFragment(),\n         i; \n     // 기존에 추가된 페이지번호를 삭제합니다\n     while (paginationEl.hasChildNodes()) {\n         paginationEl.removeChild (paginationEl.lastChild);\n     }\n     for (i=1; i<=pagination.last; i++) {\n         var el = document.createElement('a');\n         el.href = \"#\";\n         el.innerHTML = i;\n         if (i===pagination.current) {\n             el.className = 'on';\n         } else {\n             el.onclick = (function(i) {\n                 return function() {\n                     pagination.gotoPage(i);\n                 }\n             })(i);\n         }\n         fragment.appendChild(el);\n     }\n     paginationEl.appendChild(fragment);\n }\n\n    // 클릭한 마커에 대한 장소 상세정보를 커스텀 오버레이로 표시하는 함수입니다\n    function displayPlaceInfo (place) {\n        var content = '<div class=\"placeinfo\">' +\n                        '   <a class=\"title\" href=\"' + place.place_url + '\" target=\"_blank\" title=\"' + place.place_name + '\">' + place.place_name + '</a>';   \n\n        if (place.road_address_name) {\n            content += '    <span title=\"' + place.road_address_name + '\">' + place.road_address_name + '</span>' +\n                        '  <span class=\"jibun\" title=\"' + place.address_name + '\">(지번 : ' + place.address_name + ')</span>';\n        }  else {\n            content += '    <span title=\"' + place.address_name + '\">' + place.address_name + '</span>';\n        }                \n    \n        content += '    <span class=\"tel\">' + place.phone + '</span>' + \n                    '</div>' + \n                    '<div class=\"after\"></div>';\n\n        contentNode.innerHTML = content;\n        placeOverlay.setPosition(new kakao.maps.LatLng(place.y, place.x));\n        placeOverlay.setMap(map);  \n    }\n\n    // 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\n    // 인포윈도우에 장소명을 표시합니다\n    // function displayInfowindow(marker, place) {\n    //     //var content = '<div style=\"padding:5px;z-index:1;\">' + title + '</div>';\n        \n    //     var content = '<div class=\"placeinfo\">' +\n    //                     '   <a className=\"title\" href=\"' + place.place_url + '\" target=\"_blank\" title=\"' + place.place_name + '\">' + place.place_name + '</a>';   \n                            \n    //     if (place.road_address_name) {\n    //         content += '    <span title=\"' + place.road_address_name + '\">' + place.road_address_name + '</span>' +\n    //                     '  <span className=\"jibun\" title=\"' + place.address_name + '\">(지번 : ' + place.address_name + ')</span>';\n    //     }  else {\n    //         content += '    <span title=\"' + place.address_name + '\">' + place.address_name + '</span>';\n    //     }                \n        \n    //     content += '    <span className=\"tel\">' + place.phone + '</span>' + \n    //                 '</div>' + \n    //                 '<div className=\"after\"></div>';\n                    \n    //     infowindow.setContent(content);\n    //     infowindow.open(map, marker);\n    // }\n    // 검색결과 목록의 자식 Element를 제거하는 함수입니다\n    function removeAllChildNods(el) {   \n        while (el.hasChildNodes()) {\n            el.removeChild (el.lastChild);\n        }\n    }\n  \n    //각 카테고리에 클릭 이벤트를 등록합니다\n    function addCategoryClickEvent() {\n        var category = document.getElementById('category'),\n            children = category.children;\n        for (var i=0; i<children.length; i++) {\n            children[i].onclick = onClickCategory;\n        }\n    }\n    //카테고리를 클릭했을 때 호출되는 함수입니다\n    function onClickCategory() {\n        var id = this.id, className = this.className;\n\n        placeOverlay.setMap(null);\n        if (className === 'on') {\n            currCategory = '';\n            // changeCategoryClass();\n            removeMarker();\n        } else {\n            currCategory = id;\n            // changeCategoryClass(this);\n            searchPlaces();\n        }\n    }\n    //클릭된 카테고리에만 클릭된 스타일을 적용하는 함수입니다\n    // function changeCategoryClass(el) {\n    //     var category = document.getElementById('category'),\n    //         children = category.children,\n    //         i;\n    //     for ( i=0; i<children.length; i++ ) {\n    //         children[i].className = '';\n    //     }\n    //     if (el) {\n    //         el.className = 'on';\n    //     } \n    // } \n    // 마커를 지도 위에 표시\n    marker.setMap(map);\n  };\n\n  return (\n      <div>\n          {/* <div id=\"map\" style={{ width: \"500px\", height: \"500px\" }}></div> */}\n          \n          <Box className=\"map_wrap\" style={{textAlign: 'center'}}\n                        display=\"flex\"\n                        flexWrap=\"wrap\"\n                        p={1}\n                        m={1}\n                        bgcolor=\"background.paper\"\n                        justifyContent=\"center\"\n                        css={{ maxWidth: '100%' }}\n                    >\n                        \n                        <Box m={1} id=\"map\" style={{position:'relative', overflow:'hidden'}}>\n                            <input type=\"hidden\" value={title} id=\"keyword\" size=\"15\"></input>\n                        </Box>\n\n                        <br/><br/>\n                        \n                        <Box m={1} id=\"placeListBox\">\n                            <BottomNavigation\n                                    id=\"category\"\n                                    value={value}\n                                    onChange={(event, newValue) => {\n                                        setValue(newValue);\n                                    }}\n                                    showLabels\n                                    >\n                                    <BottomNavigationAction id=\"FD6\" data-order=\"0\" label=\"Food\" icon={<RestaurantIcon />} \n                                        style={{borderLeft: '1px solid #ddd', borderTop: '1px solid #ddd', borderBottom: '1px solid #ddd'}} />\n                                    <BottomNavigationAction id=\"CE7\" data-order=\"1\" label=\"Cafe\" icon={<LocalCafeIcon />} style={{border: '1px solid #ddd'}} />\n                                    <BottomNavigationAction id=\"AD5\" data-order=\"2\" label=\"Rooms\" icon={<HotelIcon />}\n                                        style={{borderRight: '1px solid #ddd', borderTop: '1px solid #ddd', borderBottom: '1px solid #ddd'}}/>\n                                    </BottomNavigation>\n                            <div id=\"menu_wrap\" class=\"bg_white\">\n                                <ul id=\"placesList\">\n                                    <li style={{marginTop: '30px'}}>원하시는 카테고리를 선택해주세요.</li>\n                                </ul>\n                                <div id=\"pagination\"></div>\n                            </div>\n                        </Box>\n                        \n                    </Box>\n\n          \n          {/* <div style={{display:'flex', width:'100%'}}>\n                \n                <div className=\"map_wrap\" className=\"map_wrap\" style={{textAlign: 'center', display:'flex', flexShrink:'1', justifyContent:'center'}}>\n                    <div id=\"map\" style={{position:'relative', overflow:'hidden'}}>\n                    <ul id=\"category\">\n                        <li id=\"FD6\" data-order=\"0\"> \n                            <span className=\"category_bg restaurant\"></span>\n                            음식점\n                        </li>  \n                        <li id=\"CE7\" data-order=\"1\"> \n                            <span className=\"category_bg cafe\"></span>\n                            카페\n                        </li>\n                        <li id=\"AD5\" data-order=\"2\"> \n                            <span className=\"category_bg hotel\"></span>\n                            숙박\n                        </li>     \n                    </ul>   \n                    <input type=\"hidden\" value={title} id=\"keyword\" size=\"15\"></input>\n                    </div>\n                    \n                </div>\n                <br/><br/>\n                <div style={{display:'flex', flexShrink:'1', justifyContent:'center'}}>\n                    <ul id=\"placesList\"></ul>\n                    <div id=\"pagination\"></div>\n                </div>\n            </div> */}\n      </div>   \n  );\n}\n\nexport default MapComp;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/ReviewListComp.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/ReviewItemComp.js",["542","543","544","545","546","547","548"],"import React,{Component} from 'react';\nimport axios from 'axios';\nimport {URL} from '../../../redux/config';\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\nimport Rating from '@material-ui/lab/Rating';\nimport PropTypes from 'prop-types';\nimport Chip from '@material-ui/core/Chip';\nimport IconButton from '@material-ui/core/IconButton';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\n\nconst reviewcustomIcons = {\n    1: {\n      icon: <SentimentVeryDissatisfiedIcon />,\n      label: 'Very Dissatisfied',\n    },\n    2: {\n      icon: <SentimentDissatisfiedIcon />,\n      label: 'Dissatisfied',\n    },\n    3: {\n      icon: <SentimentSatisfiedIcon />,\n      label: 'Neutral',\n    },\n    4: {\n      icon: <SentimentSatisfiedAltIcon />,\n      label: 'Satisfied',\n    },\n    5: {\n      icon: <SentimentVerySatisfiedIcon />,\n      label: 'Very Satisfied',\n    },\n  };\n\n  function reviewIconContainer(props) {\n    const { value, ...other } = props;\n    return <span {...other}>{reviewcustomIcons[value].icon}</span>;\n  }\n  \n  reviewIconContainer.propTypes = {\n    value: PropTypes.number.isRequired,\n  };\n\nclass ReviewItemComp extends Component {\n\n    state={\n        update: false,\n        upload: 'no',\n        content:'',\n        star: '1'\n    }\n\n    changeHandler=(e)=>{\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n    uploadImage=(e)=>{\n        console.log(\"upload\");\n        const uploadFile=e.target.files[0];\n        const imageFile=new FormData();\n        imageFile.append(\"uploadFile\",uploadFile);\n\n        let url = URL + \"/sreview/upload\";\n        \n        axios({\n            method:'post',\n            url:url,\n            data:imageFile,\n            headers:{'Content-Type':'multipart/form-data'}\n        }).then(res=>{\n            console.log(res.data.photoname);\n            this.setState({\n                upload: res.data.photoname\n            })\n        })\n\n    }\n\n    updateClick=()=>{\n        this.setState({\n            update: true\n        })\n\n        let url = URL + \"/sreview/select?num=\" + this.props.row.num;\n        axios.get(url)\n            .then(res=>{\n                this.setState({\n                    content: res.data.content,\n                    upload: res.data.photo\n                })\n            }).catch(err=>{\n                console.log(\"update spotreview 오류 : \" + err);\n            })\n\n    }\n\n    handleDelete = () => {\n        let url = URL + \"/sreview/updatenoupload\";\n        axios.get(url)\n            .then(res=>{\n                this.setState({\n                    upload:'이미지 없음'\n                })\n            })\n    };\n\n    update=()=>{\n        let url = URL + \"/sreview/update\";\n        let num = this.props.row.num;\n        let star = this.state.star;\n        let content = this.state.content;\n\n        console.log(star + \", \" + content);\n\n        axios.post(url, {num, star, content})\n            .then(res=>{\n                this.setState({\n                    update: false\n                })\n                this.props.list();\n            }).catch(err=>{\n                console.log(\"spotreview update 오류 : \" + err);\n            })\n    }\n\n    delete=()=>{\n        let url = URL + \"/sreview/delete?num=\" + this.props.row.num;\n\n        if(window.confirm(\"삭제하시겠습니까?\")){\n            axios.get(url)\n                .then(res=>{\n                    this.setState({\n                        update: false\n                    })\n                    this.props.list();\n                }).catch(err=>{\n                    console.log(\"spotreview delete 오류 : \" + err);\n                })\n        }\n    }\n\n    render() {\n        const {row}=this.props;\n        const url = URL + \"/\";\n        // const url = \"http://localhost:9002/photo/\";\n        const photo = this.state.update==false?(row.photo===\"no\"?\"\":<td style={{width:'15%'}}>\n                            <img src={url + row.photo} alt=\"이미지 없음\" style={{width:'100px', height:'100px'}}/>\n                            {/* <div className=\"tourReImg\" style={{display:'inline-block', border: '1px solid gray'}}></div> */}\n                        </td>):\"\";\n        const w = row.photo===\"no\"?\"2\":\"0\";\n        const star = row.star==1?<SentimentVeryDissatisfiedIcon/>:row.star==2?<SentimentDissatisfiedIcon/>\n        :row.star==3?<SentimentSatisfiedIcon/>:row.star==4?<SentimentSatisfiedAltIcon/>:<SentimentVerySatisfiedIcon/>\n\n        const chip = row.photo===\"no\"?(this.state.upload=='no'?\"\":<Chip\n                                                variant=\"outlined\"\n                                                size=\"small\"\n                                                label={this.state.upload}\n                                                onDelete={this.handleDelete.bind(this)}\n                                            />):<Chip\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            label={this.state.upload}\n                                            onDelete={this.handleDelete.bind(this)}\n                                        />;\n        // 로그인 아이디가 맞으면 출력\n        //const edit = \n\n        const tag = this.state.update==false?\n            <td style={{width:'75%', padding: '10px', position: 'relative'}} align=\"left\" colSpan={w}>\n                &nbsp;&nbsp;    \n                <span style={{color: '#F0CD58'}}>{star}</span>\n                &nbsp; &nbsp;<b>{row.memNum}</b>\n                <br/><br/>\n                <p>{row.content}</p>\n                {/* {edit} */}\n                <div style={{position: 'absolute', top: '10px', right: '10px', cursor: 'pointer'}} class=\"fas fa-tools\" onClick={this.updateClick.bind(this)}></div>\n                <div style={{float: 'right', color: '#aaa'}}>\n                    {row.writeday}\n                </div>\n            </td>\n            :<td style={{width:'100%', padding: '10px', position: 'relative'}} align=\"left\" colSpan={2}>\n                <Rating\n                                    name=\"reviewcustomized-icons\"\n                                    defaultValue={row.star}\n                                    getLabelText={(value) => reviewcustomIcons[value].label}\n                                    IconContainerComponent={reviewIconContainer}\n                                    onChange={\n                                        (e)=>{\n                                            this.setState({\n                                                star : e.target.value\n                                            })\n                                        }\n                                    }\n                                    />\n                <div style={{position: 'absolute', top:'5px', right:'5px', cursor: 'pointer'}} onClick={\n                    ()=>{\n                        this.setState({\n                            update: false\n                        })\n                    }\n                }>x</div>\n                <textarea name=\"content\" style={{resize: 'none', width: '100%'}} value={this.state.content} \n                                    className=\"form-control\" onChange={this.changeHandler.bind(this)}></textarea>\n                \n                <input style={{display:'none'}} id=\"upreview-icon-button-file\" type=\"file\" onChange={this.uploadImage.bind(this)}/>\n                <label htmlFor=\"upreview-icon-button-file\">\n                    <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" style={{marginBottom: '10px'}}>\n                        <PhotoCamera />\n                    </IconButton> \n                </label>\n                {chip}\n                <div style={{float:'right', marginTop: '10px'}}>\n                    <button type=\"button\" class=\"btn btn-warning\" onClick={this.update.bind(this)}>수정</button>\n                    <button type=\"button\" class=\"btn btn-warning\" onClick={this.delete.bind(this)}>삭제</button>\n                </div>\n            </td>;\n        return (\n            <tr>\n                {photo}\n                {tag}\n            </tr> \n        );\n    }\n}\n\nexport default ReviewItemComp;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/EtcBoardComp.js",["549"],"import React, {Component} from 'react';\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport BoardSample from \"./BoardSample\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\n\nfunction TabPanel(props) {\n    const {children, value, index, ...other} = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nexport default function EtcBoardComp() {\n\n    const [value, setValue] = React.useState(2);\n\n    const handleChange = (event, newValue) => {\n        console.log(event, newValue);\n        setValue(newValue);\n    };\n\n    /**\n     * Notice | ShareRestaurant | ShareMyPlan\n     */\n    return (\n        <div className=\"etcBoardComp\">\n            <Paper square>\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n                    <Tab label=\"Notice\" {...a11yProps(0)} />\n                    <Tab label=\"Share Restaurant\" {...a11yProps(1)} />\n                    <Tab label=\"Share MyPlan\" {...a11yProps(2)} />\n                </Tabs>\n                <TabPanel value={value} index={0}>\n                    <BoardSample/>\n                </TabPanel>\n                <TabPanel value={value} index={1}>\n                </TabPanel>\n                <TabPanel value={value} index={2}>\n                </TabPanel>\n            </Paper>\n        </div>\n    );\n}\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/MainPhotoComp.js",["550","551","552","553","554"],"import React, {Component} from 'react';\nimport jeju1 from \"../../../image/jeju1.jpg\";\nimport jeju2 from \"../../../image/jeju2.jpg\";\nimport jeju3 from \"../../../image/jeju3.jpeg\";\nimport udo1 from \"../../../image/udo1.jpg\";\nimport gsap from \"gsap\";\n// import WaveBorder from \"./WaveBorder\";\n// import {createMuiTheme, MuiThemeProvider, WithStyles} from \"@material-ui/core\";\n// import {ThemeProvider} from 'styled-components';\n// import theme from \"./theme\";\n// import PropTypes from \"prop-types\";\n// import styledComponents from \"styled-components\";\n\nclass MainPhotoComp extends Component {\n\n\n    constructor(props) {\n        super(props);\n\n\n    }\n\n    setImageScroll = (photoNum, preNum = 4) => {\n        const duration = 3;\n        const imgCnt = 4;\n        let arrImg = [];\n\n        //over index setting\n        if (photoNum > imgCnt) {\n            photoNum = 1;\n        }\n\n        //img element array setting.\n        for (let i = 1; i <= imgCnt; i++) {\n            let tempImgIdx = (photoNum - 1) + i;\n            tempImgIdx = tempImgIdx > imgCnt ? tempImgIdx - imgCnt : tempImgIdx;\n            arrImg.push(document.querySelector(`img.mainPhotoComp_img${tempImgIdx}`));\n        }\n\n\n        if (arrImg[0] != null) {\n            //zIndex setting.\n            for (let i = 0; i < imgCnt; i++) {\n                arrImg[i].style.zIndex = imgCnt - i;\n            }\n\n            //tween action.\n            gsap.fromTo(`.mainPhotoComp_img${photoNum}`\n                , {\n                    opacity: 0,\n                }, {\n                    opacity: 1,\n                    duration: duration,\n                });\n            gsap.fromTo(`.mainPhotoComp_img${preNum}`\n                , {\n                    // opacity: 1,\n                }, {\n                    opacity: 0,\n                    duration: duration,\n                });\n\n            //next action preparing.\n            setTimeout(this.setImageScroll.bind(this, photoNum + 1, photoNum), (duration + 2) * 1000);\n        }\n\n    }\n\n    componentDidMount() {\n        for (let i = 0; i < 4; i++) {\n            gsap.killTweensOf(`.mainPhotoComp_img${i + 1}`);\n        }\n        // this.setImageScroll(1, 4);\n    }\n\n    render() {\n        return (\n            <div className=\"mainPhotoComp\">\n                <div>\n                    <img className=\"mainPhotoComp_img1\" src={jeju1}/>\n                </div>\n                <div>\n                    <img className=\"mainPhotoComp_img2\" src={jeju2}/>\n                </div>\n                <div>\n                    <img className=\"mainPhotoComp_img3\" src={jeju3}/>\n                </div>\n                <div>\n                    <img className=\"mainPhotoComp_img4\" src={udo1}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MainPhotoComp\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/MyPlanComp.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/Tourintro.js",["555"],"import React,{Component} from 'react';\nimport './TourCss.css';\nimport udo from '../../../image/Tour_udo.jpg';\nimport seogwipo from '../../../image/Tour_seogwipo.jpg';\nimport aewol from '../../../image/Tour_aewol.jpg';\nimport andeok from '../../../image/Tour_andeok.jpg';\nimport daejung from '../../../image/Tour_daejung.jpg';\nimport gujwa from '../../../image/Tour_Gujwa.jpg';\nimport hangyeong from '../../../image/Tour_hangyeong.jpg';\nimport hanrim from '../../../image/Tour_hanrim.jpg';\nimport jeju from '../../../image/Tour_jeju.jpg';\nimport jocheon from '../../../image/Tour_jocheon.jpg';\nimport namwon from '../../../image/Tour_namwon.jpg';\nimport pyoseon from '../../../image/Tour_pyoseon.jpg';\nimport sungsan from '../../../image/Tour_sungsan.jpg';\n\nclass Tourintro extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.area = this.props.area;\n        this.type = null;\n\n        if(this.props.type){\n            this.type = this.props.type;\n        }\n    }\n\n    render() {\n\n        let img = this.area===\"jeju\"?<img id=\"jejuImg\" src={jeju} alt=\"\"/>:(this.area===\"jocheon\"?<img id=\"jocheonImg\" src={jocheon} alt=\"\"/>:\n            (this.area===\"aewol\"?<img id=\"aewolImg\" src={aewol} alt=\"\"/>:(this.area===\"andeok\"?<img id=\"andeokImg\" src={andeok} alt=\"\"/>:\n            (this.area===\"daejung\"?<img id=\"daejungImg\" src={daejung} alt=\"\"/>:(this.area===\"gujwa\"?<img id=\"gujwaImg\" src={gujwa} alt=\"\"/>:\n            (this.area===\"hangyeong\"?<img id=\"hangyeongImg\" src={hangyeong} alt=\"\"/>:(this.area===\"hanrim\"?<img id=\"hanrimImg\" src={hanrim} alt=\"\"/>:\n            (this.area===\"namwon\"?<img id=\"namwonImg\" src={namwon} alt=\"\"/>:(this.area===\"pyoseon\"?<img id=\"pyoseonImg\" src={pyoseon} alt=\"\"/>:\n            (this.area===\"seogwipo\"?<img id=\"seogwipoImg\" src={seogwipo} alt=\"\"/>:(this.area===\"sungsan\"?<img id=\"sungsanImg\" src={sungsan} alt=\"\"/>:\n            (this.area===\"udo\"?<img id=\"udoImg\" src={udo} alt=\"\"/>:\"\"))))))))))));\n\n        let intro = this.area===\"jeju\"?\"제주시\":(this.area===\"jocheon\"?\"조천읍\":(this.area===\"aewol\"?\"애월읍\":(this.area===\"andeok\"?\"안덕면\":\n            (this.area===\"daejung\"?\"대정읍\":(this.area===\"gujwa\"?\"구좌읍\":(this.area===\"hangyeong\"?\"한경면\":(this.area===\"hanrim\"?\"한림읍\":\n            (this.area===\"namwon\"?\"남원읍\":(this.area===\"pyoseon\"?\"표선면\":(this.area===\"seogwipo\"?\"서귀포시\":(this.area===\"sungsan\"?\"성산읍\":\n            (this.area===\"udo\"?\"우도\":\"\"))))))))))));\n\n        let content = this.area===\"jeju\"?<span>\n            &nbsp;&nbsp;&nbsp;&nbsp;제주시는 한반도와 마주 대하는 한라산 북사면의 중앙부에 위치한 관계로 예부터 연륙교통의 중심지로 발달하였을 뿐만 아니라, 모든 도로가 제주시를 중심으로 환상(環狀) 또는 방사상(放射狀)으로 뻗어 있고, 항공과 해운을 연결하는 지역으로, 제주관광의 관문역할을 하고 있다.\n            <br/>&nbsp;&nbsp;&nbsp;&nbsp;한라산국립공원을 비롯하여 봉개휴양림관광지·오라관광지구·삼양유원지·무수천유원지·산천단유원지·제주관광타워·사라봉공원·용담도시근린공원·남조봉공원 등 많은 관광자원이 있다. 최근 제주국제공항·제주항 등의 확장공사가 계속 추진되고 있어 국제관광도시로 발돋움하고 있다. 특히 2000년부터 관광객에 대한 무비자 입국이 옛 소련권 국가로까지 확대되어 제주관광산업 활성화 여건을 조성하고 있으며, 특성 있는 관광산업을 육성하고 동북아시아 중심축의 관광·휴양 거점도시로 개발하고 있다.\n            </span>\n            :(this.area===\"jocheon\"?<span>\n                &nbsp;&nbsp;&nbsp;&nbsp;동쪽은 구좌읍, 서쪽은 제주시, 남쪽은 서귀포시 남원읍·표선면(表善面)에 접하며, 북부는 제주해협에 면한다. 남쪽으로는 한라산 동쪽 연봉인 사라악(沙羅岳:1,300m)·성널오름[城板岳:1,215m]·괴평이오름(784m)·거문오름(718m) 등 비교적 높은 산이 있으나, 중산간지대(200∼500m)에는 넓은 초지가 발달하여 옛날부터 방목지대로 이용되었다. 교래리(橋來里) 일대에는 제동목장 등 기업목장이 있다.\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;해안저지대에는 넓은 평지가 발달하여 밭농사를 주로 하며, 주요 농산물로는 고구마·보리·유채·콩 등을 생산한다. 감귤 및 채소 등의 원예작물 재배도 활발하다. 중산간지대까지 버스가 왕래하여 제주시와 동일한 생활권을 형성하고 있다.\n                </span>\n            :(this.area===\"aewol\"?<span>\n                &nbsp;&nbsp;&nbsp;&nbsp;동쪽은 제주시, 서쪽은 한림읍, 남쪽은 한라산의 연봉인 붉은오름[赤岳:1,060m]·노로오름[老路岳:1,070m] 등을 사이에 두고 서귀포시·안덕면(安德面)과 접하고, 북쪽은 제주해협에 면한다.\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;북쪽 저지대에는 넓은 평지가 펼쳐져 있으며, 동귀리(東貴里)·귀일리(貴日里)·구엄리(舊嚴里) 등의 해안 저지대에는 논도 발달하였다. 주요농산물로는 쌀·보리를 비롯하여 고구마·콩·유채·채소 등을 생산하고 있으며, 감귤재배가 활발하다. 넓은 산간지역을 이용한 축산업도 활발하여 시온목장 등 기업목장이 이루어지고 소·돼지·말 등을 사육한다. 애월항은 제주항의 보조항구로서의 구실을 맡고 있으며, 제주시와 동일생활권을 이루고 있다. 교통은 제주시의 시내버스가 운행되고 있어 편리하다.\n                </span>\n            :(this.area===\"andeok\"?<span>\n                &nbsp;&nbsp;&nbsp;&nbsp;동쪽은 서귀포시, 서쪽은 대정읍, 북쪽은 돌오름(861m)·왕이매(620m)·당오름(440m) 등을 사이에 두고 제주시 애월읍·한림읍과 경계를 이루며, 남쪽은 바다에 면한다.\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;광평리(廣坪里)가 500m, 상천리(上川里)가 380m, 동광리(東廣里)가 280m 이상의 고지대에 발달해 있다. 경지면적은 2,653ha로 대부분이 밭농사를 짓고 있으며, 고구마·보리·유채·감자·잡곡 등의 생산이 많고, 감귤 재배도 많이 한다. 해안일주도로, 중문고속화도로, 여러 지방도가 면을 지나서 교통은 편리하다. 화순리(和順里)의 화순항(港)은 천연의 양항이며 화순화력발전소가 있다. 산방산(山房山:395m) 및 부근 용머리의 해안절경, 안덕계곡, 화순해수욕장 등은 관광지로서도 유명하다.\n                </span>\n            :(this.area===\"daejung\"?<span>\n                &nbsp;&nbsp;&nbsp;&nbsp;13개 리 및 2개의 부속도서인 가파도(加波島)와 마라도(馬羅島)로 이루어져 있다. 동쪽은 안덕면(安德面), 북쪽은 제주시 한경면(翰京面)과 접하고 서·남쪽은 바다에 면한다.\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;한라산 정상부에서 멀리 떨어진 남서쪽 사면에 위치하기 때문에 높은 산이 별로 없고, 다른 읍·면과는 달리 전역이 해발고도 200m 이하의 저지대로 이루어져 있다. 모슬봉(慕瑟峰:187m)·가시악(加時岳:123m)·농남봉(農南峰:100m)·송악산(松岳山:84m)·단산(簞山:160m) 등 기생화산이 있다. 농업은 밭농사를 중심으로 고구마·보리·콩·잡곡 등의 생산이 많고, 감귤재배가 성하다. 모슬포항을 중심으로 연근해 어업이 발달하여 통조림공장이 있다. 또한 10여 개의 녹말공장이 있으며, 소규모의 농가별 목장도 있다. 읍소재지인 모슬포는 가파도와 마라도를 연결하는 선박의 기착지로, 본도 서부의 교통요지를 이루고 있으며, 해군·공군 부대가 주둔하고 있다.\n                </span>\n            :(this.area===\"gujwa\"?<span>\n                &nbsp;&nbsp;&nbsp;&nbsp;서쪽은 조천읍(朝天邑), 남쪽은 서귀포시 성산읍·표선면(表善面)과 접하고, 동쪽과 북쪽은 남해에 면한다. 1980년 12월 읍으로 승격하였다.\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;한라산 북동 사면에 위치하여 비교적 낮은 분석구(噴石丘) 등이 분포하며, 하천의 발달은 미약하다. 주요 농산물은 고구마·보리·콩 등이 비교적 많고, 일부지역에서 감귤재배가 이루어지고 있다. 낮은 산간지대에는 넓은 목야지가 발달하여 예로부터 좋은 목장지대가 되고 있다. 동·북부가 바다에 면하고 있는데도 어로·수산양식업은 미미한 편이다.\n                </span>\n            :(this.area===\"hangyeong\"?<span>\n                &nbsp;&nbsp;&nbsp;&nbsp;원래는 한림면(翰林面)의 일부였으나, 1956년 한림읍으로 승격되면서 서부 일부가 분리되어 한경면이 되었다.\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;한라산의 북서사면 가장자리에 위치한 관계로 해발고도 200m 이하의 저지대를 이루어 해안 일주 도로변과 중산간지대(中山間地帶)에 취락이 골고루 발달하였다. 고구마·보리·맥주맥·유채 등을 생산하며, 최근 감귤 수확도 많아졌다. 중산간지대에 많은 초지를 가지고 있어 2개의 공동목장 등 대규모 기업목장이 있다. 신창리(新昌里)와 본도의 가장 서부에 위치한 고산리(高山里)를 중심으로 중산간지대에 버스가 왕래한다. 고산리의 당산봉(唐山峰:148m) 및 차귀도(遮歸島), 황새 도래지 등의 관광지가 있다.\n                </span>\n            :(this.area===\"hanrim\"?<span>\n                &nbsp;&nbsp;&nbsp;&nbsp;제주특별자치도 제주시의 서부 지역에 있는 읍이다. 동쪽은 애월읍, 서쪽은 한경면, 남쪽은 서귀포시 안덕면, 북쪽은 바다와 접하고 있다. 남쪽 중산간 지대에는 금오름, 문도지오름 등이 분포해 있고 이시돌목장과 같은 목장이 들어서 있다.\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;읍사무소는 한림리에 있다. 고려 시대에는 '명월현(明月縣)'이라 했다. 조선 시대에는 제주목 소속의 우면(右面)이었는데, 18세기 후반 신우면과 구우면으로 분리되면서 '구우면(舊右面)'이 되었다. 1915년에는 제주도(濟州島) 구우면이라 했고, 1935년에는 한림면(翰林面)으로 개칭했다. 1956년에 한림면을 폐지하고 한림읍과 한경면으로 분리했다. 읍 소재지인 한림리를 비롯한 15개의 법정리를 관할하고 있다.\n                </span>\n            :(this.area===\"namwon\"?<span>\n                &nbsp;&nbsp;&nbsp;&nbsp;서귀포시에서 두번째로 인구가 많은(약 18,000명) 것 치고는 생활환경이 여러모로 부족해 보이는 경우가 있는데, 서귀포시가 바로 옆이고 남조로를 통해서 제주시도 빠르게 갈 수 있기 때문에 읍내에 편의시설등의 발전이 늦었다. 같은 서귀포시 동부권인 표선이나 성산에 비해 관광지가 부족한것도 원인중 하나. 그리고 넓이빨도 많이 작용한다.\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;1118번 지방도(남조로)를 통해 제주시로 갈 수 있으며, 이외의 서귀포 지역과는 제주일주도로로 연결된다. 한남리에 국가태풍센터가 있다. 남원큰엉, 코코몽에코파크, 신영영화박물관 등의 주요 관광지가 있으며, 남제주체육관이나 구 남제주보건소(현 서귀포 동부보건소) 등 남제주군의 중심으로 육성하려 했던 흔적이 보이나 시군통합으로 물거품. 실제로 시군통합에 가장 많이 반대한 지역이기도 하다.\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;농업으로는 제주도에서 탑클래스이며, 그래서인지 감귤농사 리즈시절엔 부자가 많았던 지역이다. 서귀포시 지역 내에서도 남원지역, 특히 위미의 감귤은 맛있기로 유명하다. 또한 제주도민의 특성인 무뚝뚝함, 외지인에 대한 경계가 상대적으로 덜해 오히려 선입견을 가졌던 관광객이 어색함을 느낄 정도이다.\n                </span>\n            :(this.area===\"pyoseon\"?<span>\n                &nbsp;&nbsp;&nbsp;&nbsp;동부는 천미천(川尾川)을 경계로 성산읍, 서부는 송천(松川)을 경계로 남원읍, 북부는 거문오름(718m)·가문이오름(306m)·백약이오름(311m) 등을 경계로 제주시 조천읍·구좌읍과 접하며, 남부는 남해(南海)에 면해 있다.\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;해발고도 200∼500m의 중산간지대(中山間地帶)에는 넓은 초지가 발달하여 예로부터 방목지대가 되었고, 지금도 대규모 목장이 있다. 고구마·보리·유채 등의 농작물을 생산하고, 최근 감귤 수확이 늘었다. 정의현(旌義縣)의 치소(治所)였던 성읍리(城邑里)는 민속촌으로 지정되어 관광지가 되었다. 표선리(表善里)를 기점으로 중산간지대에 버스가 왕래한다. 동부산업도로의 포장으로 제주시와의 거리가 1시간대로 단축되어 교통이 편리해졌다.\n                </span>\n            :(this.area===\"seogwipo\"?<span>\n                &nbsp;&nbsp;&nbsp;&nbsp;북부에는 한라산과 그 자화산인 기생화산이 솟아 있다. 한라산(1,950m)은 정상 부근에서는 종상화산(鐘狀火山)의 산형(山形)을 형성하여 급한 경사를 이루고, 산록면은 완경사를 이루나, 북사면보다는 약간 경사도가 큰 편이다. 해안저지대는 평지를 이루나, 북사면보다 다소 좁다.\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;하천은 도내에서는 비교적 잘 발달하여 효돈천·정술내·에이리내·연외천·악근천(岳近川)·큰내·창고천(倉庫川) 등이 남류한다. 이들 하천은 유년기곡(幼年期谷)의 깊은 골짜기를 형성하면서 일부 하천은 하류에서 폭포를 이루고 있는데, 천지연(天地淵)·정방(正房)·천제연(天帝淵) 폭포 등이 유명하다. 특히 정방폭포는 직접 해면으로 낙하하는 것으로 유명하다.\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;해안은 대부분 조면암질 안산암 및 현무암의 단애가 수직으로 주상절리(柱狀節理)를 이루어 절경을 형성하고, 또 서귀포 앞바다에는 숲섬[森島]·문섬[蚊島]·새섬[茅島]·범섬[虎島] 등 4개의 섬이 해안과 어우러져서 절경을 이룬다. 남쪽 해상에는 한국 최남단의 마라도와 가파도가 자리잡고 있다.\n                </span>\n            :(this.area===\"sungsan\"?<span>\n                &nbsp;&nbsp;&nbsp;&nbsp;바다에 면하고, 서쪽으로 천미천(川尾川)을 사이에 두고 표선면(表善面), 북쪽으로 제주시 구좌읍과 접한다.경사가 완만한 한라산 남동쪽 산록에 위치하기 때문에 대부분이 해발고도 200m 이하의 저지를 이루며, 두산봉(斗山峰:146m)·대수산봉(大水山峰:137m)·대왕산(大王山:157m)·일출봉(日出峰:182m)·독자봉(獨子峰:159m)·모구리오름(232m)·궁대악(弓帶岳) 등 산들도 해발고도 200m를 넘는 것이 거의 없다. 농경지는 대부분이 밭으로, 고구마·보리·콩·유채·잡곡 등의 생산이 많다.\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;성산포항을 중심으로 연근해어업이 발달되어 수산물 냉동이나 해조류 가공 등의 수산가공업이 성하며, 다른 지역과 마찬가지로 10여 개의 소규모 녹말공장이 있다. 남서부에 있는 대정읍과 마찬가지로 대규모 기업목장은 없고 영세목장이 있을 뿐이다. 특히 관광명소인 일출봉의 해돋이는 일대 장관이며, 산기슭에는 일광사(日光寺)가 있고, 해안에는 해적과 왜적을 막기 위해 쌓은 성산성이 있다.\n                </span>\n            :(this.area===\"udo\"?<span>\n                &nbsp;&nbsp;&nbsp;&nbsp;우도는 성산 일출봉 남쪽 바다 앞에 떠 있는 섬이다. 성산포에서 3.8km, 여객선으로 10분이면 닿는 거리에 있다. 성산포 일출봉에 갔다가 찾게 되는 곳이 우도다. 면적 6.18km2, 해안선 길이 17km로 제주도의 63개 부속도서 가운데 가장 큰 섬이다. 우도의 경지 면적은 우도 전체 면적의 약 71%로 마늘, 땅콩 등을 재배하고 있다. 또한 해녀들에 의한 해산물 채취가 많이 이루어지고 있다. 우도의 해녀들은 일찍부터 가정 경제를 책임지는 가장으로서 물질을 하기 위해 우리나라 서남 · 동해안뿐만 아니라 중국과 일본 해안까지 진출하기도 했다 한다.\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;우도는 소가 머리를 내민 모양(牛頭形) 또는 누워 있는 모양(臥牛形)이라 해서 ‘소섬’ 즉 우도로 명명된 곳이나 1900년에는 향교 훈장 오유학이 물에 뜬 두둑이라는 뜻의 ‘연평도’로 개명하여 현재까지 연평리로 불리고 있다. 1986년 4월 1일에 우도면으로 승격되었다. 현재는 4개 행정리에 12개 자연 부락으로 나누어져 있다. 4개 행정리는 천진리, 서광리, 오봉리, 조일리 등이다. 면사무소, 숙박 시설, 종교 시설, 등대박물관, 연평초중학교, 보건소 등의 시설이 있다. 반농반어(半農半漁)의 전형적인 농어촌 마을이다.\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;남쪽 해안과 북동쪽 탁진포를 제외한 모든 해안에는 해식애가 발달했고, 한라산의 기생화산인 쇠머리오름이 있을 뿐 섬 전체가 하나의 용암대지이며, 고도 30m 이내의 넓고 비옥한 평지이다. 주요 농산물은 고구마 · 보리 · 마늘 등이며, 가축 사육도 활발하다. 부근 해역에서는 고등어 · 갈치 · 전복 등이 많이 잡힌다.\n                </span>:\"\"))))))))))));\n\n        return (\n            <div>\n                {/* <h4>Tourintro {this.props.area}</h4> */}\n                <div id=\"mainImg\">\n                    {img}\n                    <br/>\n                </div>\n                {\n                    (this.type && this.type == \"search\")\n                    ? (\n                        \"\"\n                    )\n                    : (\n                        <div>\n                            <div className=\"tourIntroTitle\">\n                                <span className=\"tourIntroTitleContent\" style={{backgroundColor: 'white', color: '#3073BD'}}>\n                                    &nbsp;&nbsp;&nbsp;{intro}&nbsp;&nbsp;&nbsp;\n                                </span>\n                            </div>\n                            <div className=\"tourIntroContent\">\n                                {content}\n                            </div>\n                        </div>\n                    )\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default Tourintro;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/ShareBoardUpdateForm.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/theme.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/WaveBorder.js",["556","557","558","559"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core\";\nimport jeju1 from \"../../../image/jeju1.jpg\";\nimport jeju2 from \"../../../image/jeju2.jpg\";\nimport jeju3 from \"../../../image/jeju3.jpeg\";\nimport udo1 from \"../../../image/udo1.jpg\";\nimport Logo2 from \"../../../image/logo2.png\";\n\nconst styles = {\n    waves: {\n        position: \"absolute\",\n        width: \"100%\",\n        marginBottom: -7,\n        height: \"7vw\",\n        minHeight: \"7vw\",\n        // \"z-index\": \"-5\",\n        // bottom: \"-1000\",\n    },\n    \"@keyframes moveForever\": {\n        from: {transform: \"translate3d(-90px, 0, 0)\"},\n        to: {transform: \"translate3d(85px, 0, 0)\"}\n    },\n    parallax: {\n        \"& > use\": {\n            animation: \"$moveForever 4s cubic-bezier(0.62, 0.5, 0.38, 0.5) infinite\",\n            animationDelay: props => `-${props.animationNegativeDelay}s`\n        }\n    },\n    content: {\n        textAlign: \"center\",\n        backgroundColor: \"#2d55aa\",\n        // minHeight: \"75vh\",\n        // margin: \"-.1em 0 0 0\",\n        color: \"#ffdd55\",\n        fontSize: \"2em\",\n        fontWeight: \"300\",\n        userSelect: \"none\",\n        cursor: \"default\",\n        outline: \"none\",\n    },\n};\n\nfunction WaveBorder(props) {\n    const id = String(Math.random());\n    const {\n        className,\n        lowerColor,\n        upperColor,\n        classes,\n        animationNegativeDelay,\n        ...rest\n    } = props;\n    return (\n        <div className={className} style={{background: upperColor}} {...rest}>\n            {/* <img className=\"mainPhotoComp_img1\" src={jeju1}/> */}\n            <svg\n                className={classes.waves}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                xlink=\"http://www.w3.org/1999/xlink\"\n                viewBox=\"0 24 150 28\"\n                preserveAspectRatio=\"none\"\n                shapeRendering=\"auto\">\n                <defs>\n                    <path\n                        id={id}\n                        d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\"\n                    />\n                </defs>\n                <g className={classes.parallax}>\n                    <use href={`#${id}`} x=\"48\" y=\"6\" fill={lowerColor}/>\n                </g>\n            </svg>\n            {/*<div className=\"footerComp\">*/}\n            <div>\n                {/* <hr/> */}\n                <div className=\"content\">\n                    <br/>\n                    <img src={Logo2}\n                         style={{width: \"150px\"}}\n                         alt=\"logo2\"/>\n                    <br/>\n                    (주)멘도롱소랑 | 경기도 서초구 강남대로 459 (서초동 1300-34)<br/>\n                    사업자 번호 147-14-12345 | 전화번호:02-123-1234 | 팩스 02-1234-1234 | 이메일 help@naver.com\n                </div>\n            </div>\n        </div>\n    );\n}\n\nWaveBorder.propTypes = {\n    lowerColor: PropTypes.string.isRequired,\n    upperColor: PropTypes.string.isRequired,\n    classes: PropTypes.object.isRequired,\n    animationNegativeDelay: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(WaveBorder);\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/NaverLoginBtnComp.js",["560","561","562","563","564","565","566"],"import { getSuggestedQuery } from '@testing-library/react';\nimport React , { Component, useEffect, useState } from 'react';\nimport reactDOM from 'react-dom';\nimport GoogleLogin from 'react-google-login';\nimport { refreshTokenSetup } from \"./refreshToken\";\nimport { URL } from \"../../../redux/config\";\n\n//window에 있는 naver 비구조화 할당하여 선언한다.\n//window객체에서 뽑아야 하는 naver 파라미터는 global로\n//선언해주지않으면사용이불가한다.\nconst { naver } = window;\n\n\n\nexport default function NaverLoginBtnComp () {\n    \n    const [userData, setUserData] = useState({});\n    \n    const Login = () => {\n        Naver();\n        UserProfile();\n    }\n\n    useEffect(Login, []);\n\n    //client_id 와 redirect_uri 등록\n    //JavaScript용 라이브러리 동작에 필요한 기본정보를 설정하는 코드\n\n    //사용 가능한 Option\n    //color: 버튼 색상. white, green\n    //type: 버튼 타입. 1(버튼형), 2(작은 배너), 3(큰 배너)\n    //height: 배너 및 버튼 높이 (사용자 지정값 px)\n    const Naver = () => {\n        \n        \n\n        let naverLogin = new naver.LoginWithNaverId({\n            clientId: 'dPXRHN5aH3Xl6lXxm7bn',\n            callbackUrl: \"http://localhost:3000/login?naver=true\",\n            isPopup: false, // 팝업을 통한 연동처리 여부\n            loginButton: {color: \"green\", type: 3, height: 60},\n            callbackHandle: true\n            // callback 페이지가 분리되었을 경우에 callback 페이지에서는 callback처리를 해줄수 있도록 설정합니다\n        });\n        \n\n        // 설정정보를 초기화하고 연동을 준비\n        naverLogin.init();\n        console.log(naverLogin.getLoginStatus());\n\n        \n\n        \n\n        naverLogin.getLoginStatus((status) => {\n            if (status) {\n                console.log(status);\n                const email = naverLogin.user.getEmail();\n                const name = naverLogin.user.getNickName();\n                const profileImage = naverLogin.user.getProfileImage();\n                const birthday = naverLogin.user.getBirthday();\n                const id = naverLogin.user.getId();\n                const age = naverLogin.user.getAge();\n                const hp = naverLogin.user.getMobile();\n                console.log(\"네이버로그인상태 : \" + email, name, profileImage, birthday, id, age, hp);\n                \n            } else {\n                console.log('AccessToken이 올바르지 않습니다.');\n            }\n        });\n\n        window.addEventListener('load', function() {\n            naverLogin.getLoginStatus(function (status) {\n                if (status && naver) {\n                    // 필수적으로 받아야하는 프로필 정보가 있다면 callback처리 시점에 체크\n                    var email = naverLogin.user.getEmail();\n                    var name = naverLogin.user.getNickName();\n                    var profileImage = naverLogin.user.getProfileImage();\n                    var birthday = naverLogin.user.getBirthday();\n                    var id = naverLogin.user.getId();\n                    var age = naverLogin.user.getAge();\n                    var hp = naverLogin.user.getMobile();\n                    \n                    if( email == undefined || email == null ) {\n                        alert(\"이메일은 필수정보입니다. 정보제공을 동의해주세요.\");\n                        // 사용자 정보 재동의를 위하여 다시 네아로 동의페이지로 이동함\n                        naverLogin.reprompt();\n                        return;\n                    }\n                    \n                    alert(email);\n                    alert(name);\n                    alert(profileImage);\n                    alert(birthday);\n                    alert(id);\n                    alert(hp);\n                    alert(age+ \"세\");\n                    // 처리후 되돌아갈 곳\n                    // window.location.replace(\"http://localhost:3000/login?naver=true\");\n                    \n                } else {\n                    console.log(\"callback 처리에 실패하였습니다.\");\n                    console.log(status);\n                }\n            });\n        });\n    }\n\n    const UserProfile = () => {\n        window.location.href.includes('access_token') && GetUser();\n        function GetUser() {\n            console.log(\"window.location.href : \" + window.location.href);\n            const location = window.location.href.split('=')[1];\n            console.log(\"로케이션 : \" + location);\n            console.log(\"로케이션 0번째 : \" + window.location.href.split(\"=\")[0]);\n            console.log(\"로케이션 길이 : \" + window.location.href.split(\"=\").length);\n            for (var i=0; i < window.location.href.split(\"=\").length; i = i + 1)\n            {\n                console.log(window.location.href.split(\"=\")[i]);\n            }\n            var sharpPos = window.location.href.indexOf('#', 0);\n            console.log(\"# 위치 : \" + sharpPos);\n            \n            var sharpSplit = window.location.href.split(\"#\")[1];\n            var idxEq = sharpSplit.indexOf(\"=\");\n            var startPos = idxEq + 1;\n            var tokenEnd = sharpSplit.indexOf(\"&\");\n\n            const token = sharpSplit.substring(startPos, tokenEnd);\n            \n            console.log(\"token : \" + token);\n            fetch(`${URL}/account/sign-in`, {\n                method: \"GET\",\n                headers : {\n                    \"Content-type\" : \"application/json\",\n                    \"Authorization\" : token\n                },\n            })\n            .then(response => response.json())\n            .then(response => {\n                localStorage.setItem(\"access_token\", response.token);\n                localStorage.setItem(\"nickname\", response.nickname);\n                localStorage.setItem(\"image\",response.image);\n                setUserData({\n                    nickname : response.nickname,\n                    image : response.image\n                })\n            })\n            .catch(err => console.log(\"err : \", err));\n        }\n    };\n\n    \n\n    return (\n        //네이버 아이디로 로그인 버튼 생성\n        //자바스크립트용 라이브러리는 네이버 아이디로 로그인 버튼을\n        //자동으로 생성해주는 스크립트 기능이 포함되어있습니다.\n        //사용 가능한 로그인 버튼은 크기별 3가지 색상별 2가지씩\n        //총 6가지가 제공되며 \n        //각각 스크립트 내에 loginButton option을 통하여 세팅\n        <>\n        <div id=\"naverIdLogin\" onClick={Login}>\n            네이버로그인\n        </div>\n        </>\n    );\n}\n\n// class NaverLoginBtnComp extends Component\n// {\n//     // 백엔드에 정보를 저장하기 위해 state에 id, name, provider를 저장함\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             id: '',\n//             name: '',\n//             provider: '',\n//             accessToken: ''\n//         }\n//     }\n\n//     render() {\n        \n        \n        \n//         return (\n//             <>\n//             <br />\n//             <br />\n            \n//             </>\n//         );\n//     }\n// }\n\n// export default NaverLoginBtnComp;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/notice/BoardItem.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/FaceBookLoginBtnComp.js",["567"],"import FacebookLogin from \"react-facebook-login\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nclass FaceBookLoginBtnComp extends Component {\n\n    state = {\n        isLoggedIn: false,\n        id: '',\n        name: '',\n        email: '',\n    }\n\n    responseFacebook = response => {\n        console.log(response);\n\n        this.setState({\n            isLoggedIn:true,\n            id: response.id,\n            name: response.name,\n            email: response.email,\n        });\n    };\n\n    componentClicked = () => console.log('clicked');\n\n    render() {\n\n        let fbContent;\n\n        if(this.state.isLoggedIn) {\n            fbContent = (\n                <div>\n                    <h2>{this.state.name}</h2>\n                    Email : {this.state.email}\n                </div>\n            );\n        }\n        else {\n            fbContent = (\n                <FacebookLogin\n                    appId=\"513629929622627\"\n                    autoLoad={false} // 실행과 동시에 자동으로 로그인 팝업창이 뜸\n                    fields=\"name,email.picture\" // 어떤정보를 받아올지 입력하는 필드\n                    scope=\"public_profile,user_friends\"\n                    onClick={this.componentClicked} // this.바인딩 추가\n                    callback={this.responseFacebook} // this.바인딩 추가\n                />\n            );\n        }\n\n        return (\n            <div>\n                {fbContent}\n            </div>\n        );\n    }   \n}\n\nexport default FaceBookLoginBtnComp;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/Modal.js",["568"],"import React, { Component,useState } from 'react';\nimport './Modal.css'\n\nclass Modal extends Component {\n    render() {\n        // 열기, 닫기, 모달 헤더 텍스트를 부모로부터 받아옴\n        const { open, close, header } = this.props;\n\n        return (\n            <div className={ open ? 'openModal modal': 'modal' }>\n                { open ? (\n                    <section>\n                        <header>\n                            { header }\n                            <button className=\"close\" onClick={close} > &times; </button>\n                        </header>\n                        <main>\n                            {this.props.children}\n                        </main>\n                        {/* <footer>\n                            <button className=\"close\" onClick={close}> 댓글목록 </button>\n                        </footer> */}\n                    </section>\n                ) : null }\n            </div>\n        )\n    }\n}\n\nexport default Modal;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/ShareReview.js",["569","570"],"import React, { Component,useState } from 'react';\nimport axios from \"axios\";\nimport {URL} from '../../../redux/config';\nimport ReviewItem from './ReviewItem';\n\nclass ShareReview extends Component {\n    constructor(props){\n        super(props);\n\n        this.state={\n            listData:[]\n        }\n        this.regroup = this.props.regroup;\n    }\n\n     getList=()=>{\n        let url = URL + \"/share/list\";\n\n        axios.get(url)\n        .then(res=>{\n            this.setState({\n                listData: res.data\n            })\n          })\n\n     }\n\n    render() {\n        return (\n            <div>\n               {\n                    this.state.listData.map((row,idx)=>(\n                        <ReviewItem row={row} key={idx} list={this.getList.bind(this)}\n                            history={this.props.history}/>\n                    ))\n                 }\n            </div>\n        )\n    }\n}\n\nexport default ShareReview;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/ReviewItem.js",["571","572","573","574","575"],"import React, {Component, useState} from 'react';\nimport {actionType, URL} from \"../../../redux/config\";\nimport axios from \"axios\";\nimport store from \"../../../redux/store\";\n\nclass ReviewItem extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            saveType: \"\",\n        }\n\n    }\n\n    onTriggerInput = (type = null) => {\n\n        const {row} = this.props;\n        var className = `.input_answer_${row.regroup}_${row.relevel}_${row.restep}`;\n        console.log(className);\n\n        let divInput = document.querySelector(className);\n\n        if (this.state.saveType == type || type == null) {\n            if (this.state.isOpen) {\n                divInput.style.display = \"none\";\n                this.setState({\n                    isOpen: false,\n                });\n            } else {\n                divInput.style.display = \"block\";\n                this.setState({\n                    isOpen: true,\n                    saveType: type,\n                });\n            }\n        } else {\n            divInput.style.display = \"block\";\n            this.setState({\n                isOpen: true,\n                saveType: type,\n            });\n        }\n    }\n\n    onSaveButton = () => {\n        console.log(this.state.saveType);\n        if (this.state.saveType == \"insert\") {\n            this.onInsertSubAnswer();\n        } else if (this.state.saveType == \"update\") {\n            this.onUpdateSubAnswer();\n        }\n    }\n\n    onInsertSubAnswer = () => {\n        // 리뷰 대댓글 추가.\n        let num = this.props.row.num;\n        let regroup = this.props.row.regroup;\n        let relevel = this.props.row.relevel;\n        let restep = this.props.row.restep;\n        let content = this.refs.content.value;\n        let star = 0;\n        let url = URL + \"/share/insert\" +\n            \"?\" +\n            \"relevel=\" + relevel +\n            \"&restep=\" + restep +\n            \"&regroup=\" + regroup;\n        let data = {\n            num: num,\n            // regroup: regroup,\n            // relevel: relevel,\n            // restep: restep,\n            content: content,\n            star: star,\n        }\n\n        console.log(url, data);\n\n        axios.post(url, data\n        ).then(res => {\n            console.log(\"onInsertAnswer res\", res);\n            store.dispatch({\n                type: actionType.shareBoardUpdate,\n            });\n            this.onTriggerInput();\n            this.refs.content.value = \"\";\n        }).catch(err => {\n            console.log(\"onInsertAnswer err\", err);\n        })\n    }\n\n    onDeleteSubAnswer = () => {\n        let num = this.props.row.num;\n        let regroup = this.props.row.regroup;\n        let url = URL + \"/share/deleteanswer\" +\n            \"?num=\" + num;\n\n        console.log(\"onDeleteData\", url);\n\n        if (window.confirm(\"삭제하시겠습니까?\")) {\n            axios.post(url\n            ).then(res => {\n                console.log(\"onDeleteData() res\", res);\n                store.dispatch({\n                    type: actionType.shareBoardUpdate,\n                });\n                // this.props.history.push(\"/share\");\n            }).catch(err => {\n                console.log(\"onDeleteData() err\", err);\n            });\n        }\n    }\n\n    onUpdateSubAnswer = () => {\n        let num = this.props.row.num;\n        let content = this.refs.content.value;\n        let url = URL + \"/share/updateanswer\" +\n            \"?num=\" + num +\n            \"&content=\" + content;\n        console.log(\"onUpdateSubAnswer\", url);\n\n        if (window.confirm(\"수정하시겠습니까?\")) {\n            axios.post(url\n            ).then(res => {\n                console.log(\"onUpdateSubAnswer() res\", res);\n                store.dispatch({\n                    type: actionType.shareBoardUpdate,\n                });\n                // this.props.history.push(\"/share\");\n                this.refs.content.value = \"\";\n                this.onTriggerInput();\n            }).catch(err => {\n                console.log(\"onUpdateSubAnswer() err\", err);\n            });\n        }\n    }\n\n    render() {\n        const {row} = this.props;\n\n        return (\n            <div style={{marginLeft: `calc(30px*${row.relevel})`}}>\n                {row.num} / {row.photo} / {row.regroup} / {row.relevel} / {row.restep} / 내용 :\n                <div style={{border: \"1px solid\", margin: \"5px\"}}>\n                    {row.content}\n                </div>\n                <button type=\"button\"\n                        onClick={this.onTriggerInput.bind(this, \"insert\")}\n                        disabled={row.content.includes(\"삭제된 글입니다.\") ? true : false}\n                >댓글 쓰기\n                </button>\n                &nbsp;\n                <button type=\"button\"\n                        onClick={this.onTriggerInput.bind(this, \"update\")}\n                        disabled={row.content.includes(\"삭제된 글입니다.\") ? true : false}\n                >댓글 수정\n                </button>\n                &nbsp;\n                <button type=\"button\"\n                        onClick={this.onDeleteSubAnswer.bind(this)}\n                        disabled={row.content.includes(\"삭제된 글입니다.\") ? true : false}\n                >댓글 삭제\n                </button>\n\n                {/*댓글 입력창 on/off*/}\n                <div style={{display: 'none'}} className={`input_answer_${row.regroup}_${row.relevel}_${row.restep}`}>\n                    <textarea placeholder=\"댓글을 입력하세요\"\n                              style={{width: '800px', height: '100px'}}\n                              ref=\"content\"\n                    />\n                    <button type=\"button\"\n                            onClick={this.onSaveButton.bind(this)}\n                    >저장\n                    </button>\n                </div>\n                <hr/>\n            </div>\n        )\n    }\n}\n\nexport default ReviewItem;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/BoardSample.js",["576","577","578","579","580","581","582","583","584","585","586","587","588","589"],"import React, {useState, useEffect} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport axios from 'axios';\nimport {URL} from \"../../../redux/config\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {red} from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\n\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport BoardSampleItem from './BoardSampleItem';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // maxWidth: 345\n    },\n    media: {\n        height: 0,\n        paddingTop: \"56.25%\" // 16:9\n    },\n    expand: {\n        transform: \"rotate(0deg)\",\n        marginLeft: \"auto\",\n        transition: theme.transitions.create(\"transform\", {\n            duration: theme.transitions.duration.shortest\n        })\n    },\n    expandOpen: {\n        transform: \"rotate(180deg)\"\n    },\n    avatar: {\n        backgroundColor: red[500]\n    },\n    paperRoot: {\n        display: \"flex\",\n        // flexWrap: \"wrap\",\n        overflow:\"scroll\",\n        \"& > *\": {\n            flexShrink:\"0\",\n            margin: \"10px\",\n            padding: \"10px\",\n            width: \"300px\",\n            height: \"300px\",\n            overflow: \"hidden\",\n            textAlign: \"center\",\n            objectFit: \"cover\"\n        }\n    }\n}));\n\nexport default function BoardSample(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n    // console.log(props);\n    // photos, setPhotos 비구조화 할당\n    const [photos, setPhotos] = useState([]);\n\n    useEffect(() => {\n\n        searchApi();\n    },[]);\n\n    // 통신 메서드\n    function searchApi() {\n        const url = URL + '/spot/list?start=0&perPage=5&label2=' + props.location;\n        axios.get(url)\n        .then(function(response) {\n            console.log(response.data);\n            setPhotos(response.data);\n            console.log(\"성공\");\n        })\n        .catch(function(error) {\n            console.log(\"실패\");\n        })\n    }\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    return (\n        <div>\n            <h1>{props.location}</h1>\n            <hr/>\n            <div className={classes.paperRoot}>\n                {photos.map((row)=>(\n                    <BoardSampleItem row={row}/>\n                ))}\n                {/* <Paper elevation={3}>\n                </Paper>\n                <Paper elevation={3}>\n                </Paper>\n                <Paper elevation={3}>\n                </Paper>\n                <Paper elevation={3}>\n                </Paper> */}\n            </div>\n        </div>\n    )\n}\n\n\n/*\n<Card className={classes.root}>\n                    <CardHeader\n                        avatar={\n                            <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                                YK\n                            </Avatar>\n                        }\n                        action={\n                            <IconButton aria-label=\"settings\">\n                                <MoreVertIcon/>\n                            </IconButton>\n                        }\n                        title=\"Shrimp and Chorizo Paella\"\n                        subheader=\"September 14, 2016\"\n                    />\n                    <CardMedia\n                        className={classes.media}\n                        image=\"/static/images/cards/paella.jpg\"\n                        title=\"Paella dish\"\n                    />\n                    <CardContent>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            This impressive paella is a perfect party dish and a fun meal to cook\n                            together with your guests. Add 1 cup of frozen peas along with the\n                            mussels, if you like.\n                        </Typography>\n                    </CardContent>\n                    <CardActions disableSpacing>\n                        <IconButton aria-label=\"add to favorites\">\n                            <FavoriteIcon/>\n                        </IconButton>\n                        <IconButton aria-label=\"share\">\n                            <ShareIcon/>\n                        </IconButton>\n                    </CardActions>\n                </Card>\n */\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/MySchedule.js",["590","591"],"import React, {Component} from 'react'\nimport './style/RCA.css';\nimport moment from 'moment';\n// import Header from './Header';\nimport Calendar from './Calendar';\nimport axios from 'axios';\nimport {URL} from \"../../../redux/config\";\n\n\nclass MySchedule extends Component {\n\n    constructor(props) {\n        super(props);\n        console.log(\"MySchedule constructor\", props);\n\n    }\n      state={\n        calendarYM : moment(),\n        today : moment(),\n        selected : moment().format(\"YYYY-MM-DD\"),\n        list:[]\n\n      }\n\n      static defaultProps = {\n        clickFn : ()=>{}\n    }\n\n    \n//   getData=()=>{\n//     //  let url='http://ec2-3-36-28-35.ap-northeast-2.compute.amazonaws.com:8080/FinalProjectSpringBoot8/wish/list?memId=regegw';\n//     let url = URL + \"/wish/list?memId=sanghee\";\n\n//     axios.get(url)\n//     .then(response=>{\n//       console.log(\"캘린더 출력 : \" + response.data); \n//       this.setState({\n//         list: response.data\n//         // memId:response.data.memId,\n//         // spotId:response.data.spotId,\n//         // shareNum:response.data.shareNum,\n//         // content:response.data.content,\n//         // wishday:response.data.wishday,\n//         // aroundId:response.data.aroundId,\n//         // title:response.data.title,\n//         // subject:response.data.subject\n//         // category:response.data.content.split(\",\")[0]\n\n//       });\n//     }).catch(err=>{\n//       console.log(\"캘린더 목록 오류:\"+err);\n//     })\n//   }\n\n//   componentDidMount(){\n//     this.getData();\n//   }\n\n\n    moveMonth = (month) => {\n        this.setState({\n            calendarYM : this.state.calendarYM.add(month,'M')\n        })\n    }\n\n    changeSelected = (clickedDate) =>{\n\n        if(moment(clickedDate).isSame(this.state.selected,'day')){\n            this.props.clickFn(clickedDate);\n            return;\n        }\n\n        this.setState({\n            selected : clickedDate\n        })\n\n        this.props.clickFn(clickedDate)\n        \n        if(moment(clickedDate).isBefore(this.state.calendarYM,'month')){\n            this.moveMonth(-1)\n        }else if(moment(clickedDate).isAfter(this.state.calendarYM,'month')){\n            this.moveMonth(1)\n        }\n    }\n    render(){\n        return(\n            <div className=\"test-layout\">\n               <div className=\"RCA-app-container\">\n{/*                \n                <Header calendarYM={this.state.calendarYM.format(\"YYYY년 MM월\")}\n                        today={this.state.today.format(\"현재: YYYY - MM - DD\")}\n                        \n                        moveMonth={this.moveMonth}/>\n                     */}\n                     \n                    <Calendar YM={this.state.calendarYM.format(\"YYYY-MM-DD\")}\n                        selected={this.state.selected}\n                        changeSelected={this.changeSelected}\n                    />\n                </div>\n        )\n    \n    </div>\n        )\n    }\n    \n\n}\n\nexport default MySchedule;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/Calendar.js",["592","593","594","595","596","597","598","599","600","601"],"import React, { Component } from 'react'\nimport moment from 'moment';\nimport {FaUtensils,FaMugHot,FaHotel,FaHamburger} from 'react-icons/fa';\nimport axios from 'axios';\nimport {URL} from \"../../../redux/config\";\nimport DayItem from './DayItem';\n//import Subject from './Subject';\n\nclass DateHeader extends Component {\n\n  dateToArray = (dates) => {\n    if (Array.isArray(dates)) {\n      return dates\n    } else if (typeof dates === \"string\") {\n      return dates.split(',')\n    } else {\n      return [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"]\n    }\n  }\n\n  mapArrayToDate = (dateArray) => {\n    try {\n      if (dateArray.length !== 7) {\n        console.log(new Error(\"dates props must be had 7 date\"))\n        dateArray = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"]\n      }\n\n      return dateArray.map((date, index) => {\n        const className = () => {\n          let className = \"RCA-calendar-date-component\";\n          if (index === 0) {\n            return className + \" date-sun\"\n          } else if (index === 6) {\n            return className + \" date-sat\"\n          } else {\n            return className + \" date-weekday\"\n          }\n        }\n        return (\n          <div className={className()} key={\"RCA-header-\" + date}>\n            {date}\n            \n          </div>\n        )\n      })\n    } catch{\n      throw new Error(\"date must be string or component\")\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"RCA-calendar-date-header\">\n        {this.mapArrayToDate(this.dateToArray(this.props.dates))}\n        \n      </div>\n    )\n  }\n}\n\nclass Week extends Component {\n\n\n  constructor(props){\n    super(props);\n\n    \n\n    this.ym = this.props.ymOfThisCalendar;\n    this.state={\n       list:[]\n       \n       \n    };\n  }\n\n  getData=()=>{\n\n    let url = URL + \"/wish/list?memId=sanghee\";\n\n    axios.get(url)\n    .then(response=>{\n      //console.log(\"캘린더 출력 : \" + response.data); \n      this.setState({\n        list: response.data\n\n      });\n    }).catch(err=>{\n      console.log(\"캘린더 목록 오류:\"+err);\n    })\n  }\n\n  \n\n  componentDidMount(){\n    this.getData();\n    \n  }\n\n  \n\n  \n\n  Days = (firstDayFormat,weekIndex) => {\n    const _days = [];\n    \n\n    for (let i = 0; i < 7; i++) {\n\n      const Day = moment(firstDayFormat).add(i,'d');\n      _days.push({\n        yearMonthDayFormat: Day.format(\"YYYY-MM-DD\"),\n        getYear: Day.format('Y'),\n        getMonth: Day.format('M'),\n        getDay: Day.format('D'),\n        isHolyDay: false,\n        weekIndex\n      });\n    }\n\n    return _days;\n  }\n\n  mapDaysToComponents = (Days,calendarMonthYear ,selectedDayFormat ,fn = () => { }) => {\n\n    const thisMonth = moment(calendarMonthYear); \n\n    return Days.map((dayInfo, i) => {\n\n      let className = \"date-weekday-label\";\n\n      if (!thisMonth.isSame(dayInfo.yearMonthDayFormat,'month')) {\n        className = \"date-notThisMonth\";\n      } else if (i === 0) {\n        className = \"date-sun\"\n      }else if(i===6){\n        className =\"date-sat\"\n      }\n\n      if(moment(dayInfo.yearMonthDayFormat).isSame(selectedDayFormat,'day')){\n        className = \"selected\"\n      }\n\n      const category=this.state.memId;\n      const day=this.props.ymOfThisCalendar+\"-\"+dayInfo.getDay;\n      const wishday=this.statewishday;\n    //   console.log(category);\n\n        var date = new Date(); \n        var year = date.getFullYear(); \n        var month = new String(date.getMonth()); \n        var days = new String(date.getDate());\n        // var today = year + \"-\" + month + \"-\" + days;\n        var today = new Date(year, month, days);\n        var selectDay = new Date(dayInfo.getYear, dayInfo.getMonth-1, dayInfo.getDay);\n        var betweenDay = selectDay.getTime() - today.getTime();\n        // console.log(betweenDay);\n\n       return(\n          <div className={\"RCA-calendar-day \" + className} key={`RCA-${dayInfo.weekIndex}-${i}-day`}onClick={() => fn(dayInfo.yearMonthDayFormat)}>\n            <label className=\"RCA-calendar-day-label\">\n              {dayInfo.getDay}\n            \n            </label>\n            {this.state.list.map((row,idx)=>(\n                <DayItem row={row} key={idx} className={className} dayInfo={dayInfo} i={i} fn={fn}></DayItem>\n                \n            ))}\n            \n              \n\n              \n            </div>\n            \n            \n       )\n\n       \n      })    \n        \n    }\n\n\n\n  render() {\n    return (\n      <div className=\"RCA-calendar-week\">\n        \n        {this.mapDaysToComponents(this.Days(this.props.firstDayOfThisWeekformat,this.props.weekIndex),\n        this.props.ymOfThisCalendar,\n        this.props.selected,\n        this.props.fn\n        )}\n        \n      </div>\n    )\n  }\n}\n\nclass Calendar extends Component {\n\n  Weeks = (monthYear,selected,clickFn) => {\n    const firstDayOfMonth = moment(monthYear).startOf('month');\n    const firstDateOfMonth = firstDayOfMonth.get('d');\n\n    const firstDayOfWeek = firstDayOfMonth.clone().add(-firstDateOfMonth,'d');\n\n    const _Weeks = [];\n\n    for (let i = 0; i < 6; i++) {\n      _Weeks.push((\n        <Week key={`RCA-calendar-week-${i}`}\n        weekIndex={i}\n        ymOfThisCalendar={firstDayOfMonth.format(\"YYYY-MM\")}\n        firstDayOfThisWeekformat={firstDayOfWeek.clone().add(i * 7,'d').format(\"YYYY-MM-DD\")}\n        selected={selected}\n        fn={clickFn}\n        />\n      ))\n    }\n    return _Weeks\n  }\n\n\n  render() {\n    return (\n      <div className=\"RCA-calendar-container\">\n        <DateHeader dates={\"Sun, Mon, Tue, Wed, Thu, Fri, Sat\"} />\n        {this.Weeks(this.props.YM,this.props.selected,this.props.changeSelected)}\n      </div>\n    )\n  }\n}\n\nexport default Calendar;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/DayItem.js",["602","603","604","605","606","607","608"],"import React,{Component} from 'react';\nimport {FaUtensils,FaMugHot,FaHotel,FaHamburger} from 'react-icons/fa';\nimport moment from 'moment';\nimport './style/RCA.css';\n//import Subject from './Subject';\n\nclass DayItem extends Component {\n\n    constructor(props){\n        super(props);\n\n    }\n\n    // componentWillUnmount(){\n    //     console.log(\"Day Item willmount\");\n    // }\n\n    spot(){\n        let url = URL + \"/spot/select?contentsid=\" + this.props.row.spotId;\n    }\n\n    render() {\n        \n        const {row} = this.props;\n        \n        var dayInfo = this.props.dayInfo;\n        var selectDay = new Date(dayInfo.getYear, dayInfo.getMonth-1, dayInfo.getDay);\n        var wishday=\"\"+row.wishday;\n        var y = wishday.substr(0,4);\n        var m = wishday.substr(5,2);\n        var d = wishday.substr(8,2);\n        var aroundId=row.aroundId;\n        var category=row.content;\n        \n       \n        var today = new Date(y, m-1, d);\n        var betweenDay = selectDay.getTime() - today.getTime();  // 이게 0이여야 해당하는 날짜랑 wishday랑 맞는거에요!\n        var tag = betweenDay==0?\n        <div>\n            {/* <div className=\"category\">{wishday===day &&category==='카페'?<FaMugHot></FaMugHot>:\n                    wishday===day &&category==='숙박'?<FaHotel></FaHotel>:wishday===day &&category==='음식점'?\n                <FaHamburger></FaHamburger>:''}</div> */}\n                {aroundId!==null?category.split(\",\")[0]===\"음식점\"\n                ?<FaHamburger></FaHamburger>:category.split(\",\")[0]===\"숙박\"?\n                <FaHotel></FaHotel>:<FaMugHot></FaMugHot>:''}{aroundId}\n               \n            <div className=\"title\">\n                \n                \n\n                \n                </div>\n                <br/>\n                 \n        </div>\n        :\"\";\n\n        return (\n            <div>\n                {tag}\n            </div>\n        );\n    }\n}\n\nexport default DayItem;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/AroundModal.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/UseModal.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/Header.js",["609","610","611"],"import React, { Component } from 'react'\nimport moment from 'moment';\nimport {IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\n\n\n class Header extends React.Component {\n    constructor(props){\n        super(props);\n        \n    }\n    render() {\n        // const [getMoment, setMoment]=useState(moment());     \n        // const today = getMoment;   \n        return (\n            <div className=\"RCA-header-container\">\n                <h2 className=\"RCA-header-calendarYM RCA-header-middle\">\n                    {this.props.calendarYM}\n                </h2>\n                <h3 className=\"RCA-header-today RCA-header-middle\">\n                    {this.props.today}\n                </h3>\n                <ul className=\"RCA-header-buttons RCA-header-middle\">\n                    <li>\n                    <i className=\"move-button left icon\" onClick={()=>{this.props.moveMonth(-1)}}>\n                        <IoIosArrowBack />   \n                    </i>\n                    </li>\n                    <li className=\"move\">\n                        이동\n                    </li>\n                    <li>\n                    <i className=\"move-button right icon\" onClick={()=>{this.props.moveMonth(1)}}>\n                        <IoIosArrowForward />\n                    </i>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n}\n\n\nexport default Header;\n\n\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/notice/BoardForm.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/notice/NoticeContent.js",["612"],"import axios from 'axios';\nimport React,{Component}  from 'react';\nimport {URL} from '../../../redux/config';\n\nclass NoticeContent extends Component\n{\n    constructor({match})\n    {\n        super();\n        this.subject=match.params.subject;\n        // this.state={selectData:''}\n        this.content=match.params.content;\n        this.state={selectData:''}\n    }\n    onSelectData=()=>{\n        let url= {URL} + \"/notice/list\";\n    axios.get(url)\n    .then(res=>{\n        this.setState({\n            selectData:res.data\n        })\n    })\n}\n\ncomponentWillMount() {\n    console.log(\"content willmount\");\n    this.onSelectData();\n}\n    render(){\n        let url=document.getElementById(\"url\").textContent\n        const {selectData}=this.state;\n\n\n        return (\n            <div>\n                <table className=\"table table-bordered\"\n                style={{width:'400px'}}>\n                    <caption><h3>{selectData.title}</h3></caption>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <b>작성자:{selectData.subject}</b>\n                                &nbsp;&nbsp;\n                               <pre>내용:{selectData.content}</pre>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colSpan=\"2\" align='center'>\n                                <button type=\"button\" className=\"btn\n                                btn-success btn-sm\"\n                                style={{marginLeft:'100px',width:'100px'}}\n                                onClick=\"\">수정</button>\n                                <button type=\"button\" className=\"btn\n                                btn-success btn-sm\"\n                                style={{marginLeft:'100px',width:'100px'}}\n                                onClick=\"\">삭제</button>\n\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n\n            </div>\n        )\n    }\n}\n\nexport default NoticeContent;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/AroundModalDetail.js",["613","614","615","616","617","618","619","620","621"],"import React, { useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {URL} from '../../../redux/config';\nimport './kakaomap.css';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport UseModal from './UseModal';\nimport {Route, Link} from \"react-router-dom\";\n\nconst AroundModalDetail=(props)=> {\n\n  const [alertOpen, setAlertOpen] = useState(false);\n  const [alertSetOpen, setAlertSetOpen] = useState(false);\n  const [aroundwishday, setWishday] = useState('');\n  const [aroundwishtime, setWishtime] = useState('');\n\n    const {isShowing, toggle} = UseModal();\n\n    const insertAround=()=>{\n        let url = URL + \"/wish/insertaround\";\n        let memId = 'sanghee'; // 나중에 로그인 아이디로 넣기\n        let category = props.category=='FD6'?'음식점':props.category=='CE7'?'카페':'숙박';\n        let aroundId = props.wishTitle;\n        let content = category + \",\" + props.wishContent;\n        let wishday = aroundwishday;\n        let wishtime = aroundwishtime;\n\n        // console.log(wishday);\n        if(wishday == '' || wishtime == '')\n            alert(\"날짜와 시간을 모두 선택해주세요.\");\n        else{\n            axios.post(url, {memId, aroundId, content, wishday, wishtime})\n            .then(res=>{\n              toggle();\n              handleAlertOpen();\n            }).catch(err=>{\n                console.log(\"aroundwish insert 오류 : \" + err);\n            })\n        }\n    }\n\n     // alert 함수\n     const handleAlertOpen = () => {\n      setAlertOpen(true);\n    };\n\n     const handleAlertClose = () => {\n      setAlertOpen(false);\n    };\n\n    const wishdayChange=(e)=>{\n        setWishday(e.target.value);\n    }\n\n    const wishtimeChange=(e)=>{\n      setWishtime(e.target.value);\n  }\n\n    return (\n      <div>\n          <div className=\"aroundpaper\">\n            <span className=\"aroundmodalTitle\">일정 추가</span><br/>\n              🏰&nbsp;&nbsp;{props.wishTitle}<br/>\n              🗺&nbsp;&nbsp;{props.wishContent}<br/>\n              🗓&nbsp;&nbsp;여행 날짜\n              <input type=\"date\" class=\"form-control form-control-sm\" value={aroundwishday} onChange={wishdayChange}></input>\n              ⏰&nbsp;&nbsp;예정 시간\n              <input type=\"time\" class=\"form-control form-control-sm\" value={aroundwishtime} onChange={wishtimeChange}></input><br/>\n              <div style={{textAlign: 'center'}}>\n                <button type=\"button\" class=\"btn btn-warning aroundmodalBtn\" onClick={insertAround}><b>추가</b></button>\n            </div>\n          </div>\n\n        \n                    <Dialog\n                      open={alertOpen}\n                      onClose={handleAlertClose}\n                      aria-labelledby=\"alert-dialog-title\"\n                      aria-describedby=\"alert-dialog-description\"\n                  >\n                      <DialogTitle id=\"alert-dialog-title\">{\"일정 추가 완료\"}</DialogTitle>\n                      <DialogContent>\n                      <DialogContentText id=\"alert-dialog-description\">\n                          Mypage로 이동하여 확인하시겠습니까?\n                      </DialogContentText>\n                      </DialogContent>\n                      <DialogActions>\n                      <Button onClick={handleAlertClose} color=\"primary\">\n                          NO\n                      </Button>\n                      <Link to=\"/mypage\" style={{marginRight: '10px'}} color=\"primary\">\n                        YES\n                      </Link>\n                      </DialogActions>\n                  </Dialog>\n      \n        </div>\n      \n      );\n}\n\nexport default AroundModalDetail;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/SearchResultComp.js",["622","623"],"import React, {Component} from \"react\";\nimport store from \"../../../redux/store\";\nimport {actionType, mainViewType, URL} from \"../../../redux/config\";\nimport axios from \"axios\";\nimport Tourintro from \"../tour/Tourintro\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Box from \"@material-ui/core/Box\";\nimport ItemComp from \"../tour/ItemComp\";\nimport PageComp from \"../tour/PageComp\";\n\nclass SearchResultComp extends Component {\n\n    constructor(props) {\n        super(props);\n\n        console.log(props);\n\n        let {category, searchVal} = store.getState().mainSearch;\n\n        this.state = {\n            area: \"jeju\", //props.match.params.name,\n            spotList: [],\n            pageNum: props.match.params.pageNum,\n            category: category,\n            searchVal: searchVal,\n        }\n\n        this.currentPage = this.state.pageNum;\n        this.totalCount = 0;\n        this.perPage = 12; // 한페이지당 보여질 글의 갯수\n        this.perBlock = 5; // 한블럭당 출력할 페이지의 갯수\n        this.totalPage = 0; // 총 페이지의 갯수\n        this.startPage = 0; // 각 블럭당 시작 페이지 번호\n        this.endPage = 0; // 각 블럭당 끝페이지 번호\n        this.start = 0; // 각 블럭당 불러올 글의 시작번호\n        this.end = 0; // 각 블럭당 글의 끝번호\n        this.no = 0; // 각 페이지에서 출력할 시작번호\n\n        this.select = category;\n    }\n\n\n    /*\n    @GetMapping(\"/spot/searchlist\")\n    public List<SpotlistDto> getSearchList(@RequestParam int start, @RequestParam int perPage,\n                                           @RequestParam String category, String search) {\n        System.out.println(\"start:\" + start);\n        System.out.println(\"perPage:\" + perPage);\n        System.out.println(\"category:\" + category);\n        System.out.println(\"search:\" + search);\n        return mapper.getSearchList(start, perPage, category, search);\n    }\n     */\n    getList = () => {\n        // 나머지가 있을 경우에는 1페이지 더 추가 (예 : 총글수가 9이고 한페이지당 2개씩 볼 경우)\n        this.totalPage = Math.floor(this.totalCount / this.perPage)\n            + (this.totalCount % this.perPage > 0 ? 1 : 0);\n\n        // 시작페이지와 끝페이지 구하기\n        this.startPage = Math.floor((this.currentPage - 1) / this.perBlock) * this.perBlock + 1;\n        this.endPage = this.startPage + this.perBlock - 1;\n\n        // 마지막 블럭은 endPage를 totalPage로 해놔야 한다.\n        if (this.endPage > this.totalPage) {\n            this.endPage = this.totalPage;\n        }\n\n        // mysql은 첫 글이 0번이므로 +1 안해도됨 (오라클은 1번)\n        this.start = (this.currentPage - 1) * this.perPage;\n        this.no = this.totalCount - (this.currentPage - 1) * this.perPage;\n\n        let url = URL + \"/spot/searchlist\" +\n            \"?start=\" + this.start +\n            \"&perPage=\" + this.perPage +\n            \"&category=\" + this.select +\n            \"&search=\" + this.state.searchVal;\n\n        console.log(url);\n\n        axios.get(url\n        ).then(res => {\n            console.log(\"res:\", res);\n            this.setState({\n                spotList: res.data\n            });\n        }).catch(err => {\n            console.log(\"spotlist getList 오류 : \", err);\n        });\n    }\n\n\n    /*\n        @GetMapping(\"/spot/searchcount\")\n        public int getSearchTotalCount(@RequestParam String category, @RequestParam String search) {\n            return mapper.getSearchTotalCount(category, search);\n        }\n     */\n    getTotalCount = () => {\n        let url = URL + \"/spot/searchcount\" +\n            \"?category=\" + this.select +\n            \"&search=\" + this.state.searchVal;\n\n        axios.get(url\n        ).then(res => {\n            console.log(\"res:\", res);\n            this.totalCount = res.data;\n            this.getList();\n        }).catch(err => {\n            console.log(\"err:\", err);\n        });\n    }\n\n\n    componentWillMount() {\n        window.scrollTo(0, 0);\n        this.getTotalCount();\n    }\n\n\n    selectChange = (e) => {\n        this.select = e.target.value;\n        this.getList();\n    }\n\n\n    render() {\n        // console.log(\"TourPageComp render()\", this.props);\n        return (\n            <div>\n                <Tourintro area={this.state.area}\n                           type=\"search\"\n                />\n                <br/><br/><br/>\n\n                {/* list 출력 */}\n                <div className=\"tourIntroTitle\">\n                    <span className=\"tourIntroTitleContent\" style={{backgroundColor: 'white', color: '#3073BD'}}>\n                        &nbsp;&nbsp;&nbsp;\"{this.state.searchVal}\" 의 검색 결과&nbsp;&nbsp;&nbsp;\n                    </span>\n                </div>\n                <div style={{width: '100%'}}>\n                    <FormControl id=\"selectTourList\">\n                        <InputLabel>category</InputLabel>\n                        <Select native\n                                value={this.select}\n                                onChange={this.selectChange.bind(this)}\n                        >\n                            <option value=\"all\">All</option>\n                            <option value=\"area\">Location</option>\n                            <option value=\"spot\">Spot</option>\n                            <option value=\"tag\">Tag</option>\n                        </Select>\n                    </FormControl>\n                    <br/><br/>\n\n                    <Box display=\"flex\"\n                         flexWrap=\"wrap\"\n                         p={1}\n                         m={1}\n                         bgcolor=\"background.paper\"\n                         justifyContent=\"center\"\n                         css={{maxWidth: '100%'}}\n                    >\n                        {this.state.spotList.map((row, idx) => (\n                            <ItemComp row={row}\n                                      key={idx}\n                                      history={this.props.history}\n                                      getList={this.getList.bind(this)}\n                            ></ItemComp>\n                        ))}\n                    </Box>\n                </div>\n                <br/><br/>\n\n                {/* 페이징 */}\n                <PageComp currentPage={this.currentPage}\n                          startPage={this.startPage}\n                          endPage={this.endPage}\n                          totalPage={this.totalPage}\n                          area={this.state.area}\n                          type=\"search\"\n                          category={this.state.category}\n                          search={this.state.searchVal}\n                ></PageComp>\n            </div>\n        )\n    }\n}\n\nexport default SearchResultComp;\n\n/*\nexport default function SearchResultComp(props) {\n    console.log(\"SearchResultComp props\", props);\n    var mainSearch = store.getState().mainSearch;\n    console.log(mainSearch);\n    var category = mainSearch.category;\n    var searchVal = mainSearch.searchVal;\n    var searchResultDataList = mainSearch.searchResultDataList;\n    // console.log(searchResultDataList)\n\n    const getSearchResultDataList = () => {\n        return searchResultDataList.map((value, index) => {\n            return (\n                <div>\n                    {index} , {value.title}<br/>\n                </div>\n            )\n        });\n    }\n    return (\n        <div>\n            [{category}] {searchVal} 로 검색한 결과.<br/>\n            {getSearchResultDataList()}\n        </div>\n    );\n}\n*/\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/join/SubmitBtn.js",["624"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport useRipple from \"useripple\";\n\nimport './SubmitBtn.css'\n\nfunction SubmitBtn() {\n    const [addRipple, ripples] = useRipple({ background: \"orange\" })\n\n    return (\n        <div className=\"Example\" onClick={addRipple}>\n            회원가입\n            {ripples}\n        </div>\n    )\n}\n\nexport default SubmitBtn;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/join/SubmitBtn2.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/MyReview.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/MyWishlist.js",["625","626"],"import React, {Component} from \"react\";\nimport axios from 'axios';\nimport {URL} from \"../../../redux/config\";\n\nclass MyWishlist extends Component {\n\n    constructor(props) {\n        super(props);\n        console.log(\"MyWishlist constructor\", props);\n\n    }\n    render() {\n        console.log(\"MyWishlist render()\", this.props);\n\n        return (\n            <div>\n                나의 예약\n            </div>\n         )\n     }\n}\nexport default MyWishlist;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/ReviewList.js",["627","628"],"import React, {Component} from \"react\";\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport axios from 'axios';\nimport {URL} from '../../../redux/config';\nimport {Route, Link} from \"react-router-dom\";\n\nclass ReviewList extends Component {\n    updateLikes = () =>{\n        let url = URL + \"/spot/updatelikes?contentsid=\" + this.props.row.contentsid;\n\n        axios.get(url)\n            .then(res=>{\n                this.props.getList();\n            }).catch(err=>{\n                console.log(\"tourlist likes 업데이트 오류 : \" + err);\n            })\n    }\n    render() {\n        const {row}=this.props;\n        return (\n           \n                <TableRow style={{cursor: 'pointer'}}> \n                \n                <TableCell>{this.props.num}</TableCell>\n                <TableCell><img src={this.props.photo} alt=\"profile\"/></TableCell>\n                <TableCell> \n                    <Link to={`/tour/${this.props.contentsid}`}>\n                        {this.props.content}\n                    </Link>   \n                </TableCell>\n                <TableCell>{this.props.memNum}</TableCell>\n                <TableCell>{this.props.star}</TableCell>\n                <TableCell>{this.props.likes}</TableCell>\n                <TableCell>{this.props.writeday}</TableCell>\n                \n                </TableRow>\n           \n        );\n    }\n}\nexport default ReviewList;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/MakeLoginBtn.js",["629","630","631","632"],"import React,{Component} from 'react';\nimport { createMuiTheme, withStyles, makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { orange } from '@material-ui/core/colors';\n\nconst BootstrapButton = withStyles({\n    root: {\n      boxShadow: 'none',\n      textTransform: 'none',\n      fontSize: 16,\n      padding: '6px 12px',\n      border: '1px solid',\n      lineHeight: 1.5,\n      backgroundColor: '#0063cc',\n      borderColor: '#0063cc',\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n      '&:hover': {\n        backgroundColor: '#0069d9',\n        borderColor: '#0062cc',\n        boxShadow: 'none',\n      },\n      '&:active': {\n        boxShadow: 'none',\n        backgroundColor: '#0062cc',\n        borderColor: '#005cbf',\n      },\n      '&:focus': {\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n      },\n    },\n  })(Button);\n  \n  const ColorButton = withStyles((theme) => ({\n    root: {\n      color: theme.palette.getContrastText(orange[500]),\n      backgroundColor: orange[500],\n      '&:hover': {\n        backgroundColor: orange[700],\n      },\n    },\n  }))(Button);\n  \n  const useStyles = makeStyles((theme) => ({\n    margin: {\n      margin: theme.spacing(1),\n    },\n    outline: {\n      outline: 'none!important',\n    },\n  }));\n  \n  const theme = createMuiTheme({\n    palette: {\n      primary: orange,\n    },\n  });\n  \n  export default function CustomizedButtons(props) {\n    const classes = useStyles();\n    console.log(props);\n  \n    const parentOnLoginHandler = props.parentOnLoginHandler;\n    \n    return (\n      <div>\n        <Button variant=\"outlined\" color=\"primary\" type=\"button\" className={classes.outline}\n        onClick={parentOnLoginHandler}>\n                    Sign in\n        </Button>\n      </div>\n    );\n  }\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/BoardSampleItem.js",["633","634","635","636"],"import React, {Component} from \"react\";\nimport axios from 'axios';\nimport {Route, Link} from \"react-router-dom\";\nimport {URL} from \"../../../redux/config\";\nimport Paper from \"@material-ui/core/Paper\";\n\nclass BoardSampleItem extends Component {\n\n    render() {\n        const {row} = this.props;\n        return (\n            <Paper elevation={3}>\n                {row.title}\n                <img src={row.thumbnail} alt=\"profile\"/>\n            </Paper>            \n        )        \n    }\n}\n\nexport default BoardSampleItem;\n\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/DayDetail.js",["637"],"import React,{Component} from 'react';\nimport axios from 'axios';\nimport './style/RCA.css';\nimport {URL} from \"../../../redux/config\";\nimport Header from './Header';\n\n\n//import Subject from './Subject';\n\nclass DayDetail extends Component {\n    \n\n    constructor(props){\n        super(props);\n\n        this.state={\n           list:''\n            \n        };\n\n    }\n    // rendervalue=()=>{\n    //     return this.props.row.shareNum===null?0:'';\n    // }\n\n    getShare=()=>{\n        let url=URL+\"/wish/sharesubject?num=\"+ this.props.row.shareNum;\n        axios.get(url)\n        .then(res=>{\n            this.setState({\n                list:res.data\n            });\n        }).catch(err=>{\n            console.log(\"목록 오류:\"+err);\n        })\n    }\n\n    getSpot=()=>{\n        let url=URL+\"/wish/spottitle?contentsid=\"+ this.props.row.spotId;\n        axios.get(url)\n        .then(res=>{\n            console.log(res.data);\n            this.setState({\n                list:res.data\n            });\n        }).catch(err=>{\n            console.log(\"목록 오류:\"+err);\n        })\n    }    \n\n    componentDidMount(){\n        if(this.props.row.shareNum!==null){\n            this.getShare();\n            // this.setState({\n            //     sharelist:this.state.list\n            // })\n        }\n        else if(this.props.row.spotId!==null){\n            this.getSpot();\n            // this.setState({\n            //     spotlist:this.state.list\n            // })\n        }\n        \n            \n    }\n\n\n    render() {\n        \n        const {row} = this.props;\n        \n        var aroundId=row.aroundId;\n        var content=row.content;\n        var shareNum=row.shareNum;\n        var spotId=row.spotId;\n        \n      \n        var around = aroundId!==null?content.split(\",\")[0]===\"음식점\"\n            ?<div>🍽{aroundId}</div>:content.split(\",\")[0]===\"숙박\"?<div>🏟{aroundId}</div>:<div>☕{aroundId}</div>\n            :'';\n        var share = shareNum!=null?<div>✔{this.state.list}</div>:'';\n        var spot = spotId!=null?<div>🗼{this.state.list}</div>:'';\n        var myTodo = (aroundId==null&&shareNum==null&&spotId==null)?<div>🌳{content}</div>:'';\n        var tag = aroundId!==null?around:shareNum!==null?share:spotId!==null?spot:myTodo;\n        \n        return (\n            <div>\n            {/* <div className=\"category\">{wishday===day &&category==='카페'?<FaMugHot></FaMugHot>:\n                    wishday===day &&category==='숙박'?<FaHotel></FaHotel>:wishday===day &&category==='음식점'?\n                <FaHamburger></FaHamburger>:''}</div> */}\n                {/* {aroundId!==null?content.split(\",\")[0]===\"음식점\"\n                ?<FaHamburger></FaHamburger>:content.split(\",\")[0]===\"숙박\"?\n                <FaHotel></FaHotel>:<FaMugHot></FaMugHot>:''}{aroundId}\n                {shareNum!==null?<FcRating></FcRating>:''}\n                {spotId!==null?<FcBookmark></FcBookmark>:''}\n                {this.state.list} */}\n                {/* <br/><FcCheckmark></FcCheckmark> */}\n                {/* {shareNum===null&&aroundId===null&&spotId===null?'🌳':''}\n                {content} */}\n                {tag}\n                \n                {/* {this.state.list.map((row,idx)=>(\n                <DaySubject row={row} key={idx}></DaySubject>\n                \n                 ))} */}\n                \n            {/* <div className=\"title\">\n               <div>\n               {subject}\n                </div>\n                <br/>\n              </div>   */}\n                 \n            </div>\n        );\n    }\n}\n\nexport default DayDetail;",{"ruleId":"638","replacedBy":"639"},{"ruleId":"640","replacedBy":"641"},{"ruleId":"642","severity":1,"message":"643","line":6,"column":5,"nodeType":"644","messageId":"645","endLine":9,"endColumn":6},{"ruleId":"646","severity":1,"message":"647","line":10,"column":8,"nodeType":"648","messageId":"649","endLine":10,"endColumn":22},{"ruleId":"646","severity":1,"message":"650","line":15,"column":9,"nodeType":"648","messageId":"649","endLine":15,"endColumn":15},{"ruleId":"646","severity":1,"message":"651","line":15,"column":17,"nodeType":"648","messageId":"649","endLine":15,"endColumn":21},{"ruleId":"646","severity":1,"message":"652","line":15,"column":23,"nodeType":"648","messageId":"649","endLine":15,"endColumn":31},{"ruleId":"653","severity":1,"message":"654","line":36,"column":23,"nodeType":"655","messageId":"656","endLine":36,"endColumn":25},{"ruleId":"653","severity":1,"message":"654","line":41,"column":30,"nodeType":"655","messageId":"656","endLine":41,"endColumn":32},{"ruleId":"653","severity":1,"message":"654","line":46,"column":30,"nodeType":"655","messageId":"656","endLine":46,"endColumn":32},{"ruleId":"653","severity":1,"message":"654","line":51,"column":30,"nodeType":"655","messageId":"656","endLine":51,"endColumn":32},{"ruleId":"653","severity":1,"message":"654","line":56,"column":30,"nodeType":"655","messageId":"656","endLine":56,"endColumn":32},{"ruleId":"653","severity":1,"message":"654","line":61,"column":30,"nodeType":"655","messageId":"656","endLine":61,"endColumn":32},{"ruleId":"653","severity":1,"message":"654","line":66,"column":30,"nodeType":"655","messageId":"656","endLine":66,"endColumn":32},{"ruleId":"653","severity":1,"message":"654","line":71,"column":30,"nodeType":"655","messageId":"656","endLine":71,"endColumn":32},{"ruleId":"653","severity":1,"message":"654","line":76,"column":30,"nodeType":"655","messageId":"656","endLine":76,"endColumn":32},{"ruleId":"653","severity":1,"message":"654","line":81,"column":30,"nodeType":"655","messageId":"656","endLine":81,"endColumn":32},{"ruleId":"646","severity":1,"message":"657","line":98,"column":13,"nodeType":"648","messageId":"649","endLine":98,"endColumn":21},{"ruleId":"638","replacedBy":"658"},{"ruleId":"640","replacedBy":"659"},{"ruleId":"642","severity":1,"message":"643","line":8,"column":5,"nodeType":"644","messageId":"645","endLine":12,"endColumn":6},{"ruleId":"646","severity":1,"message":"660","line":4,"column":8,"nodeType":"648","messageId":"649","endLine":4,"endColumn":22},{"ruleId":"646","severity":1,"message":"661","line":5,"column":8,"nodeType":"648","messageId":"649","endLine":5,"endColumn":26},{"ruleId":"646","severity":1,"message":"662","line":47,"column":16,"nodeType":"648","messageId":"649","endLine":47,"endColumn":22},{"ruleId":"663","severity":1,"message":"664","line":57,"column":21,"nodeType":"665","endLine":59,"endColumn":23},{"ruleId":"646","severity":1,"message":"666","line":3,"column":8,"nodeType":"648","messageId":"649","endLine":3,"endColumn":15},{"ruleId":"646","severity":1,"message":"667","line":5,"column":27,"nodeType":"648","messageId":"649","endLine":5,"endColumn":39},{"ruleId":"646","severity":1,"message":"668","line":42,"column":27,"nodeType":"648","messageId":"649","endLine":42,"endColumn":44},{"ruleId":"646","severity":1,"message":"669","line":1,"column":9,"nodeType":"648","messageId":"649","endLine":1,"endColumn":20},{"ruleId":"646","severity":1,"message":"670","line":1,"column":22,"nodeType":"648","messageId":"649","endLine":1,"endColumn":33},{"ruleId":"646","severity":1,"message":"671","line":2,"column":8,"nodeType":"648","messageId":"649","endLine":2,"endColumn":13},{"ruleId":"646","severity":1,"message":"672","line":3,"column":8,"nodeType":"648","messageId":"649","endLine":3,"endColumn":13},{"ruleId":"646","severity":1,"message":"673","line":3,"column":16,"nodeType":"648","messageId":"649","endLine":3,"endColumn":25},{"ruleId":"646","severity":1,"message":"674","line":6,"column":8,"nodeType":"648","messageId":"649","endLine":6,"endColumn":17},{"ruleId":"646","severity":1,"message":"675","line":2,"column":9,"nodeType":"648","messageId":"649","endLine":2,"endColumn":14},{"ruleId":"646","severity":1,"message":"676","line":3,"column":8,"nodeType":"648","messageId":"649","endLine":3,"endColumn":26},{"ruleId":"646","severity":1,"message":"667","line":6,"column":27,"nodeType":"648","messageId":"649","endLine":6,"endColumn":39},{"ruleId":"646","severity":1,"message":"677","line":13,"column":10,"nodeType":"648","messageId":"649","endLine":13,"endColumn":21},{"ruleId":"646","severity":1,"message":"678","line":5,"column":8,"nodeType":"648","messageId":"649","endLine":5,"endColumn":22},{"ruleId":"653","severity":1,"message":"654","line":61,"column":23,"nodeType":"655","messageId":"656","endLine":61,"endColumn":25},{"ruleId":"642","severity":1,"message":"643","line":5,"column":5,"nodeType":"644","messageId":"645","endLine":8,"endColumn":6},{"ruleId":"663","severity":1,"message":"664","line":16,"column":21,"nodeType":"665","endLine":18,"endColumn":23},{"ruleId":"679","severity":1,"message":"680","line":28,"column":42,"nodeType":"681","messageId":"682","endLine":28,"endColumn":51},{"ruleId":"683","severity":1,"message":"684","line":34,"column":41,"nodeType":"665","endLine":34,"endColumn":53},{"ruleId":"642","severity":1,"message":"643","line":5,"column":5,"nodeType":"644","messageId":"645","endLine":8,"endColumn":6},{"ruleId":"663","severity":1,"message":"664","line":16,"column":21,"nodeType":"665","endLine":18,"endColumn":23},{"ruleId":"679","severity":1,"message":"680","line":28,"column":42,"nodeType":"681","messageId":"682","endLine":28,"endColumn":51},{"ruleId":"683","severity":1,"message":"684","line":34,"column":41,"nodeType":"665","endLine":34,"endColumn":53},{"ruleId":"646","severity":1,"message":"685","line":2,"column":8,"nodeType":"648","messageId":"649","endLine":2,"endColumn":16},{"ruleId":"646","severity":1,"message":"686","line":20,"column":15,"nodeType":"648","messageId":"649","endLine":20,"endColumn":29},{"ruleId":"646","severity":1,"message":"685","line":2,"column":8,"nodeType":"648","messageId":"649","endLine":2,"endColumn":16},{"ruleId":"646","severity":1,"message":"686","line":9,"column":15,"nodeType":"648","messageId":"649","endLine":9,"endColumn":29},{"ruleId":"646","severity":1,"message":"675","line":2,"column":18,"nodeType":"648","messageId":"649","endLine":2,"endColumn":23},{"ruleId":"646","severity":1,"message":"687","line":3,"column":9,"nodeType":"648","messageId":"649","endLine":3,"endColumn":13},{"ruleId":"646","severity":1,"message":"688","line":3,"column":15,"nodeType":"648","messageId":"649","endLine":3,"endColumn":20},{"ruleId":"646","severity":1,"message":"689","line":3,"column":22,"nodeType":"648","messageId":"649","endLine":3,"endColumn":32},{"ruleId":"646","severity":1,"message":"650","line":3,"column":34,"nodeType":"648","messageId":"649","endLine":3,"endColumn":40},{"ruleId":"646","severity":1,"message":"690","line":3,"column":42,"nodeType":"648","messageId":"649","endLine":3,"endColumn":48},{"ruleId":"646","severity":1,"message":"691","line":3,"column":50,"nodeType":"648","messageId":"649","endLine":3,"endColumn":61},{"ruleId":"646","severity":1,"message":"692","line":3,"column":63,"nodeType":"648","messageId":"649","endLine":3,"endColumn":68},{"ruleId":"646","severity":1,"message":"652","line":3,"column":70,"nodeType":"648","messageId":"649","endLine":3,"endColumn":78},{"ruleId":"646","severity":1,"message":"651","line":3,"column":80,"nodeType":"648","messageId":"649","endLine":3,"endColumn":84},{"ruleId":"646","severity":1,"message":"693","line":7,"column":8,"nodeType":"648","messageId":"649","endLine":7,"endColumn":13},{"ruleId":"646","severity":1,"message":"694","line":8,"column":8,"nodeType":"648","messageId":"649","endLine":8,"endColumn":20},{"ruleId":"683","severity":1,"message":"695","line":130,"column":25,"nodeType":"665","endLine":130,"endColumn":28},{"ruleId":"642","severity":1,"message":"643","line":4,"column":5,"nodeType":"644","messageId":"645","endLine":6,"endColumn":6},{"ruleId":"642","severity":1,"message":"643","line":4,"column":5,"nodeType":"644","messageId":"645","endLine":6,"endColumn":6},{"ruleId":"642","severity":1,"message":"643","line":5,"column":5,"nodeType":"644","messageId":"645","endLine":7,"endColumn":6},{"ruleId":"642","severity":1,"message":"643","line":5,"column":5,"nodeType":"644","messageId":"645","endLine":7,"endColumn":6},{"ruleId":"642","severity":1,"message":"643","line":4,"column":5,"nodeType":"644","messageId":"645","endLine":6,"endColumn":6},{"ruleId":"642","severity":1,"message":"643","line":4,"column":5,"nodeType":"644","messageId":"645","endLine":6,"endColumn":6},{"ruleId":"646","severity":1,"message":"696","line":5,"column":9,"nodeType":"648","messageId":"649","endLine":5,"endColumn":19},{"ruleId":"646","severity":1,"message":"667","line":5,"column":21,"nodeType":"648","messageId":"649","endLine":5,"endColumn":33},{"ruleId":"697","severity":1,"message":"698","line":55,"column":5,"nodeType":"644","messageId":"656","endLine":57,"endColumn":6},{"ruleId":"642","severity":1,"message":"643","line":4,"column":5,"nodeType":"644","messageId":"645","endLine":6,"endColumn":6},{"ruleId":"646","severity":1,"message":"675","line":2,"column":9,"nodeType":"648","messageId":"649","endLine":2,"endColumn":14},{"ruleId":"646","severity":1,"message":"699","line":3,"column":8,"nodeType":"648","messageId":"649","endLine":3,"endColumn":26},{"ruleId":"646","severity":1,"message":"700","line":1,"column":28,"nodeType":"648","messageId":"649","endLine":1,"endColumn":36},{"ruleId":"646","severity":1,"message":"701","line":2,"column":13,"nodeType":"648","messageId":"649","endLine":2,"endColumn":21},{"ruleId":"646","severity":1,"message":"702","line":5,"column":10,"nodeType":"648","messageId":"649","endLine":5,"endColumn":20},{"ruleId":"646","severity":1,"message":"703","line":5,"column":22,"nodeType":"648","messageId":"649","endLine":5,"endColumn":34},{"ruleId":"646","severity":1,"message":"704","line":5,"column":36,"nodeType":"648","messageId":"649","endLine":5,"endColumn":46},{"ruleId":"646","severity":1,"message":"705","line":8,"column":10,"nodeType":"648","messageId":"649","endLine":8,"endColumn":15},{"ruleId":"646","severity":1,"message":"706","line":11,"column":10,"nodeType":"648","messageId":"649","endLine":11,"endColumn":24},{"ruleId":"646","severity":1,"message":"707","line":14,"column":10,"nodeType":"648","messageId":"649","endLine":14,"endColumn":16},{"ruleId":"646","severity":1,"message":"708","line":90,"column":15,"nodeType":"648","messageId":"649","endLine":90,"endColumn":19},{"ruleId":"646","severity":1,"message":"709","line":235,"column":9,"nodeType":"648","messageId":"649","endLine":235,"endColumn":19},{"ruleId":"646","severity":1,"message":"700","line":1,"column":27,"nodeType":"648","messageId":"649","endLine":1,"endColumn":35},{"ruleId":"646","severity":1,"message":"675","line":2,"column":9,"nodeType":"648","messageId":"649","endLine":2,"endColumn":14},{"ruleId":"646","severity":1,"message":"710","line":3,"column":8,"nodeType":"648","messageId":"649","endLine":3,"endColumn":28},{"ruleId":"646","severity":1,"message":"711","line":50,"column":15,"nodeType":"648","messageId":"649","endLine":50,"endColumn":22},{"ruleId":"646","severity":1,"message":"712","line":140,"column":13,"nodeType":"648","messageId":"649","endLine":140,"endColumn":22},{"ruleId":"646","severity":1,"message":"713","line":7,"column":66,"nodeType":"648","messageId":"649","endLine":7,"endColumn":74},{"ruleId":"683","severity":1,"message":"684","line":28,"column":21,"nodeType":"665","endLine":38,"endColumn":22},{"ruleId":"653","severity":1,"message":"654","line":30,"column":39,"nodeType":"655","messageId":"656","endLine":30,"endColumn":41},{"ruleId":"653","severity":1,"message":"654","line":31,"column":44,"nodeType":"655","messageId":"656","endLine":31,"endColumn":46},{"ruleId":"653","severity":1,"message":"654","line":33,"column":36,"nodeType":"655","messageId":"656","endLine":33,"endColumn":38},{"ruleId":"653","severity":1,"message":"654","line":35,"column":36,"nodeType":"655","messageId":"656","endLine":35,"endColumn":38},{"ruleId":"653","severity":1,"message":"654","line":55,"column":31,"nodeType":"655","messageId":"656","endLine":55,"endColumn":33},{"ruleId":"653","severity":1,"message":"654","line":103,"column":20,"nodeType":"655","messageId":"656","endLine":103,"endColumn":22},{"ruleId":"653","severity":1,"message":"654","line":103,"column":38,"nodeType":"655","messageId":"656","endLine":103,"endColumn":40},{"ruleId":"653","severity":1,"message":"654","line":121,"column":44,"nodeType":"655","messageId":"656","endLine":121,"endColumn":46},{"ruleId":"653","severity":1,"message":"654","line":124,"column":38,"nodeType":"655","messageId":"656","endLine":124,"endColumn":40},{"ruleId":"653","severity":1,"message":"654","line":127,"column":38,"nodeType":"655","messageId":"656","endLine":127,"endColumn":40},{"ruleId":"653","severity":1,"message":"654","line":130,"column":38,"nodeType":"655","messageId":"656","endLine":130,"endColumn":40},{"ruleId":"642","severity":1,"message":"643","line":5,"column":5,"nodeType":"644","messageId":"645","endLine":7,"endColumn":6},{"ruleId":"646","severity":1,"message":"714","line":1,"column":16,"nodeType":"648","messageId":"649","endLine":1,"endColumn":25},{"ruleId":"646","severity":1,"message":"715","line":2,"column":9,"nodeType":"648","messageId":"649","endLine":2,"endColumn":16},{"ruleId":"646","severity":1,"message":"675","line":2,"column":18,"nodeType":"648","messageId":"649","endLine":2,"endColumn":23},{"ruleId":"646","severity":1,"message":"667","line":4,"column":51,"nodeType":"648","messageId":"649","endLine":4,"endColumn":63},{"ruleId":"646","severity":1,"message":"652","line":5,"column":8,"nodeType":"648","messageId":"649","endLine":5,"endColumn":16},{"ruleId":"646","severity":1,"message":"694","line":6,"column":8,"nodeType":"648","messageId":"649","endLine":6,"endColumn":20},{"ruleId":"646","severity":1,"message":"716","line":11,"column":8,"nodeType":"648","messageId":"649","endLine":11,"endColumn":13},{"ruleId":"646","severity":1,"message":"717","line":12,"column":8,"nodeType":"648","messageId":"649","endLine":12,"endColumn":12},{"ruleId":"646","severity":1,"message":"718","line":13,"column":8,"nodeType":"648","messageId":"649","endLine":13,"endColumn":11},{"ruleId":"646","severity":1,"message":"719","line":32,"column":8,"nodeType":"648","messageId":"649","endLine":32,"endColumn":16},{"ruleId":"646","severity":1,"message":"720","line":33,"column":8,"nodeType":"648","messageId":"649","endLine":33,"endColumn":19},{"ruleId":"646","severity":1,"message":"721","line":34,"column":8,"nodeType":"648","messageId":"649","endLine":34,"endColumn":17},{"ruleId":"646","severity":1,"message":"722","line":35,"column":8,"nodeType":"648","messageId":"649","endLine":35,"endColumn":19},{"ruleId":"646","severity":1,"message":"723","line":36,"column":8,"nodeType":"648","messageId":"649","endLine":36,"endColumn":19},{"ruleId":"646","severity":1,"message":"724","line":37,"column":8,"nodeType":"648","messageId":"649","endLine":37,"endColumn":18},{"ruleId":"646","severity":1,"message":"725","line":38,"column":8,"nodeType":"648","messageId":"649","endLine":38,"endColumn":20},{"ruleId":"646","severity":1,"message":"726","line":39,"column":8,"nodeType":"648","messageId":"649","endLine":39,"endColumn":18},{"ruleId":"646","severity":1,"message":"727","line":40,"column":8,"nodeType":"648","messageId":"649","endLine":40,"endColumn":19},{"ruleId":"646","severity":1,"message":"728","line":41,"column":8,"nodeType":"648","messageId":"649","endLine":41,"endColumn":21},{"ruleId":"646","severity":1,"message":"729","line":42,"column":8,"nodeType":"648","messageId":"649","endLine":42,"endColumn":18},{"ruleId":"646","severity":1,"message":"730","line":43,"column":8,"nodeType":"648","messageId":"649","endLine":43,"endColumn":17},{"ruleId":"646","severity":1,"message":"731","line":44,"column":8,"nodeType":"648","messageId":"649","endLine":44,"endColumn":15},{"ruleId":"646","severity":1,"message":"732","line":51,"column":10,"nodeType":"648","messageId":"649","endLine":51,"endColumn":16},{"ruleId":"646","severity":1,"message":"733","line":54,"column":14,"nodeType":"648","messageId":"649","endLine":54,"endColumn":23},{"ruleId":"646","severity":1,"message":"734","line":89,"column":10,"nodeType":"648","messageId":"649","endLine":89,"endColumn":19},{"ruleId":"646","severity":1,"message":"735","line":97,"column":12,"nodeType":"648","messageId":"649","endLine":97,"endColumn":17},{"ruleId":"646","severity":1,"message":"736","line":100,"column":11,"nodeType":"648","messageId":"649","endLine":100,"endColumn":23},{"ruleId":"646","severity":1,"message":"737","line":105,"column":11,"nodeType":"648","messageId":"649","endLine":105,"endColumn":22},{"ruleId":"663","severity":1,"message":"664","line":144,"column":21,"nodeType":"665","endLine":144,"endColumn":71},{"ruleId":"683","severity":1,"message":"684","line":149,"column":33,"nodeType":"665","endLine":155,"endColumn":34},{"ruleId":"663","severity":1,"message":"664","line":161,"column":21,"nodeType":"665","endLine":161,"endColumn":61},{"ruleId":"663","severity":1,"message":"664","line":162,"column":21,"nodeType":"665","endLine":162,"endColumn":67},{"ruleId":"663","severity":1,"message":"664","line":163,"column":21,"nodeType":"665","endLine":163,"endColumn":63},{"ruleId":"663","severity":1,"message":"664","line":164,"column":21,"nodeType":"665","endLine":164,"endColumn":67},{"ruleId":"663","severity":1,"message":"664","line":165,"column":21,"nodeType":"665","endLine":165,"endColumn":67},{"ruleId":"663","severity":1,"message":"664","line":166,"column":21,"nodeType":"665","endLine":166,"endColumn":65},{"ruleId":"663","severity":1,"message":"664","line":167,"column":21,"nodeType":"665","endLine":167,"endColumn":65},{"ruleId":"663","severity":1,"message":"664","line":168,"column":21,"nodeType":"665","endLine":168,"endColumn":67},{"ruleId":"663","severity":1,"message":"664","line":169,"column":21,"nodeType":"665","endLine":169,"endColumn":71},{"ruleId":"663","severity":1,"message":"664","line":170,"column":21,"nodeType":"665","endLine":170,"endColumn":65},{"ruleId":"663","severity":1,"message":"664","line":171,"column":21,"nodeType":"665","endLine":171,"endColumn":63},{"ruleId":"663","severity":1,"message":"664","line":172,"column":21,"nodeType":"665","endLine":172,"endColumn":59},{"ruleId":"663","severity":1,"message":"664","line":173,"column":21,"nodeType":"665","endLine":173,"endColumn":69},{"ruleId":"738","severity":1,"message":"739","line":333,"column":1,"nodeType":"740","messageId":"741","endLine":339,"endColumn":2},{"ruleId":"738","severity":1,"message":"739","line":340,"column":1,"nodeType":"740","messageId":"741","endLine":413,"endColumn":2},{"ruleId":"646","severity":1,"message":"742","line":15,"column":8,"nodeType":"648","messageId":"649","endLine":15,"endColumn":20},{"ruleId":"653","severity":1,"message":"654","line":126,"column":39,"nodeType":"655","messageId":"656","endLine":126,"endColumn":41},{"ruleId":"743","severity":1,"message":"744","line":21,"column":21,"nodeType":"745","endLine":21,"endColumn":36},{"ruleId":"743","severity":1,"message":"746","line":22,"column":20,"nodeType":"745","endLine":22,"endColumn":34},{"ruleId":"743","severity":1,"message":"747","line":23,"column":17,"nodeType":"745","endLine":23,"endColumn":28},{"ruleId":"646","severity":1,"message":"748","line":73,"column":9,"nodeType":"648","messageId":"649","endLine":73,"endColumn":19},{"ruleId":"646","severity":1,"message":"749","line":76,"column":14,"nodeType":"648","messageId":"649","endLine":76,"endColumn":26},{"ruleId":"646","severity":1,"message":"750","line":137,"column":10,"nodeType":"648","messageId":"649","endLine":137,"endColumn":15},{"ruleId":"646","severity":1,"message":"751","line":139,"column":6,"nodeType":"648","messageId":"649","endLine":139,"endColumn":12},{"ruleId":"646","severity":1,"message":"752","line":142,"column":6,"nodeType":"648","messageId":"649","endLine":142,"endColumn":13},{"ruleId":"753","severity":1,"message":"754","line":149,"column":9,"nodeType":"648","messageId":"755","endLine":149,"endColumn":15},{"ruleId":"753","severity":1,"message":"754","line":150,"column":30,"nodeType":"648","messageId":"755","endLine":150,"endColumn":36},{"ruleId":"653","severity":1,"message":"654","line":182,"column":15,"nodeType":"655","messageId":"656","endLine":182,"endColumn":17},{"ruleId":"756","severity":1,"message":"757","line":191,"column":13,"nodeType":"648","messageId":"758","endLine":191,"endColumn":15},{"ruleId":"756","severity":1,"message":"759","line":192,"column":9,"nodeType":"648","messageId":"758","endLine":192,"endColumn":16},{"ruleId":"653","severity":1,"message":"654","line":151,"column":40,"nodeType":"655","messageId":"656","endLine":151,"endColumn":42},{"ruleId":"653","severity":1,"message":"654","line":156,"column":30,"nodeType":"655","messageId":"656","endLine":156,"endColumn":32},{"ruleId":"653","severity":1,"message":"654","line":156,"column":75,"nodeType":"655","messageId":"656","endLine":156,"endColumn":77},{"ruleId":"653","severity":1,"message":"654","line":157,"column":18,"nodeType":"655","messageId":"656","endLine":157,"endColumn":20},{"ruleId":"653","severity":1,"message":"654","line":157,"column":56,"nodeType":"655","messageId":"656","endLine":157,"endColumn":58},{"ruleId":"653","severity":1,"message":"654","line":159,"column":57,"nodeType":"655","messageId":"656","endLine":159,"endColumn":59},{"ruleId":"653","severity":1,"message":"654","line":173,"column":38,"nodeType":"655","messageId":"656","endLine":173,"endColumn":40},{"ruleId":"646","severity":1,"message":"714","line":1,"column":16,"nodeType":"648","messageId":"649","endLine":1,"endColumn":25},{"ruleId":"642","severity":1,"message":"643","line":17,"column":5,"nodeType":"644","messageId":"645","endLine":21,"endColumn":6},{"ruleId":"663","severity":1,"message":"664","line":80,"column":21,"nodeType":"665","endLine":80,"endColumn":70},{"ruleId":"663","severity":1,"message":"664","line":83,"column":21,"nodeType":"665","endLine":83,"endColumn":70},{"ruleId":"663","severity":1,"message":"664","line":86,"column":21,"nodeType":"665","endLine":86,"endColumn":70},{"ruleId":"663","severity":1,"message":"664","line":89,"column":21,"nodeType":"665","endLine":89,"endColumn":69},{"ruleId":"653","severity":1,"message":"654","line":109,"column":45,"nodeType":"655","messageId":"656","endLine":109,"endColumn":47},{"ruleId":"646","severity":1,"message":"760","line":4,"column":8,"nodeType":"648","messageId":"649","endLine":4,"endColumn":13},{"ruleId":"646","severity":1,"message":"761","line":5,"column":8,"nodeType":"648","messageId":"649","endLine":5,"endColumn":13},{"ruleId":"646","severity":1,"message":"762","line":6,"column":8,"nodeType":"648","messageId":"649","endLine":6,"endColumn":13},{"ruleId":"646","severity":1,"message":"763","line":7,"column":8,"nodeType":"648","messageId":"649","endLine":7,"endColumn":12},{"ruleId":"646","severity":1,"message":"764","line":1,"column":10,"nodeType":"648","messageId":"649","endLine":1,"endColumn":27},{"ruleId":"646","severity":1,"message":"714","line":2,"column":18,"nodeType":"648","messageId":"649","endLine":2,"endColumn":27},{"ruleId":"646","severity":1,"message":"685","line":3,"column":8,"nodeType":"648","messageId":"649","endLine":3,"endColumn":16},{"ruleId":"646","severity":1,"message":"765","line":4,"column":8,"nodeType":"648","messageId":"649","endLine":4,"endColumn":19},{"ruleId":"646","severity":1,"message":"766","line":5,"column":10,"nodeType":"648","messageId":"649","endLine":5,"endColumn":27},{"ruleId":"646","severity":1,"message":"767","line":17,"column":12,"nodeType":"648","messageId":"649","endLine":17,"endColumn":20},{"ruleId":"653","severity":1,"message":"654","line":84,"column":31,"nodeType":"655","messageId":"656","endLine":84,"endColumn":33},{"ruleId":"646","severity":1,"message":"768","line":3,"column":8,"nodeType":"648","messageId":"649","endLine":3,"endColumn":14},{"ruleId":"646","severity":1,"message":"700","line":1,"column":27,"nodeType":"648","messageId":"649","endLine":1,"endColumn":35},{"ruleId":"646","severity":1,"message":"700","line":1,"column":27,"nodeType":"648","messageId":"649","endLine":1,"endColumn":35},{"ruleId":"769","severity":1,"message":"770","line":22,"column":41,"nodeType":"655","messageId":"771","endLine":22,"endColumn":42},{"ruleId":"646","severity":1,"message":"700","line":1,"column":27,"nodeType":"648","messageId":"649","endLine":1,"endColumn":35},{"ruleId":"653","severity":1,"message":"654","line":25,"column":33,"nodeType":"655","messageId":"656","endLine":25,"endColumn":35},{"ruleId":"653","severity":1,"message":"654","line":49,"column":33,"nodeType":"655","messageId":"656","endLine":49,"endColumn":35},{"ruleId":"653","severity":1,"message":"654","line":51,"column":40,"nodeType":"655","messageId":"656","endLine":51,"endColumn":42},{"ruleId":"646","severity":1,"message":"772","line":95,"column":13,"nodeType":"648","messageId":"649","endLine":95,"endColumn":20},{"ruleId":"646","severity":1,"message":"773","line":5,"column":8,"nodeType":"648","messageId":"649","endLine":5,"endColumn":12},{"ruleId":"646","severity":1,"message":"774","line":6,"column":8,"nodeType":"648","messageId":"649","endLine":6,"endColumn":18},{"ruleId":"646","severity":1,"message":"775","line":7,"column":8,"nodeType":"648","messageId":"649","endLine":7,"endColumn":17},{"ruleId":"646","severity":1,"message":"776","line":8,"column":8,"nodeType":"648","messageId":"649","endLine":8,"endColumn":19},{"ruleId":"646","severity":1,"message":"777","line":9,"column":8,"nodeType":"648","messageId":"649","endLine":9,"endColumn":19},{"ruleId":"646","severity":1,"message":"778","line":11,"column":8,"nodeType":"648","messageId":"649","endLine":11,"endColumn":14},{"ruleId":"646","severity":1,"message":"779","line":12,"column":8,"nodeType":"648","messageId":"649","endLine":12,"endColumn":18},{"ruleId":"646","severity":1,"message":"780","line":13,"column":8,"nodeType":"648","messageId":"649","endLine":13,"endColumn":18},{"ruleId":"646","severity":1,"message":"781","line":15,"column":8,"nodeType":"648","messageId":"649","endLine":15,"endColumn":20},{"ruleId":"646","severity":1,"message":"782","line":16,"column":8,"nodeType":"648","messageId":"649","endLine":16,"endColumn":17},{"ruleId":"646","severity":1,"message":"742","line":18,"column":8,"nodeType":"648","messageId":"649","endLine":18,"endColumn":20},{"ruleId":"646","severity":1,"message":"716","line":20,"column":8,"nodeType":"648","messageId":"649","endLine":20,"endColumn":13},{"ruleId":"743","severity":1,"message":"783","line":71,"column":7,"nodeType":"784","endLine":71,"endColumn":9,"suggestions":"785"},{"ruleId":"646","severity":1,"message":"786","line":87,"column":11,"nodeType":"648","messageId":"649","endLine":87,"endColumn":28},{"ruleId":"646","severity":1,"message":"671","line":6,"column":8,"nodeType":"648","messageId":"649","endLine":6,"endColumn":13},{"ruleId":"646","severity":1,"message":"787","line":7,"column":9,"nodeType":"648","messageId":"649","endLine":7,"endColumn":12},{"ruleId":"646","severity":1,"message":"788","line":3,"column":9,"nodeType":"648","messageId":"649","endLine":3,"endColumn":19},{"ruleId":"646","severity":1,"message":"789","line":3,"column":20,"nodeType":"648","messageId":"649","endLine":3,"endColumn":28},{"ruleId":"646","severity":1,"message":"790","line":3,"column":29,"nodeType":"648","messageId":"649","endLine":3,"endColumn":36},{"ruleId":"646","severity":1,"message":"791","line":3,"column":37,"nodeType":"648","messageId":"649","endLine":3,"endColumn":48},{"ruleId":"646","severity":1,"message":"792","line":144,"column":13,"nodeType":"648","messageId":"649","endLine":144,"endColumn":21},{"ruleId":"646","severity":1,"message":"793","line":145,"column":13,"nodeType":"648","messageId":"649","endLine":145,"endColumn":16},{"ruleId":"646","severity":1,"message":"794","line":146,"column":13,"nodeType":"648","messageId":"649","endLine":146,"endColumn":20},{"ruleId":"795","severity":1,"message":"796","line":151,"column":21,"nodeType":"797","messageId":"798","endLine":151,"endColumn":48},{"ruleId":"795","severity":1,"message":"796","line":152,"column":20,"nodeType":"797","messageId":"798","endLine":152,"endColumn":46},{"ruleId":"646","severity":1,"message":"799","line":156,"column":13,"nodeType":"648","messageId":"649","endLine":156,"endColumn":23},{"ruleId":"646","severity":1,"message":"788","line":2,"column":9,"nodeType":"648","messageId":"649","endLine":2,"endColumn":19},{"ruleId":"646","severity":1,"message":"789","line":2,"column":20,"nodeType":"648","messageId":"649","endLine":2,"endColumn":28},{"ruleId":"646","severity":1,"message":"790","line":2,"column":29,"nodeType":"648","messageId":"649","endLine":2,"endColumn":36},{"ruleId":"646","severity":1,"message":"791","line":2,"column":37,"nodeType":"648","messageId":"649","endLine":2,"endColumn":48},{"ruleId":"646","severity":1,"message":"800","line":3,"column":8,"nodeType":"648","messageId":"649","endLine":3,"endColumn":14},{"ruleId":"642","severity":1,"message":"643","line":8,"column":5,"nodeType":"644","messageId":"645","endLine":11,"endColumn":6},{"ruleId":"653","severity":1,"message":"654","line":29,"column":29,"nodeType":"655","messageId":"656","endLine":29,"endColumn":31},{"ruleId":"646","severity":1,"message":"714","line":1,"column":17,"nodeType":"648","messageId":"649","endLine":1,"endColumn":26},{"ruleId":"646","severity":1,"message":"800","line":2,"column":8,"nodeType":"648","messageId":"649","endLine":2,"endColumn":14},{"ruleId":"642","severity":1,"message":"643","line":7,"column":5,"nodeType":"644","messageId":"645","endLine":10,"endColumn":6},{"ruleId":"646","severity":1,"message":"801","line":28,"column":13,"nodeType":"648","messageId":"649","endLine":28,"endColumn":16},{"ruleId":"646","severity":1,"message":"673","line":1,"column":17,"nodeType":"648","messageId":"649","endLine":1,"endColumn":26},{"ruleId":"646","severity":1,"message":"675","line":12,"column":9,"nodeType":"648","messageId":"649","endLine":12,"endColumn":14},{"ruleId":"646","severity":1,"message":"802","line":17,"column":10,"nodeType":"648","messageId":"649","endLine":17,"endColumn":22},{"ruleId":"646","severity":1,"message":"803","line":17,"column":24,"nodeType":"648","messageId":"649","endLine":17,"endColumn":39},{"ruleId":"646","severity":1,"message":"804","line":21,"column":12,"nodeType":"648","messageId":"649","endLine":21,"endColumn":21},{"ruleId":"653","severity":1,"message":"654","line":26,"column":38,"nodeType":"655","messageId":"656","endLine":26,"endColumn":40},{"ruleId":"653","severity":1,"message":"654","line":26,"column":66,"nodeType":"655","messageId":"656","endLine":26,"endColumn":68},{"ruleId":"653","severity":1,"message":"654","line":33,"column":20,"nodeType":"655","messageId":"656","endLine":33,"endColumn":22},{"ruleId":"653","severity":1,"message":"654","line":33,"column":38,"nodeType":"655","messageId":"656","endLine":33,"endColumn":40},{"ruleId":"646","severity":1,"message":"696","line":3,"column":9,"nodeType":"648","messageId":"649","endLine":3,"endColumn":19},{"ruleId":"646","severity":1,"message":"667","line":3,"column":21,"nodeType":"648","messageId":"649","endLine":3,"endColumn":33},{"ruleId":"646","severity":1,"message":"701","line":2,"column":8,"nodeType":"648","messageId":"649","endLine":2,"endColumn":16},{"ruleId":"646","severity":1,"message":"671","line":2,"column":8,"nodeType":"648","messageId":"649","endLine":2,"endColumn":13},{"ruleId":"646","severity":1,"message":"787","line":3,"column":9,"nodeType":"648","messageId":"649","endLine":3,"endColumn":12},{"ruleId":"646","severity":1,"message":"675","line":6,"column":9,"nodeType":"648","messageId":"649","endLine":6,"endColumn":14},{"ruleId":"646","severity":1,"message":"805","line":20,"column":16,"nodeType":"648","messageId":"649","endLine":20,"endColumn":19},{"ruleId":"646","severity":1,"message":"806","line":1,"column":50,"nodeType":"648","messageId":"649","endLine":1,"endColumn":63},{"ruleId":"646","severity":1,"message":"807","line":5,"column":7,"nodeType":"648","messageId":"649","endLine":5,"endColumn":22},{"ruleId":"646","severity":1,"message":"808","line":43,"column":9,"nodeType":"648","messageId":"649","endLine":43,"endColumn":20},{"ruleId":"646","severity":1,"message":"809","line":62,"column":9,"nodeType":"648","messageId":"649","endLine":62,"endColumn":14},{"ruleId":"646","severity":1,"message":"671","line":2,"column":8,"nodeType":"648","messageId":"649","endLine":2,"endColumn":13},{"ruleId":"646","severity":1,"message":"675","line":3,"column":9,"nodeType":"648","messageId":"649","endLine":3,"endColumn":14},{"ruleId":"646","severity":1,"message":"810","line":3,"column":16,"nodeType":"648","messageId":"649","endLine":3,"endColumn":20},{"ruleId":"646","severity":1,"message":"787","line":4,"column":9,"nodeType":"648","messageId":"649","endLine":4,"endColumn":12},{"ruleId":"646","severity":1,"message":"811","line":5,"column":8,"nodeType":"648","messageId":"649","endLine":5,"endColumn":14},"no-native-reassign",["812"],"no-negated-in-lhs",["813"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'MypagePageComp' is defined but never used.","Identifier","unusedVar","'MyPage' is defined but never used.","'Tour' is defined but never used.","'TourList' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'style_hr' is assigned a value but never used.",["812"],["813"],"'NoticeMiniComp' is defined but never used.","'ShareBoardMiniComp' is defined but never used.","'boards' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'RowItem' is defined but never used.","'mainViewType' is defined but never used.","'setPositionFooter' is assigned a value but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'axios' is defined but never used.","'React' is defined but never used.","'useEffect' is defined but never used.","'PropTypes' is defined but never used.","'Route' is defined but never used.","'ShareBoardFormComp' is defined but never used.","'FaThemeisle' is defined but never used.","'FormHelperText' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'reactDOM' is defined but never used.","'responseGoogle' is assigned a value but never used.","'Home' is defined but never used.","'Login' is defined but never used.","'ShareBoard' is defined but never used.","'Notice' is defined but never used.","'Reservation' is defined but never used.","'Admin' is defined but never used.","'Logo2' is defined but never used.","'TourPageComp' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'actionType' is defined but never used.","no-dupe-class-members","Duplicate name 'componentWillUnmount'.","'ShareBoardPageComp' is defined but never used.","'useState' is defined but never used.","'ReactDOM' is defined but never used.","'makeStyles' is defined but never used.","'createStyles' is defined but never used.","'WithStyles' is defined but never used.","'Theme' is defined but never used.","'createMuiTheme' is defined but never used.","'Upload' is defined but never used.","'data' is assigned a value but never used.","'uploadFile' is assigned a value but never used.","'ShareBoardUpdateForm' is defined but never used.","'scrollY' is assigned a value but never used.","'scrollTop' is assigned a value but never used.","'paginate' is assigned a value but never used.","'Component' is defined but never used.","'NavLink' is defined but never used.","'Paper' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'img_jeju' is defined but never used.","'img_jocheon' is defined but never used.","'img_gujwa' is defined but never used.","'img_sungsan' is defined but never used.","'img_pyoseon' is defined but never used.","'img_namwon' is defined but never used.","'img_seogwipo' is defined but never used.","'img_andeok' is defined but never used.","'img_daejung' is defined but never used.","'img_hangyeong' is defined but never used.","'img_hanrim' is defined but never used.","'img_aewol' is defined but never used.","'img_udo' is defined but never used.","'photos' is assigned a value but never used.","'searchApi' is defined but never used.","'a11yProps' is defined but never used.","'value' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'setMainView' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'MoreVertIcon' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'longitude' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'latitude' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'title' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'infowindow' is assigned a value but never used.","'closeOverlay' is defined but never used.","'order' is assigned a value but never used.","'menuEl' is assigned a value but never used.","'listStr' is assigned a value but never used.","no-use-before-define","'itemEl' was used before it was defined.","usedBeforeDefined","no-redeclare","'el' is already defined.","redeclared","'itemStr' is already defined.","'jeju1' is defined but never used.","'jeju2' is defined but never used.","'jeju3' is defined but never used.","'udo1' is defined but never used.","'getSuggestedQuery' is defined but never used.","'GoogleLogin' is defined but never used.","'refreshTokenSetup' is defined but never used.","'userData' is assigned a value but never used.","'styled' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'regroup' is assigned a value but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.","'Avatar' is defined but never used.","'IconButton' is defined but never used.","'Typography' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'searchApi'. Either include it or remove the dependency array.","ArrayExpression",["814"],"'handleExpandClick' is assigned a value but never used.","'URL' is defined but never used.","'FaUtensils' is defined but never used.","'FaMugHot' is defined but never used.","'FaHotel' is defined but never used.","'FaHamburger' is defined but never used.","'category' is assigned a value but never used.","'day' is assigned a value but never used.","'wishday' is assigned a value but never used.","no-new-wrappers","Do not use String as a constructor.","NewExpression","noConstructor","'betweenDay' is assigned a value but never used.","'moment' is defined but never used.","'url' is assigned a value but never used.","'alertSetOpen' is assigned a value but never used.","'setAlertSetOpen' is assigned a value but never used.","'isShowing' is assigned a value but never used.","'row' is assigned a value but never used.","'ThemeProvider' is defined but never used.","'BootstrapButton' is assigned a value but never used.","'ColorButton' is assigned a value but never used.","'theme' is assigned a value but never used.","'Link' is defined but never used.","'Header' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"815","fix":"816"},"Update the dependencies array to be: [searchApi]",{"range":"817","text":"818"},[2064,2066],"[searchApi]"]