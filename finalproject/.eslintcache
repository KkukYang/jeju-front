[{"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\index.js":"1","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\App.js":"2","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\reportWebVitals.js":"3","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\redux\\store.js":"4","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\redux\\config.js":"5","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\ChattingLogic.js":"6","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\Menu.js":"7","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\footer\\FooterComp.js":"8","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\MainPageComp.js":"9","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\SearchResultComp.js":"10","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ReservationPageComp.js":"11","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\RentCarPageComp.js":"12","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipPageComp.js":"13","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\notice\\NoticePageComp.js":"14","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\notice\\NoticeContent.js":"15","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\notice\\NoticeAddForm.js":"16","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\notice\\NoticeUpdateForm.js":"17","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\ShareBoardPageComp.js":"18","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\ShareBoardFormComp.js":"19","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\ShareBoardUpdateForm.js":"20","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\admin\\MemberListPageComp.js":"21","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\MypagePageComp.js":"22","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\MySchedule.js":"23","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\MyWishlist.js":"24","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\MyReview.js":"25","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\PassCheck.js":"26","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\SocialUpdateForm.js":"27","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\MemberUpdateFormComp.js":"28","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\tour\\DetailTourComp.js":"29","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\tour\\TourPageComp.js":"30","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\join\\SignupPageComp.js":"31","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\SharePlan\\SharePlanPageComp.js":"32","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\SharePlan\\ChattingRoom.js":"33","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\SharePlan\\ChatCompPage.js":"34","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\auth\\LoginPageComp.js":"35","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\SearchComp.js":"36","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\HotPlaceComp.js":"37","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\NoticeMiniComp.js":"38","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\ShareBoardMiniComp.js":"39","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\MainPhotoComp.js":"40","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\MyPlanComp.js":"41","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\EtcBoardComp.js":"42","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\OneWayAir.js":"43","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\RoundAir.js":"44","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\RentCarItem.js":"45","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\tour\\PageComp.js":"46","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\tour\\Tourintro.js":"47","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\auth\\MakeLoginBtn.js":"48","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\auth\\KakaoLoginBtnComp3.js":"49","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\auth\\KakaoLoginBtnComp.js":"50","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\auth\\FaceBookLoginBtnComp.js":"51","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\auth\\NaverLoginBtnComp.js":"52","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\auth\\GoogleLogoutBtnComp.js":"53","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\auth\\GoogleLoginBtnComp.js":"54","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\SharePlan\\SharePlanRoot.js":"55","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\SharePlan\\SharePlanList.js":"56","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\tour\\ItemComp.js":"57","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\SharePlan\\ChatRoomItem.js":"58","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\Weather.js":"59","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\ShareBoardRowItem.js":"60","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\BoardSample.js":"61","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\auth\\refreshToken.js":"62","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\menus\\TourList.js":"63","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\NoticeItemComp.js":"64","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\SharePlan\\SharePlanSub.js":"65","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\MyPlanRightItem.js":"66","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\MyPlanLeftItem.js":"67","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\SharePlan\\SharePlanListData.js":"68","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\BoardSampleItem.js":"69","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\SharePlan\\SharePlanListSub.js":"70","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\Modal.js":"71","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\ShareReview.js":"72","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\tour\\ReviewListComp.js":"73","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\tour\\MapComp.js":"74","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipTableB1.js":"75","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipTableB2.js":"76","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipTableA1.js":"77","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipTableA3.js":"78","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipTableA2.js":"79","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipTableA4.js":"80","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\ReviewItem.js":"81","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\ReviewPage.js":"82","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\ReviewList.js":"83","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\Calendar.js":"84","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\Header.js":"85","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\admin\\RowItem.js":"86","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\MobileMyPage.js":"87","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\DeskMyPage.js":"88","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\notice\\NoticePagination.js":"89","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\notice\\BoardItem.js":"90","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\tour\\ReviewItemComp.js":"91","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\MobileMenu.js":"92","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\tour\\DetailReviewComp.js":"93","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\tour\\AroundModal.js":"94","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\tour\\UseModal.js":"95","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\theme.js":"96","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\WaveBorder.js":"97","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipNoticeA.js":"98","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipFareTableA.js":"99","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipIntro.js":"100","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipFareAMobile.js":"101","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipNoticeB.js":"102","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipFareTableB.js":"103","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipFareBMobile.js":"104","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\DayItem.js":"105","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\ClistItem.js":"106","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\ScheduleList.js":"107","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\ScheduleAdd.js":"108","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\menus\\index.js":"109","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\tour\\AroundModalDetail.js":"110","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipFareNotice.js":"111","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\DayDetail.js":"112","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\menus\\Reservation.js":"113","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\menus\\Tour.js":"114","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\menus\\Home.js":"115","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\menus\\MyPage.js":"116","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\menus\\Notice.js":"117","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\menus\\Join.js":"118","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\menus\\Login.js":"119","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\menus\\Admin.js":"120","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\menus\\ShareBoard.js":"121","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\Recommend\\RecommendCourse.js":"122","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\MyBudget.js":"123","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\MyBudgetItem.js":"124"},{"size":1070,"mtime":1612832146641,"results":"125","hashOfConfig":"126"},{"size":14284,"mtime":1612868146973,"results":"127","hashOfConfig":"126"},{"size":375,"mtime":1612832146641,"results":"128","hashOfConfig":"126"},{"size":5905,"mtime":1612868147098,"results":"129","hashOfConfig":"126"},{"size":2289,"mtime":1612868332911,"results":"130","hashOfConfig":"126"},{"size":3145,"mtime":1612868147025,"results":"131","hashOfConfig":"126"},{"size":15934,"mtime":1612845934948,"results":"132","hashOfConfig":"126"},{"size":1391,"mtime":1612832145282,"results":"133","hashOfConfig":"126"},{"size":2675,"mtime":1612832145704,"results":"134","hashOfConfig":"126"},{"size":7930,"mtime":1612832145719,"results":"135","hashOfConfig":"126"},{"size":4281,"mtime":1612832145844,"results":"136","hashOfConfig":"126"},{"size":3651,"mtime":1612832145844,"results":"137","hashOfConfig":"126"},{"size":13385,"mtime":1612845934979,"results":"138","hashOfConfig":"126"},{"size":5080,"mtime":1612832145813,"results":"139","hashOfConfig":"126"},{"size":4297,"mtime":1612832145813,"results":"140","hashOfConfig":"126"},{"size":4467,"mtime":1612832145813,"results":"141","hashOfConfig":"126"},{"size":5139,"mtime":1612845934979,"results":"142","hashOfConfig":"126"},{"size":10753,"mtime":1612832145860,"results":"143","hashOfConfig":"126"},{"size":14958,"mtime":1612832145860,"results":"144","hashOfConfig":"126"},{"size":14541,"mtime":1612832145860,"results":"145","hashOfConfig":"126"},{"size":2557,"mtime":1612832145563,"results":"146","hashOfConfig":"126"},{"size":7173,"mtime":1612845934979,"results":"147","hashOfConfig":"126"},{"size":4177,"mtime":1612832145782,"results":"148","hashOfConfig":"126"},{"size":486,"mtime":1612832145782,"results":"149","hashOfConfig":"126"},{"size":5975,"mtime":1612832145782,"results":"150","hashOfConfig":"126"},{"size":4207,"mtime":1612845934979,"results":"151","hashOfConfig":"126"},{"size":13404,"mtime":1612845934979,"results":"152","hashOfConfig":"126"},{"size":16115,"mtime":1612845934979,"results":"153","hashOfConfig":"126"},{"size":12568,"mtime":1612868147092,"results":"154","hashOfConfig":"126"},{"size":5900,"mtime":1612832145860,"results":"155","hashOfConfig":"126"},{"size":20279,"mtime":1612845934963,"results":"156","hashOfConfig":"126"},{"size":7294,"mtime":1612832145563,"results":"157","hashOfConfig":"126"},{"size":12167,"mtime":1612868147032,"results":"158","hashOfConfig":"126"},{"size":5406,"mtime":1612868147030,"results":"159","hashOfConfig":"126"},{"size":7198,"mtime":1612832145610,"results":"160","hashOfConfig":"126"},{"size":5499,"mtime":1612832145719,"results":"161","hashOfConfig":"126"},{"size":25595,"mtime":1612868147033,"results":"162","hashOfConfig":"126"},{"size":1584,"mtime":1612832145719,"results":"163","hashOfConfig":"126"},{"size":1599,"mtime":1612832145719,"results":"164","hashOfConfig":"126"},{"size":2880,"mtime":1612832145704,"results":"165","hashOfConfig":"126"},{"size":7757,"mtime":1612845934963,"results":"166","hashOfConfig":"126"},{"size":5052,"mtime":1612845934963,"results":"167","hashOfConfig":"126"},{"size":13720,"mtime":1612868147089,"results":"168","hashOfConfig":"126"},{"size":13773,"mtime":1612868147090,"results":"169","hashOfConfig":"126"},{"size":8708,"mtime":1612845934979,"results":"170","hashOfConfig":"126"},{"size":3600,"mtime":1612832145860,"results":"171","hashOfConfig":"126"},{"size":19311,"mtime":1612832145860,"results":"172","hashOfConfig":"126"},{"size":2125,"mtime":1612832145610,"results":"173","hashOfConfig":"126"},{"size":424,"mtime":1612832145610,"results":"174","hashOfConfig":"126"},{"size":1472,"mtime":1612832145610,"results":"175","hashOfConfig":"126"},{"size":1615,"mtime":1612832145563,"results":"176","hashOfConfig":"126"},{"size":7896,"mtime":1612832145610,"results":"177","hashOfConfig":"126"},{"size":1307,"mtime":1612832145610,"results":"178","hashOfConfig":"126"},{"size":3598,"mtime":1612832145563,"results":"179","hashOfConfig":"126"},{"size":2050,"mtime":1612832145563,"results":"180","hashOfConfig":"126"},{"size":2376,"mtime":1612832145547,"results":"181","hashOfConfig":"126"},{"size":2393,"mtime":1612832145860,"results":"182","hashOfConfig":"126"},{"size":4290,"mtime":1612868147031,"results":"183","hashOfConfig":"126"},{"size":32519,"mtime":1612868147034,"results":"184","hashOfConfig":"126"},{"size":23974,"mtime":1612868147090,"results":"185","hashOfConfig":"126"},{"size":5291,"mtime":1612832145704,"results":"186","hashOfConfig":"126"},{"size":713,"mtime":1612832145610,"results":"187","hashOfConfig":"126"},{"size":263,"mtime":1612832145516,"results":"188","hashOfConfig":"126"},{"size":2100,"mtime":1612832145719,"results":"189","hashOfConfig":"126"},{"size":4432,"mtime":1612832145563,"results":"190","hashOfConfig":"126"},{"size":1559,"mtime":1612845934963,"results":"191","hashOfConfig":"126"},{"size":4078,"mtime":1612832145719,"results":"192","hashOfConfig":"126"},{"size":1760,"mtime":1612832145547,"results":"193","hashOfConfig":"126"},{"size":544,"mtime":1612832145704,"results":"194","hashOfConfig":"126"},{"size":1601,"mtime":1612832145563,"results":"195","hashOfConfig":"126"},{"size":1019,"mtime":1612832145844,"results":"196","hashOfConfig":"126"},{"size":1600,"mtime":1612832145860,"results":"197","hashOfConfig":"126"},{"size":4077,"mtime":1612832145860,"results":"198","hashOfConfig":"126"},{"size":18947,"mtime":1612832145860,"results":"199","hashOfConfig":"126"},{"size":2288,"mtime":1612832145844,"results":"200","hashOfConfig":"126"},{"size":2664,"mtime":1612832145844,"results":"201","hashOfConfig":"126"},{"size":5480,"mtime":1612832145844,"results":"202","hashOfConfig":"126"},{"size":5845,"mtime":1612832145844,"results":"203","hashOfConfig":"126"},{"size":5653,"mtime":1612832145844,"results":"204","hashOfConfig":"126"},{"size":6036,"mtime":1612832145844,"results":"205","hashOfConfig":"126"},{"size":11356,"mtime":1612832145844,"results":"206","hashOfConfig":"126"},{"size":2104,"mtime":1612832145782,"results":"207","hashOfConfig":"126"},{"size":2634,"mtime":1612832145782,"results":"208","hashOfConfig":"126"},{"size":11765,"mtime":1612832145735,"results":"209","hashOfConfig":"126"},{"size":8593,"mtime":1612868147035,"results":"210","hashOfConfig":"126"},{"size":563,"mtime":1612832145563,"results":"211","hashOfConfig":"126"},{"size":7343,"mtime":1612845934979,"results":"212","hashOfConfig":"126"},{"size":10177,"mtime":1612845934963,"results":"213","hashOfConfig":"126"},{"size":2490,"mtime":1612832145813,"results":"214","hashOfConfig":"126"},{"size":1518,"mtime":1612832145813,"results":"215","hashOfConfig":"126"},{"size":9236,"mtime":1612832145860,"results":"216","hashOfConfig":"126"},{"size":12057,"mtime":1612832145297,"results":"217","hashOfConfig":"126"},{"size":7377,"mtime":1612832145860,"results":"218","hashOfConfig":"126"},{"size":983,"mtime":1612832145860,"results":"219","hashOfConfig":"126"},{"size":449,"mtime":1612832145860,"results":"220","hashOfConfig":"126"},{"size":602,"mtime":1612832145735,"results":"221","hashOfConfig":"126"},{"size":5153,"mtime":1612832145719,"results":"222","hashOfConfig":"126"},{"size":603,"mtime":1612832145844,"results":"223","hashOfConfig":"126"},{"size":5580,"mtime":1612832145844,"results":"224","hashOfConfig":"126"},{"size":1061,"mtime":1612832145844,"results":"225","hashOfConfig":"126"},{"size":7163,"mtime":1612832145844,"results":"226","hashOfConfig":"126"},{"size":672,"mtime":1612832145844,"results":"227","hashOfConfig":"126"},{"size":5564,"mtime":1612832145844,"results":"228","hashOfConfig":"126"},{"size":7163,"mtime":1612832145844,"results":"229","hashOfConfig":"126"},{"size":1889,"mtime":1612832145735,"results":"230","hashOfConfig":"126"},{"size":8018,"mtime":1612832145735,"results":"231","hashOfConfig":"126"},{"size":1603,"mtime":1612868147070,"results":"232","hashOfConfig":"126"},{"size":3537,"mtime":1612832145782,"results":"233","hashOfConfig":"126"},{"size":618,"mtime":1612832145516,"results":"234","hashOfConfig":"126"},{"size":4440,"mtime":1612868147091,"results":"235","hashOfConfig":"126"},{"size":739,"mtime":1612832145844,"results":"236","hashOfConfig":"126"},{"size":3590,"mtime":1612832145735,"results":"237","hashOfConfig":"126"},{"size":323,"mtime":1612832145516,"results":"238","hashOfConfig":"126"},{"size":255,"mtime":1612832145516,"results":"239","hashOfConfig":"126"},{"size":1507,"mtime":1612832145485,"results":"240","hashOfConfig":"126"},{"size":291,"mtime":1612832145485,"results":"241","hashOfConfig":"126"},{"size":297,"mtime":1612832145485,"results":"242","hashOfConfig":"126"},{"size":326,"mtime":1612832145485,"results":"243","hashOfConfig":"126"},{"size":288,"mtime":1612832145485,"results":"244","hashOfConfig":"126"},{"size":288,"mtime":1612832145485,"results":"245","hashOfConfig":"126"},{"size":315,"mtime":1612832145516,"results":"246","hashOfConfig":"126"},{"size":21044,"mtime":1612870303493,"results":"247","hashOfConfig":"126"},{"size":4041,"mtime":1612868147036,"results":"248","hashOfConfig":"126"},{"size":950,"mtime":1612868147069,"results":"249","hashOfConfig":"126"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},"am3crx",{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"252"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"252"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"252"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"252"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"252"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"252"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"252"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"252"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"252"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"252"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"252"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"252"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"252"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"252"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"252"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"252"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"252"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"252"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"252"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"252"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"252"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"252"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"252"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"252"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"252"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"252"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"252"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"252"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"252"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"252"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"252"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"252"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"252"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"252"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"252"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"252"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"252"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"252"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"252"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"252"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"252"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"252"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"252"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"252"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"252"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"252"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":"415","usedDeprecatedRules":"252"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"252"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"252"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"252"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"252"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"252"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"252"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"252"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"252"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"252"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"252"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"252"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"252"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"252"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"252"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"252"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"252"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"252"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"252"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"252"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"252"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"252"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"252"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"252"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"252"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"252"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511","usedDeprecatedRules":"252"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"252"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"252"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"252"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"252"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"252"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"252"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"252"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"252"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"252"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557","usedDeprecatedRules":"252"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"252"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"252"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"252"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"252"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"252"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"577","usedDeprecatedRules":"252"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"252"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"252"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"586","messages":"587","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588","usedDeprecatedRules":"252"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\index.js",[],["591","592"],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\App.js",["593","594"],"import React, {Component} from \"react\";\r\nimport {\r\n    BrowserRouter,\r\n    Route,\r\n    Switch\r\n} from \"react-router-dom\";\r\nimport Menu from \"./component/header/Menu\";\r\nimport gsap, {Cubic, Quint} from \"gsap\";\r\nimport '@progress/kendo-theme-default/dist/all.css';\r\nimport \"./App.css\";\r\n// import {NavLink, Route} from \"react-router-dom\";\r\n// import {Home, Login, ShareBoard, MyPage, Notice, Reservation, Admin, TourList, Tour} from './component/header/menus';\r\n\r\nimport MainPageComp from \"./component/main/mainpage/MainPageComp\";\r\nimport ReservationPageComp from \"./component/main/reservation/ReservationPageComp\";\r\nimport RentCarPageComp from \"./component/main/reservation/RentCarPageComp\";\r\nimport ShipPageComp from \"./component/main/reservation/ShipPageComp\";\r\nimport NoticePageComp from \"./component/main/notice/NoticePageComp\";\r\nimport ShareBoardPageComp from \"./component/main/shareboard/ShareBoardPageComp\";\r\nimport LoginPageComp from \"./component/main/auth/LoginPageComp\";\r\nimport MemberListPageComp from \"./component/main/admin/MemberListPageComp\";\r\nimport MypagePageComp from \"./component/main/mypage/MypagePageComp\";\r\nimport TourPageComp from \"./component/main/tour/TourPageComp\";\r\nimport SignupPageComp from \"./component/main/join/SignupPageComp\";\r\nimport FooterComp from \"./component/footer/FooterComp\";\r\nimport DetailTourComp from \"./component/main/tour/DetailTourComp\";\r\nimport ShareBoardFormComp from \"./component/main/shareboard/ShareBoardFormComp\";\r\nimport ShareBoardUpdateForm from \"./component/main/shareboard/ShareBoardUpdateForm\";\r\nimport NoticeContent from \"./component/main/notice/NoticeContent\";\r\nimport NoticeAddForm from \"./component/main/notice/NoticeAddForm\";\r\nimport NoticeUpdate from './component/main/notice/NoticeUpdateForm';\r\nimport store from \"./redux/store\";\r\nimport {actionType} from \"./redux/config\";\r\nimport SearchResultComp from \"./component/main/mainpage/SearchResultComp\";\r\nimport SharePlanPageComp from \"./component/main/SharePlan/SharePlanPageComp\";\r\nimport MySchedule from \"./component/main/mypage/MySchedule\";\r\nimport MyReview from \"./component/main/mypage/MyReview\";\r\nimport MyWishlist from \"./component/main/mypage/MyWishlist\";\r\nimport PassCheck from \"./component/main/mypage/PassCheck\";\r\nimport SocialUpdateForm from \"./component/main/mypage/SocialUpdateForm\";\r\nimport MemberUpdateFormComp from \"./component/main/mypage/MemberUpdateFormComp\";\r\nimport ChattingRoom from './component/main/SharePlan/ChattingRoom';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport ChatCompPage from \"./component/main/SharePlan/ChatCompPage\";\r\nimport ChattingLogic from \"./ChattingLogic\";\r\nimport RecommendCourse from \"./component/main/Recommend/RecommendCourse\";\r\n\r\nlet confirmLs = localStorage.getItem(\"com.naver.nid.access_token\");\r\n\r\nconst footerStyle = {\r\n    sizeIn: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        bottom: \"2.0%\",\r\n    },\r\n    sizeOver: {\r\n        width: \"100%\",\r\n    }\r\n}\r\n\r\nconst setPositionFooter = () => {\r\n    let menuElement = document.querySelector(\".menu\");\r\n    let mainFrameElement = document.querySelector(\".mainFrame\");\r\n\r\n    let menuHeight = (menuElement) ? menuElement.offsetHeight : 0;\r\n    let mainFrameHeight = (mainFrameElement) ? mainFrameElement.offsetHeight : 0;\r\n    let footerComp = document.querySelector(\".footerComp\");\r\n    let topContentHeight = menuHeight + mainFrameHeight;\r\n    // console.log(mainFrameHeight, menuHeight, topContentHeight, window.visualViewport.height);\r\n\r\n    if (footerComp) {\r\n        if (window.visualViewport.height > topContentHeight) {\r\n            footerComp.style.width = footerStyle.sizeIn.width;\r\n            footerComp.style.position = footerStyle.sizeIn.position;\r\n            footerComp.style.bottom = footerStyle.sizeIn.bottom;\r\n        } else {\r\n            footerComp.style.width = footerStyle.sizeOver.width;\r\n            footerComp.style.position = \"\";\r\n            footerComp.style.bottom = \"\";\r\n        }\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isStaticHeader: true,\r\n            mainview: \"mainpage\",\r\n            // footerPositionType: \"\",\r\n\r\n            logged: false,\r\n            onLogin: this.onLogin,\r\n            onLogout: this.onLogout,\r\n\r\n            chattingRoomListInfo: [],\r\n        }\r\n\r\n        // window.onmousewheel = function (e) {\r\n        //     // console.log(window.scrollY);\r\n        //     this.showHeader(window.scrollY);\r\n        // }.bind(this);\r\n        // window.onscroll = function (e) {\r\n        //     // console.log(window.scrollY);\r\n        //     this.showHeader(window.scrollY);\r\n        // }.bind(this);\r\n\r\n        window.addEventListener(\"scroll\", this.showHeader);\r\n\r\n        if (confirmLs !== undefined) {\r\n            this.setState({\r\n                logged: true,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                logged: false,\r\n            });\r\n        }\r\n\r\n        store.dispatch({\r\n            type: actionType.setChatWindow,\r\n            isOpenChatWindow: false,\r\n        });\r\n        store.dispatch({\r\n            type: actionType.setIsChatAutoUpdate,\r\n            isChatAutoUpdate: false,\r\n        });\r\n\r\n        store.subscribe(function () {\r\n            if (store.getState().publishFunctionMsg == \"chattingRoomListInfo\") {\r\n                let chat = new ChattingLogic();\r\n                chat.getRoomList((res) => {\r\n                    console.log(res);\r\n                    this.setChattingRoomListInfo(res.data);\r\n                    store.dispatch({\r\n                        type: actionType.chattingRoomListInfo,\r\n                        chattingRoomListInfo: res.data,\r\n                    });\r\n                });\r\n\r\n                store.dispatch({\r\n                    type: actionType.publishFunctionMsg,\r\n                    publishFunctionMsg: \"\",\r\n                });\r\n            }\r\n        }.bind(this));\r\n    }\r\n\r\n\r\n    setChattingRoomListInfo = (data) => {\r\n        this.setState({\r\n            chattingRoomListInfo: data,\r\n        });\r\n    }\r\n\r\n\r\n    showHeader = () => {\r\n        let scrollVal = window.scrollY;\r\n        const isStaticHeader = this.state.isStaticHeader;\r\n        if (scrollVal > 0) {\r\n            if (!isStaticHeader) {\r\n                this.setState({\r\n                    isStaticHeader: true\r\n                });\r\n                gsap.to(\"div.hide\", {\r\n                    y: 70,\r\n                    duration: 1\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({\r\n                isStaticHeader: false\r\n            });\r\n            gsap.to(\"div.hide\", {\r\n                y: -70,\r\n                duration: 1\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    // Login 함수\r\n    onLogin = () => {\r\n        this.setState({\r\n            logged: true\r\n        });\r\n    }\r\n\r\n    // Logout 함수\r\n    onLogout = () => {\r\n        this.setState({\r\n            logged: false\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        store.dispatch({\r\n            type: actionType.setMainView,\r\n        });\r\n    }\r\n\r\n    componentWillMount() {\r\n        window.setTimeout(setPositionFooter, 1000);\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState, nextContext) {\r\n        window.setTimeout(setPositionFooter, 1000);\r\n    }\r\n\r\n    render() {\r\n        let {logged} = this.state;\r\n\r\n        return (\r\n            <BrowserRouter>\r\n                <Menu logged={logged}\r\n                      type=\"hide\"\r\n                />\r\n                <Menu logged={logged}\r\n                      type=\"normal\"\r\n                />\r\n                <div className=\"chatting\">\r\n                    {/*항상떠있는 아이콘*/}\r\n                    <div\r\n                        className=\"chattingIconBack\"\r\n                    ><ChatIcon\r\n                        className=\"chattingIcon\"\r\n                        onClick={(e) => {\r\n                            let duration = 1.0;\r\n                            let ease = Quint.easeInOut;\r\n\r\n                            if (store.getState().isOpenChatWindow) {\r\n                                //닫기.\r\n                                gsap.to(\"div.chatting div.chattingWindow\", {\r\n                                    transform: \"scale(0.1)\",\r\n                                    opacity: 0,\r\n                                    duration: duration,\r\n                                    ease: ease,\r\n                                });\r\n                                store.dispatch({\r\n                                    type: actionType.setChatWindow,\r\n                                    isOpenChatWindow: false,\r\n                                });\r\n                            } else {\r\n                                //통신먼저 하고 결과값으로 액션.\r\n                                let chat = new ChattingLogic();\r\n                                chat.getRoomList((res) => {\r\n                                    console.log(res);\r\n                                    /*\r\n                                    0: {num: \"33\", user1: \"yangyk7364\", user2: \"sanghee\"}\r\n                                    1: {num: \"34\", user1: \"3color\", user2: \"yangyk7364\"}\r\n                                    2: {num: \"50\", user1: \"yangyk7364\", user2: \"asdf\"}\r\n                                    * */\r\n\r\n                                    /*//여기서 res.data.map 돌면서 lastMsg get.\r\n                                    res.data.map((e, i) => {\r\n                                        chat.getLastMsg(e.num, (res) => {\r\n\r\n                                        });\r\n                                    });*/\r\n\r\n                                    gsap.to(\"div.chatting div.chattingWindow\", {\r\n                                        transform: \"scale(1)\",\r\n                                        opacity: 1,\r\n                                        duration: duration,\r\n                                        ease: ease,\r\n                                    });\r\n                                    store.dispatch({\r\n                                        type: actionType.setChatWindow,\r\n                                        isOpenChatWindow: true,\r\n                                    });\r\n                                    store.dispatch({\r\n                                        type: actionType.chattingRoomListInfo,\r\n                                        chattingRoomListInfo: res.data,\r\n                                    });\r\n                                    store.dispatch({\r\n                                        type: actionType.publishFunctionMsg,\r\n                                        publishFunctionMsg: \"changeChatAction\",\r\n                                    });\r\n                                    this.setState({\r\n                                        chattingRoomListInfo: res.data,\r\n                                    });\r\n                                });\r\n                            }\r\n                        }}\r\n                    /></div>\r\n\r\n                    {/*아이콘을 누르면 나오는 채팅 창.*/}\r\n                    <div className=\"chattingWindow\"\r\n                         style={{\r\n                             transform: \"scale(0.1)\",\r\n                             opacity: \"0\",\r\n                         }}\r\n                    >\r\n                        <ChatCompPage chattingRoomListInfo={this.state.chattingRoomListInfo}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mainFrame\"\r\n                >\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={MainPageComp}/>\r\n\r\n                        {/*test*/}\r\n                        <Route path=\"/search/:category?/:keyword?/:pageNum?\" component={SearchResultComp}/>\r\n\r\n                        <Route path=\"/admin/:name?\" component={MemberListPageComp}/>\r\n                        <Route path=\"/login/:name?\">\r\n                            <LoginPageComp/>\r\n                        </Route>\r\n                        <Route path=\"/join/:name?\" component={SignupPageComp}/>\r\n                        <Route exact path=\"/mypage\" component={MypagePageComp}/>\r\n                        <Route path=\"/mypage/social/:num?\" component={SocialUpdateForm}/>\r\n                        <Route path=\"/mypage/update/:num?\" component={MemberUpdateFormComp}/>\r\n                        <Route path=\"/mypage/plan/:num?\" component={MySchedule}/>\r\n                        <Route path=\"/mypage/review/:num?\" component={MyReview}/>\r\n                        <Route path=\"/mypage/reservation/:num?\" component={MyWishlist}/>\r\n                        <Route path=\"/mypage/pass/:name?\" component={PassCheck}/>\r\n                        <Route exact path=\"/share/insert\" component={ShareBoardFormComp}/>\r\n                        <Route path=\"/share/update/:num?/:pageNum?\" component={ShareBoardUpdateForm}/>\r\n                        <Route path=\"/share/:pageNum?\" component={ShareBoardPageComp}/>\r\n                        <Route path=\"/tour/:name?\" component={DetailTourComp}/>\r\n                        <Route exact path=\"/notice/:pageNum?\" component={NoticePageComp}/>\r\n                        <Route path=\"/notice/content/:num?\" component={NoticeContent}/>\r\n                        <Route path=\"/notice/update/:num?\" component={NoticeUpdate}/>\r\n                        <Route path=\"/noticeInsert\" component={NoticeAddForm}/>\r\n                        <Route path=\"/air/:name?\" component={ReservationPageComp}/>\r\n                        <Route path=\"/car/:name?\" component={RentCarPageComp}/>\r\n                        <Route path=\"/ship/:name?\" component={ShipPageComp}/>\r\n                        <Route path=\"/tourlist/:name?/:pageNum?\" component={TourPageComp}/>\r\n                        <Route path=\"/shareplan/:name?/\" component={SharePlanPageComp}/>\r\n                        <Route path=\"/chattingroom/:num?\" component={ChattingRoom}/>\r\n                        <Route path=\"/Recommend\" component={RecommendCourse}/>\r\n                    </Switch>\r\n                    <div className=\"footerComp\"\r\n                    >\r\n                        <FooterComp/>\r\n                    </div>\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\reportWebVitals.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\redux\\store.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\redux\\config.js",["595","596","597","598","599"],"import {useSelector, useDispatch} from \"react-redux\";\r\nimport axios from 'axios';\r\nimport React, {useEffect} from \"react\";\r\nimport {} from \"../component/main/admin/MemberListPageComp\";\r\n\r\n\r\n\r\nexport const URL = \"http://ec2-3-36-28-35.ap-northeast-2.compute.amazonaws.com:8080/FinalProjectSpringBoot2\";\r\n//export const URL = \"http://localhost:9002\";\r\n\r\n\r\n\r\n\r\nexport const boardActionType = {\r\n    write: \"write\",\r\n    read: \"read\",\r\n    update: \"update\",\r\n    delete: \"delete\",\r\n}\r\n\r\nexport const arrJejuLoc_en = [\r\n    \"jeju\",\r\n    \"jocheon\",\r\n    \"gujwa\",\r\n    \"sungsan\",\r\n    \"pyoseon\",\r\n    \"namwon\",\r\n    \"andeok\",\r\n    \"daejung\",\r\n    \"hangyeong\",\r\n    \"hanrim\",\r\n    \"aewol\",\r\n    \"udo\",\r\n    \"seogwipo\",\r\n]\r\n\r\nexport const arrJejuLoc_ko = [\r\n    \"제주\",\r\n    \"조천\",\r\n    \"구좌\",\r\n    \"성산\",\r\n    \"표선\",\r\n    \"남원\",\r\n    \"안덕\",\r\n    \"대정\",\r\n    \"한경\",\r\n    \"한림\",\r\n    \"애월\",\r\n    \"우도\",\r\n    \"서귀포\",\r\n]\r\n\r\nexport const actionType = {\r\n    setMainView: \"setMainView\",\r\n    SIGN_UP: \"SIGN_UP\",\r\n    LOG_IN: \"LOG_IN\",\r\n    LOG_OUT: \"LOG_OUT\",\r\n    LOGIN_REQUEST: \"LOGIN_REQUEST\",\r\n    LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\r\n    LOGIN_FAILURE: \"LOGIN_FAILURE\",\r\n    MEMBER_LIST: \"MEMBER_LIST\", // 회원 리스트 요청 시작\r\n    MB_LIST_S: \"MB_LIST_S\", // 회원 리스트 요청 성공\r\n    MB_LIST_F: \"MB_LIST_F\", // 회원 리스트 요청 실패\r\n    shareBoardUpdate: \"shareBoardUpdate\",\r\n    setSearchResultDataList: \"setSearchResultDataList\",\r\n    googleLogin: \"googleLogin\",\r\n    googleLogout: \"googleLogout\",\r\n    weatherUpdate: \"weatherUpdate\",\r\n    setChatWindow: \"setChatWindow\",\r\n    setSelectedRoomNum: \"setSelectedRoomNum\",\r\n    setIsChatAutoUpdate: \"setIsChatAutoUpdate\",\r\n    publishFunctionMsg: \"publishFunctionMsg\",\r\n    chattingRoomListInfo: \"chattingRoomListInfo\",\r\n    selectedChattingRoomMsgList: \"selectedChattingRoomMsgList\",\r\n}\r\n\r\nexport const mainViewType = {\r\n    MainPage: \"mainPage\",\r\n    Home: \"home\",\r\n    Login: \"login\",\r\n    Logout: \"Logout\",\r\n    MyPage: \"myPage\",\r\n    Notice: \"notice\",\r\n    Reservation: \"reservation\",\r\n    ShareBoard: \"shareBoard\",\r\n    Tour: \"tour\",\r\n    TourList: \"tourList\",\r\n    Admin: \"admin\",\r\n    JoinForm: \"joinForm\",\r\n    SearchResult: \"searchResult\",\r\n    Recommend: \"recommend\",\r\n}\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\ChattingLogic.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\Menu.js",["600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644"],"import React, {Component} from 'react';\r\nimport {NavLink, Route} from \"react-router-dom\";\r\nimport {Home, Login, ShareBoard, MyPage, Notice, Reservation, Admin, TourList, Tour} from './menus';\r\nimport store from \"../../redux/store\";\r\nimport {actionType, mainViewType} from \"../../redux/config\";\r\nimport \"./Menu.css\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport MobileMenu from './MobileMenu';\r\n\r\nclass Menu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // console.log(\"Menu constructor \", this.props)\r\n\r\n        this.state = {\r\n            type: this.props.type,\r\n            onLogin: this.props.onLogin,\r\n            onLogout: this.props.onLogout,\r\n            logged: store.getState().logged,\r\n            drawerOpen: false,\r\n            drawerSetOpen: false\r\n        }\r\n\r\n        store.subscribe(function () {\r\n            console.log(\"Menu subscribe()\", store.getState().logged);\r\n            this.setState({\r\n                logged: store.getState().logged,\r\n            });\r\n        }.bind(this));\r\n    }\r\n\r\n    setMainView = (mainView) => {\r\n        console.log(\"Home setMainView()\");\r\n        store.dispatch({\r\n            type: actionType.setMainView,\r\n            // mainView: mainViewType.MainPage\r\n            mainView: mainView\r\n        });\r\n    }\r\n\r\n    setLogOut = () => {\r\n        console.log(\"Menu setLogOut()\");\r\n\r\n        store.dispatch({\r\n            type: actionType.LOG_OUT,\r\n            // mainView: mainViewType.MainPage\r\n            loginId: '',\r\n            logged: false,\r\n            googleOn: false\r\n        });\r\n    }\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState({\r\n            drawerOpen: true\r\n        })\r\n    };\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState({\r\n            drawerOpen: false\r\n        })\r\n    };\r\n\r\n    // drawer = ()=> (\r\n    //     <div style={{width: '240px'}}\r\n    //         role=\"presentation\"\r\n    //         onClick={this.handleDrawerClose.bind(this)}\r\n    //         onKeyDown={this.handleDrawerClose.bind(this)}>\r\n    //       <Divider />\r\n    //       <List>\r\n    //           <ListItem>\r\n    //             <NavLink exact to=\"/\"\r\n    //                     onClick={() => {\r\n    //                         console.log(\"Home NavLink onClick\");\r\n    //                         this.setMainView(mainViewType.MainPage);\r\n    //                     }}\r\n    //             >\r\n    //                 Home\r\n    //             </NavLink>\r\n    //           </ListItem>\r\n    //       </List>\r\n    //       <Divider />\r\n    //       <List>\r\n    //           <ListItem><a href=\"/tourlist/jeju/1\">제주</a></ListItem>\r\n    //           <ListItem><a href=\"/tourlist/jocheon/1\">조천</a></ListItem>\r\n    //           <ListItem><a href=\"/tourlist/gujwa/1\">구좌</a></ListItem>\r\n    //           <ListItem><a href=\"/tourlist/sungsan/1\">성산</a></ListItem>\r\n    //           <ListItem><a href=\"/tourlist/pyoseon/1\">표선</a></ListItem>\r\n    //           <ListItem><a href=\"/tourlist/namwon/1\">남원</a></ListItem>\r\n    //           <ListItem><a href=\"/tourlist/seogwipo/1\">서귀포</a></ListItem>\r\n    //           <ListItem><a href=\"/tourlist/andeok/1\">안덕</a></ListItem>\r\n    //           <ListItem><a href=\"/tourlist/daejung/1\">대정</a></ListItem>\r\n    //           <ListItem><a href=\"/tourlist/hangyeong/1\">한경</a></ListItem>\r\n    //           <ListItem><a href=\"/tourlist/hanrim/1\">한림</a></ListItem>\r\n    //           <ListItem><a href=\"/tourlist/aewol/1\">애월</a></ListItem>\r\n    //           <ListItem><a href=\"/tourlist/udo/1\">우도</a></ListItem>\r\n    //       </List>\r\n    //       <Divider />\r\n    //       <List>\r\n    //           <ListItem><a href=\"/share/1\">맛집 공유</a></ListItem>\r\n    //           <ListItem><a href=\"/shareplan\">일정 공유</a></ListItem>\r\n    //       </List>\r\n    //       <Divider />\r\n    //       <List>\r\n    //           <ListItem><a href=\"/reservation\">항공 / 렌터카예약</a></ListItem>\r\n    //       </List>\r\n    //       <Divider />\r\n    //       <List>\r\n    //           <ListItem><a href=\"/notice/1\">공지사항</a></ListItem>\r\n    //       </List>\r\n    //       <Divider/>\r\n    //       <List>\r\n    //           <ListItem><a href=\"/\" onClick={\r\n    //                             ()=>{\r\n    //                                 console.log(\"Logout NavLink onClick\");\r\n    //                                 this.setMainView(mainViewType.MainPage);\r\n    //                                 this.setLogOut();\r\n    //                             }\r\n    //                         }>Logout</a></ListItem>\r\n    //       </List>\r\n    //     </div>\r\n    //   );\r\n\r\n    render() {\r\n        // console.log(\"메뉴에서 스토어 상태 : \" + store.getState().loginId);\r\n        // console.log(\"메뉴에서 스토어 로그인 상태 : \" + store.getState().logged);\r\n        // 부모컴포넌트(App->HeaderComp)에서 받아온 logged, onLogout을 통해 로그인 전에는 '로그인'을 로그인 후에는 '로그아웃'으로 글씨 변경\r\n        // 로그아웃일 경우 onLogout함수를 통해 logged를 다시 false로 바꿔준다.\r\n        // 부모컴포넌트가 HeaderComp->App이므로 props를 통해 value를 전달받을 수 있다. 그러나 Login컴포넌트의경우는 여러번 전달해야함.\r\n        // 따라서 전역적인 상태가 필요하다.\r\n\r\n\r\n        // let {logged} = this.props;\r\n        // console.log(\"Menu render \", this.props);\r\n\r\n        var className_div_menu = `${this.state.type} menu`;\r\n\r\n        var tag = document.body.offsetWidth > 450?\r\n            <div className={className_div_menu}>\r\n            <ul className=\"menu\">\r\n                <li className=\"logo\">\r\n                    <NavLink exact to=\"/\"\r\n                            onClick={() => {\r\n                                console.log(\"Home NavLink onClick\");\r\n                                this.setMainView(mainViewType.MainPage);\r\n                            }}\r\n                    >\r\n                        Home\r\n                    </NavLink>\r\n                </li>\r\n\r\n                {/* <li>\r\n                    <NavLink exact to=\"/admin\"\r\n                            onClick={() => {\r\n                                console.log(\"Admin NavLink onClick\");\r\n                                this.setMainView(mainViewType.Admin);\r\n                            }}\r\n                    >Admin</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink exact to=\"/join\"\r\n                            onClick={() => {\r\n                                console.log(\"Join NavLink onClick\");\r\n                                this.setMainView(mainViewType.JoinForm);\r\n                            }}\r\n                    >Join</NavLink>\r\n                </li> */}\r\n\r\n                <li className=\"dropdown\">\r\n                    <a className=\"dropdownTitle\">Tour</a>\r\n                        {/*<div class=\"dropdown-content\" >*/}\r\n                        <div className=\"dropdown-content\" >\r\n                            <a href=\"/tourlist/jeju/1\">제주</a>\r\n                            <a href=\"/tourlist/jocheon/1\">조천</a>\r\n                            <a href=\"/tourlist/gujwa/1\">구좌</a>\r\n                            <a href=\"/tourlist/sungsan/1\">성산</a>\r\n                            <a href=\"/tourlist/pyoseon/1\">표선</a>\r\n\r\n                            <a href=\"/tourlist/namwon/1\">남원</a>\r\n                            <a href=\"/tourlist/seogwipo/1\">서귀포</a>\r\n                            <a href=\"/tourlist/andeok/1\">안덕</a>\r\n                            <a href=\"/tourlist/daejung/1\">대정</a>\r\n                            <a href=\"/tourlist/hangyeong/1\">한경</a>\r\n\r\n                            <a href=\"/tourlist/hanrim/1\">한림</a>\r\n                            <a href=\"/tourlist/aewol/1\">애월</a>\r\n                            <a href=\"/tourlist/udo/1\">우도</a>\r\n                        </div>\r\n                </li>\r\n                <li>\r\n                        <NavLink exact to=\"/Recommend\"\r\n                                onClick={() => {\r\n                                    this.setMainView(mainViewType.Recommend);\r\n                                }}\r\n                        >Recommend</NavLink>\r\n                    </li>\r\n                {/* <li>\r\n                <NavLink exact to=\"/share\"\r\n                            onClick={() => {\r\n                                console.log(\"ShareBoard NavLink onClick\");\r\n                                this.setMainView(mainViewType.ShareBoard);\r\n                            }}\r\n                    >Share</NavLink>\r\n                </li> */}\r\n                <li className=\"dropdown\">\r\n                    <a className=\"dropdownTitle\">Share</a>\r\n                        <div className=\"dropdown-content\" >\r\n                            <a href=\"/share/1\">맛집 공유</a>\r\n                            <a href=\"/shareplan\">일정 공유</a>\r\n                        </div>\r\n                </li>\r\n                <li className=\"dropdown\">\r\n                    <a className=\"dropdownTitle\">Traffic</a>\r\n                        <div className=\"dropdown-content\" >\r\n                            <a href=\"/air\">Air</a>\r\n                            <a href=\"/car\">Rentcar</a>\r\n                            <a href=\"/ship\">Ship</a>\r\n                        </div>\r\n                    {/* <NavLink exact to=\"/reservation\"\r\n                            onClick={() => {\r\n                                console.log(\"Reservation NavLink onClick\");\r\n                                this.setMainView(mainViewType.Reservation);\r\n                            }}\r\n                    >Reservation</NavLink> */}\r\n                </li>\r\n                <li>\r\n                    <NavLink exact to=\"/notice/1\"\r\n                            onClick={() => {\r\n                                console.log(\"Notice NavLink onClick\");\r\n                                this.setMainView(mainViewType.Notice);\r\n                            }}\r\n                    >Notice</NavLink>\r\n                </li>\r\n                {this.state.logged ?\r\n                    <li className=\"dropdown\">\r\n                        <a className=\"dropdownTitle\">My</a>\r\n                        <div className=\"dropdown-content\" >\r\n                            <a href=\"/mypage\">MyPage</a>\r\n                            <a href=\"/\" onClick={\r\n                                ()=>{\r\n                                    console.log(\"Logout NavLink onClick\");\r\n                                    this.setMainView(mainViewType.MainPage);\r\n                                    this.setLogOut();\r\n                                }\r\n                            }>Logout</a>\r\n\r\n                        </div>\r\n                    </li>:\r\n                    <li>\r\n                        <NavLink exact to=\"/login\"\r\n                                onClick={() => {\r\n                                    console.log(\"Login NavLink onClick\");\r\n                                    this.setMainView(mainViewType.Login);\r\n                                }}\r\n                        >Login</NavLink>\r\n                    </li>\r\n                    }\r\n                </ul>\r\n            </div>:\r\n            // 모바일 메누\r\n            <div className={className_div_menu}>\r\n                <MobileMenu setMainView={this.setMainView.bind(this)} setLogOut={this.setLogOut.bind(this)} history={this.props.history}/>\r\n            </div>\r\n            // <div className={className_div_menu}>\r\n            //     <ul className=\"mobilemenu\">\r\n            //     <li>\r\n            //                 <IconButton\r\n            //                     color=\"inherit\"\r\n            //                     aria-label=\"open drawer\"\r\n            //                     onClick={this.handleDrawerOpen.bind(this)}\r\n            //                     edge=\"start\"\r\n            //                 >\r\n            //                     <MenuIcon />\r\n            //                 </IconButton>\r\n            //                 <SwipeableDrawer\r\n            //                     anchor='left'\r\n            //                     open={this.state.drawerOpen}\r\n            //                     onClose={this.handleDrawerClose.bind(this)}\r\n            //                     onOpen={this.handleDrawerOpen.bind(this)}\r\n            //                 >\r\n            //                     {this.drawer()}\r\n            //                 </SwipeableDrawer>\r\n            //             </li>\r\n            //             <li style={{textAlign: 'center'}}>Title</li>\r\n            //             {this.state.logged ?\r\n            //                 <li>\r\n            //                     <NavLink exact to=\"/mypage\"\r\n            //                             onClick={() => {\r\n            //                                 console.log(\"mypage NavLink onClick\");\r\n            //                                 this.setMainView(mainViewType.MyPage);\r\n            //                             }}\r\n            //                     >\r\n            //                         <IconButton >\r\n            //                             <AccountCircleIcon/>\r\n            //                         </IconButton>\r\n            //                     </NavLink>\r\n            //                 </li>:\r\n            //                 <li>\r\n            //                     <NavLink exact to=\"/login\"\r\n            //                             onClick={() => {\r\n            //                                 console.log(\"Login NavLink onClick\");\r\n            //                                 this.setMainView(mainViewType.Login);\r\n            //                             }}\r\n            //                     >\r\n            //                         <IconButton >\r\n            //                             <AccountCircleIcon/>\r\n            //                         </IconButton>\r\n            //                     </NavLink>\r\n            //                 </li>\r\n            //                 }\r\n            //     </ul>\r\n            // </div>\r\n            ;\r\n        return (\r\n            <div>\r\n                {tag}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;\r\n\r\n\r\n                {/*<hr style={{clear: 'both'}}/>*/}\r\n\r\n                {/* <Route exact path=\"/\"> */}\r\n                    {/*<Home></Home>*/}\r\n                {/* </Route> */}\r\n                {/* <Route exact path=\"/Reservation/:name?\"> */}\r\n                    {/*<Reservation></Reservation>*/}\r\n                {/* </Route> */}\r\n                 {/* <Route exact path=\"/Notice/:name?\"> */}\r\n                    {/*<Notice></Notice>*/}\r\n                {/* </Route> */}\r\n\r\n                {/* <Route exact path=\"/TourList/:name?\" component={TourList}></Route> */}\r\n                {/* <Route exact path=\"/TourList/:name?\" component={TourPageComp}></Route> */}\r\n                {/* <Route exact path=\"/Tour/:name?\" component={Tour}></Route> */}\r\n\r\n                {/* <Route exact path=\"/ShareBoard/:name?\"> */}\r\n                    {/*<ShareBoard></ShareBoard>*/}\r\n                {/* </Route> */}\r\n                {/* <Route exact path=\"/MyPage/:name?\" component={MyPage}> */}\r\n                    {/*<MyPage></MyPage>*/}\r\n                {/* </Route>\r\n                <Route exact path=\"/Login/:name?\"> */}\r\n                    {/*<Login></Login>*/}\r\n                {/* </Route>\r\n                <Route exact path=\"/Admin:name?\"> */}\r\n                    {/*<Admin></Admin>*/}\r\n                {/* </Route> */}\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\footer\\FooterComp.js",["645","646","647","648","649","650","651","652","653"],"import React, {Component} from \"react\";\r\nimport Logo2 from \"../../image/logo2.png\";\r\nimport WaveBorder from \"../main/mainpage/WaveBorder\";\r\nimport {createMuiTheme, MuiThemeProvider, WithStyles} from \"@material-ui/core\";\r\nimport {ThemeProvider} from 'styled-components';\r\nimport theme from \"../main/mainpage/theme\";\r\nimport PropTypes from \"prop-types\";\r\nimport styledComponents from \"styled-components\";\r\n\r\nclass FooterComp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // console.log(\"FooterComp constructor\", props);\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"FooterComp render()\", this.props);\r\n        return (\r\n            <WaveBorder upperColor=\"#FFFFFF\" lowerColor=\"rgba(45,85,170,.2)\" animationNegativeDelay={4}>\r\n                {/* <div className=\"footerComp\">\r\n                    <hr/>\r\n                    <img src={Logo2}\r\n                        style={{width: \"150px\"}}\r\n                        alt=\"logo2\"/>\r\n                    <br/>\r\n                    <p>\r\n                        (주)멘도롱소랑 | 경기도 서초구 강남대로 459 (서초동 1300-34)<br/>\r\n                        사업자 번호 147-14-12345 | 전화번호:02-123-1234 | 팩스 02-1234-1234 | 이메일 help@naver.com\r\n                    </p>\r\n                </div> */}\r\n            </WaveBorder>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FooterComp;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\MainPageComp.js",["654","655"],"import React, {Component} from \"react\";\r\nimport SearchComp from \"./SearchComp\";\r\nimport HotPlaceComp from \"./HotPlaceComp\";\r\nimport NoticeMiniComp from \"./NoticeMiniComp\";\r\nimport ShareBoardMiniComp from \"./ShareBoardMiniComp\";\r\nimport axios from \"axios\";\r\nimport {actionType, mainViewType, URL} from \"../../../redux/config\";\r\nimport \"./MainPageComp.css\"\r\nimport MainPhotoComp from \"./MainPhotoComp\";\r\nimport MyPlanComp from \"./MyPlanComp\";\r\nimport EtcBoardComp from \"./EtcBoardComp\";\r\nimport store from \"../../../redux/store\";\r\n\r\nclass MainPageComp extends Component {\r\n\r\n    /**\r\n     * props\r\n     * setMainView={this.props.setMainView}\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n        // console.log(\"MainPageComp constructor\", props);\r\n\r\n        this.state = {\r\n            shareBoardList: [],\r\n            noticeList: [],\r\n        }\r\n\r\n        store.dispatch({\r\n            type: actionType.setMainView,\r\n            setMainView: mainViewType.MainPage,\r\n        })\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getNoticeList.bind(this)();\r\n        this.getShareBoardList.bind(this)();\r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\n    getNoticeList = () => {\r\n        // console.log(\"getNoticeList()\");\r\n        var url = URL + \"/notice/list\";\r\n\r\n        axios.get(url\r\n        ).then((res) => {\r\n            // console.log(\"getNoticeList success : \", res);\r\n            this.setState({\r\n                noticeList: res.data\r\n            });\r\n        }).catch((error) => {\r\n            // console.log(\"getNoticeList error\", error);\r\n        });\r\n    }\r\n\r\n    getShareBoardList = () => {\r\n        // console.log(\"getShareBoardList()\");\r\n        var url = URL + \"/share/list?start=0&perPage=5\";\r\n\r\n        axios.get(url\r\n        ).then((res) => {\r\n            // console.log(\"getShareBoardList success : \", res);\r\n            this.setState({\r\n                shareBoardList: res.data\r\n            });\r\n        }).catch((error) => {\r\n            // console.log(\"getShareBoardList error\", error);\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * MainPhotoComp\r\n     * SearchComp | MyPlanComp\r\n     * HotPlaceComp\r\n     * EtcBoardComp\r\n     */\r\n    render() {\r\n        // console.log(\"MainPageComp render()\", this.props);\r\n        return (\r\n            <div className=\"mainPageComp\">\r\n                <MainPhotoComp/>\r\n                <div className=\"search-myplan\">\r\n                    <SearchComp history={this.props.history}/>\r\n                    <MyPlanComp/>\r\n                </div>\r\n                <HotPlaceComp history={this.props.history}/>\r\n                <EtcBoardComp/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MainPageComp;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\SearchResultComp.js",["656","657"],"import React, {Component} from \"react\";\r\nimport store from \"../../../redux/store\";\r\nimport {actionType, mainViewType, URL} from \"../../../redux/config\";\r\nimport axios from \"axios\";\r\nimport Tourintro from \"../tour/Tourintro\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ItemComp from \"../tour/ItemComp\";\r\nimport PageComp from \"../tour/PageComp\";\r\n\r\nclass SearchResultComp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(props);\r\n\r\n        let {category, searchVal} = store.getState().mainSearch;\r\n\r\n        this.state = {\r\n            area: \"jeju\", //props.match.params.name,\r\n            spotList: [],\r\n            pageNum: props.match.params.pageNum,\r\n            category: category,\r\n            searchVal: searchVal,\r\n        }\r\n\r\n        this.currentPage = this.state.pageNum;\r\n        this.totalCount = 0;\r\n        this.perPage = 12; // 한페이지당 보여질 글의 갯수\r\n        this.perBlock = 5; // 한블럭당 출력할 페이지의 갯수\r\n        this.totalPage = 0; // 총 페이지의 갯수\r\n        this.startPage = 0; // 각 블럭당 시작 페이지 번호\r\n        this.endPage = 0; // 각 블럭당 끝페이지 번호\r\n        this.start = 0; // 각 블럭당 불러올 글의 시작번호\r\n        this.end = 0; // 각 블럭당 글의 끝번호\r\n        this.no = 0; // 각 페이지에서 출력할 시작번호\r\n\r\n        this.select = category;\r\n    }\r\n\r\n\r\n    /*\r\n    @GetMapping(\"/spot/searchlist\")\r\n    public List<SpotlistDto> getSearchList(@RequestParam int start, @RequestParam int perPage,\r\n                                           @RequestParam String category, String search) {\r\n        System.out.println(\"start:\" + start);\r\n        System.out.println(\"perPage:\" + perPage);\r\n        System.out.println(\"category:\" + category);\r\n        System.out.println(\"search:\" + search);\r\n        return mapper.getSearchList(start, perPage, category, search);\r\n    }\r\n     */\r\n    getList = () => {\r\n        // 나머지가 있을 경우에는 1페이지 더 추가 (예 : 총글수가 9이고 한페이지당 2개씩 볼 경우)\r\n        this.totalPage = Math.floor(this.totalCount / this.perPage)\r\n            + (this.totalCount % this.perPage > 0 ? 1 : 0);\r\n\r\n        // 시작페이지와 끝페이지 구하기\r\n        this.startPage = Math.floor((this.currentPage - 1) / this.perBlock) * this.perBlock + 1;\r\n        this.endPage = this.startPage + this.perBlock - 1;\r\n\r\n        // 마지막 블럭은 endPage를 totalPage로 해놔야 한다.\r\n        if (this.endPage > this.totalPage) {\r\n            this.endPage = this.totalPage;\r\n        }\r\n\r\n        // mysql은 첫 글이 0번이므로 +1 안해도됨 (오라클은 1번)\r\n        this.start = (this.currentPage - 1) * this.perPage;\r\n        this.no = this.totalCount - (this.currentPage - 1) * this.perPage;\r\n\r\n        let url = URL + \"/spot/searchlist\" +\r\n            \"?start=\" + this.start +\r\n            \"&perPage=\" + this.perPage +\r\n            \"&category=\" + this.select +\r\n            \"&search=\" + this.state.searchVal;\r\n\r\n        console.log(url);\r\n\r\n        axios.get(url\r\n        ).then(res => {\r\n            console.log(\"res:\", res);\r\n            this.setState({\r\n                spotList: res.data\r\n            });\r\n        }).catch(err => {\r\n            console.log(\"spotlist getList 오류 : \", err);\r\n        });\r\n    }\r\n\r\n\r\n    /*\r\n        @GetMapping(\"/spot/searchcount\")\r\n        public int getSearchTotalCount(@RequestParam String category, @RequestParam String search) {\r\n            return mapper.getSearchTotalCount(category, search);\r\n        }\r\n     */\r\n    getTotalCount = () => {\r\n        let url = URL + \"/spot/searchcount\" +\r\n            \"?category=\" + this.select +\r\n            \"&search=\" + this.state.searchVal;\r\n\r\n        console.log(url);\r\n\r\n        axios.get(url\r\n        ).then(res => {\r\n            console.log(\"res:\", res);\r\n            this.totalCount = res.data;\r\n            this.getList();\r\n        }).catch(err => {\r\n            console.log(\"err:\", err);\r\n        });\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        window.scrollTo(0, 0);\r\n        this.getTotalCount();\r\n    }\r\n\r\n\r\n    selectChange = (e) => {\r\n        this.select = e.target.value;\r\n        this.getList();\r\n    }\r\n\r\n\r\n    render() {\r\n        // console.log(\"TourPageComp render()\", this.props);\r\n        return (\r\n            <div>\r\n                <Tourintro area={this.state.area}\r\n                           type=\"search\"\r\n                />\r\n                <br/><br/><br/>\r\n\r\n                {/* list 출력 */}\r\n                <div className=\"tourIntroTitle\">\r\n                    <span className=\"tourIntroTitleContent\" style={{backgroundColor: 'white', color: '#036E38'}}>\r\n                        &nbsp;&nbsp;&nbsp;\"{this.state.searchVal}\" 의 검색 결과&nbsp;&nbsp;&nbsp;\r\n                    </span>\r\n                </div>\r\n                <div style={{width: '100%'}}>\r\n                    <FormControl id=\"selectTourList\">\r\n                        <InputLabel>category</InputLabel>\r\n                        <Select native\r\n                                value={this.select}\r\n                                onChange={this.selectChange.bind(this)}\r\n                        >\r\n                            <option value=\"all\">All</option>\r\n                            <option value=\"area\">Location</option>\r\n                            <option value=\"spot\">Spot</option>\r\n                            <option value=\"tag\">Tag</option>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <br/><br/>\r\n\r\n                    <Box display=\"flex\"\r\n                         flexWrap=\"wrap\"\r\n                         p={1}\r\n                         m={1}\r\n                         bgcolor=\"background.paper\"\r\n                         justifyContent=\"center\"\r\n                         css={{maxWidth: '100%'}}\r\n                    >\r\n                        {this.state.spotList.map((row, idx) => (\r\n                            <ItemComp row={row}\r\n                                      key={idx}\r\n                                      history={this.props.history}\r\n                                      getList={this.getList.bind(this)}\r\n                            ></ItemComp>\r\n                        ))}\r\n                    </Box>\r\n                </div>\r\n                <br/><br/>\r\n\r\n                {/* 페이징 */}\r\n                <PageComp currentPage={this.currentPage}\r\n                          startPage={this.startPage}\r\n                          endPage={this.endPage}\r\n                          totalPage={this.totalPage}\r\n                          area={this.state.area}\r\n                          type=\"search\"\r\n                          category={this.state.category}\r\n                          search={this.state.searchVal}\r\n                ></PageComp>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchResultComp;\r\n\r\n/*\r\nexport default function SearchResultComp(props) {\r\n    console.log(\"SearchResultComp props\", props);\r\n    var mainSearch = store.getState().mainSearch;\r\n    console.log(mainSearch);\r\n    var category = mainSearch.category;\r\n    var searchVal = mainSearch.searchVal;\r\n    var searchResultDataList = mainSearch.searchResultDataList;\r\n    // console.log(searchResultDataList)\r\n\r\n    const getSearchResultDataList = () => {\r\n        return searchResultDataList.map((value, index) => {\r\n            return (\r\n                <div>\r\n                    {index} , {value.title}<br/>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n            [{category}] {searchVal} 로 검색한 결과.<br/>\r\n            {getSearchResultDataList()}\r\n        </div>\r\n    );\r\n}\r\n*/\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ReservationPageComp.js",["658","659","660"],"import React, {Component} from \"react\";\r\nimport SyncAltIcon from '@material-ui/icons/SyncAlt';\r\nimport TrendingFlatIcon from '@material-ui/icons/TrendingFlat';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport './Reservation.css';\r\n\r\nimport store from '../../../redux/store';\r\nimport axios from 'axios';\r\n\r\nimport OneWayAir from './OneWayAir';\r\nimport RoundAir from './RoundAir';\r\nimport {WOW} from 'wowjs';\r\n\r\nclass ReservationPageComp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"ReservationPageComp constructor\", props);\r\n        this.state = {\r\n          tabValue:0\r\n          }\r\n\r\n    }\r\n   \r\n    // 인원 선택버튼 숫자증가\r\n    state = {\r\n      value: 0\r\n    }\r\n    handleChange = (e) => {\r\n      this.setState({\r\n          [e.target.name]: e.target.value\r\n      })\r\n    };\r\n  \r\n    decrease = () => {\r\n      this.setState({ value: this.state.value - 1 });\r\n    }\r\n  \r\n    increase = () => {\r\n      this.setState({ value: this.state.value + 1 });\r\n    }\r\n\r\n    componentDidMount(){\r\n      new WOW().init();\r\n  }\r\n    \r\n    // 탭 버튼\r\n    a11yProps = (index) => {\r\n        return {\r\n          id: `simple-tab-${index}`,\r\n          'aria-controls': `simple-tabpanel-${index}`,\r\n        };\r\n      }\r\n      handleTabChange = (event, newValue) => {\r\n        this.setState({ tabValue: newValue });\r\n      }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n              <section class=\"my-md-5 AirSection\">\r\n\r\n              <div class=\"rgba-black-strong rounded AirIntro\">\r\n                  <div class=\"col-md-12 mb-4 white-text text-center AirTitle\">\r\n                          <h1 class=\"h1-reponsive white-text text-uppercase font-weight-bold mb-0 pt-md-5 pt-5 wow fadeInDown\"\r\n                          data-wow-delay=\"0.3s\"><strong>AIR</strong></h1>\r\n                          <p class=\"wow fadeInDown\" data-wow-delay=\"0.4s\">______________________</p>\r\n                          <h5 class=\"text-uppercase mb-4 white-text wow fadeInDown\" data-wow-delay=\"0.4s\">\r\n                              <strong>떠나요~ 둘이서~ 모든걸 훌훌 버리고<br/>\r\n                              제주도 항공 정보를 확인해보세요.</strong></h5>\r\n                          \r\n                      </div>\r\n\r\n                  <div style={{textAlign: 'center'}} className=\"AirTabs\">\r\n                      \r\n                      <div class=\"white-text wow fadeInUp\" style={{border: '1px solid white', margin: '0 auto'}} data-wow-delay=\"0.7s\">\r\n                      \r\n                        <Tabs\r\n                             TabIndicatorProps={{style: {background:'green'}}}\r\n                             value={this.state.tabValue}\r\n                              textColor=\"white\"\r\n                              variant=\"fullWidth\"\r\n                              onChange={this.handleTabChange}\r\n                              aria-label=\"disabled tabs example\"\r\n                        >\r\n                          <Tab label=\"편도\" icon={<TrendingFlatIcon/>} {...this.a11yProps(0)}/>\r\n                          <Tab label=\"왕복\" icon={<SyncAltIcon/>} {...this.a11yProps(1)}/>\r\n                        </Tabs>\r\n\r\n                        {/* 편도 */}\r\n                         <TabPanel value={this.state.tabValue} index={0}>\r\n                            <OneWayAir history={this.props.history}/>\r\n                        </TabPanel>\r\n\r\n                        {/* 왕복 */}\r\n                        <TabPanel value={this.state.tabValue} index={1}>\r\n                            <RoundAir history={this.props.history}/>\r\n                        </TabPanel>\r\n\r\n\r\n                      </div>\r\n                  </div>\r\n\r\n              </div>\r\n\r\n              </section>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nclass TabPanel extends Component {\r\n    render() {\r\n      return (\r\n        <Typography component=\"div\" hidden={this.props.value !== this.props.index}>\r\n          <Box p={3}>{this.props.children}</Box>\r\n        </Typography>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default ReservationPageComp;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\RentCarPageComp.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipPageComp.js",["661","662","663","664","665","666","667","668","669","670","671","672","673","674"],"import React, {Component} from \"react\";\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport ShipTableA1 from \"./ShipTable/ShipTableA1\";\r\nimport ShipTableA2 from \"./ShipTable/ShipTableA2\";\r\nimport ShipTableA3 from \"./ShipTable/ShipTableA3\";\r\nimport ShipTableA4 from \"./ShipTable/ShipTableA4\";\r\nimport ShipTableB1 from \"./ShipTable/ShipTableB1\";\r\nimport ShipTableB2 from \"./ShipTable/ShipTableB2\";\r\nimport axios from 'axios';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport store from '../../../redux/store';\r\nimport {URL} from '../../../redux/config';\r\nimport Button from '@material-ui/core/Button';\r\nimport {MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\r\nimport './ShipPageCss.css';\r\nimport {WOW} from 'wowjs';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nclass ShipPageComp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"ShipPageComp constructor\", props);\r\n\r\n        this.state = {\r\n            value: 0,\r\n            month:'',\r\n            memId:'',  \r\n            content:'성산→우도',\r\n            wishday:'',\r\n            wishtime:'',\r\n            money:'',\r\n            open: false,\r\n            alertOpen: false,\r\n            alertSetOpen: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        new WOW().init();\r\n    }\r\n\r\n    insertContent = () => {\r\n        let url = URL + \"/wish/insertcontent\";\r\n        let memId = store.getState().loginId;        \r\n        let content = '우도배,' + this.state.content;\r\n        let wishday = this.refs.wishday.value;\r\n        let wishtime = this.refs.wishtime.value;\r\n        let money = this.refs.money.value==''?null:this.refs.money.value;\r\n\r\n        // console.log(memId);\r\n        // console.log(content);\r\n        // console.log(wishday);\r\n        if(wishday == '' || wishtime == '')\r\n            alert(\"날짜와 시간을 모두 선택해주세요.\");\r\n        else{\r\n            axios.post(url, {memId, content, wishday, wishtime, money\r\n            }).then(res => {\r\n                this.toggle();\r\n                this.setState({\r\n                    alertOpen: true\r\n                })\r\n            }).catch(err=>{\r\n                console.log(\"예약 내용 저장시 오류:\"+err);\r\n            })\r\n        }\r\n    } \r\n\r\n    tabProps = (index) => {\r\n        return {\r\n          id: `simple-tab-${index}`,\r\n          'aria-controls': `simple-tabpanel-${index}`,\r\n        };\r\n    }\r\n\r\n    handleTabChange = (event,newValue) => {\r\n        this.setState({ value: newValue });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    changeMonth = (e) => {\r\n        // console.log(\"changeMonth 함수\");\r\n        this.setState({\r\n            month: e.target.value\r\n        })\r\n    }\r\n    \r\n    changeDestination = (e) => {\r\n        // console.log(\"Destination 함수\");\r\n        this.setState({\r\n            content: e.target.value\r\n        })\r\n    }\r\n\r\n    // modal 함수\r\n    handleOpen = () => {\r\n        if(!store.getState().logged){\r\n            alert(\"로그인이 필요한 서비스입니다.\");\r\n        }\r\n        else{\r\n            this.setState({\r\n                open: true\r\n            })\r\n        }\r\n        \r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            open: false\r\n        })\r\n    };\r\n\r\n    toggle = () => {\r\n        if(!store.getState().logged){\r\n            alert(\"로그인이 필요한 서비스입니다.\");\r\n        }\r\n        else{\r\n            \r\n            this.setState({\r\n                open: !this.state.open\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const tag1 = this.state.month==1?<ShipTableA1 month=\"1\"/>:this.state.month==2?<ShipTableA2 month=\"2\"/>:\r\n                    this.state.month==3?<ShipTableA3 month=\"3\"/>:this.state.month==4?<ShipTableA4 month=\"4\"/>:\r\n                    \"\";\r\n        const tag2 = this.state.month==11?<ShipTableB1 month=\"11\"/>:this.state.month==12?<ShipTableB2 month=\"12\"/>:\r\n                    \"\";\r\n                    \r\n        return (\r\n            <div>\r\n                <section class=\"my-md-5 ShipSection\">\r\n\r\n                    <div class=\"rgba-black-strong rounded ShipIntro\">\r\n                        <div class=\"col-md-12 mb-4 white-text text-center ShipTitle\">\r\n                                <h1 class=\"h1-reponsive white-text text-uppercase font-weight-bold mb-0 pt-md-5 pt-5 wow fadeInDown\"\r\n                                data-wow-delay=\"0.3s\"><strong>UDO</strong></h1>\r\n                                <p class=\"wow fadeInDown\" data-wow-delay=\"0.4s\">______________________</p>\r\n                                <h5 class=\"text-uppercase mb-4 white-text wow fadeInDown\" data-wow-delay=\"0.4s\">\r\n                                    <strong>우도를 안가면 제주도 여행이라 할 수 없다!<br/>\r\n                                    우도행 배편 시간과 금액을 미리 확인해보세요.</strong></h5>\r\n                                \r\n                                {/*/!* 공유버튼 *!/*/}\r\n                                <MDBBtn size=\"sm\" color=\"dark-green\" type=\"button\"\r\n                                        className=\"ShareListBtn wow fadeInDown\"\r\n                                        data-wow-delay=\"0.4s\"\r\n                                        style={{marginTop: '1.3%'}}\r\n                                        onClick={() => {\r\n                                            if (store.getState().loginId != null && store.getState().loginId != \"\") {\r\n                                                this.toggle();\r\n                                            } else {\r\n                                                let _result = window.confirm(\"로그인이 필요한 서비스 입니다.\\n로그인 하시겠습니까?\");\r\n\r\n                                                if (_result) {\r\n                                                    this.props.history.push(\"/login\");\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                > <b>일정추가</b>\r\n                                </MDBBtn>\r\n                                \r\n                            </div>\r\n\r\n                        <div style={{textAlign: 'center'}} className=\"ShipTabs\">\r\n                            \r\n                            <div class=\"white-text wow fadeInDown\" style={{border: '1px solid white', margin: '0 auto'}} data-wow-delay=\"0.7s\">\r\n\r\n                            {/* <Paper square> */}\r\n                                <Tabs\r\n                                    TabIndicatorProps={{style: {background:'green'}}}\r\n                                    value={this.state.value}\r\n                                    // indicatorColor=\"secondary\"\r\n                                    textColor=\"white\"\r\n                                    variant=\"fullWidth\"\r\n                                    onChange={this.handleTabChange}\r\n                                    aria-label=\"disabled tabs example\"\r\n                                >\r\n                                    <Tab label=\"성산 ↔ 우도\" {...this.tabProps(0)}/>\r\n                                    <Tab label=\"종달 ↔ 우도\" {...this.tabProps(1)}/>\r\n                                </Tabs>\r\n                                <TabPanel value={this.state.value} index={0} style={{padding: '20px'}}>\r\n                                     성산 ↔ 우도행<br/>\r\n                                    <select class=\"browser-default custom-select\" onClick={this.changeMonth}>\r\n                                        <option disabled selected>가는 날짜</option>\r\n                                        <option value=\"1\">1~2월, 11,12월</option>\r\n                                        <option value=\"2\">3월, 10월</option>\r\n                                        <option value=\"3\">4월, 9월</option>\r\n                                        <option value=\"4\">5 ~ 8월</option>\r\n                                    </select>\r\n                                </TabPanel>\r\n                                <TabPanel value={this.state.value} index={1}>\r\n                                    종달 ↔ 우도행<br/>\r\n                                    <select class=\"browser-default custom-select\" onClick={this.changeMonth}>\r\n                                        <option disabled selected>가는 날짜</option>\r\n                                        <option value=\"11\">1~3월, 10~12월</option>\r\n                                        <option value=\"12\">4월 ~ 9월</option>\r\n                                    </select>\r\n                                    {/* <br/>{tag2} */}\r\n                                </TabPanel>\r\n                            {/* </Paper> */}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </section>\r\n                {tag1}{tag2}\r\n\r\n\r\n                {/* 일정 추가 모달 */}\r\n                <MDBModal isOpen={this.state.open} toggle={this.toggle} centered>\r\n                        <MDBModalHeader toggle={this.toggle} className=\"ShipAddModal\">일정 추가</MDBModalHeader>\r\n                        <MDBModalBody>\r\n                            <div className=\"ShipAddModal\">\r\n                                {/* <input type=\"text\" ref=\"content\" className=\"selectDestination\" \r\n                                value={this.state.content} onChange={this.changeMonth}/> */}\r\n                                🚢&nbsp;&nbsp;<b>출발지 → 도착지</b>\r\n                                <select class=\"browser-default custom-select\" onClick={this.changeDestination}>\r\n                                    <option value=\"성산→우도\">성산→우도</option>\r\n                                    <option value=\"종달→우도\">종달→우도</option>\r\n                                    <option value=\"우도→성산\">우도→성산</option>\r\n                                    <option value=\"우도→종달\">우도→종달</option>\r\n                                </select>\r\n                                <br/>\r\n                                🗓&nbsp;&nbsp;<b>승선일</b>\r\n                                <input type=\"date\" class=\"form-control form-control-sm\" ref=\"wishday\"></input>\r\n                                ⏰&nbsp;&nbsp;<b>승선 시간</b>\r\n                                <input type=\"time\" class=\"form-control form-control-sm\" ref=\"wishtime\"></input>\r\n                                💰&nbsp;&nbsp;<b>비용</b>\r\n                                <input type=\"text\" class=\"form-control form-control-sm\" ref=\"money\" onClick={this.handleChange}/>\r\n                            </div>\r\n                        </MDBModalBody>\r\n                        <MDBModalFooter>\r\n                        <MDBBtn color=\"dark-green\" onClick={this.insertContent.bind(this)}>추가</MDBBtn>\r\n                        </MDBModalFooter>\r\n                    </MDBModal>\r\n\r\n                    {/* alert 창 */}\r\n                    <Dialog\r\n                        open={this.state.alertOpen}\r\n                        onClose={()=>{this.setState({alertOpen:false})}}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\">{\"일정 추가 완료\"}</DialogTitle>\r\n                        <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            Mypage로 이동하여 확인하시겠습니까?\r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                        <Button onClick={()=>{this.setState({alertOpen:false})}} color=\"primary\">\r\n                            NO\r\n                        </Button>\r\n                        <Button onClick={\r\n                            ()=>{\r\n                                this.setState({\r\n                                    alertOpen: false\r\n                                })\r\n                                this.props.history.push(\"/mypage\");\r\n                            }\r\n                        } color=\"primary\" autoFocus>\r\n                            YES\r\n                        </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nclass TabPanel extends Component {\r\n    render() {\r\n      return (\r\n        <Typography component=\"div\" hidden={this.props.value !== this.props.index}>\r\n          <Box p={2}>{this.props.children}</Box>\r\n        </Typography>\r\n      );\r\n    }\r\n  }\r\nexport default ShipPageComp;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\notice\\NoticePageComp.js",["675","676","677","678","679"],"import React, {Component} from \"react\";\r\nimport BoardItem from \"./BoardItem\";\r\nimport axios from 'axios';\r\nimport './NoticeCss.css';\r\nimport {URL} from '../../../redux/config';\r\nimport NoticePagination from './NoticePagination';\r\nimport store from \"../../../redux/store\";\r\n\r\nclass NoticePageComp extends Component {\r\n    state={\r\n        maxNo:7,\r\n        \r\n    }\r\n    \r\n    constructor({match}){\r\n        super();\r\n\r\n        this.state={\r\n            pageNum: match.params.pageNum,\r\n            listData:[]\r\n        }\r\n\r\n        this.currentPage = this.state.pageNum;\r\n        this.totalCount = 0;\r\n        this.perPage = 5; // 한페이지당 보여질 글의 갯수\r\n        this.perBlock = 5; // 한블럭당 출력할 페이지의 갯수\r\n        this.totalPage = 0; // 총 페이지의 갯수\r\n        this.startPage = 0; // 각 블럭당 시작 페이지 번호\r\n        this.endPage = 0; // 각 블럭당 끝페이지 번호\r\n        this.start = 0; // 각 블럭당 불러올 글의 시작번호\r\n        this.end = 0; // 각 블럭당 글의 끝번호\r\n        this.no = 0; // 각 페이지에서 출력할 시작번호\r\n    }\r\n\r\n    paginate = (num) =>{\r\n        \r\n        this.currentPage = num;\r\n        this.list();\r\n    }\r\n\r\n    getTotalCount = () => {\r\n\r\n        let url = URL + \"/notice/count\";\r\n\r\n        axios.get(url)\r\n            .then(res => {\r\n                this.totalCount = res.data;\r\n                this.list();\r\n            }).catch(err => {\r\n            console.log(\"notice getTotalCount 오류 : \" + err);\r\n        })\r\n    }\r\n\r\n    list=()=>{\r\n        // 나머지가 있을 경우에는 1페이지 더 추가 (예 : 총글수가 9이고 한페이지당 2개씩 볼 경우)\r\n        this.totalPage = Math.floor(this.totalCount / this.perPage) + (this.totalCount % this.perPage > 0 ? 1 : 0);\r\n\r\n        // 시작페이지와 끝페이지 구하기\r\n        this.startPage = Math.floor((this.currentPage - 1) / this.perBlock) * this.perBlock + 1;\r\n        this.endPage = this.startPage + this.perBlock - 1;\r\n        // 마지막 블럭은 endPage를 totalPage로 해놔야 한다.\r\n        if (this.endPage > this.totalPage)\r\n            this.endPage = this.totalPage;\r\n\r\n        // mysql은 첫 글이 0번이므로 +1 안해도됨 (오라클은 1번)\r\n        this.start = (this.currentPage - 1) * this.perPage;\r\n\r\n        this.no = this.totalCount - (this.currentPage - 1) * this.perPage;\r\n\r\n        let url= URL + \"/notice/list?start=\" + this.start + \"&perPage=\" + this.perPage;\r\n        // console.log(url);\r\n\r\n        axios.get(url)\r\n        .then(res=>{\r\n            this.setState({\r\n                listData:res.data\r\n            })\r\n        })\r\n    }\r\n\r\n    componentWillMount()\r\n    {\r\n        this.getTotalCount();\r\n    }\r\n    render() {\r\n        const {boards}=this.state;\r\n\r\n        return (\r\n            <div className=\"noticePageDiv\">\r\n\r\n            <div className=\"detailTitle\">\r\n                    <span className=\"detailTitleContent\" style={{backgroundColor: 'white', color: '#036E38'}}>\r\n                        &nbsp;&nbsp;공지사항&nbsp;&nbsp;\r\n                    </span>\r\n                </div>\r\n                <div className=\"detailIntro\" style={{color: \"#888\"}}>\r\n                    관광지나 업체, 제주도 축제 등 중요한 소식을 알려드립니다.<br/>\r\n                </div>\r\n\r\n                {/*<a href=\"#NoticeMiniComp\">{this.props.name}</a>*/}\r\n                {/* <BoardForm list={this.list.bind(this)}/> */}\r\n                <br/>\r\n\r\n                <div className=\"noticeTable\" style={{margin: '0 auto'}}>\r\n                    \r\n                    {store.getState().loginId === 'admin'?<a href=\"/noticeInsert\" style={{float: 'right', color:'black'}}>글쓰기</a>:\"\"}\r\n                    <br/>\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                        <tr style={{textAlign: 'center'}}>\r\n                            <th style={{width:'60px', width:'5%'}}>#</th>\r\n                            <th style={{width:'200px', width:'65%'}}>제목</th>\r\n                            <th style={{width:'50px', width:'25%'}}>작성일</th>\r\n                            <th style={{width:'50px', width:'5%'}}>⭐</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                        this.state.listData.map((row,idx)=>(\r\n                            <BoardItem row={row} key={idx} idx={(this.currentPage-1)*this.perPage + idx+1}\r\n                                history={this.props.history} list={this.list.bind(this)}/>\r\n                            ))\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                </div>\r\n                <NoticePagination paginate={this.paginate.bind(this)} startPage={this.startPage} endPage={this.endPage} \r\n                    currentPage={this.currentPage} totalPage={this.totalPage}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default NoticePageComp;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\notice\\NoticeContent.js",["680"],"import axios from 'axios';\r\nimport React,{Component}  from 'react';\r\nimport {URL} from '../../../redux/config';\r\nimport './NoticeCss.css';\r\nimport store from \"../../../redux/store\";\r\n\r\nclass NoticeContent extends Component\r\n{\r\n    constructor({match})\r\n    {\r\n        super();\r\n        \r\n        this.state={\r\n            selectData:''\r\n        }\r\n        this.num = match.params.num;\r\n    }\r\n\r\n    onSelectData=()=>{\r\n        let url= URL + \"/notice/detail?num=\" + this.num;\r\n    \r\n        axios.get(url)\r\n        .then(res=>{\r\n            this.setState({\r\n                selectData:res.data\r\n            })\r\n        }).catch(err=>{\r\n            console.log(\"notice content 오류 : \" + err);\r\n        })\r\n    }   \r\n\r\n    onDeleteData=()=>{\r\n        let url= URL + \"/notice/delete?num=\" + this.num;\r\n    \r\n        if(window.confirm(\"삭제하시겠습니까?\")){\r\n            axios.get(url)\r\n            .then(res=>{\r\n                this.props.history.push(\"/notice/1\");\r\n            }).catch(err=>{\r\n                console.log(\"notice delete 오류 : \" + err);\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        // console.log(\"content willmount\");\r\n        this.onSelectData();\r\n    }\r\n\r\n    render(){\r\n        // let url=document.getElementById(\"url\").textContent\r\n        const {selectData}=this.state;\r\n\r\n\r\n        return (\r\n            <div className=\"noticePageDiv\">\r\n                <div className=\"detailTitle\">\r\n                    <span className=\"detailTitleContent\" style={{backgroundColor: 'white', color: '#036E38'}}>\r\n                        &nbsp;&nbsp;공지사항&nbsp;&nbsp;\r\n                    </span>\r\n                </div>\r\n                <div className=\"detailIntro\" style={{color: \"#888\"}}>\r\n                    관광지나 업체, 제주도 축제 등 중요한 소식을 알려드립니다.<br/>\r\n                </div>\r\n                <br/>\r\n                <div className=\"noticeTable\" style={{margin: '0 auto'}}>\r\n                    {store.getState().loginId=='admin'?\r\n                    <div style={{float: 'right'}}>\r\n                         <a href={`/notice/update/${this.num}`} style={{color: 'gray'}}>수정</a>&nbsp;/&nbsp;\r\n                        <span style={{color: 'gray', cursor: 'pointer'}} onClick={this.onDeleteData.bind(this)}>삭제</span>\r\n                    </div>:\"\"    \r\n                    }\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <td align=\"center\">\r\n                                    <b>{selectData.subject}</b>\r\n                                </td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <div dangerouslySetInnerHTML={ {__html: selectData.content} } className=\"noticeContentEditor\"></div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td align='center'>\r\n                                    <button type=\"button\" class=\"btn btn-dark-green\" onClick={()=>{\r\n                                        this.props.history.goBack();\r\n                                    }}>목록</button>\r\n                                    {/* <button type=\"button\" className=\"btn btn-success btn-sm\" style={{marginLeft:'100px',width:'100px'}}\r\n                                        onClick={\r\n                                            ()=>{\r\n                                                this.props.history.push(\"/notice/update/\" + this.num);\r\n                                            }\r\n                                        }>수정</button>\r\n                                    <button type=\"button\" className=\"btn btn-success btn-sm\" style={{marginLeft:'100px',width:'100px'}}\r\n                                        onClick={this.onDeleteData.bind(this)}>삭제</button> */}\r\n\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoticeContent;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\notice\\NoticeAddForm.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\notice\\NoticeUpdateForm.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\ShareBoardPageComp.js",["681","682","683","684","685","686","687","688","689"],"import React, {Component, Fragment} from \"react\";\r\nimport {Route, Link} from \"react-router-dom\";\r\nimport ShareBoardFormComp from \"./ShareBoardFormComp\";\r\nimport ShareBoardRowItem from \"./ShareBoardRowItem\";\r\nimport {URL, actionType} from '../../../redux/config';\r\nimport {MDBBtn} from \"mdbreact\";\r\nimport axios from \"axios\";\r\nimport store from \"../../../redux/store\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PageComp from \"../tour/PageComp\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\nclass ShareBoardPageComp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"ShareBoardPageComp constructor\", this.props);\r\n        this.state = {\r\n            // area: match.params.name,\r\n            listData: [],\r\n            pageNum: props.match.params.pageNum,\r\n        }\r\n        store.dispatch({\r\n            type: actionType.shareBoardUpdate,\r\n        });\r\n\r\n        this.currentPage = this.state.pageNum;\r\n        this.totalCount = 0;\r\n        this.perPage = 6; // 한페이지당 보여질 글의 갯수\r\n        this.perBlock = 3; // 한블럭당 출력할 페이지의 갯수\r\n        this.totalPage = 0; // 총 페이지의 갯수\r\n        this.startPage = 0; // 각 블럭당 시작 페이지 번호\r\n        this.endPage = 0; // 각 블럭당 끝페이지 번호\r\n        this.start = 0; // 각 블럭당 불러올 글의 시작번호\r\n        this.end = 0; // 각 블럭당 글의 끝번호\r\n        this.no = 0; // 각 페이지에서 출력할 시작번호\r\n\r\n        this.select = 'star';\r\n    }\r\n\r\n    getShareListByPaging = () => {\r\n        // 나머지가 있을 경우에는 1페이지 더 추가 (예 : 총글수가 9이고 한페이지당 2개씩 볼 경우)\r\n        this.totalPage = Math.floor(this.totalCount / this.perPage) + (this.totalCount % this.perPage > 0 ? 1 : 0);\r\n\r\n        // 시작페이지와 끝페이지 구하기\r\n        this.startPage = Math.floor((this.currentPage - 1) / this.perBlock) * this.perBlock + 1;\r\n        this.endPage = this.startPage + this.perBlock - 1;\r\n        // 마지막 블럭은 endPage를 totalPage로 해놔야 한다.\r\n        if (this.endPage > this.totalPage)\r\n            this.endPage = this.totalPage;\r\n\r\n        // mysql은 첫 글이 0번이므로 +1 안해도됨 (오라클은 1번)\r\n        this.start = (this.currentPage - 1) * this.perPage;\r\n\r\n        this.no = this.totalCount - (this.currentPage - 1) * this.perPage;\r\n\r\n        let url = URL + \"/share/list\" +\r\n            \"?start=\" + this.start +\r\n            \"&perPage=\" + this.perPage;\r\n\r\n        console.log(url);\r\n\r\n        axios.get(url\r\n        ).then(res => {\r\n            console.log(\"getShareListByPaging() res\", res);\r\n            this.setState({\r\n                listData: res.data\r\n            })\r\n        }).catch(err => {\r\n            console.log(\"getShareListByPaging() err\", err);\r\n        });\r\n\r\n    \r\n    }\r\n\r\n    getTotalCount = () => {\r\n        let url = URL + \"/share/count\";\r\n\r\n        console.log(url);\r\n\r\n        axios.get(url)\r\n            .then(res => {\r\n                console.log(\"getTotalCount res : \", res);\r\n                this.totalCount = res.data;\r\n                this.getShareListByPaging();\r\n            }).catch(err => {\r\n            console.log(\"getTotalCount err : \", err);\r\n        })\r\n    }\r\n\r\n    getSearchShareListByPaging = () => {\r\n        // 나머지가 있을 경우에는 1페이지 더 추가 (예 : 총글수가 9이고 한페이지당 2개씩 볼 경우)\r\n        this.totalPage = Math.floor(this.totalCount / this.perPage) + (this.totalCount % this.perPage > 0 ? 1 : 0);\r\n\r\n        // 시작페이지와 끝페이지 구하기\r\n        this.startPage = Math.floor((this.currentPage - 1) / this.perBlock) * this.perBlock + 1;\r\n        this.endPage = this.startPage + this.perBlock - 1;\r\n        // 마지막 블럭은 endPage를 totalPage로 해놔야 한다.\r\n        if (this.endPage > this.totalPage)\r\n            this.endPage = this.totalPage;\r\n\r\n        // mysql은 첫 글이 0번이므로 +1 안해도됨 (오라클은 1번)\r\n        this.start = (this.currentPage - 1) * this.perPage;\r\n\r\n        this.no = this.totalCount - (this.currentPage - 1) * this.perPage;\r\n\r\n        let url = URL + \"/share/search\" +\r\n            \"?start=\" + this.start +\r\n            \"&perPage=\" + this.perPage +\r\n            \"&search=\" + this.refs.search.value;\r\n\r\n        console.log(url);\r\n\r\n        axios.get(url\r\n        ).then(res => {\r\n            console.log(\"searchShareList() res\", res);\r\n            this.setState({\r\n                listData: res.data\r\n            });\r\n        }).catch(err => {\r\n            console.log(\"searchShareList() err\", err);\r\n        });\r\n    }\r\n\r\n    getSearchTotalCount = () => {\r\n        let url = URL + \"/share/searchcount\" +\r\n            \"?search=\" + this.refs.search.value;\r\n\r\n        console.log(url);\r\n\r\n        axios.get(url)\r\n            .then(res => {\r\n                console.log(\"getSearchTotalCount res : \", res);\r\n                this.totalCount = res.data;\r\n                this.getSearchShareListByPaging();\r\n            }).catch(err => {\r\n            console.log(\"getSearchTotalCount err : \", err);\r\n        })\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getTotalCount();\r\n    }\r\n\r\n    render() {\r\n        const { photoIndex, isOpen, images } = this.state;\r\n        \r\n        return (\r\n            <div id=\"ShareBoardPage\">\r\n                \r\n                {/* 제목 */}\r\n                {/* <div style={{margin: \"0 auto\", marginLeft: \"45%\", marginTop: '1%', marginBottom: '4%'}}>\r\n                    <h3 id=\"sharesubject\">맛집 공유게시판</h3>\r\n                </div> */}\r\n                <div className=\"detailTitle\">\r\n                    <span className=\"detailTitleContent\" style={{backgroundColor: 'white', color: '#036E38'}}>\r\n                        &nbsp;&nbsp;맛집 공유게시판&nbsp;&nbsp;\r\n                    </span>\r\n                </div>\r\n                <div className=\"detailIntro\" style={{color: \"#888\"}}>\r\n                    나만 아는 숨음 맛집! 돈쭐 내주고 싶은 맛집!<br/>\r\n                    회원분들끼리 공유하는 공간입니다.<br/>\r\n                    \r\n                    {/*/!* 공유버튼 *!/*/}\r\n                    <MDBBtn size=\"sm\" color=\"dark-green\" type=\"button\"\r\n                            className=\"ShareListBtn\"\r\n                            style={{marginTop: '1.3%', color: 'white'}}\r\n                            onClick={() => {\r\n                                console.log(\"share Restaurant\");\r\n                                if (store.getState().loginId != null && store.getState().loginId != \"\") {\r\n                                    this.props.history.push(\"/share/insert\");\r\n                                } else {\r\n                                    let _result = window.confirm(\"로그인이 필요한 서비스 입니다.\\n로그인 하시겠습니까?\");\r\n\r\n                                    if (_result) {\r\n                                        this.props.history.push(\"/login\");\r\n                                    }\r\n                                }\r\n                            }}\r\n                    > <b>맛집공유</b>\r\n                    </MDBBtn>\r\n                </div>\r\n                <br/><br/><br/>\r\n\r\n                \r\n                <div className=\"ShareSearchForm\">\r\n\r\n                    <MDBBtn size=\"sm\" color=\"dark-green\"\r\n                            className=\"ShareListBtn\"\r\n                            onClick={\r\n                                () => {\r\n                                    this.setState({\r\n                                        pageNum: 1,\r\n                                    });\r\n                                    this.currentPage = 1;\r\n                                    this.getTotalCount();\r\n                                    this.refs.search.value = \"\";\r\n                                }\r\n                            }\r\n                            style={{float: 'left', marginLeft: '7%'}}>\r\n                        <b>전체글</b>\r\n                    </MDBBtn>\r\n\r\n                    <MDBBtn size=\"sm\" color=\"dark-green\"\r\n                        className=\"ShareSearchBtn\"\r\n                        style={{float: 'right'}}\r\n                            onClick={\r\n                                () => {\r\n                                    this.setState({\r\n                                        pageNum: 1,\r\n                                    });\r\n                                    this.currentPage = 1;\r\n                                    this.getSearchTotalCount();\r\n                                }\r\n                            }\r\n                    >\r\n                        {/* <b>검색</b> */}\r\n                        <SearchIcon/>\r\n                    </MDBBtn>\r\n\r\n                    <input type=\"search\" className=\"form-control ShareListSearch\" ref=\"search\"\r\n                           style={{float: 'right'}}\r\n                           onKeyDown={(e) => {\r\n                               // console.log(e);\r\n                               if (e.code == \"Enter\") {\r\n                                   this.setState({\r\n                                       pageNum: 1,\r\n                                   });\r\n                                   this.currentPage = 1;\r\n                                   this.getSearchTotalCount();\r\n                               }\r\n                           }}\r\n                    />\r\n                </div>\r\n\r\n\r\n                {/* 게시판 폼 */}\r\n                <Box display=\"flex\"\r\n                     flexWrap=\"wrap\"\r\n                     p={1}\r\n                     m={1}\r\n                     bgcolor=\"background.paper\"\r\n                     justifyContent=\"center\"\r\n                     css={{maxWidth: '100%'}}\r\n                >\r\n                    {\r\n                        this.state.listData.map((row, idx) => (\r\n                            <ShareBoardRowItem row={row} key={idx}\r\n                                               list={this.getShareListByPaging.bind(this)}\r\n                                               history={this.props.history}\r\n                                               currentPage={this.currentPage}\r\n                            />\r\n                        ))\r\n                    }\r\n                </Box>\r\n\r\n                {/* 페이징 */}\r\n                <PageComp currentPage={this.currentPage}\r\n                          startPage={this.startPage} endPage={this.endPage}\r\n                          totalPage={this.totalPage}\r\n                          type=\"share_restaurant\"\r\n                ></PageComp>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ShareBoardPageComp;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\ShareBoardFormComp.js",["690","691","692","693","694","695","696"],"import React, {Component} from \"react\";\r\nimport {Route, Link} from \"react-router-dom\";\r\nimport ShareBoardPageComp from \"./ShareBoardPageComp\";\r\nimport axios from \"axios\";\r\nimport {URL} from '../../../redux/config';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {MDBBtn} from \"mdbreact\";\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport \"./Share.css\";\r\nimport store from \"../../../redux/store\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport \"../join/SignupCss.css\";\r\nimport { green } from '@material-ui/core/colors';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport { pink } from '@material-ui/core/colors';\r\nimport Radio from '@material-ui/core/Radio';\r\n\r\n\r\nconst StyledRating = withStyles({\r\n    iconFilled: {\r\n        color: '#ff6d75',\r\n    },\r\n    iconHover: {\r\n        color: '#ff3d47',\r\n    },\r\n})(Rating);\r\n\r\n\r\nclass ShareBoardFormComp extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"ShareBoardFormComp constructor\", props);\r\n        this.state = {\r\n            photoname: '',\r\n            star: \"1\",\r\n            category: 'Food'\r\n        }\r\n    }\r\n\r\n    //서버에 이미지 업로드하는 함수\r\n    uploadImage = (e) => {\r\n        const uploadFile = e.target.files[0];\r\n        const upload = new FormData();\r\n        upload.append(\"uploadFile\", uploadFile);\r\n\r\n        let url = URL + \"/share/upload\";\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: upload,\r\n            headers: {'Content-Type': 'multipart/form-data'}\r\n        }).then(res => {\r\n            this.setState({\r\n                photoname: res.data.photoname\r\n            })\r\n        }).catch(err => {\r\n            console.log(\"shareboard upload 오류 : \" + err);\r\n        })\r\n\r\n    }\r\n\r\n    onDataInsert = (resolve = null) => {\r\n        //입력값 state 변수에 저장하기\r\n        let subject = this.state.category + \",\" + this.refs.subject.value;\r\n        let addr = this.refs.addr.value;\r\n        let content = this.refs.content.value;\r\n        let star = this.state.star;\r\n        let id = store.getState().loginId;\r\n\r\n        // console.log(subject + \", \" + addr + \", \" + content);\r\n\r\n        //db 에 insert\r\n        let url = URL + \"/share/insert\";\r\n\r\n        axios.post(url, {subject, addr, content, star, id}\r\n        ).then(res => {\r\n            //값 지우기\r\n            this.refs.subject.value = '';\r\n            this.refs.addr.value = '';\r\n            this.refs.content.value = '';\r\n\r\n            //이미지도 지우기\r\n            this.setState({\r\n                photoname: ''\r\n            });\r\n\r\n            if (resolve != null) {\r\n                resolve();\r\n            }\r\n        }).catch(err => {\r\n            console.log(\"shareboard insert 오류 : \" + err);\r\n        })\r\n\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        let _promise = new Promise((resolve, reject) => {\r\n            this.onDataInsert(resolve);\r\n        });\r\n\r\n        _promise.then(() => {\r\n            alert(\"회원님의 맛집이 성공적으로 등록되었습니다.\");\r\n        }).then(() => {\r\n            this.props.history.push(\"/share/1\");\r\n        });\r\n    }\r\n\r\n    changeCategory = (e) => {\r\n        this.setState({\r\n            category: e.target.value\r\n        })\r\n    }\r\n\r\n    handleDelete = () => {\r\n        let url = URL + \"/share/delupload\";\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    photoname:''\r\n                })\r\n            })\r\n    };\r\n\r\n    render() {\r\n        //const url=\"http://localhost:9002/photo/\";\r\n        // console.log(\"ShareBoardFormComp render()\", this.props);\r\n\r\n        let chip = this.state.photoname==''?\"\":<Chip\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                label={this.state.photoname}\r\n                                                onDelete={this.handleDelete.bind(this)}\r\n                                            />;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"detailTitle\">\r\n                    <span className=\"detailTitleContent\" style={{backgroundColor: 'white', color: '#036E38'}}>\r\n                        &nbsp;&nbsp;맛집 공유&nbsp;&nbsp;\r\n                    </span>\r\n                </div>\r\n                <div className=\"detailIntro\" style={{color: \"#888\"}}>\r\n                    회원님들과 공유하고싶은 맛집의 정보를 입력해주세요.\r\n                </div>\r\n\r\n                <div id=\"SignupForm\" style={{textAlign: 'center', position: 'relative'}}>\r\n                <table class=\"table table-bordered\">\r\n                    {/* <caption style={{captionSide: 'top', textAlign: 'center'}}><b>맛집공유</b></caption> */}\r\n                    <tr>\r\n                        <td colSpan=\"2\">\r\n                        <Radio\r\n                            checked={this.state.category === 'Food'}\r\n                            onChange={this.changeCategory}\r\n                            value=\"Food\"\r\n                            name=\"radio-button-demo\"\r\n                            style={{color: green[600]}}\r\n                            inputProps={{ 'aria-label': 'Food' }}\r\n                        /><b>Food</b>\r\n                        <Radio\r\n                            checked={this.state.category === 'Cafe'}\r\n                            onChange={this.changeCategory}\r\n                            value=\"Cafe\"\r\n                            name=\"radio-button-demo\"x\r\n                            style={{color: pink[600]}}\r\n                            inputProps={{ 'aria-label': 'Cafe' }}\r\n                        /><b>Cafe</b>\r\n                        <Radio\r\n                            checked={this.state.category === 'Bar'}\r\n                            onChange={this.changeCategory}\r\n                            value=\"Bar\"\r\n                            name=\"radio-button-demo\"\r\n                            style={{color: blue[600]}}\r\n                            inputProps={{ 'aria-label': 'Bar' }}\r\n                        /><b>Bar</b>\r\n                            {/* <select name=\"category\" onChange={this.changeSelect}>\r\n                                    <option value=\"Food\">Food</option>\r\n                                    <option value=\"Cafe\">Cafe</option>\r\n                                    <option value=\"Bar\">Bar</option> \r\n                                </select> */}\r\n                        </td>\r\n                    </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <span style={{width: '5%', color: '#036E38'}} className=\"fas fa-bookmark\"></span>\r\n                                <input className=\"form-control\" type=\"text\" style={{width: '95%', display:'inline-block'}}\r\n                                   placeholder=\"상호명\" ref=\"subject\"/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <span style={{width: '5%', color: '#036E38'}} className=\"fas fa-map-marker-alt\"></span>\r\n                                <input className=\"form-control\" type=\"text\" style={{width: '95%', display:'inline-block'}}\r\n                                   placeholder=\"주소\" ref=\"addr\"/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\" style={{padding: '0'}}>\r\n                                <input style={{display:'none'}} id=\"sign-icon-button-file\" name = \"photo\" type=\"file\" onChange={this.uploadImage.bind(this)}/>\r\n                                    <label htmlFor=\"sign-icon-button-file\">\r\n                                        \r\n                                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                            <PhotoCamera />\r\n                                        </IconButton>  \r\n                                    </label>\r\n                                    {chip}\r\n                                {/* <input type=\"file\" name = \"photo\" onChange={this.imageUpload.bind(this)}/> */}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <textarea maxLength=\"1000\" className=\"form-control\"\r\n                                    style={{resize: 'none', cursor: 'auto', height: '30vh'}}\r\n                                    ref=\"content\" placeholder=\"후기를 남겨주세요\">\r\n                                </textarea>                                \r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                            <Rating\r\n\r\n                                defaultValue={1}\r\n\r\n                                emptyIcon={<StarBorderIcon fontSize=\"inherit\"/>}\r\n                                onChange={\r\n                                    (e) => {\r\n                                        console.log(e);\r\n                                        this.setState({\r\n                                            star: e.target.defaultValue\r\n                                        })\r\n                                    }\r\n                                }\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"mypageUpdateBtn\" style={{backgroundColor:'#036E38', color: 'white'}} onClick={()=>{\r\n                                    this.props.history.goBack();\r\n                                }}>\r\n                                <span>목록</span>\r\n                            </td>\r\n                            <td className=\"mypageUpdateBtn\" style={{backgroundColor:'#036E38', color: 'white'}} onClick={this.handleSubmit.bind(this)}>\r\n                                <span>공유</span>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                </div>\r\n\r\n                {/* //////////////////////////////////////////////////////// */}\r\n                {/* <div id=\"ShareFormSubject\">\r\n                    <h3 id=\"sharesubject\">맛집공유</h3>\r\n                </div>\r\n\r\n\r\n                <table id=\"ShareFormAll\">\r\n                    <tr>\r\n                        <th id=\"shareth\" style={{verticalAlign: 'middle'}}><span>카테고리 </span></th>\r\n                        <td id=\"sharetd\">\r\n                            <select name=\"category\" onChange={this.changeSelect}>\r\n                                    <option disabled>선택하세요</option>\r\n                                    <option value=\"Food\">Food</option>\r\n                                    <option value=\"Cafe\">Cafe</option>\r\n                                    <option value=\"Bar\">Bar</option> \r\n                                </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th id=\"shareth\" style={{verticalAlign: 'middle'}}><span>맛집이름 </span></th>\r\n                        <td id=\"sharetd\">\r\n                            <input className=\"form-control\" type=\"text\" style={{width: '200px', height: '50px'}}\r\n                                   placeholder=\"맛집이름을 적어주세요\" ref=\"subject\"/>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th id=\"shareth\" style={{verticalAlign: 'middle'}}><span>맛집주소 </span></th>\r\n                        <td id=\"sharetd\">\r\n                            <input className=\"form-control\" type=\"text\" style={{width: '400px', height: '50px'}}\r\n                                   placeholder=\"맛집주소를 적어주세요\" ref=\"addr\"/>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th id=\"shareth\" style={{verticalAlign: 'middle'}}><span>이미지 </span></th>\r\n                        <td id=\"sharetd\">\r\n                            <input type=\"file\" onChange={this.uploadImage.bind(this)}/>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th id=\"shareth\" style={{verticalAlign: 'middle'}}><span>리뷰 </span></th>\r\n                        <td id=\"sharetd\">\r\n                         <textarea maxLength=\"1000\" className=\"form-control\"\r\n                                   style={{width: '600px', height: '150px', resize: 'none', cursor: 'auto'}}\r\n                                   ref=\"content\" placeholder=\"리뷰를 입력하세요\">\r\n                         </textarea>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th id=\"shareth\" style={{verticalAlign: 'middle'}}><span>평가 </span></th>\r\n\r\n                        <td id=\"sharetd\">\r\n                            <Box style={{marginTop: \"10px\"}}>\r\n                                <Rating\r\n\r\n                                    defaultValue={0}\r\n\r\n                                    emptyIcon={<StarBorderIcon fontSize=\"inherit\"/>}\r\n                                    onChange={\r\n                                        (e) => {\r\n                                            console.log(e);\r\n                                            this.setState({\r\n                                                star: e.target.defaultValue\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                        </td>\r\n                    </tr>\r\n\r\n                </table>\r\n\r\n\r\n                <div id=\"ShareFormButton\">\r\n                    <MDBBtn size=\"sm\" color=\"deep-orange\"\r\n\r\n                            onClick={this.handleSubmit.bind(this)}>\r\n                        <b style={{fontSize: '15px'}}>공유하기</b>\r\n                    </MDBBtn>\r\n                        <MDBBtn size=\"sm\" color=\"deep-orange\"\r\n                                onClick={()=>{\r\n                                    this.props.history.goBack();\r\n                                }}\r\n                        >\r\n                            <b style={{fontSize: '15px'}}>목록</b>\r\n                        </MDBBtn>\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ShareBoardFormComp;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\ShareBoardUpdateForm.js",["697","698","699","700","701","702","703"],"import React, {Component} from 'react';\r\nimport {Route, Link} from \"react-router-dom\";\r\nimport ShareBoardPageComp from \"./ShareBoardPageComp\";\r\n// import ShareBoardFormComp from \"./ShareBoardFormComp\";\r\nimport \"./Share.css\";\r\nimport axios from \"axios\";\r\nimport {URL} from \"../../../redux/config\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport \"../join/SignupCss.css\";\r\nimport { green } from '@material-ui/core/colors';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport { pink } from '@material-ui/core/colors';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nclass ShareBoardUpdateForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"ShareBoardUpdateForm constructor\", this.props);\r\n        this.num = this.props.match.params.num;\r\n        this.pageNum = this.props.match.params.pageNum;\r\n        // this.refs.star.value = 0;\r\n        this.state = {\r\n            photoname: '',\r\n            star: '1',\r\n            category: 'Food'\r\n        }\r\n    }\r\n\r\n\r\n    //서버에 이미지 업로드하는 함수\r\n    uploadImage = (e) => {\r\n        const uploadFile = e.target.files[0];\r\n        const upload = new FormData();\r\n        upload.append(\"uploadFile\", uploadFile);\r\n\r\n        let url = URL + \"/share/upload\";\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: upload,\r\n            headers: {'Content-Type': 'multipart/form-data'}\r\n        }).then(res => {\r\n            this.setState({\r\n                photoname: res.data.photoname\r\n            })\r\n        }).catch(err => {\r\n            console.log(\"shareboard upload 오류 : \" + err);\r\n        })\r\n\r\n    }\r\n\r\n    //num 에 해당하는 데이타 가져오기\r\n    onSelectData = () => {\r\n        let url = URL + \"/share/select?num=\" + this.num;\r\n        axios.get(url\r\n        ).then(res => {\r\n            console.log(res);\r\n            //이미지명은 state 이므로\r\n            this.setState({\r\n                star: res.data.star,\r\n                photoname: res.data.photo,\r\n                category: res.data.subject.split(\",\")[0]\r\n            })\r\n\r\n            this.refs.subject.value = res.data.subject.split(\",\")[1];\r\n            this.refs.addr.value = res.data.addr;\r\n            this.refs.content.value = res.data.content;\r\n            \r\n            \r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.onSelectData();\r\n    }\r\n\r\n\r\n    onDataUpdate = (resolve) => {\r\n        //입력값 변수에 저장하기\r\n        let subject = this.state.category + \",\" + this.refs.subject.value;\r\n        let addr = this.refs.addr.value;\r\n        let content = this.refs.content.value;\r\n        let star = this.state.star;\r\n\r\n        //db 에 update\r\n        let url = URL + \"/share/update\";\r\n        let num = this.num;\r\n        axios.post(url, {num, subject, addr, content, star}\r\n        ).then(res => {\r\n            //값 지우기\r\n            this.refs.subject.value = '';\r\n            this.refs.addr.value = '';\r\n            this.refs.content.value = '';\r\n\r\n            //이미지도 지우기\r\n            this.setState({\r\n                photoname: ''\r\n            });\r\n\r\n            if (resolve != null) {\r\n                resolve();\r\n            }\r\n        }).catch(err => {\r\n            console.log(\"수정시 오류남:\" + err);\r\n        })\r\n\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        let _promise = new Promise((resolve, reject) => {\r\n            this.onDataUpdate(resolve);\r\n        });\r\n\r\n        _promise.then(() => {\r\n            alert('정보가 성공적으로 수정되었습니다.');\r\n        }).then(() => {\r\n            if (this.pageNum == 0) {\r\n                window.location.href = \"/\";\r\n            } else {\r\n                this.props.history.push(`/share/${this.pageNum}`);\r\n            }\r\n        });\r\n    }\r\n\r\n    changeCategory = (e) => {\r\n        this.setState({\r\n            category: e.target.value\r\n        })\r\n    }\r\n\r\n    handleDelete = () => {\r\n        let url = URL + \"/share/delupload?num=\" + this.num;\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    photoname:''\r\n                })\r\n            })\r\n    };\r\n\r\n    render() {\r\n        // console.log(\"ShareBoardUpateForm render()\", this.props);\r\n        const chip = this.state.photoname=='no'|this.state.photoname==''?\"\":<Chip\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                label={this.state.photoname}\r\n                                                onDelete={this.handleDelete.bind(this)}\r\n                                            />;\r\n\r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"detailTitle\">\r\n                    <span className=\"detailTitleContent\" style={{backgroundColor: 'white', color: '#036E38'}}>\r\n                        &nbsp;&nbsp;맛집 정보 수정&nbsp;&nbsp;\r\n                    </span>\r\n                </div>\r\n\r\n                <div id=\"SignupForm\" style={{textAlign: 'center', position: 'relative'}}>\r\n                <table class=\"table table-bordered\">\r\n                    <tr>\r\n                        <td colSpan=\"2\">\r\n                        <Radio\r\n                            checked={this.state.category === 'Food'}\r\n                            onChange={this.changeCategory}\r\n                            value=\"Food\"\r\n                            name=\"radio-button-demo\"\r\n                            style={{color: green[600]}}\r\n                            inputProps={{ 'aria-label': 'Food' }}\r\n                        /><b>Food</b>\r\n                        <Radio\r\n                            checked={this.state.category === 'Cafe'}\r\n                            onChange={this.changeCategory}\r\n                            value=\"Cafe\"\r\n                            name=\"radio-button-demo\"x\r\n                            style={{color: pink[600]}}\r\n                            inputProps={{ 'aria-label': 'Cafe' }}\r\n                        /><b>Cafe</b>\r\n                        <Radio\r\n                            checked={this.state.category === 'Bar'}\r\n                            onChange={this.changeCategory}\r\n                            value=\"Bar\"\r\n                            name=\"radio-button-demo\"\r\n                            style={{color: blue[600]}}\r\n                            inputProps={{ 'aria-label': 'Bar' }}\r\n                        /><b>Bar</b>\r\n                        </td>\r\n                    </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <span style={{width: '5%', color: '#036E38'}} className=\"fas fa-bookmark\"></span>\r\n                                <input className=\"form-control\" type=\"text\" style={{width: '95%', display:'inline-block'}}\r\n                                   placeholder=\"상호명\" ref=\"subject\"/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <span style={{width: '5%', color: '#036E38'}} className=\"fas fa-map-marker-alt\"></span>\r\n                                <input className=\"form-control\" type=\"text\" style={{width: '95%', display:'inline-block'}}\r\n                                   placeholder=\"주소\" ref=\"addr\"/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\" style={{padding: '0'}}>\r\n                                <input style={{display:'none'}} id=\"sign-icon-button-file\" name = \"photo\" type=\"file\" onChange={this.uploadImage.bind(this)}/>\r\n                                    <label htmlFor=\"sign-icon-button-file\">\r\n                                        \r\n                                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                            <PhotoCamera />\r\n                                        </IconButton>  \r\n                                    </label>\r\n                                    {chip}\r\n                                {/* <input type=\"file\" name = \"photo\" onChange={this.imageUpload.bind(this)}/> */}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <textarea maxLength=\"1000\" className=\"form-control\"\r\n                                    style={{resize: 'none', cursor: 'auto', height: '30vh'}}\r\n                                    ref=\"content\" placeholder=\"후기를 남겨주세요\">\r\n                                </textarea>                                \r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                            <Rating\r\n\r\n                                value={this.state.star}\r\n                                // defaultValue={this.state.star}\r\n                                emptyIcon={<StarBorderIcon fontSize=\"inherit\"/>}\r\n                                onChange={\r\n                                    (e) => {\r\n                                        console.log(e);\r\n                                        this.setState({\r\n                                            star: e.target.defaultValue\r\n                                        })\r\n                                    }\r\n                                }\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"mypageUpdateBtn\" style={{backgroundColor:'#036E38', color: 'white'}} onClick={()=>{\r\n                                    this.props.history.goBack();\r\n                                }}>\r\n                                <span>목록</span>\r\n                            </td>\r\n                            <td className=\"mypageUpdateBtn\" style={{backgroundColor:'#036E38', color: 'white'}} onClick={this.handleSubmit.bind(this)}>\r\n                                <span>수정</span>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                </div>\r\n                {/* <div id=\"ShareFormSubject\">\r\n                    <h3 id=\"sharesubject\">맛집공유 수정</h3>\r\n                </div>\r\n\r\n\r\n                <table id=\"ShareFormAll\">\r\n                    <tr>\r\n                        <th id=\"shareth\" style={{verticalAlign: 'middle'}}><span>맛집이름 </span></th>\r\n                        <td id=\"sharetd\">\r\n                            <input className=\"form-control\" type=\"text\" style={{width: '200px', height: '50px'}}\r\n                                   placeholder=\"맛집이름을 적어주세요\" ref=\"subject\"/>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th id=\"shareth\" style={{verticalAlign: 'middle'}}><span>맛집주소 </span></th>\r\n                        <td id=\"sharetd\">\r\n                            <input className=\"form-control\" type=\"text\" style={{width: '400px', height: '50px'}}\r\n                                   placeholder=\"맛집주소를 적어주세요\" ref=\"addr\"/>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th id=\"shareth\" style={{verticalAlign: 'middle'}}><span>이미지 </span></th>\r\n                        <td id=\"sharetd\">\r\n                            <input type=\"file\" onChange={this.uploadImage.bind(this)}/>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th id=\"shareth\" style={{verticalAlign: 'middle'}}><span>리뷰 </span></th>\r\n                        <td id=\"sharetd\">\r\n                         <textarea maxLength=\"1000\" className=\"form-control\"\r\n                                   style={{width: '600px', height: '150px', resize: 'none', cursor: 'auto'}}\r\n                                   ref=\"content\" placeholder=\"리뷰를 입력하세요\">\r\n                         </textarea>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th id=\"shareth\" style={{verticalAlign: 'middle'}}><span>평가 </span></th>\r\n\r\n                        <td id=\"sharetd\">\r\n                            <Box style={{marginTop: \"25px\"}} component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n                                <Rating\r\n                                    name=\"customized-empty\"\r\n                                    defaultValue={0}\r\n                                    emptyIcon={<StarBorderIcon fontSize=\"inherit\"/>}\r\n                                    onChange={\r\n                                        (e) => {\r\n                                            this.setState({\r\n                                                star: e.target.defaultValue\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                        </td>\r\n                    </tr>\r\n\r\n                </table>\r\n\r\n                <div id=\"ShareFormButton\">\r\n                    <MDBBtn size=\"sm\" color=\"deep-orange\"\r\n                            style={{color: 'white', cursor: 'pointer'}}\r\n                            onClick={this.handleSubmit.bind(this)}>\r\n                        <b style={{fontSize: '15px'}}>수정하기</b>\r\n                    </MDBBtn>\r\n\r\n                    <MDBBtn size=\"sm\" color=\"deep-orange\"\r\n                            style={{color: 'white', cursor: 'pointer'}}\r\n                            onClick={() => {\r\n                                this.props.history.goBack();\r\n                            }}>\r\n                        <b style={{fontSize: '15px'}}>목록</b>\r\n                    </MDBBtn>\r\n\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShareBoardUpdateForm;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\admin\\MemberListPageComp.js",["704","705"],"import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\nimport RowItem from \"./RowItem\";\r\nimport store from \"../../../redux/store\";\r\nimport { URL, actionType, mainViewType } from \"../../../redux/config\";\r\n\r\nclass MemberListPageComp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"LoginPageComp constructor\", props);\r\n        \r\n        // this.state={\r\n        //     // id:'',  //아이디를 저장하고 있을 state\r\n        //     // password:'',\r\n        //     // pwCheck: \"\",//비밀번호 두개가 일치하는가\r\n        //     // name : \"\",\r\n        //     // birth_date: \"\",\r\n        //     // phone : \"\",\r\n        //     // email : \"\",\r\n        //     // address : \"\",\r\n        //     // idcanUse: false,//중복된 아이디찾기 true여야 로그인가능\r\n\r\n        //     memberData: []\r\n        // }\r\n    }\r\n\r\n    // 스프링에서 목록 가져오기\r\n    list = () => {\r\n        let url = URL + \"/member/list\";\r\n        axios.get(url)\r\n        .then(response=>{\r\n            this.setState({\r\n                memberData:response.data\r\n            })\r\n        }).catch(err=>{\r\n            console.log(\"목록 오류:\"+err);\r\n        })\r\n    }\r\n    \r\n    MEMBERLIST = () => {\r\n        console.log(\"회원목록 보기 dispatch\");\r\n        let url = URL + \"/member/list\";\r\n        axios.get(url)\r\n        .then(response=>{\r\n            this.setState({\r\n                memberData:response.data\r\n            })\r\n        }).catch(err=>{\r\n            console.log(\"목록 오류:\"+err);\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.list(); //처음 시작시 백엔드로부터 데이타 가졍괴\r\n        \r\n        store.dispatch({ type: actionType.MEMBER_LIST });\r\n        store.subscribe(this.MEMBERLIST);\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        console.log(\"MemberListPageComp render()\", this.props);\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <b>회원 목록</b>\r\n                    <div>\r\n                        번호&nbsp;아이디&nbsp;이메일&nbsp;이름&nbsp;이미지&nbsp;휴대폰\r\n                    </div>\r\n                    {/* <div>\r\n                        {\r\n                            this.props.store.memberData.map((row, idx) => (\r\n                                <RowItem row={row} key={idx} />\r\n                            ))\r\n                        }\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MemberListPageComp;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\MypagePageComp.js",["706","707","708","709","710","711","712","713","714","715","716","717","718","719","720"],"import React, {Component} from \"react\";\r\nimport MemberUpdateFormComp from \"./MemberUpdateFormComp\";\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport MySchedule from './MySchedule';\r\nimport MyReviwe from './MyReview';\r\nimport MyWishlist from './MyWishlist';\r\nimport './style/MyinfoCss.css';\r\nimport userImg from '../../../image/user.png';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PassCheck from './PassCheck';\r\nimport store from \"../../../redux/store\";\r\nimport SocialUpdateForm from './SocialUpdateForm';\r\nimport DeskMyPage from './DeskMyPage';\r\nimport MobileMyPage from './MobileMyPage';\r\n\r\nclass MypagePageComp extends Component {\r\n    \r\n    \r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                \r\n                {document.body.offsetWidth > 450?<DeskMyPage/>:<MobileMyPage/>}\r\n                {/* <div id=\"mypageInfo\" style={{width: '100%', backgroundColor: '#f7f7f7', position: 'relative'}}>\r\n                    <p id=\"mypageInfoTitle\">내 정보 관리</p>\r\n                        <Box\r\n                            display=\"flex\"\r\n                            flexWrap=\"wrap\"\r\n                            justifyContent=\"center\"\r\n                            width=\"100%\"\r\n                        >\r\n\r\n                            <Box className=\"mypageInfoCol\" width=\"20%\" alignSelf=\"center\">\r\n                                <img src={userimg} alt=\"이미지없음\" id=\"mypageUserImg\"/>\r\n                            </Box>\r\n                            <Box m={1} bgcolor=\"#fff\" width=\"50%\" className=\"mypageInfoCol\">\r\n                                <table>\r\n                                        <tr style={{borderBottom: '1px dotted #eee'}}>\r\n                                            <td>\r\n                                                <span class=\"fas fa-bookmark\"></span>\r\n                                            </td>\r\n                                            <td style={{paddingLeft: '10px'}}>\r\n                                                {this.state.memberData.id}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr style={{borderBottom: '1px dotted #eee'}}>\r\n                                            <td>\r\n                                            <span class=\"fas fa-user-alt\"></span>\r\n                                            </td>\r\n                                            <td style={{paddingLeft: '10px'}}>\r\n                                                {this.state.memberData.name}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr style={{borderBottom: '1px dotted #eee'}}>\r\n                                            <td>\r\n                                            <span class=\"fas fa-phone-alt\"></span>\r\n                                            </td>\r\n                                            <td style={{paddingLeft: '10px'}}>\r\n                                                {this.state.memberData.hp}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr style={{borderBottom: '1px dotted #eee'}}>\r\n                                            <td>\r\n                                                <span class=\"fas fa-envelope-open-text\"></span>\r\n                                            </td>\r\n                                            <td style={{paddingLeft: '10px'}}>\r\n                                                {this.state.memberData.email}@{this.state.memberData.email2}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>\r\n                                            <span class=\"fas fa-home\"></span>\r\n                                            </td>\r\n                                            <td style={{paddingLeft: '10px'}}>\r\n                                                {this.state.memberData.address}<br/>{address}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </table>\r\n                            </Box>\r\n                            <Box width=\"20%\" alignSelf=\"center\">\r\n                                <Box m={1} bgcolor=\"#fff\" className=\"mypageInfoCol\" style={{textAlign: 'center'}}>\r\n                                    <span className=\"mypageInfoSubtitle\">일정</span><br/>\r\n                                    <span className=\"mypageInfoSubContent\">{this.state.wishCount}</span>\r\n                                </Box>\r\n                                <Box m={1} bgcolor=\"#fff\" className=\"mypageInfoCol\" style={{textAlign: 'center'}}>\r\n                                    <span className=\"mypageInfoSubtitle\">공유한 일정</span><br/>\r\n                                    <span className=\"mypageInfoSubContent\">0</span>\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                        </Box>\r\n\r\n                </div>\r\n                \r\n                <Paper square style={{marginTop: '100px'}} id=\"mypageTabs\">\r\n                    <Tabs\r\n                        value={this.state.value}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        onChange={this.handleTabChange}\r\n                        aria-label=\"disabled tabs example\"\r\n                    >\r\n                        <Tab label=\"My Plan\" {...this.tabProps(0)}/>\r\n                        <Tab label=\"My Review\" {...this.tabProps(1)}/>\r\n                        <Tab label=\"My Reservation\" {...this.tabProps(2)}/>\r\n                        <Tab label=\"My Info\" {...this.tabProps(3)}/>\r\n                    </Tabs>\r\n                    <TabPanel value={this.state.value} index={0}>\r\n                        <MySchedule/>\r\n                    </TabPanel>\r\n                    <TabPanel value={this.state.value} index={1}>\r\n                        <MyReviwe/>\r\n                    </TabPanel>\r\n                    <TabPanel value={this.state.value} index={2}>\r\n                        <MyWishlist/>\r\n                    </TabPanel>\r\n                    <TabPanel value={this.state.value} index={3}>\r\n                        {passOkTab}\r\n                    </TabPanel>\r\n                </Paper> */}\r\n                \r\n            </div>\r\n            \r\n        )\r\n        \r\n        \r\n    }\r\n}\r\nclass TabPanel extends Component {\r\n    render() {\r\n      return (\r\n        <Typography component=\"div\" hidden={this.props.value !== this.props.index}>\r\n          <Box p={3}>{this.props.children}</Box>\r\n        </Typography>\r\n      );\r\n    }\r\n  }\r\nexport default MypagePageComp;\r\n\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\MySchedule.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\MyWishlist.js",["721","722","723"],"import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\n\r\nclass MyWishlist extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // console.log(\"MyWishlist constructor\", props);\r\n\r\n    }\r\n    render() {\r\n        // console.log(\"MyWishlist render()\", this.props);\r\n\r\n        return (\r\n            <div>\r\n                나의 예약\r\n            </div>\r\n         )\r\n     }\r\n}\r\nexport default MyWishlist;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\MyReview.js",["724"],"import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport ReviewList from './ReviewList';\r\nimport './style/MyReviewCss.css';\r\nimport ReviewPage from './ReviewPage';\r\nimport store from '../../../redux/store';\r\n\r\nclass MyReview extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            pageNum: 1,\r\n            reviewList: []\r\n        }\r\n\r\n        this.currentPage = this.state.pageNum;\r\n        this.totalCount = 0;\r\n        this.perPage = 5; // 한페이지당 보여질 글의 갯수\r\n        this.perBlock = 5; // 한블럭당 출력할 페이지의 갯수\r\n        this.totalPage = 0; // 총 페이지의 갯수\r\n        this.startPage = 0; // 각 블럭당 시작 페이지 번호\r\n        this.endPage = 0; // 각 블럭당 끝페이지 번호\r\n        this.start = 0; // 각 블럭당 불러올 글의 시작번호\r\n        this.end = 0; // 각 블럭당 글의 끝번호\r\n        this.no = 0; // 각 페이지에서 출력할 시작번호\r\n    }\r\n    \r\n    paginate = (num) =>{\r\n        \r\n        this.currentPage = num;\r\n        this.getMyReview();\r\n    }\r\n\r\n    getTotalCount = () => {\r\n\r\n        let url = URL + \"/wish/count?memNum=\" + store.getState().loginId;\r\n\r\n        axios.get(url)\r\n            .then(res => {\r\n                this.totalCount = res.data;\r\n                this.getMyReview();\r\n            }).catch(err => {\r\n            console.log(\"mypage review getTotalCount 오류 : \" + err);\r\n        })\r\n    }\r\n\r\n    getMyReview = () => {\r\n        // 나머지가 있을 경우에는 1페이지 더 추가 (예 : 총글수가 9이고 한페이지당 2개씩 볼 경우)\r\n        this.totalPage = Math.floor(this.totalCount / this.perPage) + (this.totalCount % this.perPage > 0 ? 1 : 0);\r\n\r\n        // 시작페이지와 끝페이지 구하기\r\n        this.startPage = Math.floor((this.currentPage - 1) / this.perBlock) * this.perBlock + 1;\r\n        this.endPage = this.startPage + this.perBlock - 1;\r\n        // 마지막 블럭은 endPage를 totalPage로 해놔야 한다.\r\n        if (this.endPage > this.totalPage)\r\n            this.endPage = this.totalPage;\r\n\r\n        // mysql은 첫 글이 0번이므로 +1 안해도됨 (오라클은 1번)\r\n        this.start = (this.currentPage - 1) * this.perPage;\r\n\r\n        this.no = this.totalCount - (this.currentPage - 1) * this.perPage;\r\n        \r\n        let url = URL + '/wish/myreview?start=' + this.start + '&end=' + this.perPage + '&memNum=' + store.getState().loginId;\r\n        axios.get(url)\r\n            .then(response => {\r\n                // console.log(response.data);\r\n                this.setState({\r\n                    reviewList: response.data\r\n                })\r\n            }).catch(err => {\r\n            console.log(\"목록 오류:\" + err);\r\n        })\r\n  \r\n    }\r\n    componentDidMount() {\r\n        this.getTotalCount();\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"MyReview render()\", this.props);\r\n        let photoCol = '';\r\n        if (matchMedia(\"screen and (min-width:400px)\").matches) {\r\n            photoCol = <TableCell align=\"center\" className=\"mypageReCol\">photo</TableCell>;\r\n        }\r\n        const tag = this.state.reviewList==''?<div style={{textAlign: 'center', margin: '10px'}}><b className=\"mypageReCol\">등록된 review가 없습니다.</b></div>:\"\"; \r\n\r\n        return (\r\n            <div>\r\n                <div className=\"detailTitle\">\r\n                    <span className=\"detailTitleContent\" style={{backgroundColor:'white', color: '#036E38'}}>\r\n                        &nbsp;&nbsp;&nbsp;나의 리뷰&nbsp;&nbsp;&nbsp;\r\n                    </span>\r\n                </div>\r\n                <br/>\r\n                <div className=\"detailIntro\" style={{color: \"#888\", textAlign: 'center', marginBottom: '0px'}}>\r\n                    회원님이 작성하신 Review 목록입니다.\r\n                </div>\r\n                <Paper id=\"mypageReview\">\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\" className=\"mypageReCol\">#</TableCell>\r\n                                {photoCol}\r\n                                <TableCell align=\"center\" className=\"mypageReCol\">review</TableCell>\r\n                                <TableCell align=\"center\" className=\"mypageReCol\">star</TableCell>\r\n                                <TableCell align=\"center\" className=\"mypageReCol\">date</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.reviewList.map((row, idx)=>(\r\n                                <ReviewList row={row} idx={(this.currentPage-1)*this.perPage + idx+1}/>\r\n                            ))}\r\n                            {/* {this.state.reviewList ? this.state.reviewList.map(r, idx => {\r\n                            return <ReviewList key={r.num} num={r.num} photo={r.photo} content={r.content} memNum={r.memNum} idx={idx} \r\n                            star={r.star} likes={r.likes} contentsid={r.contentsid} writeday={r.writeday} history={this.props.history}/>\r\n                            }) : ''} */}\r\n                        </TableBody>\r\n                    </Table>\r\n                {tag}\r\n                </Paper>\r\n                <ReviewPage paginate={this.paginate.bind(this)} startPage={this.startPage} endPage={this.endPage} \r\n                    currentPage={this.currentPage} totalPage={this.totalPage}/>\r\n            </div>              \r\n        );\r\n    }\r\n}\r\n        \r\nexport default MyReview;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\PassCheck.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\SocialUpdateForm.js",["725","726","727","728","729"],"import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\nimport './style/UpdateFormCss.css';\r\nimport DaumPostcode from 'react-daum-postcode';\r\nimport store from '../../../redux/store';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nclass SocialUpdateForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state={\r\n            id: '',\r\n            name: '',\r\n            gender: '',\r\n            birth: '',\r\n            photo: '',\r\n            address: '',\r\n            addrdetail: '',\r\n            email: '',\r\n            email2: '',\r\n            hp: '',\r\n            password: '',\r\n            showPassword: false,\r\n            zoneCode : \"\",\r\n            fullAddress : \"\",\r\n            isDaumPost : false,\r\n            isRegister : false,\r\n            register: [],\r\n        }\r\n    }    \r\n    \r\n\r\n    // 스프링에서 목록 가져오기\r\n    getData = () => {\r\n        let url = URL + '/member/getdata?id=' + store.getState().loginId;\r\n        axios.get(url)\r\n        .then(response=>{\r\n            this.setState({\r\n                id: response.data.id,\r\n                name: response.data.name,\r\n                gender: response.data.gender,\r\n                birth: response.data.birth,\r\n                photo: response.data.photo,\r\n                fullAddress: response.data.address,\r\n                addrdetail: response.data.addrdetail,\r\n                email: response.data.email,\r\n                email2: response.data.email2,\r\n                hp: response.data.hp            \r\n            })\r\n            if(this.state.gender=='여자')\r\n                this.refs.woman.className = 'mypageUpdateBtn clickMypageUpdateBtn';\r\n            else\r\n                this.refs.man.className = 'mypageUpdateBtn clickMypageUpdateBtn';\r\n        }).catch(err=>{\r\n            console.log(\"목록 오류:\"+err);\r\n        })\r\n    }\r\n\r\n    changeEmail = (e) => {\r\n        console.log(\"changeEmail 함수\");\r\n        this.setState({\r\n            email2: e.target.value\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    //사진 업로드시 호출되는 함수\r\n    imageUpload=(e)=>{\r\n        const uploadFile = e.target.files[0];\r\n\r\n        //서버에 업로드\r\n        const memberFile = new FormData();\r\n        memberFile.append(\"uploadFile\",uploadFile);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: URL + '/member/upload',\r\n            data: memberFile,\r\n            headers: {'Content-Type':'multipart/form-data'}\r\n        }).then(response=>{\r\n            this.setState({\r\n                photo: response.data.photoname\r\n            })\r\n        }).catch(err=>{\r\n            console.log(\"이미지 업로드시 오류남:\"+err);\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(); //처음 시작시 백엔드로부터 데이타 가져오기\r\n    }\r\n\r\n    onUpdateMember = () => {\r\n        var id = this.state.id;\r\n        var name = this.state.name;\r\n        var gender = this.state.gender;\r\n        var birth = this.state.birth;\r\n        var photo = this.state.photo;\r\n        var address = this.state.fullAddress;\r\n        var addrdetail = this.state.addrdetail;\r\n        var email = this.state.email;\r\n        var email2 = this.state.email2;\r\n        var hp = this.state.hp;\r\n        \r\n        let url = URL + \"/member/update\";\r\n\r\n        if(name.trim()==null || birth.trim()==null\r\n            || gender==null || address==null || addrdetail==null ||\r\n            email==null || email2==null || hp==null){\r\n                alert(\"정보를 모두 입력해주세요.\")\r\n        }\r\n        else {\r\n            axios.post(url, {\r\n                id, name, gender, birth, photo, address, addrdetail, email, email2, hp\r\n            })\r\n            .then(response => {\r\n                window.scrollTo(0,0);\r\n                alert(\"정보가 수정되었습니다.\");\r\n            }).catch(err=>{\r\n                console.log(\"회원업데이트중 오류:\"+err);\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    onDeleteMember = () => {\r\n        let id = this.state.id;\r\n        let passCheck = this.state.passCheck;\r\n        let url = URL + \"/member/delete\";\r\n\r\n        console.log(id + \", \" +passCheck);\r\n        axios.post(url , {id:id,pass:passCheck})\r\n        .then(response => {\r\n            if(response.data)\r\n                this.props.history.push(\"/MainPage\");//정보 변경후 메인페이지로 이동\r\n            else\r\n                alert(\"비밀번호 틀림\");\r\n        }).catch(err=>{\r\n            console.log(\"회원삭제중 오류:\"+err);\r\n        })\r\n    }\r\n\r\n    womanClick=(e)=>{\r\n        if(e.target.className == 'mypageUpdateBtn clickMypageUpdateBtn'){\r\n            e.target.className = 'mypageUpdateBtn';\r\n            this.setState({\r\n                gender: ''\r\n            })       \r\n        }\r\n        else{\r\n            this.refs.man.className = \"mypageUpdateBtn\";\r\n            e.target.className = 'mypageUpdateBtn clickMypageUpdateBtn';\r\n            \r\n            this.setState({\r\n                gender: '여자'\r\n            })\r\n        }\r\n    }\r\n    manClick=(e)=>{\r\n        if(e.target.className == 'mypageUpdateBtn clickMypageUpdateBtn'){\r\n            e.target.className = 'mypageUpdateBtn';\r\n            this.setState({\r\n                gender: ''\r\n            })         \r\n        }\r\n        else{\r\n            this.refs.woman.className = \"mypageUpdateBtn\";\r\n            e.target.className = 'mypageUpdateBtn clickMypageUpdateBtn';\r\n            this.setState({\r\n                gender: '남자'\r\n            })  \r\n        }\r\n    }\r\n\r\n    // 주소검색\r\n    handleTogglePost = () => {\r\n        var p = this.state.isDaumPost;\r\n        this.setState({\r\n            isDaumPost : !p\r\n        })\r\n    }\r\n\r\n    // postcode\r\n    handleAddress = (data) => {\r\n        let AllAddress = data.address;\r\n        let extraAddress = ''; \r\n        let zoneCodes = data.zonecode;\r\n        \r\n        if (data.addressType === 'R') {\r\n          if (data.bname !== '') {\r\n            extraAddress += data.bname;\r\n          }\r\n          if (data.buildingName !== '') {\r\n            extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n          }\r\n          AllAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\r\n        }\r\n        this.setState ({\r\n            fullAddress: AllAddress,\r\n            zoneCode : zoneCodes\r\n        })\r\n      }\r\n\r\n      handleDelete = () => {\r\n        let url = URL + \"/member/delupload?id=\" + store.getState().loginId;\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    photo:''\r\n                })\r\n            })\r\n    };\r\n\r\n    render() {\r\n        // console.log(\"MemberUpdateFormComp render()\", this.props);\r\n\r\n        const chip = this.state.photo=='no'|this.state.photo==''?\"\":<Chip\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                label={this.state.photo}\r\n                                                onDelete={this.handleDelete.bind(this)}\r\n                                            />;\r\n\r\n        return (\r\n            <div id=\"MypageUpdateForm\" style={{textAlign: 'center', position: 'relative'}}>\r\n\r\n                {/* <form onSubmit={this.onUpdateMember}> */}\r\n                    <table class=\"table table-bordered\">\r\n                        <caption style={{captionSide: 'top', textAlign: 'center'}}><b>회원정보 수정</b></caption>\r\n                        <tr>\r\n                        <td colSpan=\"2\"> <span class=\"fas fa-user-alt\"></span>&nbsp;&nbsp;{this.state.id}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\"><input type=\"text\" name = \"name\" class=\"form-control\" value = {this.state.name} onChange={this.handleChange} placeholder=\"이름\"/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"mypageUpdateBtn\" ref=\"woman\" onClick={this.womanClick.bind(this)}>여자</td>\r\n                            <td className=\"mypageUpdateBtn\" ref=\"man\" onClick={this.manClick.bind(this)}>남자</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <Tooltip title=\"생년월일\" arrow>\r\n                                    <input type=\"date\" name = \"birth\" className=\"form-control SignupBirth\" value = {this.state.birth} \r\n                                        onChange={this.handleChange.bind(this)}/>\r\n                                </Tooltip>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\" style={{padding: '0'}}>\r\n                                프로필 사진&nbsp;\r\n                                <input style={{display:'none'}} id=\"sign-icon-button-file\" name = \"photo\" type=\"file\" onChange={this.imageUpload.bind(this)}/>\r\n                                    <label htmlFor=\"sign-icon-button-file\">\r\n                                        \r\n                                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                            <PhotoCamera />\r\n                                        </IconButton>  \r\n                                    </label>\r\n                                    {chip}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <input type=\"text\" name = \"address\" class=\"form-control\" value = {this.state.fullAddress} disabled  placeholder=\"주소\"/>\r\n                                <br/>\r\n                                <input type=\"text\" name = \"addrdetail\" class=\"form-control\" value = {this.state.addrdetail} onChange={this.handleChange} placeholder=\"상세 주소\"/>\r\n                                \r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\" onClick={this.handleTogglePost.bind(this)} style={{backgroundColor: '#036E38', color: 'white', cursor: 'pointer'}}>\r\n                                주소검색\r\n                                {\r\n                                    this.state.isDaumPost ?\r\n                                        <DaumPostcode\r\n                                            onComplete={this.handleAddress.bind(this)}\r\n                                            autoClose\r\n                                            className=\"postSearchModal\"\r\n                                            isDaumPost={this.state.isDaumPost}\r\n                                            />\r\n                                    : null\r\n                                }\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <input type=\"text\" name = \"email\" value = {this.state.email} className=\"mypageUpdateAddr\" onChange={this.handleChange} placeholder=\"이메일\"/>@\r\n                                <input type=\"text\" name = \"email2\" value = {this.state.email2} className=\"mypageUpdateAddr\" onChange={this.handleChange} required/>\r\n                                &nbsp;\r\n                                <select name=\"selectemail\" className=\"mypageUpdateAddr\" onChange={this.changeEmail}>\r\n                                    <option disabled>선택하세요</option>\r\n                                    <option value=\"\">직접입력</option>\r\n                                    <option value=\"naver.com\">naver.com</option>\r\n                                    <option value=\"gmail.com\">gmail.com</option>\r\n                                    <option value=\"nate.com\">nate.com</option> \r\n                                </select>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\"><input type=\"text\" class=\"form-control\" name = \"hp\" value = {this.state.hp} \r\n                                placeholder=\"휴대폰\" onChange={this.handleChange} required/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"mypageUpdateBtn\">\r\n                                <span onClick={this.onUpdateMember.bind(this)}>정보 수정</span>\r\n                                {/* <button type=\"submit\" style={{padding: '0', fontWeight: '0', backgroundColor: 'rgba(255,255,255,0)', border: 'none'}}>정보 수정</button> */}\r\n                            </td>\r\n                            <td className=\"mypageUpdateBtn\">\r\n                                <span onClick={this.onDeleteMember.bind(this)}>회원 탈퇴</span>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SocialUpdateForm;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\MemberUpdateFormComp.js",["730","731","732","733","734"],"import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\nimport './style/UpdateFormCss.css';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport DaumPostcode from 'react-daum-postcode';\r\nimport store from '../../../redux/store';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nclass MemberUpdateFormComp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state={\r\n            id: '',\r\n            name: '',\r\n            gender: '',\r\n            birth: '',\r\n            photo: '',\r\n            address: '',\r\n            addrdetail: '',\r\n            email: '',\r\n            email2: '',\r\n            hp: '',\r\n            password: '',\r\n            showPassword: false,\r\n            zoneCode : \"\",\r\n            fullAddress : \"\",\r\n            isDaumPost : false,\r\n            isRegister : false,\r\n            register: [],\r\n        }\r\n    }    \r\n    \r\n    handleClickShowPassword=()=>{\r\n        var s = this.state.showPassword\r\n        this.setState({\r\n            showPassword: !s\r\n        })\r\n    }\r\n\r\n    handleMouseDownPassword=(e)=>{\r\n        e.preventDefault();\r\n    }\r\n\r\n    passChange = (prop) => (e) => {\r\n        this.setState({\r\n            [prop] : e.target.value\r\n        });\r\n    }\r\n\r\n    // 스프링에서 목록 가져오기\r\n    getData = () => {\r\n        let url = URL + '/member/getdata?id=' + store.getState().loginId;\r\n        axios.get(url)\r\n        .then(response=>{\r\n            this.setState({\r\n                id: response.data.id,\r\n                name: response.data.name,\r\n                password: response.data.pass,\r\n                gender: response.data.gender,\r\n                birth: response.data.birth,\r\n                photo: response.data.photo,\r\n                fullAddress: response.data.address,\r\n                addrdetail: response.data.addrdetail,\r\n                email: response.data.email,\r\n                email2: response.data.email2,\r\n                hp: response.data.hp            \r\n            })\r\n            if(this.state.gender=='여자')\r\n                this.refs.woman.className = 'mypageUpdateBtn clickMypageUpdateBtn';\r\n            else\r\n                this.refs.man.className = 'mypageUpdateBtn clickMypageUpdateBtn';\r\n        }).catch(err=>{\r\n            console.log(\"목록 오류:\"+err);\r\n        })\r\n    }\r\n\r\n    changeEmail = (e) => {\r\n        console.log(\"changeEmail 함수\");\r\n        this.setState({\r\n            email2: e.target.value\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    //사진 업로드시 호출되는 함수\r\n    imageUpload=(e)=>{\r\n        const uploadFile = e.target.files[0];\r\n\r\n        //서버에 업로드\r\n        const memberFile = new FormData();\r\n        memberFile.append(\"uploadFile\",uploadFile);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: URL + '/member/upload',\r\n            data: memberFile,\r\n            headers: {'Content-Type':'multipart/form-data'}\r\n        }).then(response=>{\r\n            this.setState({\r\n                photo: response.data.photoname\r\n            })\r\n        }).catch(err=>{\r\n            console.log(\"이미지 업로드시 오류남:\"+err);\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(); //처음 시작시 백엔드로부터 데이타 가져오기\r\n    }\r\n\r\n    onUpdateMember = () => {\r\n        var id = this.state.id;\r\n        var name = this.state.name;\r\n        var pass = this.state.password;\r\n        var gender = this.state.gender;\r\n        var birth = this.state.birth;\r\n        var photo = this.state.photo;\r\n        var address = this.state.fullAddress;\r\n        var addrdetail = this.state.addrdetail;\r\n        var email = this.state.email;\r\n        var email2 = this.state.email2;\r\n        var hp = this.state.hp;\r\n        \r\n        let url = URL + \"/member/update\";\r\n\r\n        if(id.trim()==='' || name.trim()==='' || pass.trim()==='' || birth.trim()===''\r\n            || gender.trim()==='' || address.trim()==='' || addrdetail.trim()==='' ||\r\n            email.trim()==='' || email2.trim()==='' || hp.trim()===''){\r\n                alert(\"정보를 모두 입력해주세요.\")\r\n        }\r\n        else {\r\n            axios.post(url, {\r\n                id, name, pass, gender, birth, photo, address, addrdetail, email, email2, hp\r\n            })\r\n            .then(response => {\r\n                this.props.passOk(false);\r\n                window.scrollTo(0,0);\r\n                alert(\"정보가 수정되었습니다.\");\r\n            }).catch(err=>{\r\n                console.log(\"회원업데이트중 오류:\"+err);\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    onDeleteMember = () => {\r\n        let id = this.state.id;\r\n        let passCheck = this.state.passCheck;\r\n        let url = URL + \"/member/delete\";\r\n\r\n        console.log(id + \", \" +passCheck);\r\n        axios.post(url , {id:id,pass:passCheck})\r\n        .then(response => {\r\n            if(response.data)\r\n                this.props.history.push(\"/MainPage\");//정보 변경후 메인페이지로 이동\r\n            else\r\n                alert(\"비밀번호 틀림\");\r\n        }).catch(err=>{\r\n            console.log(\"회원삭제중 오류:\"+err);\r\n        })\r\n    }\r\n\r\n    womanClick=(e)=>{\r\n        if(e.target.className == 'mypageUpdateBtn clickMypageUpdateBtn'){\r\n            e.target.className = 'mypageUpdateBtn';\r\n            this.setState({\r\n                gender: ''\r\n            })       \r\n        }\r\n        else{\r\n            this.refs.man.className = \"mypageUpdateBtn\";\r\n            e.target.className = 'mypageUpdateBtn clickMypageUpdateBtn';\r\n            \r\n            this.setState({\r\n                gender: '여자'\r\n            })\r\n        }\r\n    }\r\n    manClick=(e)=>{\r\n        if(e.target.className == 'mypageUpdateBtn clickMypageUpdateBtn'){\r\n            e.target.className = 'mypageUpdateBtn';\r\n            this.setState({\r\n                gender: ''\r\n            })         \r\n        }\r\n        else{\r\n            this.refs.woman.className = \"mypageUpdateBtn\";\r\n            e.target.className = 'mypageUpdateBtn clickMypageUpdateBtn';\r\n            this.setState({\r\n                gender: '남자'\r\n            })  \r\n        }\r\n    }\r\n\r\n    // 주소검색\r\n    handleTogglePost = () => {\r\n        var p = this.state.isDaumPost;\r\n        this.setState({\r\n            isDaumPost : !p\r\n        })\r\n    }\r\n\r\n    // postcode\r\n    handleAddress = (data) => {\r\n        let AllAddress = data.address;\r\n        let extraAddress = ''; \r\n        let zoneCodes = data.zonecode;\r\n        \r\n        if (data.addressType === 'R') {\r\n          if (data.bname !== '') {\r\n            extraAddress += data.bname;\r\n          }\r\n          if (data.buildingName !== '') {\r\n            extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n          }\r\n          AllAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\r\n        }\r\n        this.setState ({\r\n            fullAddress: AllAddress,\r\n            zoneCode : zoneCodes\r\n        })\r\n      }\r\n\r\n      handleDelete = () => {\r\n        let url = URL + \"/member/delupload?id=\" + store.getState().loginId;\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    photo:''\r\n                })\r\n            })\r\n    };\r\n\r\n    render() {\r\n        // console.log(\"MemberUpdateFormComp render()\", this.props);\r\n\r\n        const chip = this.state.photo=='no'|this.state.photo==''?\"\":<Chip\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                label={this.state.photo}\r\n                                                onDelete={this.handleDelete.bind(this)}\r\n                                            />;\r\n\r\n        return (\r\n            <div id=\"MypageUpdateForm\" style={{textAlign: 'center', position: 'relative'}}>\r\n\r\n                {/* <form onSubmit={this.onUpdateMember}> */}\r\n                    <table class=\"table table-bordered\">\r\n                        <caption style={{captionSide: 'top', textAlign: 'center'}}><b>회원정보 수정</b></caption>\r\n                        <tr>\r\n                        <td colSpan=\"2\"> <span class=\"fas fa-user-alt\"></span>&nbsp;&nbsp;{this.state.id}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                {/* <input type=\"password\" name=\"pass\" class=\"form-control\" value = {this.state.pass} onChange={this.handleChange} required/> */}\r\n                                <FormControl variant=\"outlined\">\r\n                                    <InputLabel htmlFor=\"mypageUpdatePassword\">Password</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"mypageUpdatePassword\"\r\n                                        type={this.state.showPassword ? 'text' : 'password'}\r\n                                        value={this.state.password}\r\n                                        onChange={this.passChange('password').bind(this)}\r\n                                        endAdornment={\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={this.handleClickShowPassword.bind(this)}\r\n                                            onMouseDown={this.handleMouseDownPassword.bind(this)}\r\n                                            edge=\"end\"\r\n                                            >\r\n                                            {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                        }\r\n                                        labelWidth={70}\r\n                                    />\r\n                                </FormControl>  \r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\"><input type=\"text\" name = \"name\" class=\"form-control\" value = {this.state.name} onChange={this.handleChange} placeholder=\"이름\"/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"mypageUpdateBtn\" ref=\"woman\" onClick={this.womanClick.bind(this)}>여자</td>\r\n                            <td className=\"mypageUpdateBtn\" ref=\"man\" onClick={this.manClick.bind(this)}>남자</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <Tooltip title=\"생년월일\" arrow>\r\n                                    <input type=\"date\" name = \"birth\" className=\"form-control SignupBirth\" value = {this.state.birth} \r\n                                        onChange={this.handleChange.bind(this)}/>\r\n                                </Tooltip>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\" style={{padding: '0'}}>\r\n                                프로필 사진&nbsp;\r\n                                <input style={{display:'none'}} id=\"sign-icon-button-file\" name = \"photo\" type=\"file\" onChange={this.imageUpload.bind(this)}/>\r\n                                    <label htmlFor=\"sign-icon-button-file\">\r\n                                        \r\n                                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                            <PhotoCamera />\r\n                                        </IconButton>  \r\n                                    </label>\r\n                                    {chip}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <input type=\"text\" name = \"address\" class=\"form-control\" value = {this.state.fullAddress} disabled  placeholder=\"주소\"/>\r\n                                <br/>\r\n                                <input type=\"text\" name = \"addrdetail\" class=\"form-control\" value = {this.state.addrdetail} onChange={this.handleChange} placeholder=\"상세주소\"/>\r\n                                \r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\" onClick={this.handleTogglePost.bind(this)} style={{backgroundColor: '#036E38', color: 'white', cursor: 'pointer'}}>\r\n                                주소검색\r\n                                {\r\n                                    this.state.isDaumPost ?\r\n                                        <DaumPostcode\r\n                                            onComplete={this.handleAddress.bind(this)}\r\n                                            autoClose\r\n                                            className=\"postSearchModal\"\r\n                                            isDaumPost={this.state.isDaumPost}\r\n                                            />\r\n                                    : null\r\n                                }\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <input type=\"text\" name = \"email\" value = {this.state.email} className=\"mypageUpdateAddr\" onChange={this.handleChange} placeholder=\"이메일\"/>@\r\n                                <input type=\"text\" name = \"email2\" value = {this.state.email2} className=\"mypageUpdateAddr\" onChange={this.handleChange} required/>\r\n                                &nbsp;\r\n                                <select name=\"selectemail\" className=\"mypageUpdateAddr\" onChange={this.changeEmail}>\r\n                                    <option disabled>선택하세요</option>\r\n                                    <option value=\"\">직접입력</option>\r\n                                    <option value=\"naver.com\">naver.com</option>\r\n                                    <option value=\"gmail.com\">gmail.com</option>\r\n                                    <option value=\"nate.com\">nate.com</option> \r\n                                </select>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\"><input type=\"text\" class=\"form-control\" name = \"hp\" value = {this.state.hp} onChange={this.handleChange} placeholder=\"전화번호\"/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"mypageUpdateBtn\">\r\n                                <span onClick={this.onUpdateMember.bind(this)}>정보 수정</span>\r\n                                {/* <button type=\"submit\" style={{padding: '0', fontWeight: '0', backgroundColor: 'rgba(255,255,255,0)', border: 'none'}}>정보 수정</button> */}\r\n                            </td>\r\n                            <td className=\"mypageUpdateBtn\">\r\n                                <span onClick={this.onDeleteMember.bind(this)}>회원 탈퇴</span>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemberUpdateFormComp;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\tour\\DetailTourComp.js",["735","736","737","738","739","740","741","742"],"import React,{Component} from 'react';\r\nimport axios from 'axios';\r\nimport MapComp from './MapComp';\r\nimport ReviewListComp from './ReviewListComp';\r\nimport {URL} from '../../../redux/config';\r\nimport './TourDetailCss.css';\r\nimport './TourCss.css';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport store from '../../../redux/store';\r\n\r\nclass DetailTourComp extends Component {\r\n\r\n    constructor({match}, props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            spotdata:[],\r\n            contentsid: match.params.name,\r\n            open: false, \r\n            setOpen: false,\r\n            alertOpen: false,\r\n            alertSetOpen: false\r\n        }\r\n\r\n    }\r\n\r\n    // componentDidUpdate() {\r\n    //     window.scrollTo(0,0);\r\n    // }\r\n\r\n    getData=()=>{\r\n        const url = URL + \"/spot/select?contentsid=\" + this.state.contentsid;\r\n\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    spotdata : res.data\r\n                })\r\n            }).catch(err=>{\r\n                console.log(\"DetailTourComp getData 오류 : \" + err);\r\n            })\r\n    }\r\n\r\n    setAvgStar=()=>{\r\n        \r\n        let url = URL + \"/spot/updatestar?contentsid=\" + this.state.contentsid;\r\n\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.getData();\r\n            }).catch(err=>{\r\n                console.log(\"DetailTourComp setAvgStar 오류 : \" + err);\r\n            })\r\n    }\r\n\r\n    componentWillMount(){\r\n        console.log(\"DetailTourComp render()\", this.props);\r\n        this.setAvgStar();\r\n    }\r\n\r\n    // heartClick=(e)=>{\r\n    //     if(e.target.className == 'heart clickheart'){\r\n    //         e.target.className = 'heart';       \r\n    //     }\r\n    //     else{\r\n    //         // e.target.className = 'heart clickheart';\r\n    //         this.handleOpen();\r\n    //     }\r\n            \r\n    // }\r\n\r\n    // modal 함수\r\n    handleOpen = () => {\r\n        if(!store.getState().logged){\r\n            alert(\"로그인이 필요한 서비스입니다.\");\r\n        }\r\n        else{\r\n            this.setState({\r\n                open: true\r\n            })\r\n        }\r\n        \r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            open: false\r\n        })\r\n    };\r\n\r\n    // alert 함수\r\n    alertOpen = () => {\r\n        this.setState({\r\n            alertOpen: true\r\n        })\r\n    };\r\n\r\n    alertClose = () => {\r\n        this.setState({\r\n            alertOpen: false\r\n        })\r\n    };\r\n\r\n    insertWish=()=>{\r\n        let url = URL + \"/wish/insertspot\";\r\n        let memId = store.getState().loginId;\r\n        let spotId = this.state.contentsid;\r\n        let content = this.state.spotdata.roadaddr;\r\n        let wishday = this.refs.wishday.value;\r\n        let wishtime = this.refs.wishtime.value;\r\n        let money = this.refs.money.value==''?null:this.refs.money.value;\r\n\r\n        console.log(this.refs.wishday.value);\r\n        if(wishday == '' || wishtime == '')\r\n            alert(\"날짜와 시간을 모두 선택해주세요.\");\r\n        else{\r\n            axios.post(url, {memId, spotId, content, wishday, wishtime, money})\r\n            .then(res=>{\r\n                this.setState({\r\n                    open: false,\r\n                    alertOpen: true\r\n                })\r\n            }).catch(err=>{\r\n                console.log(\"spotwish insert 오류 : \" + err);\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        var star = this.state.spotdata.star==5?\r\n        <span id=\"thumbStar\" style={{color: \"#F0CD58\"}}><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span>\r\n                                                            <span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span></span>\r\n            :this.state.spotdata.star==4?\r\n            <span id=\"thumbStar\" style={{color: \"#F0CD58\"}}><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span>\r\n                                                            <span class=\"fas fa-star\"></span><span class=\"far fa-star\"></span></span>\r\n            :this.state.spotdata.star==3?\r\n            <span id=\"thumbStar\" style={{color: \"#F0CD58\"}}><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span>\r\n                                                            <span class=\"far fa-star\"></span><span class=\"far fa-star\"></span></span>\r\n            :this.state.spotdata.star==2?\r\n            <span id=\"thumbStar\" style={{color: \"#F0CD58\"}}><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span><span class=\"far fa-star\"></span>\r\n                                                            <span class=\"far fa-star\"></span><span class=\"far fa-star\"></span></span>\r\n            :this.state.spotdata.star==1?\r\n            <span id=\"thumbStar\" style={{color: \"#F0CD58\"}}><span class=\"fas fa-star\"></span><span class=\"far fa-star\"></span><span class=\"far fa-star\"></span>\r\n                                                            <span class=\"far fa-star\"></span><span class=\"far fa-star\"></span></span>\r\n            :<span id=\"thumbStar\" style={{color: \"#F0CD58\"}}><span class=\"far fa-star\"></span><span class=\"far fa-star\"></span><span class=\"far fa-star\"></span>\r\n            <span class=\"far fa-star\"></span><span class=\"far fa-star\"></span></span>;\r\n        \r\n        return (\r\n            <div>\r\n                {/* 이미지, spot 정보 */}\r\n                <img src={this.state.spotdata.img} alt=\"이미지 없음\" style={{width: '100%'}}>\r\n                    \r\n                </img>\r\n                <div style={{color: 'whitesmoke'}} class=\"thumbText\">\r\n                    <b id=\"thumbTitle\">{this.state.spotdata.title}</b><br/>\r\n                    <span id=\"thumbTag\" style={{color: '#bbb'}}>{this.state.spotdata.tag}</span><br/>\r\n                    <span id=\"thumbRoad\" style={{color: '#bbb'}}><span class=\"fa fa-map-marker\"></span>&nbsp;&nbsp;{this.state.spotdata.roadaddr}</span><br/>\r\n                    <Button variant=\"outlined\" id=\"thumbAddBtn\" style={{color: 'white', border: '1px solid #aaa'}} onClick={this.handleOpen.bind(this)}>일정추가</Button>\r\n                    {/* <span id=\"thumbHeart\" ref=\"thumbHeart\" className='heart' style={{position: 'absolute', cursor: 'pointer'}} onClick={this.heartClick.bind(this)}></span> */}\r\n                </div>\r\n                <br/><br/>\r\n\r\n                {/* 일정 추가 모달 */}\r\n                <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className=\"spotmodal\"\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose.bind(this)}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                    timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={this.state.open}>\r\n                    <div className=\"spotpaper\">\r\n                        <span className=\"spotmodalTitle\">일정 추가</span><br/>\r\n                        🏰&nbsp;&nbsp;{this.state.spotdata.title}<br/>\r\n                        🗺&nbsp;&nbsp;{this.state.spotdata.roadaddr}<br/>\r\n                        🗓&nbsp;&nbsp;여행 날짜\r\n                        <input type=\"date\" class=\"form-control form-control-sm\" ref=\"wishday\"></input>\r\n                        ⏰&nbsp;&nbsp;예정 시간\r\n                        <input type=\"time\" class=\"form-control form-control-sm\" ref=\"wishtime\"></input>\r\n                        💰&nbsp;&nbsp;<b>비용</b>\r\n                        <input type=\"text\" class=\"form-control form-control-sm\" ref=\"money\"/><br/>\r\n                        <div style={{textAlign: 'center'}}>\r\n                            <button type=\"button\" class=\"btn btn-warning spotmodalBtn\" onClick={this.insertWish.bind(this)}><b>추가</b></button>\r\n                        </div>\r\n                    </div>\r\n                    </Fade>\r\n                </Modal>\r\n\r\n                {/* 소개 */}\r\n                <div className=\"detailTitle\">\r\n                    <span className=\"detailTitleContent\" style={{backgroundColor:'white', color: '#036E38'}}>\r\n                        &nbsp;&nbsp;&nbsp;소개&nbsp;&nbsp;&nbsp;\r\n                    </span>\r\n                </div>\r\n                <br/>\r\n                <div id=\"thumbIntro\" style={{color: '#888'}}>\r\n                    {star}<br/>\r\n                    {this.state.spotdata.introduction}<br/><br/>\r\n                    <button type=\"button\" class=\"btn btn-dark-green\" onClick={()=>{\r\n                        window.open('https://map.kakao.com/link/to/' + this.state.spotdata.title + ',' + this.state.spotdata.latitude + \r\n                            ',' + this.state.spotdata.longitude, '_blank');\r\n                    }}>길찾기</button><br/>\r\n                    \r\n                    \r\n                    {/* <span id=\"thumbHeart\" ref=\"thumbHeart\" className='spotheart' style={{ cursor: 'pointer', position: 'absolute'}} onClick={this.heartClick.bind(this)}></span> */}\r\n                </div>\r\n                \r\n                {/* 주변 정보 */}\r\n                <div className=\"detailTitle\">\r\n                    <span className=\"detailTitleContent\" style={{backgroundColor:'white', color: '#036E38'}}>\r\n                        &nbsp;&nbsp;가보고 싶은 그 곳, {this.state.spotdata.title} &nbsp;&nbsp;\r\n                    </span>\r\n                </div>\r\n                <div className=\"detailIntro\" style={{color: \"#888\"}}>\r\n                    다양한 \"{this.state.spotdata.title}\"의 주변 정보를 소개합니다.\r\n                </div>\r\n                <br/>\r\n                \r\n                {/* 카카오 지도 */}\r\n                <MapComp longitude={this.state.spotdata.longitude} latitude={this.state.spotdata.latitude}\r\n                    title={this.state.spotdata.title}/>\r\n                <br/><br/>\r\n\r\n                <div className=\"detailTitle\">\r\n                    <span className=\"detailTitleContent\" style={{backgroundColor:'white', color: '#036E38'}}>\r\n                        &nbsp;&nbsp;&nbsp;후기&nbsp;&nbsp;&nbsp;\r\n                    </span>\r\n                </div>\r\n\r\n                {/* 후기 */}\r\n                <div className=\"detailIntro\" style={{color: \"#888\"}}>\r\n                    직접 다녀온 회원분들의 다양한 후기를 확인해보세요.<br/> \r\n                    여러분들의 생생한 후기를 남길 수 있습니다.\r\n                </div>\r\n                <ReviewListComp contentsid={this.state.contentsid}/>\r\n\r\n                {/* alert 창 */}\r\n                <Dialog\r\n                    open={this.state.alertOpen}\r\n                    onClose={this.alertClose.bind(this)}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"일정 추가 완료\"}</DialogTitle>\r\n                    <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Mypage로 이동하여 확인하시겠습니까?\r\n                    </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                    <Button onClick={this.alertClose.bind(this)} color=\"primary\">\r\n                        NO\r\n                    </Button>\r\n                    <Button onClick={\r\n                        ()=>{\r\n                            this.setState({\r\n                                alertOpen: false\r\n                            })\r\n                            this.props.history.push(\"/mypage\");\r\n                        }\r\n                    } color=\"primary\" autoFocus>\r\n                        YES\r\n                    </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DetailTourComp;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\tour\\TourPageComp.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\join\\SignupPageComp.js",["743","744","745","746","747","748","749","750"],"import React, { Component} from \"react\";\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\nimport { makeStyles, createStyles, WithStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport './SignupCss.css';\r\nimport DaumPostcode from 'react-daum-postcode';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport welcomeImg from '../../../image/jeju6.jpg';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport jejuImg from '../../../image/jeju8.jpg';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nclass SignupPageComp extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // console.log(\"SignupPageComp constructor\", props);\r\n        \r\n        this.state={\r\n            id:'',  //아이디를 저장하고 있을 state\r\n            password:'',\r\n            pwCheck: \"\",//비밀번호 두개가 일치하는가\r\n            name : '',\r\n            gender: '',\r\n            birth: '2000-01-01',\r\n            photo: '',\r\n            addrdetail: '',\r\n            email : '',\r\n            email2:'',\r\n            hp : \"\",\r\n            idcanUse: false,//중복된 아이디찾기 true여야 로그인가능\r\n            // files: [],\r\n            // events: [],\r\n            // filePreviews: {},\r\n            zoneCode : \"\",\r\n            fullAddress : \"\",\r\n            isDaumPost : false,\r\n            isRegister : false,\r\n            register: [],\r\n            alertOpen: false,\r\n            alertSetOpen: false\r\n        };\r\n\r\n        //함수 선언\r\n        this.onIdChk=this.onIdChk.bind(this);\r\n    }\r\n\r\n    // 변수 선언시 state 영역에 추가했을 경우에만 나중에 값변경이 가능하다\r\n    // 값 변경시에는 setState 를 이용해야만 한다\r\n    // 이벤트\r\n    changeEvent=(e)=>{\r\n        \r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    onIdChk=()=>{\r\n        \r\n        let url = URL + '/member/checkid?id=' + this.state.id;\r\n\r\n        axios.get(url)\r\n        .then(response=>{\r\n            if(response.data)\r\n            {\r\n                alert(\"사용가능한 아이디입니다.\");\r\n                this.setState({\r\n                    idcanUse: true\r\n                })\r\n            }\r\n            else\r\n            {\r\n                alert(\"사용중인 아이디입니다. 다른 아이디를 입력해주세요.\");\r\n                this.setState({\r\n                    id: '',\r\n                    idcanUse: false\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            console.log(\"아이디체크시 오류남:\"+err);\r\n        })\r\n    }\r\n\r\n    // onSubmitHandler = (e) => {\r\n    //     e.preventDefault();\r\n    //     this.onInsertMember();\r\n    // };\r\n\r\n    //사진 업로드시 호출되는 함수\r\n    imageUpload=(e)=>{\r\n        const uploadFile = e.target.files[0];\r\n\r\n        //서버에 업로드\r\n        const memberFile = new FormData();\r\n        memberFile.append(\"uploadFile\",uploadFile);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: URL + '/member/upload',\r\n            data: memberFile,\r\n            headers: {'Content-Type':'multipart/form-data'}\r\n        }).then(response=>{\r\n            this.setState({\r\n                photo: response.data.photoname\r\n            })\r\n        }).catch(err=>{\r\n            console.log(\"이미지 업로드시 오류남:\"+err);\r\n        })\r\n    }\r\n\r\n    onInsertMember = () => {\r\n        var id = this.state.id;\r\n        var provider = 'no';\r\n        var name = this.state.name;\r\n        var pass = this.state.password;\r\n        var pwCheck = this.state.pwCheck;\r\n        var gender = this.state.gender;\r\n        var birth = this.state.birth;\r\n        var photo = this.state.photo;\r\n        var address = this.state.fullAddress;\r\n        var addrdetail = this.state.addrdetail;\r\n        var email = this.state.email;\r\n        var email2 = this.state.email2;\r\n        var hp = this.state.hp;\r\n        let url = URL + \"/member/insert\";\r\n\r\n        if(id.trim()==='' || name.trim()==='' || pass.trim()==='' || pwCheck.trim()==='' || birth.trim()===''\r\n            || gender.trim()==='' || address.trim()==='' || addrdetail.trim()==='' ||\r\n            email.trim()==='' || email2.trim()==='' || hp.trim()===''){\r\n                \r\n            alert(\"정보를 모두 입력해주세요.\");\r\n        }\r\n        else{\r\n            if(this.state.idcanUse){\r\n                if(this.state.password === this.state.pwCheck){\r\n                    axios.post(url, {\r\n                        id, name, pass, gender, birth, photo, address, addrdetail, email, email2, hp  \r\n                    })\r\n                        .then(response => {\r\n                            this.setState({\r\n                                alertOpen: true\r\n                            })\r\n                            // this.props.history.push(\"/login\");//저장 성공후 로그인으로 이동되도록 한다\r\n                        }).catch(err=>{\r\n                            console.log(\"회원가입시 오류남:\"+err);\r\n                        })\r\n                }\r\n                else {\r\n                    alert(\"비밀번호가 맞지 않습니다.\")\r\n                }\r\n            }\r\n            else {\r\n                alert(\"아이디 중복을 확인해주세요.\");\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    changeEmail = (e) => {\r\n        this.setState({\r\n            email2: e.target.value\r\n        })\r\n    }\r\n\r\n    womanClick=(e)=>{\r\n        if(e.target.className == 'mypageUpdateBtn clickMypageUpdateBtn'){\r\n            e.target.className = 'mypageUpdateBtn';\r\n            this.setState({\r\n                gender: ''\r\n            })       \r\n        }\r\n        else{\r\n            this.refs.man.className = \"mypageUpdateBtn\";\r\n            e.target.className = 'mypageUpdateBtn clickMypageUpdateBtn';\r\n            \r\n            this.setState({\r\n                gender: '여자'\r\n            })\r\n        }\r\n    }\r\n    manClick=(e)=>{\r\n        if(e.target.className == 'mypageUpdateBtn clickMypageUpdateBtn'){\r\n            e.target.className = 'mypageUpdateBtn';\r\n            this.setState({\r\n                gender: ''\r\n            })         \r\n        }\r\n        else{\r\n            this.refs.woman.className = \"mypageUpdateBtn\";\r\n            e.target.className = 'mypageUpdateBtn clickMypageUpdateBtn';\r\n            this.setState({\r\n                gender: '남자'\r\n            })  \r\n        }\r\n    }\r\n\r\n    // 주소검색\r\n    handleTogglePost = () => {\r\n        var p = this.state.isDaumPost;\r\n        this.setState({\r\n            isDaumPost : !p\r\n        })\r\n    }\r\n\r\n    // postcode\r\n    handleAddress = (data) => {\r\n        let AllAddress = data.address;\r\n        let extraAddress = ''; \r\n        let zoneCodes = data.zonecode;\r\n        \r\n        if (data.addressType === 'R') {\r\n          if (data.bname !== '') {\r\n            extraAddress += data.bname;\r\n          }\r\n          if (data.buildingName !== '') {\r\n            extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n          }\r\n          AllAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\r\n        }\r\n        this.setState ({\r\n            fullAddress: AllAddress,\r\n            zoneCode : zoneCodes\r\n        })\r\n      }\r\n\r\n\r\n    // onAdd = (event) => {\r\n    //     const afterStateChange = () => {\r\n    //         event.affectedFiles\r\n    //             .filter(file => !file.validationErrors)\r\n    //             .forEach(file => {\r\n    //                 const reader = new FileReader();\r\n\r\n    //                 reader.onloadend = (ev) => {\r\n    //                     this.setState({\r\n    //                         filePreviews: {\r\n    //                             ...this.state.filePreviews,\r\n    //                             [file.uid]: ev.target.result\r\n    //                         }\r\n    //                     });\r\n    //                 };\r\n\r\n    //                 reader.readAsDataURL(file.getRawFile());\r\n    //             });\r\n    //     };\r\n\r\n    //     this.setState({\r\n    //         files: event.newState,\r\n    //         events: [\r\n    //             ...this.state.events,\r\n    //             `선택된 파일: ${event.affectedFiles[0].name}`\r\n    //         ],\r\n    //     }, afterStateChange);\r\n\r\n    //     uploadFile = event.affectedFiles[0].name;\r\n    // }\r\n\r\n    // onRemove = (event) => {\r\n    //     const filePreviews = {\r\n    //         ...this.state.filePreviews\r\n    //     };\r\n\r\n    //     event.affectedFiles.forEach(file => {\r\n    //         delete filePreviews[file.uid];\r\n    //     });\r\n\r\n    //     this.setState({\r\n    //         files: event.newState,\r\n    //         events: [\r\n    //             ...this.state.events,\r\n    //             `파일 제거됨: ${event.affectedFiles[0].name}`\r\n    //         ],\r\n    //         filePreviews: filePreviews\r\n    //     });\r\n    // }\r\n\r\n    // onProgress = (event) => {\r\n    //     this.setState({\r\n    //         files: event.newState,\r\n    //         events: [\r\n    //             ...this.state.events,\r\n    //             `진행 정도: ${event.affectedFiles[0].progress} %`\r\n    //         ]\r\n    //     });\r\n    // }\r\n\r\n    // onStatusChange = (event) => {\r\n    //     const file = event.affectedFiles[0];\r\n\r\n    //     this.setState({\r\n    //         files: event.newState,\r\n    //         events: [\r\n    //             ...this.state.events,\r\n    //             `File '${file.name}' status changed to: ${fileStatuses[file.status]}`\r\n    //         ]\r\n    //     });\r\n    // }\r\n    \r\n    handleDelete = () => {\r\n        let url = URL + \"/member/delupload\";\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    photo:''\r\n                })\r\n            })\r\n    };\r\n\r\n    render() {\r\n\r\n        const chip = this.state.photo==''?\"\":<Chip\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                label={this.state.photo}\r\n                                                onDelete={this.handleDelete.bind(this)}\r\n                                            />;\r\n\r\n        return (\r\n            <div>\r\n                {/* 날라가는 새 애니메이션 */}\r\n                <div class=\"signImg\">\r\n                    <img src={jejuImg} alt=\"\"/>\r\n                </div>\r\n                <div class=\"containers\">\r\n                    <div class=\"bird-container bird-container--one\">\r\n                        <div class=\"bird bird--one\"></div>\r\n                    </div>\r\n                    <div class=\"bird-container bird-container--two\">\r\n                        <div class=\"bird bird--two\"></div>\r\n                    </div>\r\n                    <div class=\"bird-container bird-container--three\">\r\n                        <div class=\"bird bird--three\"></div>\r\n                    </div>\r\n                    <div class=\"bird-container bird-container--four\">\r\n                        <div class=\"bird bird--four\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n            <div id=\"SignupForm\" style={{textAlign: 'center', position: 'relative'}}>\r\n                <table class=\"table table-bordered\">\r\n                    <caption style={{captionSide: 'top', textAlign: 'center'}}><b>회원가입</b></caption>\r\n                    <tr>\r\n                        <td colSpan=\"2\">\r\n                            <input type=\"text\" name = \"id\" class=\"form-control\" value = {this.state.id} onChange={this.changeEvent.bind(this)} \r\n                                placeholder=\"아이디\"/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan=\"2\" style={{backgroundColor: '#036E38', color: 'white', cursor: 'pointer'}} onClick={this.onIdChk.bind(this)}>\r\n                            아이디 중복 검사\r\n                        </td>\r\n                    </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <input type=\"password\" name = \"password\" class=\"form-control\" value = {this.state.password} onChange={this.changeEvent.bind(this)} \r\n                                    placeholder=\"비밀번호\"/>\r\n                            </td>\r\n                            <td>\r\n                                <input type=\"password\" name = \"pwCheck\" class=\"form-control\" value = {this.state.pwCheck} onChange={this.changeEvent.bind(this)} \r\n                                    placeholder=\"비밀번호 확인\"/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <input type=\"text\" name = \"name\" class=\"form-control\" value = {this.state.name} \r\n                                    onChange={this.changeEvent.bind(this)} placeholder=\"이름\" required/>\r\n                                \r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"mypageUpdateBtn\" ref=\"woman\" onClick={this.womanClick.bind(this)}>여자</td>\r\n                            <td className=\"mypageUpdateBtn\" ref=\"man\" onClick={this.manClick.bind(this)}>남자</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <Tooltip title=\"생년월일\" arrow>\r\n                                    <input type=\"date\" name = \"birth\" className=\"form-control SignupBirth\" value = {this.state.birth} \r\n                                        onChange={this.changeEvent.bind(this)}/>\r\n                                </Tooltip>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\" style={{padding: '0'}}>\r\n                                프로필 사진&nbsp;\r\n                                <input style={{display:'none'}} id=\"sign-icon-button-file\" name = \"photo\" type=\"file\" onChange={this.imageUpload.bind(this)}/>\r\n                                    <label htmlFor=\"sign-icon-button-file\">\r\n                                        \r\n                                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                            <PhotoCamera />\r\n                                        </IconButton>  \r\n                                    </label>\r\n                                    {chip}\r\n                                {/* <input type=\"file\" name = \"photo\" onChange={this.imageUpload.bind(this)}/> */}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <input type=\"text\" name = \"address\" class=\"form-control\" value = {this.state.fullAddress} placeholder=\"주소\" disabled required/>\r\n                                <br/>\r\n                                <input type=\"text\" name = \"addrdetail\" class=\"form-control\" value = {this.state.addrdetail} onChange={this.changeEvent.bind(this)} \r\n                                    placeholder=\"상세주소\" required/>\r\n                                \r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\" onClick={this.handleTogglePost.bind(this)} style={{backgroundColor: '#036E38', color: 'white', cursor: 'pointer'}}>\r\n                                주소검색\r\n                                {\r\n                                    this.state.isDaumPost ?\r\n                                        <DaumPostcode\r\n                                            onComplete={this.handleAddress.bind(this)}\r\n                                            autoClose\r\n                                            className=\"postSearchModal\"\r\n                                            isDaumPost={this.state.isDaumPost}\r\n                                            />\r\n                                    : null\r\n                                }\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <input type=\"text\" name = \"email\" value = {this.state.email} className=\"mypageUpdateAddr\" onChange={this.changeEvent.bind(this)} \r\n                                    placeholder=\"이메일\" required/>@\r\n                                <input type=\"text\" name = \"email2\" value = {this.state.email2} className=\"mypageUpdateAddr\" onChange={this.changeEvent.bind(this)} required/>\r\n                                &nbsp;\r\n                                <select name=\"selectemail\" className=\"mypageUpdateAddr\" onChange={this.changeEmail}>\r\n                                    <option disabled>선택하세요</option>\r\n                                    <option value=\"\">직접입력</option>\r\n                                    <option value=\"naver.com\">naver.com</option>\r\n                                    <option value=\"gmail.com\">gmail.com</option>\r\n                                    <option value=\"nate.com\">nate.com</option> \r\n                                </select>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\"><input type=\"text\" class=\"form-control\" name = \"hp\" value = {this.state.hp} onChange={this.changeEvent.bind(this)} \r\n                                placeholder=\"휴대폰 번호\" required/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"mypageUpdateBtn\" colSpan=\"2\" onClick={this.onInsertMember.bind(this)}>\r\n                                <span>회원 가입</span>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                    {/* alert 창 */}\r\n                    <Dialog\r\n                        open={this.state.alertOpen}\r\n                        onClose={()=>{\r\n                            this.setState({\r\n                                alertOpen: false\r\n                            })\r\n                        }}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\" style={{textAlign: 'center'}}><b>즐거운 제주도 여행되세요.</b></DialogTitle>\r\n                        <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            <img src={welcomeImg} alt=\"\" style={{width: '100%'}}/>\r\n                            \r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                        {/* <Button onClick={this.alertClose.bind(this)} color=\"primary\">\r\n                            NO\r\n                        </Button> */}\r\n                        <Button onClick={\r\n                            ()=>{\r\n                                this.setState({\r\n                                    alertOpen: false\r\n                                })\r\n                                this.props.history.push(\"/login\");\r\n                            }\r\n                        } color=\"primary\" autoFocus>\r\n                            YES\r\n                        </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nSignupPageComp.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default SignupPageComp;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\SharePlan\\SharePlanPageComp.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\SharePlan\\ChattingRoom.js",["751","752","753","754","755","756","757","758","759","760","761","762","763","764"],"import React, {Component, useState, useEffect} from \"react\";\r\nimport './Chat.css';\r\nimport axios from 'axios';\r\nimport {actionType, URL} from \"../../../redux/config\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport store from \"../../../redux/store\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport gsap, {Quint} from \"gsap\";\r\nimport noProfile from \"../../../image/noProfile.png\";\r\nimport ChattingLogic from \"../../../ChattingLogic\";\r\n\r\nconst ChattingRoom = (props) => {\r\n    // console.log(\"ChattingRoom props\", props);\r\n    const [msg, setMsg] = useState(''); //to send.\r\n    const [msgList, setMsgList]\r\n        = useState(store.getState().selectedChattingRoomMsgList == undefined\r\n        ? []\r\n        : store.getState().selectedChattingRoomMsgList); //loaded msg list.\r\n    const [msgListCount, setMsgListCount] = useState(store.getState().selectedChattingRoomMsgList == undefined\r\n        ? 0\r\n        : store.getState().selectedChattingRoomMsgList.length);\r\n    let loginId = store.getState().loginId;\r\n    let selectedRoomNum = store.getState().selectedRoomNum;\r\n    let intervalContainer = null;\r\n    let preMsgCnt, curMsgCnt = 0;\r\n\r\n\r\n    useEffect(() => {\r\n        printCommentEachOther();\r\n        return (() => {\r\n            setScrollBottom();\r\n        })\r\n    }, [selectedRoomNum]);\r\n\r\n    useEffect(() => {\r\n        return (() => {\r\n            setScrollBottom();\r\n        })\r\n    }, [msgListCount]);\r\n\r\n    const handleChange = (e) => {\r\n        setMsg(e.target.value);\r\n    }\r\n\r\n    const printCommentEachOther = () => {\r\n        //통신.\r\n        let chat = new ChattingLogic();\r\n        chat.getMsgList((res) => {\r\n            console.log(res.data.length, store.getState());\r\n\r\n            if (store.getState().selectedChattingRoomMsgList) {\r\n                if (res.data.length != store.getState().selectedChattingRoomMsgList.length) {\r\n                    setMsgListCount(res.data.length);\r\n                }\r\n            } else {\r\n                setMsgListCount(res.data.length);\r\n            }\r\n\r\n            store.dispatch({\r\n                type: actionType.selectedChattingRoomMsgList,\r\n                selectedChattingRoomMsgList: res.data,\r\n            });\r\n            setMsgList(res.data);\r\n        });\r\n\r\n        if (!store.getState().isChatAutoUpdate) {\r\n            store.dispatch({\r\n                type: actionType.setIsChatAutoUpdate,\r\n                isChatAutoUpdate: true,\r\n            });\r\n\r\n            intervalContainer = window.setInterval(() => {\r\n                //해당 스레드는 하나만 돌게 한다.\r\n                console.log(\"store.getState().isOpenChatWindow\", store.getState().isOpenChatWindow);\r\n                if (!store.getState().isOpenChatWindow) {\r\n                    //창이 닫혀있을떄. -> 백그라운드로.\r\n                    // window.clearTimeout(_setTimeOutObj);\r\n                } else {\r\n                    //창이 떠있을떄. -> 채팅창 업뎃이트.\r\n                    printCommentEachOther();\r\n                }\r\n\r\n            }, 5000);\r\n        }\r\n\r\n    }\r\n\r\n    const sendMessage = () => {\r\n        let chat = new ChattingLogic();\r\n        chat.sendMessage(msg, (res) => {\r\n            printCommentEachOther();\r\n        });\r\n        setMsg(\"\");\r\n    }\r\n\r\n    const setScrollBottom = () => {\r\n        console.log(\"setScrollBottom()\");\r\n\r\n        window.setTimeout(() => {\r\n            //div.container div#chattingBoard\r\n            let chattingBoard = document.getElementById(\"chattingBoard\");\r\n            console.log(\"setScrollBottom()\", chattingBoard);\r\n\r\n            if (chattingBoard) {\r\n                chattingBoard.scrollTo(0, chattingBoard.scrollHeight);\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    return (\r\n        <div id=\"container\"\r\n             className=\"container\"\r\n             style={{\r\n                 float: \"right\",\r\n             }}\r\n        >\r\n            <h3>\r\n                <ArrowBackIcon\r\n                    className=\"backButton\"\r\n                    onClick={() => {\r\n                        // document.querySelector(\".chattingWindow\").scrollTo(0,0);\r\n                        gsap.to(\".containerRoot\", {\r\n                            scrollTrigger: \".containerRoot\",\r\n                            x: 0,\r\n                            duration: 1,\r\n                            ease: Quint.easeInOut,\r\n                        });\r\n                    }}\r\n                />&nbsp;&nbsp;{props.selectedFriend}\r\n            </h3>\r\n\r\n\r\n            {/*<input type=\"hidden\" id=\"sessionId\" value={sessionId}/>*/}\r\n            <input type=\"hidden\" id=\"roomNum\" value={store.getState().selectedRoomNum}/>\r\n\r\n            <div id=\"chattingBoard\" className=\"chattingBoard\">\r\n                {msgList.map((e, i) => {\r\n                    let _date = new Date(e.writeday);\r\n                    let _strTime = _date.getHours() + \":\" + _date.getMinutes();\r\n                    if (e.sender == loginId) {\r\n                        //나.\r\n                        return (\r\n                            <div className=\"myMsg formMsg\" key={i}>\r\n                                <table>\r\n                                    <tbody>\r\n                                    <tr style={{width: \"100%\"}}>\r\n                                        {/*<td valign={\"bottom\"} align={\"right\"}>\r\n                                            <b style={{color: \"yellow\"}}\r\n                                            >1</b>&nbsp;\r\n                                            <br/>\r\n                                            <b>{_strTime}</b>&nbsp;\r\n                                        </td>*/}\r\n                                        {/*<td valign={\"baseline\"} align={\"right\"}*/}\r\n                                        <td valign={\"baseline\"}\r\n                                            className=\"myMsgBox\"\r\n                                        >\r\n                                            <div className=\"msgText\">\r\n                                                <b>{e.msg}</b>\r\n                                            </div>\r\n                                            <div className=\"msgTime\">\r\n                                                <b>{_strTime}</b>&nbsp;\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        )\r\n                    } else {\r\n                        //상대방.\r\n                        return (\r\n                            <div className=\"otherMsg formMsg\" key={i}>\r\n                                <table>\r\n                                    <tbody>\r\n                                    <tr>\r\n                                        <td rowSpan={2} valign={\"top\"}>\r\n                                            <img src={noProfile} className=\"profileImg\"/>\r\n                                        </td>\r\n                                        <td>\r\n                                            <b>{e.sender}</b>\r\n                                        </td>\r\n                                        <td rowSpan={2} valign={\"bottom\"}>\r\n                                            &nbsp;<b>{_strTime}</b>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <div className=\"msgText\">\r\n                                                <b>{e.msg}</b>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        )\r\n                    }\r\n                })}\r\n            </div>\r\n\r\n            {/* input */}\r\n            <div id=\"yourMsg\">\r\n                <table className=\"inputTable\">\r\n                    <tbody>\r\n                    <tr style={{\r\n                        width: \"100%\"\r\n                    }}>\r\n                        <th style={{\r\n                            width: \"80%\"\r\n                        }}>\r\n                            <input id=\"chatting\" name=\"msg\"\r\n                                   value={msg} placeholder=\"보내실 메시지를 입력하세요.\"\r\n                                   onChange={handleChange}\r\n                                   onKeyDown={(e) => {\r\n                                       if (e.code == \"Enter\") {\r\n                                           sendMessage();\r\n                                       }\r\n                                   }}\r\n                                   style={{\r\n                                       width: \"100%\",\r\n                                       height: \"40px\",\r\n                                   }}\r\n                            />\r\n                        </th>\r\n                        <th style={{\r\n                            width: \"20%\"\r\n                        }}>\r\n                            <button onClick={sendMessage}\r\n                                    id=\"sendBtn\"\r\n                                    style={{\r\n                                        width: \"100%\",\r\n                                        height: \"40px\",\r\n                                    }}\r\n                            >보내기\r\n                            </button>\r\n                        </th>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChattingRoom;\r\n\r\n\r\n/*\r\n\r\n<div className=\"otherMsg formMsg\">\r\n                    <table>\r\n                        <tr>\r\n                            <td rowSpan={2} valign={\"top\"}>\r\n                                <img src={noProfile} className=\"profileImg\"/>\r\n                            </td>\r\n                            <td>\r\n                                <b>name</b>\r\n                            </td>\r\n                            <td rowSpan={2} valign={\"bottom\"}>\r\n                                &nbsp;<b>99:88</b>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <div className=\"msgText\">\r\n                                    <b>\r\n                                        sdf\r\n                                        asdfasdfasdfasdfasdfasdfasdf asdfasdfasdfasdf\r\n                                        asdfasdfasdfasdfasdfasdfasdf asdfasdfasdfasdf\r\n                                        asdfasdfasdfasdfasdfasdfasdf asdfasdfasdfasdf\r\n                                    </b>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n\r\n                <div className=\"myMsg formMsg\">\r\n                    <table>\r\n                        <tr style={{width: \"100%\"}}>\r\n                            <td valign={\"bottom\"} align={\"right\"}>\r\n                                <b style={{color: \"yellow\"}}\r\n                                >1</b>&nbsp;\r\n                                <br/>\r\n                                <b>99:88</b>&nbsp;\r\n                            </td>\r\n                            <td valign={\"bottom\"} align={\"right\"} style={{width: \"70%\"}}>\r\n                                <div className=\"msgText\" align={\"left\"}>\r\n                                    <b>\r\n                                        sdf\r\n                                        asdfasdfasdfasdfasdfasdfasdf asdfasdfasdfasdf\r\n                                        asdfasdfasdfasdfasdfasdfasdf asdfasdfasdfasdf\r\n                                        asdfasdfasdfasdfasdfasdfasdf asdfasdfasdfasdf\r\n                                    </b>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n\r\n* */\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\SharePlan\\ChatCompPage.js",["765","766","767","768","769","770","771","772"],"import React, {Component} from \"react\";\r\nimport './Chat.css';\r\nimport axios from 'axios';\r\nimport {actionType, URL} from \"../../../redux/config\";\r\nimport ChatRoomItem from './ChatRoomItem';\r\nimport store from \"../../../redux/store\";\r\nimport ChattingRoom from \"./ChattingRoom\";\r\nimport gsap, {Cubic, Quint} from \"gsap\";\r\nimport ChattingLogic from \"../../../ChattingLogic\";\r\n\r\nclass ChatCompPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"ChatCompPage props\", props);\r\n\r\n        this.state = {\r\n            roomList: props.chattingRoomListInfo,\r\n            user2: '',\r\n            selectedRoomNum: 0,\r\n            selectedFriend: \"\",\r\n            action: \"\",\r\n        }\r\n\r\n        store.subscribe(() => {\r\n            if (store.getState().publishFunctionMsg == \"setSelectedRoomNum\") {\r\n\r\n                this.setState({\r\n                    selectedRoomNum: store.getState().selectedRoomNum,\r\n                    selectedFriend: store.getState().selectedFriend,\r\n                })\r\n\r\n                // //release.\r\n                // store.dispatch({\r\n                //     type: actionType.publishFunctionMsg,\r\n                //     publishFunctionMsg: \"\",\r\n                // });\r\n            }\r\n        });\r\n\r\n        store.subscribe(()=>{\r\n           if(store.getState().publishFunctionMsg == \"changeChatAction\"){\r\n               this.setState({\r\n                   action: \"chattingRoom\",\r\n               });\r\n           }\r\n        });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    createRoom() {\r\n        this.setState({\r\n            action: \"createRoom\",\r\n        });\r\n        let chat = new ChattingLogic();\r\n        chat.createRoom(this.state.user2, () => {\r\n            store.dispatch({\r\n                type: actionType.publishFunctionMsg,\r\n                publishFunctionMsg: \"chattingRoomListInfo\",\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"ChatCompPage render()\");\r\n        return (\r\n            <div className=\"containerRoot\">\r\n                <div className=\"container\"\r\n                     style={{\r\n                         float: \"left\",\r\n                     }}\r\n                >\r\n                    <h3>채팅방 List</h3>\r\n                    <div id=\"roomContainer\" className=\"roomContainer\">\r\n                        <table className=\"inputTable\">\r\n                            <tr>\r\n                                <th>받는 사람</th>\r\n                                <th>\r\n                                    <input type=\"text\" name=\"user2\"\r\n                                           value={this.state.user2}\r\n                                           onChange={this.handleChange.bind(this)}\r\n                                    />\r\n                                </th>\r\n                                <th>\r\n                                    <button id=\"createRoom\"\r\n                                            onClick={this.createRoom.bind(this)}\r\n                                    >방 만들기\r\n                                    </button>\r\n                                </th>\r\n                            </tr>\r\n                        </table>\r\n                        <hr style={{\r\n                            // width:\"90%\",\r\n                            color: \"gray\",\r\n                            marginTop: \"5px\",\r\n                            marginBottom: \"10px\",\r\n                            marginLeft: \"10px\",\r\n                            marginRight: \"10px\",\r\n                        }}/>\r\n                        <div id=\"roomList\"\r\n                             className=\"roomList\"\r\n                        >\r\n                            {/*th는 추후 없애는걸로*/}\r\n                            <table>\r\n                                <tr>\r\n                                    <th className='profileImg'>프사</th>\r\n                                    <th className='room'>받는 사람</th>\r\n                                    <th className='go'>기능버튼</th>\r\n                                </tr>\r\n                            </table>\r\n                            {this.props.chattingRoomListInfo.map((row, idx) => {\r\n                                let friend = \"\";\r\n                                if (row.user1 == store.getState().loginId) {\r\n                                    friend = row.user2;\r\n                                } else {\r\n                                    friend = row.user1;\r\n                                }\r\n\r\n                                return (\r\n                                    <ChatRoomItem key={idx} row={row}\r\n                                                  idx={idx} friend={friend}\r\n                                    ></ChatRoomItem>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/*채팅방은 이미 하나가 안보이는곳에 떠있다.*/}\r\n                {/*<ChattingRoom seletedRoomNum={store.getState().selectedRoomNum}/>*/}\r\n                <ChattingRoom seletedRoomNum={this.state.selectedRoomNum}\r\n                              selectedFriend={this.state.selectedFriend}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChatCompPage;\r\n\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\auth\\LoginPageComp.js",["773","774","775","776","777","778","779","780","781","782","783"],"import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\nimport GoogleLoginBtnComp from \"./GoogleLoginBtnComp\";\r\nimport GoogleLogoutBtnComp from \"./GoogleLogoutBtnComp\";\r\nimport store from \"../../../redux/store\";\r\nimport { URL, actionType, mainViewType } from \"../../../redux/config\";\r\nimport NaverLoginBtnComp from \"./NaverLoginBtnComp\";\r\nimport FaceBookLoginBtnComp from \"./FaceBookLoginBtnComp\";\r\nimport KakaoLoginBtnComp from \"./KakaoLoginBtnComp\";\r\nimport KakaoLoginBtnComp3 from \"./KakaoLoginBtnComp3\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport MakeLoginBtn from \"./MakeLoginBtn\";\r\nimport { FaThemeisle } from \"react-icons/fa\";\r\nimport {Route, Link, withRouter } from \"react-router-dom\";\r\nimport '../join/SignupCss.css';\r\nimport jejuImg from '../../../image/jeju8.jpg';\r\n\r\nclass LoginPageComp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"LoginPageComp constructor\", props);\r\n        \r\n        this.state={\r\n            id:'',  //아이디를 저장하고 있을 state\r\n            pass:'',\r\n            pwCheck: \"\",//비밀번호 두개가 일치하는가\r\n            name : \"\",\r\n            birth_date: \"\",\r\n            phone : \"\",\r\n            email : \"\",\r\n            address : \"\",\r\n            idcanUse: false,//중복된 아이디찾기 true여야 로그인가능\r\n            logged:this.props.logged,\r\n            onLogin:this.onLogin,\r\n            googleOn : store.getState().googleOn\r\n        }\r\n\r\n        store.subscribe(function () {\r\n            this.setState({\r\n                googleOn: store.getState().googleOn,\r\n            });\r\n        }.bind(this));\r\n    }\r\n\r\n    setLoginId = (loginId) => {\r\n        console.log(\"LoginPage setLoginId()\");\r\n        store.dispatch({\r\n            type: actionType.LOG_IN,\r\n            // mainView: mainViewType.MainPage\r\n            loginId: loginId,\r\n            logged: true\r\n        });\r\n    }\r\n\r\n    // 변수 선언시 state 영역에 추가했을 경우에만 나중에 값변경이 가능하다\r\n    // 값 변경시에는 setState 를 이용해야만 한다\r\n    // 이벤트\r\n    changeEvent=(e)=>{\r\n        \r\n        // console.log(e.target.id+\":\"+e.target.value);\r\n        // 만약 엔터 누를때만 변경되도록 하고 싶으면\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    onLogin=()=>{\r\n        // console.log(\"로그인할 아이디는 \" + this.state.id + \"비밀번호는 \" + this.state.pass);\r\n        const data = {\r\n            id: this.state.id,\r\n            pass: this.state.pass\r\n        }\r\n        let url = URL + \"/member/login\";\r\n\r\n        axios.post(url, data)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            if(response.data){\r\n                // this.props.onLogin();\r\n                this.setLoginId(data.id);\r\n                // alert(store.getState().loginId+ \"가 스토어에 저장된 아이디입니다\");\r\n                this.props.history.push(\"/\");\r\n            }\r\n            else{\r\n                alert(\"아이디와 비밀번호가 맞지않습니다.\");\r\n                this.setState({\r\n                    pass: '',\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            console.log(\"로그인시 오류남:\"+err);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"LoginPageComp render()\", this.props);\r\n        // console.log(\"스토어에 있는 로그인 아이디 상태는 : \" + store.getState().loginId);\r\n        const parentOnLoginHandler = this.onLogin.bind(this);\r\n        return (\r\n            <div>\r\n                 {/* 날라가는 새 애니메이션 */}\r\n                 <div class=\"signImg\">\r\n                    <img src={jejuImg} alt=\"\"/>\r\n                </div>\r\n                <div class=\"containers\">\r\n                    <div class=\"bird-container bird-container--one\">\r\n                        <div class=\"bird bird--one\"></div>\r\n                    </div>\r\n                    <div class=\"bird-container bird-container--two\">\r\n                        <div class=\"bird bird--two\"></div>\r\n                    </div>\r\n                    <div class=\"bird-container bird-container--three\">\r\n                        <div class=\"bird bird--three\"></div>\r\n                    </div>\r\n                    <div class=\"bird-container bird-container--four\">\r\n                        <div class=\"bird bird--four\"></div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"detailTitle\">\r\n                    <span className=\"detailTitleContent\" style={{backgroundColor:'white', color: '#036E38'}}>\r\n                        &nbsp;&nbsp;로그인&nbsp;&nbsp;\r\n                    </span>\r\n                </div>\r\n                {/* <div>\r\n                    {this.state.id}\r\n                    <h4 className=\"showIdResult\">{this.state.showIdResult}</h4>\r\n                </div> */}\r\n                <br />\r\n                \r\n                <div id=\"LoginForm\">\r\n                    <table class=\"table table-bordered\" style={{textAlign: 'center'}}>\r\n                        <tr>\r\n                            <td>\r\n                                <input type=\"text\" name = \"id\" class=\"form-control\" value = {this.state.id} onChange={this.changeEvent.bind(this)} \r\n                                    placeholder=\"아이디\"/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <input type=\"password\" name = \"pass\" class=\"form-control\" value = {this.state.pass} onChange={this.changeEvent.bind(this)} \r\n                                    placeholder=\"비밀번호\"/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"loginBtn\" style={{backgroundColor: '#036E38', color: 'white', cursor: 'pointer'}} onClick={this.onLogin.bind(this)}>\r\n                                <span>로그인</span>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    <hr/>\r\n                    <p style={{float: 'right', color: '#aaa', cursor: 'pointer'}} onClick={()=>{\r\n                                this.props.history.push(\"/join\");\r\n                            }}>회원가입</p>\r\n                    <br/>\r\n                    <div className=\"detailTitle\">\r\n                        <span className=\"detailTitleContent\" style={{backgroundColor:'white', color: '#036E38'}}>\r\n                            &nbsp;&nbsp;소셜 로그인&nbsp;&nbsp;\r\n                        </span>\r\n                    </div>\r\n                    <hr/>\r\n                    {\r\n                        this.state.googleOn ==true ?\r\n                            <GoogleLogoutBtnComp /> : \r\n                            <GoogleLoginBtnComp />\r\n                    }\r\n                    <br/>\r\n                    <NaverLoginBtnComp />\r\n                    <br/><br/>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(LoginPageComp);\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\SearchComp.js",["784","785","786","787","788","789","790"],"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {actionType, URL} from \"../../../redux/config\";\r\nimport axios from \"axios\";\r\nimport store from \"../../../redux/store\";\r\nimport './MyPlanComp.css';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        // margin: theme.spacing(1),\r\n        // minWidth: 120,\r\n        width: \"150px\",\r\n        // height:\"40px\"\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            // margin: theme.spacing(1),\r\n            width: '300px',\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nexport default function SearchComp(props) {\r\n\r\n    const classes = useStyles();\r\n    const [category, setCategory] = React.useState(\"all\");\r\n    const [searchVal, setSearchVal] = React.useState(\"\");\r\n    const [searchDataList, setSearchDataList] = React.useState(null);\r\n    // console.log(\"SearchComp props\", props);\r\n\r\n    const setCategoryHandler = (e) => {\r\n        // console.log(e.target.value);\r\n        setCategory(e.target.value);\r\n    };\r\n\r\n    const setSearchValHandler = (e) => {\r\n        // console.log(e.target.value);\r\n        setSearchVal(e.target.value);\r\n\r\n    }\r\n\r\n    //input 내용에 따라 버튼 색깔 변화\r\n    const updateButtonType = () => {\r\n        const searchButton = document.querySelector(\".searchButton\");\r\n\r\n        if (searchButton == null) {   //초반에 null일경우 스킵.\r\n            return;\r\n        }\r\n\r\n        if (searchVal == \"\") {\r\n            searchButton.classList.remove(\"MuiButton-containedPrimary\");\r\n        } else {\r\n            if (!searchButton.classList.contains(\"MuiButton-containedPrimary\")) {\r\n                searchButton.classList.add(\"MuiButton-containedPrimary\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const doSearchHandler = () => {\r\n        console.log(category, searchVal);\r\n\r\n        store.dispatch({\r\n            type: actionType.setSearchResultDataList,\r\n            category: category,\r\n            searchVal: searchVal,\r\n            searchResultDataList: [],\r\n        });\r\n\r\n        ///search/:category?/:keyword?\r\n        props.history.push(`/search/${category}/${searchVal}/1`);\r\n\r\n        /*\r\n        //search action.\r\n        let perPage = 10;\r\n        let url = URL + \"/spot/searchlist\" +\r\n            \"?start=0\" +\r\n            \"&perPage=\" + perPage +\r\n            \"&category=\" + category +\r\n            \"&search=\" + searchVal;\r\n\r\n        console.log(url);\r\n\r\n        axios.get(url\r\n        ).then(res => {\r\n            console.log(\"doSearchHandler() res:\", res.data, searchDataList);\r\n            setSearchDataList(res.data);\r\n\r\n            //dispatch\r\n            store.dispatch({\r\n                type: actionType.setSearchResultDataList,\r\n                category: category,\r\n                searchVal: searchVal,\r\n                searchResultDataList: res.data,\r\n            });\r\n\r\n            ///search/:category?/:keyword?\r\n            props.history.push(`/search/${category}/${searchVal}/1`);\r\n        }).catch(err => {\r\n            console.log(\"doSearchHandler() err:\", err);\r\n        });\r\n\r\n        */\r\n    }\r\n\r\n    return (\r\n        // <div className=\"searchComp\"\r\n        //      style={{height: \"500px\", padding: \"20px\"}}\r\n        // >\r\n        <div className=\"searchComp\"\r\n        >\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">Category</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    value={category}\r\n                    onChange={setCategoryHandler}\r\n                    label=\"Category\"\r\n                >\r\n                    <MenuItem value=\"all\">\r\n                        <em>All</em>\r\n                    </MenuItem>\r\n                    <MenuItem value=\"area\">Area</MenuItem>\r\n                    <MenuItem value=\"spot\">Spot</MenuItem>\r\n                    <MenuItem value=\"tag\">Tag</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            <br/><br/>\r\n            <TextField id=\"outlined-basic\" label=\"Input For Search.\" variant=\"outlined\"\r\n                       autoComplete=\"off\" className={classes.root}\r\n                       value={searchVal}\r\n                       onChange={setSearchValHandler}\r\n                       onKeyDown={(e)=>{\r\n                           if(e.code == \"Enter\"){\r\n                               doSearchHandler();\r\n                           }\r\n                       }}\r\n            />\r\n            <br/><br/>\r\n            <Button variant=\"contained\" color=\"primary\" className=\"searchButton\"\r\n                    onClick={doSearchHandler}\r\n            > Search </Button>\r\n            {updateButtonType()}\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n//활성화\r\n//<button class=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary\" tabindex=\"0\" type=\"button\">\r\n// <span class=\"MuiButton-label\">Search</span>\r\n// <span class=\"MuiTouchRipple-root\"></span>\r\n// </button>\r\n\r\n\r\n\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\HotPlaceComp.js",["791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827"],"import React, {Component, useEffect, useLayoutEffect, useState} from \"react\";\r\nimport {NavLink, Route} from \"react-router-dom\";\r\nimport store from \"../../../redux/store\";\r\nimport {actionType, arrJejuLoc_en, arrJejuLoc_ko, mainViewType} from \"../../../redux/config\";\r\nimport TourList from '../../header/menus/TourList';\r\nimport TourPageComp from '../tour/TourPageComp';\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport BoardSample from \"./BoardSample\";\r\nimport \"../tour/TourCss.css\";\r\nimport \"./MainPageComp.css\";\r\nimport gsap from \"gsap\";\r\n\r\nimport img_s_jeju from \"../../../image/land_s/jeju_s.png\";\r\nimport img_s_jocheon from \"../../../image/land_s/jocheon_s.png\";\r\nimport img_s_gujwa from \"../../../image/land_s/gujwa_s.png\";\r\nimport img_s_sungsan from \"../../../image/land_s/sungsan_s.png\";\r\nimport img_s_pyoseon from \"../../../image/land_s/pyoseon_s.png\";\r\nimport img_s_namwon from \"../../../image/land_s/namwon_s.png\";\r\nimport img_s_seogwipo from \"../../../image/land_s/seogwipo_s.png\";\r\nimport img_s_andeok from \"../../../image/land_s/andeok_s.png\";\r\nimport img_s_daejung from \"../../../image/land_s/daejung_s.png\";\r\nimport img_s_hangyeong from \"../../../image/land_s/hangyeong_s.png\";\r\nimport img_s_hanrim from \"../../../image/land_s/hanrim_s.png\";\r\nimport img_s_aewol from \"../../../image/land_s/aewol_s.png\";\r\nimport img_s_udo from \"../../../image/land_s/udo_s.png\";\r\nimport img_wholeMap from \"../../../image/land/jejuisland_d.png\";\r\n\r\n// function TabPanel(props) {\r\n//     const {children, value, index, ...other} = props;\r\n//\r\n//     // photos, setPhotos 비구조화 할당\r\n//     let [photos, setPhotos] = useState([]);\r\n//\r\n//     // 통신 메서드\r\n//     function searchApi() {\r\n//         const url = URL + '/spot/list';\r\n//\r\n//         axios.get(url\r\n//         ).then(function (response) {\r\n//             setPhotos(response.data);\r\n//             console.log(\"/spot/list\", response);\r\n//         }).catch(function (error) {\r\n//             console.log(\"/spot/list\", error);\r\n//         })\r\n//     }\r\n//\r\n//     return (\r\n//         <div\r\n//             role=\"tabpanel\"\r\n//             hidden={value !== index}\r\n//             id={`simple-tabpanel-${index}`}\r\n//             aria-labelledby={`simple-tab-${index}`}\r\n//             {...other}\r\n//         >\r\n//             {value === index && (\r\n//                 <Box p={3}>\r\n//                     <Typography>{children}</Typography>\r\n//                 </Box>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// TabPanel.propTypes = {\r\n//     children: PropTypes.node,\r\n//     index: PropTypes.any.isRequired,\r\n//     value: PropTypes.any.isRequired,\r\n// };\r\n//\r\n// function a11yProps(index) {\r\n//     return {\r\n//         id: `simple-tab-${index}`,\r\n//         'aria-controls': `simple-tabpanel-${index}`,\r\n//     };\r\n// }\r\n\r\nexport default function HotPlaceComp(props) {\r\n    const [value, setValue] = React.useState(2);\r\n    const [selectedLocationIdx, setSelectedLocationIdx] = React.useState(0);\r\n    const [isLocationOn, setIsLocationOn] = React.useState(false);\r\n    const [scrollYVal, setScrollYVal] = React.useState(0);\r\n\r\n    window.addEventListener(\"scroll\", () => {\r\n        setScrollYVal(window.scrollY);\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        setActionLocationEvent();\r\n    }, [scrollYVal])\r\n\r\n    const handleChange = (event, newValue) => {\r\n        // console.log(event, newValue);\r\n        setValue(newValue);\r\n    };\r\n\r\n    const setMainView = (mainView) => {\r\n        // console.log(\"HotPlaceComp setMainView()\");\r\n        store.dispatch({\r\n            type: actionType.setMainView,\r\n            mainView: mainView\r\n        });\r\n    }\r\n\r\n    const clickLocation = (e) => {\r\n        e.preventDefault();\r\n        setSelectedLocationIdx(e.target.dataset.idx);\r\n\r\n    }\r\n\r\n    // window.onmousewheel = function (e) {\r\n    //     // console.log(window.scrollY);\r\n    //     setActionLocationEvent(window.scrollY);\r\n    // }.bind(this);\r\n    //\r\n    // window.onscroll = function (e) {\r\n    //     // console.log(window.scrollY);\r\n    //     setActionLocationEvent(window.scrollY);\r\n    // }.bind(this);\r\n\r\n    const setActionLocationEvent = () => {\r\n        let scrollVal = window.scrollY;\r\n        // console.log(isLocationOn);\r\n        if (scrollVal > 550) {\r\n            if (!isLocationOn) {\r\n                setIsLocationOn(true);\r\n                let timeStack = 0;\r\n                let timeSnap = 0.1;\r\n\r\n                //land part img on\r\n                for (let i = 2; i <= 14; i++) {\r\n                    let _tempStr = `div.btn_go img:nth-child(${i})`;\r\n                    gsap.killTweensOf(_tempStr);\r\n\r\n                    // console.log(_tempStr, document.querySelector(_tempStr));\r\n                    document.querySelector(_tempStr).style.visibility = \"visible\";\r\n                    document.querySelector(_tempStr).style.opacity = 0;\r\n                    gsap.fromTo(_tempStr, {\r\n                        y: 50,\r\n                    }, {\r\n                        y: 0,\r\n                        opacity: 1,\r\n                        duration: 1,\r\n                        delay: (timeSnap * (i - 1)),\r\n                    });\r\n                }\r\n\r\n                timeStack = timeSnap * 13 + 0.5;\r\n\r\n                //img_wholeMap on\r\n                gsap.killTweensOf(\"div.btn_go img.img_wholeMap\");\r\n                gsap.to(\"div.btn_go img.img_wholeMap\", {\r\n                    opacity: 1,\r\n                    duration: 1,\r\n                    delay: timeStack,\r\n                });\r\n\r\n                timeStack += 0.5;\r\n                //land part img off\r\n                for (let i = 2; i <= 14; i++) {\r\n                    let _tempStr = `div.btn_go img:nth-child(${i})`;\r\n                    // console.log(_tempStr, document.querySelector(_tempStr));\r\n                    gsap.to(_tempStr, {\r\n                        opacity: 0,\r\n                        duration: 1,\r\n                        delay: timeStack,\r\n                    });\r\n                }\r\n\r\n                //land caption div on\r\n                gsap.killTweensOf(\"div.hotPlace_location div.btn_go div\");\r\n                gsap.to(\"div.hotPlace_location div.btn_go div\", {\r\n                    opacity: 1,\r\n                    duration: 1,\r\n                    delay: timeStack,\r\n                });\r\n            }\r\n        } else {\r\n            setIsLocationOn(false);\r\n            // console.log(\"setIsLocationOn(false);\");\r\n\r\n            //land part img off\r\n            for (let i = 2; i <= 14; i++) {\r\n                let _tempStr = `div.btn_go img:nth-child(${i})`;\r\n                gsap.killTweensOf(_tempStr);\r\n                // console.log(_tempStr, document.querySelector(_tempStr));\r\n                document.querySelector(_tempStr).style.visibility = \"visible\";\r\n                document.querySelector(_tempStr).style.opacity = 0;\r\n            }\r\n\r\n            //img_wholeMap off\r\n            gsap.killTweensOf(\"div.btn_go img.img_wholeMap\");\r\n            document.querySelector(\"div.btn_go img.img_wholeMap\").style.opacity = 0;\r\n\r\n            //land caption div off\r\n            gsap.killTweensOf(\"div.hotPlace_location div.btn_go div\");\r\n            // console.log(document.querySelectorAll(\"div.hotPlace_location div.btn_go div\"));\r\n            document.querySelectorAll(\"div.hotPlace_location div.btn_go div\")\r\n                .forEach((e, i, all) => {\r\n                    e.style.opacity = 0;\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    const mouseOverEventJejuMap = (e) => {\r\n        // console.log(\"mouseOverEventJejuMap\", e.target.dataset);\r\n\r\n        // let selectedLoc = document.getElementById(\"btn_go_\" + e.target.dataset.location_en);\r\n        // console.log(selectedLoc);\r\n        // selectedLoc.style.visibility = \"visible\";\r\n        gsap.to(\"#btn_go_\" + e.target.dataset.location_en, {\r\n            opacity: 1,\r\n            duration: 0.3,\r\n        });\r\n    }\r\n\r\n    const mouseLeaveEventJejuMap = (e) => {\r\n        // console.log(\"mouseLeaveEventJejuMap\", e.target.dataset);\r\n\r\n        // let selectedLoc = document.getElementById(\"btn_go_\" + e.target.dataset.location_en);\r\n        // console.log(selectedLoc);\r\n        // selectedLoc.style.visibility = \"hidden\";\r\n        gsap.to(\"#btn_go_\" + e.target.dataset.location_en, {\r\n            opacity: 0,\r\n            duration: 0.3,\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"hotPlaceComp\">\r\n            <div className=\"hotPlace_location\">\r\n                <div className=\"btn_go\">\r\n                    <img className=\"img_wholeMap\" src={img_wholeMap}/>\r\n                    <img id=\"btn_go_jeju\"       src={img_s_jeju}        />\r\n                    <img id=\"btn_go_jocheon\"    src={img_s_jocheon}     />\r\n                    <img id=\"btn_go_gujwa\"      src={img_s_gujwa}       />\r\n                    <img id=\"btn_go_sungsan\"    src={img_s_sungsan}     />\r\n                    <img id=\"btn_go_pyoseon\"    src={img_s_pyoseon}     />\r\n                    <img id=\"btn_go_namwon\"     src={img_s_namwon}      />\r\n                    <img id=\"btn_go_seogwipo\"   src={img_s_seogwipo}    />\r\n                    <img id=\"btn_go_andeok\"     src={img_s_andeok}      />\r\n                    <img id=\"btn_go_daejung\"    src={img_s_daejung}     />\r\n                    <img id=\"btn_go_hangyeong\"  src={img_s_hangyeong}   />\r\n                    <img id=\"btn_go_hanrim\"     src={img_s_hanrim}      />\r\n                    <img id=\"btn_go_aewol\"      src={img_s_aewol}       />\r\n                    <img id=\"btn_go_udo\"        src={img_s_udo}         />\r\n\r\n                    {\r\n                        arrJejuLoc_en.map((e, i) => (\r\n                            <div className={e} key={i}>\r\n                                <a href=\"#\"\r\n                                   onMouseLeave={mouseLeaveEventJejuMap}\r\n                                   onMouseOver={mouseOverEventJejuMap}\r\n                                   onClick={clickLocation.bind(this)}\r\n                                   data-location_en={e}\r\n                                   data-location_kr={arrJejuLoc_ko[i]}\r\n                                   data-idx={i}\r\n                                >{arrJejuLoc_ko[i]}\r\n                                </a>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"hotPlace_sample\">\r\n                <BoardSample idx={selectedLocationIdx}\r\n                             history={props.history}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n/*\r\n<img id=\"btn_go_jeju\"       src={img_s_jeju}        />\r\n<img id=\"btn_go_jocheon\"    src={img_s_jocheon}     />\r\n<img id=\"btn_go_gujwa\"      src={img_s_gujwa}       />\r\n<img id=\"btn_go_sungsan\"    src={img_s_sungsan}     />\r\n<img id=\"btn_go_pyoseon\"    src={img_s_pyoseon}     />\r\n<img id=\"btn_go_namwon\"     src={img_s_namwon}      />\r\n<img id=\"btn_go_andeok\"     src={img_s_andeok}      />\r\n<img id=\"btn_go_daejung\"    src={img_s_daejung}     />\r\n<img id=\"btn_go_hangyeong\"  src={img_s_hangyeong}   />\r\n<img id=\"btn_go_hanrim\"     src={img_s_hanrim}      />\r\n<img id=\"btn_go_aewol\"      src={img_s_aewol}       />\r\n<img id=\"btn_go_udo\"        src={img_s_udo}         />\r\n<img id=\"btn_go_seogwipo\"   src={img_s_seogwipo}    />\r\n*/\r\n/*\r\n                    <div className=\"jeju\">     <a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"jeju     \"  data-location_kr=\"제주\"  >제주   </a> </div>   <img id=\"btn_go_jeju\"       src={img_s_jeju       }/>\r\n                    <div className=\"jocheon\">  <a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"jocheon  \"  data-location_kr=\"조천\"  >조천   </a> </div>   <img id=\"btn_go_jocheon\"    src={img_s_jocheon    }/>\r\n                    <div className=\"gujwa\">    <a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"gujwa    \"  data-location_kr=\"구좌\"  >구좌   </a> </div>   <img id=\"btn_go_gujwa\"      src={img_s_gujwa      }/>\r\n                    <div className=\"sungsan\">  <a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"sungsan  \"  data-location_kr=\"성산\"  >성산   </a> </div>   <img id=\"btn_go_sungsan\"    src={img_s_sungsan    }/>\r\n                    <div className=\"pyoseon\">  <a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"pyoseon  \"  data-location_kr=\"표선\"  >표선   </a> </div>   <img id=\"btn_go_pyoseon\"    src={img_s_pyoseon    }/>\r\n                    <div className=\"namwon\">   <a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"namwon   \"  data-location_kr=\"남원\"  >남원   </a> </div>   <img id=\"btn_go_namwon\"     src={img_s_namwon     }/>\r\n                    <div className=\"andeok\">   <a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"andeok   \"  data-location_kr=\"안덕\"  >안덕   </a> </div>   <img id=\"btn_go_andeok\"     src={img_s_andeok     }/>\r\n                    <div className=\"daejung\">  <a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"daejung  \"  data-location_kr=\"대정\"  >대정   </a> </div>   <img id=\"btn_go_daejung\"    src={img_s_daejung    }/>\r\n                    <div className=\"hangyeong\"><a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"hangyeong\"  data-location_kr=\"한경\"  >한경   </a> </div>   <img id=\"btn_go_hangyeong\"  src={img_s_hangyeong  }/>\r\n                    <div className=\"hanrim\">   <a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"hanrim   \"  data-location_kr=\"한림\"  >한림   </a> </div>   <img id=\"btn_go_hanrim\"     src={img_s_hanrim     }/>\r\n                    <div className=\"aewol\">    <a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"aewol    \"  data-location_kr=\"애월\"  >애월   </a> </div>   <img id=\"btn_go_aewol\"      src={img_s_aewol      }/>\r\n                    <div className=\"udo\">      <a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"udo      \"  data-location_kr=\"우도\"  >우도   </a> </div>   <img id=\"btn_go_udo\"        src={img_s_udo        }/>\r\n                    <div className=\"seogwipo\"> <a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"seogwipo \"  data-location_kr=\"서귀포\" >서귀포  </a> </div>  <img id=\"btn_go_seogwipo\"   src={img_s_seogwipo   }/>\r\n\r\n */\r\n\r\n/*\r\nimport img_s_jeju       from \"../../../image/land_s/jeju_s.png\";\r\nimport img_s_jocheon    from \"../../../image/land_s/jocheon_s.png\";\r\nimport img_s_gujwa      from \"../../../image/land_s/gujwa_s.png\";\r\nimport img_s_sungsan    from \"../../../image/land_s/sungsan_s.png\";\r\nimport img_s_pyoseon    from \"../../../image/land_s/pyoseon_s.png\";\r\nimport img_s_namwon     from \"../../../image/land_s/namwon_s.png\";\r\nimport img_s_seogwipo   from \"../../../image/land_s/seogwipo_s.png\";\r\nimport img_s_andeok     from \"../../../image/land_s/andeok_s.png\";\r\nimport img_s_daejung    from \"../../../image/land_s/daejung_s.png\";\r\nimport img_s_hangyeong  from \"../../../image/land_s/hangyeong_s.png\";\r\nimport img_s_hanrim     from \"../../../image/land_s/hanrim_s.png\";\r\nimport img_s_aewol      from \"../../../image/land_s/aewol_s.png\";\r\nimport img_s_udo        from \"../../../image/land_s/udo_s.png\";\r\n\r\nimport img_jeju         from \"../../../image/land/jeju.png\";\r\nimport img_jocheon      from \"../../../image/land/jocheon.png\";\r\nimport img_gujwa        from \"../../../image/land/gujwa.png\";\r\nimport img_sungsan      from \"../../../image/land/sungsan.png\";\r\nimport img_pyoseon      from \"../../../image/land/pyoseon.png\";\r\nimport img_namwon       from \"../../../image/land/namwon.png\";\r\nimport img_seogwipo     from \"../../../image/land/seogwipo.png\";\r\nimport img_andeok       from \"../../../image/land/andeok.png\";\r\nimport img_daejung      from \"../../../image/land/daejung.png\";\r\nimport img_hangyeong    from \"../../../image/land/hangyeong.png\";\r\nimport img_hanrim       from \"../../../image/land/hanrim.png\";\r\nimport img_aewol        from \"../../../image/land/aewol.png\";\r\nimport img_udo          from \"../../../image/land/udo.png\";\r\n */\r\n\r\n/*\r\n<div className=\"btn_go\">\r\n    <div className=\"jeju\">          <a href=\"#\">제주</a>      </div>  <img id=\"btn_go_jeju\"       src={img_jeju     }  />\r\n    <div className=\"jocheon\">       <a href=\"#\">조천</a>      </div>  <img id=\"btn_go_jocheon\"    src={img_jocheon  }  />\r\n    <div className=\"gujwa\">         <a href=\"#\">구좌</a>      </div>  <img id=\"btn_go_gujwa\"      src={img_gujwa    }  />\r\n    <div className=\"sungsan\">       <a href=\"#\">성산</a>      </div>  <img id=\"btn_go_sungsan\"    src={img_sungsan  }  />\r\n    <div className=\"pyoseon\">       <a href=\"#\">표선</a>      </div>  <img id=\"btn_go_pyoseon\"    src={img_pyoseon  }  />\r\n    <div className=\"namwon\">        <a href=\"#\">남원</a>      </div>  <img id=\"btn_go_namwon\"     src={img_namwon   }  />\r\n    <div className=\"seogwipo\">      <a href=\"#\">서귀</a>      </div>  <img id=\"btn_go_seogwipo\"   src={img_seogwipo }  />\r\n    <div className=\"andeok\">        <a href=\"#\">안덕</a>      </div>  <img id=\"btn_go_andeok\"     src={img_andeok   }  />\r\n    <div className=\"daejung\">       <a href=\"#\">대정</a>      </div>  <img id=\"btn_go_daejung\"    src={img_daejung  }  />\r\n    <div className=\"hangyeong\">     <a href=\"#\">한경</a>      </div>  <img id=\"btn_go_hangyeong\"  src={img_hangyeong}  />\r\n    <div className=\"hanrim\">        <a href=\"#\">한림</a>      </div>  <img id=\"btn_go_hanrim\"     src={img_hanrim   }  />\r\n    <div className=\"aewol\">         <a href=\"#\">애월</a>      </div>  <img id=\"btn_go_aewol\"      src={img_aewol    }  />\r\n    <div className=\"udo\">           <a href=\"#\">우도</a>      </div>  <img id=\"btn_go_udo\"        src={img_udo      }  />\r\n</div>\r\n */\r\n\r\n/*\r\n    <a href=\"#\" data-location=\"제주\" onClick={clickLocation.bind(this)}>제주</a>\r\n    <a href=\"#\" data-location=\"조천\" onClick={clickLocation.bind(this)}>조천</a>\r\n    <a href=\"#\" data-location=\"구좌\" onClick={clickLocation.bind(this)}>구좌</a>\r\n    <a href=\"#\" data-location=\"성산\" onClick={clickLocation.bind(this)}>성산</a>\r\n    <a href=\"#\" data-location=\"표선\" onClick={clickLocation.bind(this)}>표선</a>\r\n    <a href=\"#\" data-location=\"남원\" onClick={clickLocation.bind(this)}>남원</a>\r\n    <a href=\"#\" data-location=\"서귀\" onClick={clickLocation.bind(this)}>서귀</a>\r\n    <a href=\"#\" data-location=\"안덕\" onClick={clickLocation.bind(this)}>안덕</a>\r\n    <a href=\"#\" data-location=\"대정\" onClick={clickLocation.bind(this)}>대정</a>\r\n    <a href=\"#\" data-location=\"한경\" onClick={clickLocation.bind(this)}>한경</a>\r\n    <a href=\"#\" data-location=\"한림\" onClick={clickLocation.bind(this)}>한림</a>\r\n    <a href=\"#\" data-location=\"애월\" onClick={clickLocation.bind(this)}>애월</a>\r\n    <a href=\"#\" data-location=\"우도\" onClick={clickLocation.bind(this)}>우도</a>\r\n */\r\n\r\n/*\r\n<Paper square>\r\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n                    <Tab label=\"Jeju\" {...a11yProps(0)} />\r\n                    <Tab label=\"Jocheon\" {...a11yProps(1)} />\r\n                    <Tab label=\"Gujwa\" {...a11yProps(2)} />\r\n                    <Tab label=\"Sungsan\" {...a11yProps(3)} />\r\n                    <Tab label=\"Pyoseon\" {...a11yProps(4)} />\r\n                    <Tab label=\"Namwon\" {...a11yProps(5)} />\r\n                    <Tab label=\"Seogwipo\" {...a11yProps(6)} />\r\n                    <Tab label=\"Andeok\" {...a11yProps(7)} />\r\n                    <Tab label=\"Daejung\" {...a11yProps(8)} />\r\n                    <Tab label=\"Hangyeong\" {...a11yProps(9)} />\r\n                    <Tab label=\"Hanrim\" {...a11yProps(10)} />\r\n                    <Tab label=\"Aewol\" {...a11yProps(11)} />\r\n                    <Tab label=\"Udo\" {...a11yProps(12)} />\r\n                </Tabs>\r\n                <TabPanel value={value} index={0}>\r\n                    <BoardSample/>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={3}>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={4}>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={5}>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={6}>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={7}>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={8}>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={9}>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={10}>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={11}>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={12}>\r\n                </TabPanel>\r\n            </Paper>\r\n */\r\n\r\n\r\n/*\r\n<a href=\"/tourlist/jeju     \">제주</a>\r\n<a href=\"/TourList/jocheon  \">조천</a>\r\n<a href=\"/TourList/gujwa    \">구좌</a>\r\n<a href=\"/TourList/sungsan  \">성산</a>\r\n<a href=\"/TourList/pyoseon  \">표선</a>\r\n\r\n<a href=\"/TourList/namwon   \">남원</a>\r\n<a href=\"/TourList/seogwipo \">서귀</a><br/>\r\n<a href=\"/TourList/andeok   \">안덕</a>\r\n<a href=\"/TourList/daejung  \">대정</a>\r\n<a href=\"/TourList/hangyeong\">한경</a>\r\n\r\n<a href=\"/TourList/hanrim   \">한림</a>\r\n<a href=\"/TourList/aewol    \">애월</a>\r\n<a href=\"/TourList/udo      \">우도</a><br/><br/>\r\n*/\r\n\r\n\r\n{/* <NavLink exact to=\"/tourlist/jeju\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>제주</NavLink> */\r\n}\r\n{/* <NavLink exact to=\"/tourlist/jocheon\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>조천</NavLink>\r\n<NavLink exact to=\"/tourlist/gujwa\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>구좌</NavLink>\r\n<NavLink exact to=\"/tourlist/sungsan\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>성산</NavLink>\r\n<NavLink exact to=\"/tourlist/pyoseon\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>표선</NavLink>\r\n<NavLink exact to=\"/tourlist/namwon\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>남원</NavLink>\r\n<NavLink exact to=\"/tourlist/seogwipo\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>서귀포</NavLink>\r\n<br/>\r\n<NavLink exact to=\"/tourlist/andeok\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>안덕</NavLink>\r\n<NavLink exact to=\"/tourlist/daejung\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>대정</NavLink>\r\n<NavLink exact to=\"/tourlist/hangyeong\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>한경</NavLink>\r\n<NavLink exact to=\"/tourlist/hanrim\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>한림</NavLink>\r\n<NavLink exact to=\"/tourlist/aewol\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>애월</NavLink>\r\n<NavLink exact to=\"/tourlist/udo\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>우도</NavLink> */\r\n}\r\n\r\n\r\n// <Route path=\"/TourList/:name?\" component={TourList}></Route>\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\NoticeMiniComp.js",["828","829","830","831"],"import React, {Component} from \"react\";\r\nimport PlusImg from \"../../../image/plus.png\";\r\n\r\nclass NoticeMiniComp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br/>\r\n                <h5>공지사항</h5>\r\n                <button>\r\n                    <img src={PlusImg}\r\n                         style={{width: \"50px\"}}\r\n                    />\r\n                </button>\r\n                <table className=\"noticeList\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>제목</th>\r\n                        <th>작성일</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.props.list.map(function (e, i) {\r\n                        // console.log(i, e);\r\n                        if (i < 5) {\r\n                            return (\r\n                                <tr key={i}>\r\n                                    <td>\r\n                                        <a href=\"#\">\r\n                                            <span>{e.subject}</span>\r\n                                        </a>\r\n                                    </td>\r\n                                    <td>{e.writeday}</td>\r\n                                </tr>\r\n                            );\r\n                        } else {\r\n\r\n                        }\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default NoticeMiniComp;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\ShareBoardMiniComp.js",["832","833","834","835"],"import React, {Component} from \"react\";\r\nimport PlusImg from \"../../../image/plus.png\";\r\n\r\nclass ShareBoardMiniComp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br/>\r\n                <h5>공유게시판</h5>\r\n                <button>\r\n                    <img src={PlusImg}\r\n                         style={{width: \"50px\"}}\r\n                    />\r\n                </button>\r\n                <table className=\"shareBoardList\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>제목</th>\r\n                        <th>작성일</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.props.list.map(function (e, i) {\r\n                        // console.log(i, e);\r\n                        if (i < 5) {\r\n                            return (\r\n                                <tr key={i}>\r\n                                    <td>\r\n                                        <a href=\"#\">\r\n                                            <span>{e.subject}</span>\r\n                                        </a>\r\n                                    </td>\r\n                                    <td>{e.writeday}</td>\r\n                                </tr>\r\n                            );\r\n                        } else {\r\n\r\n                        }\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ShareBoardMiniComp;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\MainPhotoComp.js",["836","837","838","839","840"],"import React, {Component} from 'react';\r\nimport jeju1 from \"../../../image/jeju1.jpg\";\r\nimport jeju2 from \"../../../image/jeju2.jpg\";\r\nimport jeju3 from \"../../../image/jeju3.jpeg\";\r\nimport udo1 from \"../../../image/udo1.jpg\";\r\nimport gsap from \"gsap\";\r\n// import WaveBorder from \"./WaveBorder\";\r\n// import {createMuiTheme, MuiThemeProvider, WithStyles} from \"@material-ui/core\";\r\n// import {ThemeProvider} from 'styled-components';\r\n// import theme from \"./theme\";\r\n// import PropTypes from \"prop-types\";\r\n// import styledComponents from \"styled-components\";\r\n\r\nclass MainPhotoComp extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n    }\r\n\r\n    setImageScroll = (photoNum, preNum = 4) => {\r\n        const duration = 3;\r\n        const imgCnt = 4;\r\n        let arrImg = [];\r\n\r\n        //over index setting\r\n        if (photoNum > imgCnt) {\r\n            photoNum = 1;\r\n        }\r\n\r\n        //img element array setting.\r\n        for (let i = 1; i <= imgCnt; i++) {\r\n            let tempImgIdx = (photoNum - 1) + i;\r\n            tempImgIdx = tempImgIdx > imgCnt ? tempImgIdx - imgCnt : tempImgIdx;\r\n            arrImg.push(document.querySelector(`img.mainPhotoComp_img${tempImgIdx}`));\r\n        }\r\n\r\n\r\n        if (arrImg[0] != null) {\r\n            //zIndex setting.\r\n            for (let i = 0; i < imgCnt; i++) {\r\n                arrImg[i].style.zIndex = imgCnt - i;\r\n            }\r\n\r\n            //tween action.\r\n            gsap.fromTo(`.mainPhotoComp_img${photoNum}`\r\n                , {\r\n                    opacity: 0,\r\n                }, {\r\n                    opacity: 1,\r\n                    duration: duration,\r\n                });\r\n            gsap.fromTo(`.mainPhotoComp_img${preNum}`\r\n                , {\r\n                    // opacity: 1,\r\n                }, {\r\n                    opacity: 0,\r\n                    duration: duration,\r\n                });\r\n\r\n            //next action preparing.\r\n            setTimeout(this.setImageScroll.bind(this, photoNum + 1, photoNum), (duration + 2) * 1000);\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        for (let i = 0; i < 4; i++) {\r\n            gsap.killTweensOf(`.mainPhotoComp_img${i + 1}`);\r\n        }\r\n        // this.setImageScroll(1, 4);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mainPhotoComp\">\r\n                    <img className=\"mainPhotoComp_img1\" src={jeju1}/>\r\n                {/*<div>*/}\r\n                {/*    <img className=\"mainPhotoComp_img2\" src={jeju2}/>*/}\r\n                {/*</div>*/}\r\n                {/*<div>*/}\r\n                {/*    <img className=\"mainPhotoComp_img3\" src={jeju3}/>*/}\r\n                {/*</div>*/}\r\n                {/*<div>*/}\r\n                {/*    <img className=\"mainPhotoComp_img4\" src={udo1}/>*/}\r\n                {/*</div>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainPhotoComp\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\MyPlanComp.js",["841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870"],"import React, {Component} from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\r\nimport FlightLandIcon from '@material-ui/icons/FlightLand';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport store from '../../../redux/store';\r\nimport './MyPlanComp.css';\r\nimport axios from 'axios';\r\nimport {URL} from '../../../redux/config';\r\nimport MyPlanRightItem from './MyPlanRightItem';\r\nimport MyPlanLeftItem from './MyPlanLeftItem';\r\nimport Weather from \"./Weather\";\r\nimport Slider from \"react-slick\";\r\n\r\nclass MyPlanComp extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            count: 0,\r\n            todayList: [], // 오늘 전부 plan\r\n            todayAfterList: [], // 오늘 현재 시간 이후 plan\r\n            nextList: [], // 오늘 이후 plan\r\n            spotList: [],\r\n            hotspotList: []\r\n        }\r\n\r\n        let date = new Date();\r\n        this.today = date.getFullYear() + \"-\" + Number(date.getMonth()+1) + \"-\" + date.getDate();\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.getPlanList();\r\n    }\r\n\r\n    // todayList, todayAfterList 가져오기\r\n    getPlanList = () => {\r\n        let url = URL + \"/wish/planlist?memId=\" + store.getState().loginId + \"&day=\" + this.today + \"&category=today\";\r\n        \r\n        // let url = URL + \"/wish/planlist?memId=sanghee&day=\" + this.today + \"&category=today&perPage=5\";\r\n        \r\n        // let url = URL + \"/wish/planlist?memId=sanghee&day=2020-12-15&category=today&perPage=5\";\r\n        \r\n        axios.get(url)\r\n            .then(res=>{\r\n                let date = new Date();\r\n                let now = date.getHours() < 10 ? \"0\" + date.getHours() + \":\" + date.getMinutes():date.getHours() + \":\" + date.getMinutes();\r\n                // console.log(now);\r\n                this.setState({\r\n                    todayList: res.data,\r\n                    todayAfterList: res.data.filter(item => item.wishtime > now)\r\n                })\r\n\r\n                if(this.state.todayList == '')\r\n                    this.getNextDayPlan();\r\n                else\r\n                    this.getSpotList(\"today\");\r\n            }).catch(err=>{\r\n                console.log(\"myplan getPlanList 오류 : \" + err);\r\n            })\r\n    }\r\n\r\n    // 오늘 일정 없을 시, 오늘 이후 plan 가져오기\r\n    getNextDayPlan = () => {\r\n        let url = URL + \"/wish/planlist?memId=\" + store.getState().loginId + \"&day=\" + this.today + \"&category=nextDay\";\r\n        \r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    nextList: res.data\r\n                })\r\n\r\n                if(this.state.nextList != '')\r\n                    this.getSpotList(\"nextDay\");\r\n                else\r\n                    this.getHotspotList();\r\n                    \r\n            }).catch(err=>{\r\n                console.log(\"myplan getNextDayPlan 오류 : \" + err);\r\n            })\r\n    }\r\n\r\n    // 카테고리별 spotlsit 가져오기\r\n    getSpotList = (category) => {\r\n        let url = URL + \"/wish/spotlist?memId=\" + store.getState().loginId + \"&day=\" + this.today + \"&category=\" + category;\r\n        \r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    spotList: res.data\r\n                })  \r\n                if(this.state.spotList == '')\r\n                    this.getHotspotList();\r\n            }).catch(err=>{\r\n                console.log(\"myplan getSpotList 오류 : \" + err);\r\n            })\r\n    }\r\n\r\n    // 아예 뒷 일정이 없을 경우\r\n    getHotspotList=()=>{\r\n        let url = URL + \"/spot/hotspotlist\";\r\n        \r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    hotspotList: res.data\r\n                })  \r\n            }).catch(err=>{\r\n                console.log(\"myplan getHotspotList 오류 : \" + err);\r\n            })\r\n    }\r\n\r\n    render(){\r\n        // login시에만 왼쪽 블럭 출력\r\n        const check = store.getState().logged==true && (this.state.todayList!='' || this.state.nextList!='');\r\n        const leftTag = check==true?\r\n            // <Box p={1} className=\"myPlanLeft\" style={{borderRight: '1px solid black'}}>\r\n                \r\n            // </Box>\r\n            <div className=\"myPlanLeft\" style={{borderRight: '1px solid #ddd'}}>\r\n                {this.state.todayList!=''?<span style={{color: '#bbb'}}>MyPlan on {this.today}</span>:<span>MyPlan</span>}\r\n                        <br/>\r\n                        {this.state.todayList!=''?\r\n                            <span>TODAY</span>\r\n                        :\"\"}\r\n                        <List style={{width: '100%', overflow: 'scroll'}}>\r\n                            {this.state.todayList!=''?this.state.todayList.map((row)=>(\r\n                                <MyPlanLeftItem row={row}/>\r\n                            )):this.state.nextList!=''?this.state.nextList.map((row)=>(\r\n                                <MyPlanLeftItem row={row}/>\r\n                            ))\r\n                            // :<ListItem className=\"myplanLeftList\">등록하신 일정이 없습니다.<br/>새로운 일정을 계획해보아요.</ListItem>\r\n                            :\"\"}\r\n                        </List>        \r\n            </div>:\"\";\r\n                            \r\n\r\n        // 오른쪽 블럭 : 오늘 spot 출력 / 없을 시, 오늘 이후 spot 출력 / 없을 시, 추천 spot 보여주기\r\n        const list = this.state.spotList!=''?\r\n            <div className=\"myPlanpagesRoot\">\r\n                {this.state.spotList.map((row)=>(\r\n                        <MyPlanRightItem row={row}/>\r\n                    ))}\r\n                \r\n            </div>\r\n        :\r\n        <div className=\"myPlanpagesRoot\">\r\n            {this.state.hotspotList.map((row)=>(\r\n                    <MyPlanRightItem row={row}/>\r\n                ))} \r\n        </div>;\r\n\r\n        // 로그인 시, plan list 출력 / 없을 시, 뭐넣지\r\n        const rightTag = store.getState().logged==true?\r\n            // <Box p={1} className=\"myPlanRight\" style={{borderRight: '1px solid black'}}>\r\n                \r\n            // </Box>\r\n            this.state.todayList!='' && this.state.spotList!=''?\r\n                <div className=\"myPlanRight\">\r\n                    <span>&nbsp;오늘의 <b>Spot</b></span>\r\n                    {list}\r\n                </div>\r\n                :this.state.nextList!='' && this.state.spotList!=''?\r\n                    <div className=\"myPlanRight\">\r\n                        <span>&nbsp;다가오는 <b>Spot</b></span>\r\n                        {list}\r\n                    </div>:check==false?<div className=\"myPlanRight myPlanTop5\">\r\n                            <span>&nbsp;오늘의 <b>TOP5</b></span>\r\n                                {list}\r\n                            </div>:<div className=\"myPlanRight\">\r\n                            <span>&nbsp;오늘의 <b>TOP5</b></span>\r\n                                {list}\r\n                            </div>\r\n            :<h2><Weather/></h2>\r\n\r\n        return (\r\n            <div className=\"myPlanComp myPlanParent\">\r\n                {leftTag}\r\n                {rightTag}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyPlanComp;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\EtcBoardComp.js",["871","872","873","874","875","876","877","878","879"],"import React, {Component, useEffect} from 'react';\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport BoardSample from \"./BoardSample\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from \"prop-types\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport NoticeItemComp from \"./NoticeItemComp\";\r\nimport axios from \"axios\";\r\nimport {URL} from \"../../../redux/config\";\r\n// import ShareRestaurantItemComp from \"./ShareRestaurantItemComp\";\r\nimport ShareBoardRowItem from \"../shareboard/ShareBoardRowItem\";\r\n\r\nfunction TabPanel(props) {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        // maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    paperRoot: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        \"& > *\": {\r\n            margin: \"10px\",\r\n            padding: \"10px\",\r\n            width: \"300px\",\r\n            height: \"400px\",\r\n            overflow: \"hidden\",\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function EtcBoardComp(props) {\r\n    const classes = useStyles();\r\n    const [selectedTabValue, setSelectedTabValue] = React.useState(1);\r\n    const [noticeList, setNoticeList] = React.useState([]);\r\n    const [shareRestaurant, setShareRestaurant] = React.useState([]);\r\n    const [shareMyPlan, setShareMyPlan] = React.useState([]);\r\n\r\n    useEffect(() => {\r\n        if (selectedTabValue == 0) {\r\n            getNoticeList();\r\n        } else if (selectedTabValue == 1) {\r\n            getShareRestaurantList();\r\n        } else if (selectedTabValue == 2) {\r\n\r\n        }\r\n    }, [selectedTabValue]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        console.log(event, newValue);\r\n        setSelectedTabValue(newValue);\r\n    };\r\n\r\n    const getNoticeList = () => {\r\n        let url = URL + \"/notice/list?start=0&perPage=10\";\r\n        console.log(url);\r\n\r\n        axios.get(url\r\n        ).then(res => {\r\n            console.log(res);\r\n            setNoticeList(res.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const getShareRestaurantList = () => {\r\n        let url = URL + \"/share/list?start=0&perPage=10\";\r\n        console.log(url);\r\n\r\n        axios.get(url\r\n        ).then(res => {\r\n            console.log(res);\r\n            setShareRestaurant(res.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n     * Notice | ShareRestaurant | ShareMyPlan\r\n     */\r\n    return (\r\n        <div className=\"etcBoardComp\">\r\n            <Tabs value={selectedTabValue} onChange={handleChange} aria-label=\"simple tabs example\">\r\n                <Tab label=\"Notice\" {...a11yProps(0)} />\r\n                <Tab label=\"Share Restaurant\" {...a11yProps(1)} />\r\n                <Tab label=\"Share MyPlan\" {...a11yProps(2)} />\r\n            </Tabs>\r\n            <TabPanel value={selectedTabValue} index={0}>\r\n                <div style={{\r\n                    display: \"flex\",\r\n                    overflow: \"auto\",\r\n                    // flexWrap: \"wrap\"\r\n                }}>\r\n                    {\r\n                        noticeList.map((e, i) => {\r\n                            return (\r\n                                <NoticeItemComp key={i} row={e}/>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </TabPanel>\r\n            <TabPanel value={selectedTabValue} index={1}>\r\n                <div style={{\r\n                    display: \"flex\",\r\n                    overflow: \"auto\",\r\n                    // flexWrap: \"wrap\"\r\n\r\n                }}>\r\n                    {\r\n                        shareRestaurant.map((e, i) => {\r\n                            return (\r\n                                <ShareBoardRowItem key={i} row={e}\r\n                                                   history={props.history}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </TabPanel>\r\n            <TabPanel value={selectedTabValue} index={2}>\r\n            </TabPanel>\r\n\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\OneWayAir.js",["880","881","882","883","884","885","886","887","888","889"],"import React, {Component} from \"react\";\r\nimport FlightTakeoffIcon from '@material-ui/icons/FlightTakeoff';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AirlineSeatReclineNormalIcon from '@material-ui/icons/AirlineSeatReclineNormal';\r\nimport SyncAltIcon from '@material-ui/icons/SyncAlt';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport './Reservation.css';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport store from '../../../redux/store';\r\nimport axios from 'axios';\r\nimport {URL} from '../../../redux/config';\r\nimport Box from '@material-ui/core/Box';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nclass OneWayAir extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            adult: 0,\r\n            child:0,\r\n            infant:0,\r\n            seat: '',\r\n            person:0,\r\n            open: false,\r\n            departDate: '',\r\n            startdepartDate:'',\r\n            arrivaldepartDate:'',\r\n            seatopen: false,\r\n            anchorEl: null,\r\n            all: 0,\r\n            general: 0,\r\n            business: 0,\r\n            start: '김포',\r\n            dest: '제주',\r\n            wishtime: ''\r\n\r\n          }\r\n\r\n    }\r\n   \r\n    // 인원 선택버튼 숫자증가\r\n    state = {\r\n      value: 0\r\n    }\r\n    handleChange = (e) => {\r\n      this.setState({\r\n          [e.target.name]: e.target.value\r\n      })\r\n    };\r\n  \r\n    decrease = () => {\r\n      this.setState({ value: this.state.value - 1 });\r\n    }\r\n  \r\n    increase = () => {\r\n      this.setState({ value: this.state.value + 1 });\r\n    }\r\n\r\n    \r\n    // 편도 좌석 인원 버튼\r\n    handleClick = (event) => {\r\n      this.setState({\r\n        anchorEl : event.currentTarget\r\n      })\r\n    }\r\n    \r\n    handleClose = () => {\r\n        this.setState({\r\n          anchorEl : null\r\n        })\r\n      };\r\n    \r\n    handleOpen = () => {\r\n        this.setState({\r\n            open : true\r\n        })\r\n      };\r\n      handleSeatClose = () => {\r\n        this.setState({\r\n            seatopen : false\r\n        })\r\n      };\r\n    \r\n    handleSeatOpen = () => {\r\n        this.setState({\r\n          seatopen : true\r\n        })\r\n      };\r\n\r\n    \r\n\r\n      insertWish=()=>{\r\n        let url = URL + \"/wish/insertcontent\";\r\n        let memId = store.getState().loginId;\r\n        let content = '항공,' + this.state.start + \"→\" + this.state.dest;\r\n        let wishday = this.refs.wishday.value;\r\n        let wishtime = this.state.wishtime;\r\n        let money = this.state.money==''?null:this.state.money;\r\n\r\n        // console.log(this.refs.wishday.value);\r\n        if(store.getState().logged==false){\r\n            \r\n            if(window.confirm(\"로그인이 필요한 서비스 입니다.\\n로그인 하시겠습니까?\"))\r\n                this.props.history.push(\"/login\");\r\n        }\r\n        else {\r\n            if(wishday == '' || wishtime == '')\r\n                alert(\"날짜와 시간을 모두 선택해주세요.\");\r\n            else{\r\n                axios.post(url, {memId, content, wishday, wishtime, money})\r\n                .then(res=>{\r\n                    this.setState({\r\n                        alertOpen: true\r\n                    })\r\n                }).catch(err=>{\r\n                    console.log(\"air 일정 insert 오류 : \" + err);\r\n                })\r\n            }\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    swap=()=>{\r\n        var v1 = this.state.start;\r\n        var v2 = this.state.dest;\r\n        this.setState({\r\n            start: v2,\r\n            dest: v1\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const open = Boolean(this.state.anchorEl);\r\n        const id = open ? \"simple-popover\" : undefined;\r\n\r\n        return (\r\n            <div>\r\n                <div style={{textAlign:'center'}} className=\"AirTabTitle\">\r\n                    <b>{this.state.start}</b>\r\n                        <FlightTakeoffIcon style={{color:'#00bfff'}}  />\r\n                    <b>{this.state.dest}</b>\r\n                    <br/>\r\n                    <SyncAltIcon style={{cursor: 'pointer'}} onClick={this.swap.bind(this)}/>\r\n                </div>\r\n                <br/>\r\n                <Box\r\n                    display=\"flex\"\r\n                    flexWrap=\"wrap\"\r\n                    justifyContent=\"center\"\r\n                    width=\"100%\"\r\n                    className=\"AirTabContent\"\r\n                >\r\n                    <Box m={1} style={{textAlign: 'left'}}>\r\n                        {/* 날짜선택 */}\r\n                        <Tooltip title=\"가는날\" arrow>\r\n                            <div style={{display: 'inline-block'}}>\r\n                            <input type=\"date\" name=\"departDate\" onChange={this.handleChange.bind(this)} ref=\"wishday\" placeholder=\"가는날\"/>\r\n                            </div>\r\n                        </Tooltip>\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <Tooltip title=\"오는날\" arrow>\r\n                            <div style={{display: 'inline-block'}}>\r\n                            <input type=\"date\" name=\"departDate\" disabled placeholder=\"오는날\"/>\r\n                            </div>\r\n                        </Tooltip>\r\n                        <br/><br/>\r\n\r\n                        {/* 인원선택 */}\r\n                        <div className=\"AirContentDiv\" onClick={this.handleClick.bind(this)} style={{cursor: 'pointer'}}>\r\n                            <PersonIcon onClick={this.handleClick.bind(this)} style={{cursor: 'pointer'}}/>&nbsp;&nbsp;\r\n                            <span style={{color:'white'}}>총 {this.state.person}명</span>\r\n                        </div>&nbsp;&nbsp;&nbsp;\r\n\r\n                        <Popover\r\n                            id={id}\r\n                            open={open}\r\n                            onClose={this.handleClose.bind(this)}\r\n                            anchorEl={this.state.anchorEl}\r\n                            anchorOrigin={{\r\n                                vertical: \"bottom\",\r\n                                horizontal: \"center\"\r\n                            }}\r\n                            transformOrigin={{\r\n                            vertical: \"top\",\r\n                            horizontal: \"center\"\r\n                            }}>\r\n\r\n                            <div className=\"AirOneWayPopover\">\r\n                                <b style={{fontWeight: '700'}}>성인</b>                                             \r\n                                <div className=\"def-number-input number-input\">\r\n                                    <button onClick={()=>{this.setState({adult: this.state.adult-1, person: this.state.person-1})}} className=\"minus\"></button>\r\n                                    <input className=\"quantity\" name=\"adult\" value={this.state.adult} onChange={this.handleChange.bind(this)}\r\n                                    type=\"number\" />\r\n                                    <button onClick={()=>{this.setState({adult: this.state.adult+1, person: this.state.person+1})}} className=\"plus\"></button>\r\n                                </div>\r\n\r\n                                <b style={{fontWeight: '700'}}>유아</b>                                             \r\n                                <div className=\"def-number-input number-input\">\r\n                                    <button onClick={()=>{this.setState({child: this.state.child-1, person: this.state.person-1})}} className=\"minus\"></button>\r\n                                    <input className=\"quantity\" name=\"child\" value={this.state.child} onChange={this.handleChange.bind(this)}\r\n                                    type=\"number\" />\r\n                                    <button onClick={()=>{this.setState({child: this.state.child+1, person: this.state.person+1})}} className=\"plus\"></button>\r\n                                </div>\r\n\r\n                                <b style={{fontWeight: '700'}}>소아</b>                                             \r\n                                <div className=\"def-number-input number-input\">\r\n                                    <button onClick={()=>{this.setState({infant: this.state.infant-1, person: this.state.person-1})}} className=\"minus\"></button>\r\n                                    <input className=\"quantity\" name=\"infant\" value={this.state.infant} onChange={this.handleChange.bind(this)}\r\n                                    type=\"number\" />\r\n                                    <button onClick={()=>{this.setState({infant: this.state.infant+1, person: this.state.person+1})}} className=\"plus\"></button>\r\n                                </div>\r\n                            </div>\r\n                        </Popover>\r\n\r\n                        <div className=\"AirContentDiv\">\r\n                            {/* 좌석선택 */}\r\n                            <AirlineSeatReclineNormalIcon/>&nbsp;\r\n                            <select class=\"browser-default custom-select\" name=\"seat\" onClick={this.handleChange}>\r\n                                <option selected value=\"all\" style={{color: 'black'}}>전체</option>\r\n                                <option value=\"Y\" style={{color: 'black'}}>일반석</option>\r\n                                <option value=\"C\" style={{color: 'black'}}>비지니스석</option>\r\n                            </select>\r\n                        </div>\r\n                    </Box>\r\n                </Box>\r\n                <br/>\r\n                    <button type=\"button\" className=\"btn btn-info\"\r\n                                        onClick={() => {\r\n                                            if(this.state.start=='김포'){\r\n                                                window.open('https://flight.naver.com/flights/results/domestic?trip=OW&fareType='+this.state.seat+'&scity1=GMP&ecity1=CJU&adult='+this.state.adult+'&child='+this.state.child+'&infant='+this.state.infant+'&sdate1='+this.state.departDate+'', '_blank');\r\n                                            }\r\n                                            else{\r\n                                                window.open('https://flight.naver.com/flights/results/domestic?trip=OW&fareType='+this.state.seat+'&scity1=CJU&ecity1=GMP&adult='+this.state.adult+'&child='+this.state.child+'&infant='+this.state.infant+'&sdate1='+this.state.departDate+'', '_blank')\r\n                                            }\r\n                                        }}>\r\n                                        항공권 검색</button>\r\n            \r\n\r\n                            <div style={{borderTop:'0.1px solid white',textAlign:'center'}} className=\"AirOneWayPlan\">\r\n                            \r\n                            <Tooltip title=\"예정 시간\" arrow>\r\n                                <div>\r\n                                    <input type=\"time\" class=\"form-control form-control-sm\" value={this.state.wishtime} onChange={this.handleChange.bind(this)} name=\"wishtime\"></input>\r\n                                    <input type=\"text\" class=\"form-control form-control-sm\" value={this.state.money} onChange={this.handleChange.bind(this)} name=\"money\"></input>\r\n                                </div>\r\n                            </Tooltip>\r\n                                \r\n                                <br/>\r\n                               \r\n                                <button type=\"button\" ref=\"wishtime\"\r\n                                       onClick={this.insertWish.bind(this)} className=\"btn btn-info\">\r\n                                  일정추가\r\n                                </button>\r\n                            </div>\r\n\r\n                            {/* alert 창 */}\r\n                    <Dialog\r\n                        open={this.state.alertOpen}\r\n                        onClose={()=>{this.setState({alertOpen:false})}}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\">{\"일정 추가 완료\"}</DialogTitle>\r\n                        <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            Mypage로 이동하여 확인하시겠습니까?\r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                        <Button onClick={()=>{this.setState({alertOpen:false})}} color=\"primary\">\r\n                            NO\r\n                        </Button>\r\n                        <Button onClick={\r\n                            ()=>{\r\n                                this.setState({\r\n                                    alertOpen: false\r\n                                })\r\n                                this.props.history.push(\"/mypage\");\r\n                            }\r\n                        } color=\"primary\" autoFocus>\r\n                            YES\r\n                        </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default OneWayAir;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\RoundAir.js",["890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907"],"import React, {Component} from \"react\";\r\nimport FlightTakeoffIcon from '@material-ui/icons/FlightTakeoff';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AirlineSeatReclineNormalIcon from '@material-ui/icons/AirlineSeatReclineNormal';\r\nimport img from './dd.PNG';\r\nimport SyncAltIcon from '@material-ui/icons/SyncAlt';\r\nimport TrendingFlatIcon from '@material-ui/icons/TrendingFlat';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport './Reservation.css';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport store from '../../../redux/store';\r\nimport axios from 'axios';\r\nimport {URL} from '../../../redux/config';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nclass RoundAir extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n          tabValue:0,\r\n            adult: 0,\r\n            child:0,\r\n            infant:0,\r\n            seat: '',\r\n            person:0,\r\n            open: false,\r\n            departDate: '',\r\n            startdepartDate:'',\r\n            arrivaldepartDate:'',\r\n            seatopen: false,\r\n            anchorEl: null,\r\n            all: 0,\r\n            general: 0,\r\n            business: 0,\r\n            wishtime: ''\r\n\r\n          }\r\n\r\n    }\r\n   \r\n    // 인원 선택버튼 숫자증가\r\n    state = {\r\n      value: 0\r\n    }\r\n    handleChange = (e) => {\r\n      this.setState({\r\n          [e.target.name]: e.target.value\r\n      })\r\n    };\r\n  \r\n    decrease = () => {\r\n      this.setState({ value: this.state.value - 1 });\r\n    }\r\n  \r\n    increase = () => {\r\n      this.setState({ value: this.state.value + 1 });\r\n    }\r\n\r\n\r\n    handleClick = (event) => {\r\n      this.setState({\r\n        anchorEl : event.currentTarget\r\n      })\r\n    }\r\n    \r\n    handleClose = () => {\r\n        this.setState({\r\n          anchorEl : null\r\n        })\r\n      };\r\n    \r\n    handleOpen = () => {\r\n        this.setState({\r\n            open : true\r\n        })\r\n      };\r\n      handleSeatClose = () => {\r\n        this.setState({\r\n            seatopen : false\r\n        })\r\n      };\r\n    \r\n    handleSeatOpen = () => {\r\n        this.setState({\r\n          seatopen : true\r\n        })\r\n      };\r\n\r\n    \r\n\r\n      insertWish=()=>{\r\n        let url = URL + \"/wish/insertcontent\";\r\n        let memId = store.getState().loginId;\r\n        let content1 = '항공,김포→제주';\r\n        let content2 = '항공,제주→김포';\r\n        let startdepartDate = this.refs.startdepartDate.value;\r\n        let arriverdepartDate = this.refs.arriverdepartDate.value;\r\n        let wishtime = this.state.wishtime;\r\n        let money1 = this.state.money1==''?null:this.state.money1;\r\n        let money2 = this.state.money2==''?null:this.state.money2;\r\n\r\n        if(store.getState().logged==false){\r\n            if(window.confirm(\"로그인이 필요한 서비스 입니다.\\n로그인 하시겠습니까?\"))\r\n                this.props.history.push(\"/login\");\r\n        }\r\n        else{\r\n            if(startdepartDate == '' || arriverdepartDate == '' || wishtime == '')\r\n                alert(\"날짜와 시간을 모두 선택해주세요.\");\r\n            else{\r\n                axios.post(url, {memId, content: content1, wishday: startdepartDate, wishtime, money: money1})\r\n                .then(res=>{\r\n                    \r\n                }).catch(err=>{\r\n                    console.log(\"air 일정 insert 오류 : \" + err);\r\n                })\r\n\r\n                axios.post(url, {memId, content: content2, wishday: arriverdepartDate, wishtime, money: money2})\r\n                .then(res=>{\r\n                    this.setState({\r\n                        alertOpen: true\r\n                    })\r\n                }).catch(err=>{\r\n                    console.log(\"air 일정 insert 오류 : \" + err);\r\n                })\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const open = Boolean(this.state.anchorEl);\r\n        const id = open ? \"simple-popover\" : undefined;\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div style={{textAlign:'center'}} className=\"AirTabTitle\">\r\n                    <b>김포</b>\r\n                        <FlightTakeoffIcon style={{color:'#00bfff'}}  />\r\n                    <b>제주</b>\r\n                </div>\r\n                <br/>\r\n                <Box\r\n                    display=\"flex\"\r\n                    flexWrap=\"wrap\"\r\n                    justifyContent=\"center\"\r\n                    width=\"100%\"\r\n                    className=\"AirTabContent\"\r\n                >\r\n                    <Box m={1} style={{textAlign: 'left'}}>\r\n                        <Tooltip title=\"가는날\" arrow>\r\n                            <div style={{display: 'inline-block'}}>\r\n                            <input type=\"date\" name=\"startdepartDate\" onChange={this.handleChange.bind(this)} ref=\"startdepartDate\"/>\r\n                            </div>\r\n                        </Tooltip>\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <Tooltip title=\"오는날\" arrow>\r\n                            <div style={{display: 'inline-block'}}>\r\n                            <input type=\"date\" name=\"arriverdepartDate\" ref=\"arriverdepartDate\" onChange={this.handleChange.bind(this)}/>\r\n                            </div>\r\n                        </Tooltip>\r\n                        <br/><br/>\r\n\r\n                        {/* 인원선택 */}\r\n                        <div className=\"AirContentDiv\" onClick={this.handleClick.bind(this)} style={{cursor: 'pointer'}}>\r\n                            <PersonIcon onClick={this.handleClick.bind(this)} style={{cursor: 'pointer'}}/>&nbsp;&nbsp;\r\n                            <span style={{color:'white'}}>총 {this.state.person}명</span>\r\n                        </div>&nbsp;&nbsp;&nbsp;\r\n\r\n                        <Popover\r\n                            id={id}\r\n                            open={open}\r\n                            onClose={this.handleClose.bind(this)}\r\n                            anchorEl={this.state.anchorEl}\r\n                            anchorOrigin={{\r\n                                vertical: \"bottom\",\r\n                                horizontal: \"center\"\r\n                            }}\r\n                            transformOrigin={{\r\n                            vertical: \"top\",\r\n                            horizontal: \"center\"\r\n                            }}>\r\n\r\n                            <div className=\"AirOneWayPopover\">\r\n                                <b style={{fontWeight: '700'}}>성인</b>                                             \r\n                                <div className=\"def-number-input number-input\">\r\n                                    <button onClick={()=>{this.setState({adult: this.state.adult-1, person: this.state.person-1})}} className=\"minus\"></button>\r\n                                    <input className=\"quantity\" name=\"adult\" value={this.state.adult} onChange={this.handleChange.bind(this)}\r\n                                    type=\"number\" />\r\n                                    <button onClick={()=>{this.setState({adult: this.state.adult+1, person: this.state.person+1})}} className=\"plus\"></button>\r\n                                </div>\r\n\r\n                                <b style={{fontWeight: '700'}}>유아</b>                                             \r\n                                <div className=\"def-number-input number-input\">\r\n                                    <button onClick={()=>{this.setState({child: this.state.child-1, person: this.state.person-1})}} className=\"minus\"></button>\r\n                                    <input className=\"quantity\" name=\"child\" value={this.state.child} onChange={this.handleChange.bind(this)}\r\n                                    type=\"number\" />\r\n                                    <button onClick={()=>{this.setState({child: this.state.child+1, person: this.state.person+1})}} className=\"plus\"></button>\r\n                                </div>\r\n\r\n                                <b style={{fontWeight: '700'}}>소아</b>                                             \r\n                                <div className=\"def-number-input number-input\">\r\n                                    <button onClick={()=>{this.setState({infant: this.state.infant-1, person: this.state.person-1})}} className=\"minus\"></button>\r\n                                    <input className=\"quantity\" name=\"infant\" value={this.state.infant} onChange={this.handleChange.bind(this)}\r\n                                    type=\"number\" />\r\n                                    <button onClick={()=>{this.setState({infant: this.state.infant+1, person: this.state.person+1})}} className=\"plus\"></button>\r\n                                </div>\r\n                            </div>\r\n                        </Popover>\r\n\r\n                        <div className=\"AirContentDiv\">\r\n                            {/* 좌석선택 */}\r\n                            <AirlineSeatReclineNormalIcon/>&nbsp;\r\n                            <select class=\"browser-default custom-select\" name=\"seat\" onClick={this.handleChange}>\r\n                                <option selected value=\"all\" style={{color: 'black'}}>전체</option>\r\n                                <option value=\"Y\" style={{color: 'black'}}>일반석</option>\r\n                                <option value=\"C\" style={{color: 'black'}}>비지니스석</option>\r\n                            </select>\r\n                        </div>\r\n                    </Box>\r\n                </Box>\r\n                <br/>\r\n                    <button type=\"button\" className=\"btn btn-info\"\r\n                                        onClick={() => {\r\n                                            window.open('https://flight.naver.com/flights/results/domestic?trip=RT&fareType='+this.state.seat+'&scity1=GMP&ecity1=CJU&scity2=CJU&ecity2=GMP&adult='+this.state.adult+'&child='+this.state.child+'&infant='+this.state.infant+'&sdate1='+this.state.startdepartDate+'&sdate2='+this.state.arriverdepartDate+'', '_blank')\r\n                                        }}>\r\n                                        항공권 검색</button>\r\n            \r\n\r\n                            <div style={{borderTop:'0.1px solid white',textAlign:'center'}} className=\"AirOneWayPlan\">\r\n                            \r\n                            <Tooltip title=\"예정 시간\" arrow>\r\n                                <div>\r\n                                <input type=\"time\" class=\"form-control form-control-sm\" value={this.state.wishtime} onChange={this.handleChange.bind(this)} name=\"wishtime\"></input>\r\n                                <input type=\"text\" class=\"form-control form-control-sm\" value={this.state.money1} onChange={this.handleChange.bind(this)} name=\"money1\"></input>\r\n                                <input type=\"text\" class=\"form-control form-control-sm\" value={this.state.money2} onChange={this.handleChange.bind(this)} name=\"money2\"></input>\r\n                                </div>\r\n                            </Tooltip>\r\n                                \r\n                                <br/>\r\n                               \r\n                                <button type=\"button\" ref=\"wishtime\"\r\n                                       onClick={this.insertWish.bind(this)} className=\"btn btn-info\">\r\n                                  일정추가\r\n                                </button>\r\n                            </div>\r\n                \r\n                        {/* alert 창 */}\r\n                        <Dialog\r\n                        open={this.state.alertOpen}\r\n                        onClose={()=>{this.setState({alertOpen:false})}}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\">{\"일정 추가 완료\"}</DialogTitle>\r\n                        <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            Mypage로 이동하여 확인하시겠습니까?\r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                        <Button onClick={()=>{this.setState({alertOpen:false})}} color=\"primary\">\r\n                            NO\r\n                        </Button>\r\n                        <Button onClick={\r\n                            ()=>{\r\n                                this.setState({\r\n                                    alertOpen: false\r\n                                })\r\n                                this.props.history.push(\"/mypage\");\r\n                            }\r\n                        } color=\"primary\" autoFocus>\r\n                            YES\r\n                        </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default RoundAir;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\RentCarItem.js",["908","909","910","911","912"],"import React,{Component} from 'react';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport store from '../../../redux/store';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport {URL} from '../../../redux/config';\r\nimport {MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\n\r\nclass RentCarItem extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"RentCarItem constructor\", props);\r\n        this.state={\r\n            memId:'',  \r\n            name:'',\r\n            address: '',\r\n            wishday:'',\r\n            wishtime:'',\r\n            money:'',\r\n            alertOpen: false,\r\n            alertSetOpen: false\r\n        };\r\n    }\r\n\r\n    insertContent = () => {\r\n        let url = URL + \"/wish/insertcontent\";\r\n        let memId = store.getState().loginId;        \r\n        let content = '렌트카,' + this.props.row.name;\r\n        let wishday = this.refs.wishday.value;\r\n        let wishtime = this.refs.wishtime.value;\r\n        let money = this.refs.money.value==''?null:this.refs.money.value;\r\n        \r\n        // console.log(memId);\r\n        // console.log(content);\r\n        // console.log(wishday);\r\n        if(wishday == '' || wishtime == '')\r\n            alert(\"날짜와 시간을 모두 선택해주세요.\");\r\n        else{\r\n            axios.post(url, {memId, content, wishday, wishtime, money\r\n            }).then(res => {\r\n                this.toggle();\r\n                this.setState({\r\n                    alertOpen: true\r\n                })\r\n            }).catch(err=>{\r\n                console.log(\"예약 내용 저장시 오류:\"+err);\r\n            })\r\n        }\r\n    } \r\n\r\n    // modal 함수\r\n    handleOpen = () => {\r\n        if(!store.getState().logged){\r\n            alert(\"로그인이 필요한 서비스입니다.\");\r\n        }\r\n        else{\r\n            this.setState({\r\n                open: true\r\n            })\r\n        }\r\n        \r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            open: false\r\n        })\r\n    };\r\n\r\n    toggle = () => {\r\n        if(!store.getState().logged){\r\n            alert(\"로그인이 필요한 서비스입니다.\");\r\n        }\r\n        else{\r\n            \r\n            this.setState({\r\n                open: !this.state.open\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {row, num}=this.props;\r\n        let opentime = row.opentime.split(\":\")[0] + \":\" + row.opentime.split(\":\")[1];\r\n        let closetime = row.closetime.split(\":\")[0] + \":\" + row.closetime.split(\":\")[1];\r\n\r\n\r\n        return(\r\n            <tr>\r\n                    <td style={{textAlign: 'center', cursor: 'pointer'}} onClick={this.toggle.bind(this)}>{num+1}</td>\r\n                    <td onClick={this.toggle.bind(this)} style={{cursor: 'pointer'}}>{row.name}</td>\r\n                    <td onClick={this.toggle.bind(this)} style={{cursor: 'pointer'}}>{row.address}</td>\r\n                    <td onClick={this.toggle.bind(this)} style={{textAlign: 'center', cursor: 'pointer'}}>{row.phonenum}</td>\r\n                    \r\n                    {/* 렌트카 일정 저장 모달 */}\r\n                    <MDBModal isOpen={this.state.open} toggle={this.toggle} centered className=\"RentAddModal\">\r\n                        <MDBModalHeader toggle={this.toggle} className=\"RentAddModal\">업체 추가정보</MDBModalHeader>\r\n                        <MDBModalBody>\r\n                            <div className=\"RentAddModal\">\r\n                                🚩&nbsp;&nbsp;&nbsp;{row.name}&nbsp;({row.form})\r\n                                    &nbsp;&nbsp;\r\n                                    {row.homepage!=null?<span className=\"fa fa-mail-forward\" style={{color: '#ddd', cursor: 'pointer'}}\r\n                                        onClick={()=>{\r\n                                            window.open(`${row.homepage}`, '_blank');\r\n                                        }}\r\n                                    ></span>:\"\"}\r\n                                    <br/>\r\n                                🚗&nbsp;&nbsp;&nbsp;{row.totalcar}대의 차량 보유<br/>\r\n                                🕐&nbsp;&nbsp;&nbsp;{opentime} ~ {closetime}<br/>\r\n                                <hr/>\r\n                                <b>일정 추가</b><br/>\r\n                                📆&nbsp;&nbsp;대여일\r\n                                <input type=\"date\" class=\"form-control form-control-sm\" ref=\"wishday\"></input>\r\n                                ⏰&nbsp;&nbsp;대여 예정시간\r\n                                <input type=\"time\" class=\"form-control form-control-sm\" ref=\"wishtime\"></input>\r\n                                💰&nbsp;&nbsp;<b>비용</b>\r\n                                <input type=\"text\" class=\"form-control form-control-sm\" ref=\"money\"/><br/>\r\n                            </div>\r\n                        </MDBModalBody>\r\n                        <MDBModalFooter>\r\n                        <MDBBtn color=\"dark-green\" onClick={this.toggle.bind(this)}>Close</MDBBtn>\r\n                        <MDBBtn color=\"primary\" onClick={this.insertContent.bind(this)}>추가</MDBBtn>\r\n                        </MDBModalFooter>\r\n                    </MDBModal>\r\n\r\n                    {/* alert 창 */}\r\n                    <Dialog\r\n                        open={this.state.alertOpen}\r\n                        onClose={()=>{this.setState({alertOpen:false})}}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\">{\"일정 추가 완료\"}</DialogTitle>\r\n                        <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            Mypage로 이동하여 확인하시겠습니까?\r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                        <Button onClick={()=>{this.setState({alertOpen:false})}} color=\"primary\">\r\n                            NO\r\n                        </Button>\r\n                        <Button onClick={\r\n                            ()=>{\r\n                                this.setState({\r\n                                    alertOpen: false\r\n                                })\r\n                                this.props.history.push(\"/mypage\");\r\n                            }\r\n                        } color=\"primary\" autoFocus>\r\n                            YES\r\n                        </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                {/* <Modal\r\n                        aria-labelledby=\"transition-modal-title\"\r\n                        aria-describedby=\"transition-modal-description\"\r\n                        open={this.state.open}\r\n                        onClose={this.handleClose.bind(this)}\r\n                        closeAfterTransition\r\n                        BackdropComponent={Backdrop}\r\n                        BackdropProps={{\r\n                        timeout: 500,\r\n                        }}\r\n                    >\r\n                        <Fade in={this.state.open}>\r\n                        <div className=\"rentcar\">\r\n                            <span>렌트카 일정 저장</span><br/>\r\n                            <input type=\"text\" ref=\"name\" value={row.name}/><br/>\r\n                            <input type=\"text\" ref=\"address\" value={row.address}/><br/><br/>\r\n                            🗓&nbsp;&nbsp;대여일\r\n                            <input type=\"date\" class=\"form-control form-control-sm\" ref=\"wishday\"></input>\r\n                            ⏰&nbsp;&nbsp;대여시작 시간\r\n                            <input type=\"time\" class=\"form-control form-control-sm\" ref=\"wishtime\"></input><br/>\r\n                            <div style={{textAlign: 'center'}}>\r\n                                <button type=\"button\" class=\"btn btn-warning spotmodalBtn\" \r\n                                onClick={this.insertContent.bind(this)}><b>추가</b></button>\r\n                            </div>\r\n                        </div>\r\n                        </Fade>\r\n                </Modal> */}\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RentCarItem;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\tour\\PageComp.js",["913","914","915","916","917","918","919","920","921","922","923","924","925","926","927"],"import React, {Component} from 'react';\r\nimport './TourCss.css';\r\n\r\nclass PageComp extends Component {\r\n\r\n    render() {\r\n        const {area, startPage, endPage, currentPage, totalPage, paginate, category, search, type} = this.props;\r\n        // href={`/tourlist/${area}/${startPage - 1}`}\r\n        // href={`/tourlist/${area}/${endPage + 1}`}\r\n        let prev = startPage > 1 ?\r\n            <li className=\"page-item\">\r\n                <a className=\"page-link\" style={{color: 'black'}}\r\n                   href={(type == \"tour\")\r\n                       ? `/tourlist/${area}/${startPage - 1}`\r\n                       : (type == \"search\")\r\n                           ? `/search/${category}/${search}/${startPage - 1}`\r\n                           : (type == \"share_restaurant\")\r\n                               ? `/share/${startPage - 1}`\r\n                               : \"\"}\r\n                >◀</a>\r\n            </li> : \"\";\r\n\r\n        let next = endPage < totalPage ?\r\n            <li className=\"page-item\">\r\n                <a className=\"page-link\" style={{color: 'black'}}\r\n                   href={(type == \"tour\")\r\n                       ? `/tourlist/${area}/${endPage + 1}`\r\n                       : (type == \"search\")\r\n                           ? `/search/${category}/${search}/${endPage + 1}`\r\n                           : (type == \"share_restaurant\")\r\n                               ? `/share/${endPage + 1}`\r\n                               : \"\"}\r\n                >▶</a>\r\n            </li> : \"\";\r\n\r\n        let page = [];\r\n\r\n        for (let i = startPage; i <= endPage; i++) {\r\n            page.push(i);\r\n        }\r\n\r\n        let pages = page.map(function (num, idx) {\r\n            return (\r\n                <li className=\"page-item\" key={idx}>\r\n                    <a className=\"page-link\"\r\n                       style={{\r\n                           color: num == currentPage ? \"#D1CC38\" : \"black\",\r\n                           fontWeight: num == currentPage ? \"700\" : \"\"\r\n                       }}\r\n                       href={(type == \"tour\")\r\n                           ? `/tourlist/${area}/${num}`\r\n                           : (type == \"search\")\r\n                               ? `/search/${category}/${search}/${num}`\r\n                               : (type == \"share_restaurant\")\r\n                                   ? `/share/${num}`\r\n                                   : \"\"}\r\n                    >{num}</a>\r\n                </li>\r\n            )\r\n        });\r\n\r\n        let pagination = '';\r\n        if (matchMedia(\"screen and (max-width:770px)\").matches) {\r\n            pagination =\r\n                <ul className='pagination pagination-sm' style={{justifyContent: 'center', marginBottom: '100px'}}>\r\n                    {prev}\r\n                    {pages}\r\n                    {next}\r\n                </ul>;\r\n        } else {\r\n            pagination =\r\n                <ul className='pagination' style={{justifyContent: 'center', marginBottom: '100px'}}>\r\n                    {prev}\r\n                    {pages}\r\n                    {next}\r\n                </ul>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {pagination}\r\n                {/* <ul className='pagination' style={{justifyContent: 'center', marginBottom: '100px'}}>\r\n                    {prev}\r\n                    {pages}\r\n                    {next}\r\n\t\t\t    </ul> */}\r\n                {/* <Pagination id=\"tourListPage\" color=\"primary\" count={totalPage} page={currentPage} onChange={this.handleChange.bind(this)}/> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PageComp;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\tour\\Tourintro.js",["928"],"import React,{Component} from 'react';\r\nimport './TourCss.css';\r\nimport udo from '../../../image/Tour_udo.jpg';\r\nimport seogwipo from '../../../image/Tour_seogwipo.jpg';\r\nimport aewol from '../../../image/Tour_aewol.jpg';\r\nimport andeok from '../../../image/Tour_andeok.jpg';\r\nimport daejung from '../../../image/Tour_daejung.jpg';\r\nimport gujwa from '../../../image/Tour_Gujwa.jpg';\r\nimport hangyeong from '../../../image/Tour_hangyeong.jpg';\r\nimport hanrim from '../../../image/Tour_hanrim.jpg';\r\nimport jeju from '../../../image/Tour_jeju.jpg';\r\nimport jocheon from '../../../image/Tour_jocheon.jpg';\r\nimport namwon from '../../../image/Tour_namwon.jpg';\r\nimport pyoseon from '../../../image/Tour_pyoseon.jpg';\r\nimport sungsan from '../../../image/Tour_sungsan.jpg';\r\n\r\nclass Tourintro extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.area = this.props.area;\r\n        this.type = null;\r\n\r\n        if(this.props.type){\r\n            this.type = this.props.type;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let img = this.area===\"jeju\"?<img id=\"jejuImg\" src={jeju} alt=\"\"/>:(this.area===\"jocheon\"?<img id=\"jocheonImg\" src={jocheon} alt=\"\"/>:\r\n            (this.area===\"aewol\"?<img id=\"aewolImg\" src={aewol} alt=\"\"/>:(this.area===\"andeok\"?<img id=\"andeokImg\" src={andeok} alt=\"\"/>:\r\n            (this.area===\"daejung\"?<img id=\"daejungImg\" src={daejung} alt=\"\"/>:(this.area===\"gujwa\"?<img id=\"gujwaImg\" src={gujwa} alt=\"\"/>:\r\n            (this.area===\"hangyeong\"?<img id=\"hangyeongImg\" src={hangyeong} alt=\"\"/>:(this.area===\"hanrim\"?<img id=\"hanrimImg\" src={hanrim} alt=\"\"/>:\r\n            (this.area===\"namwon\"?<img id=\"namwonImg\" src={namwon} alt=\"\"/>:(this.area===\"pyoseon\"?<img id=\"pyoseonImg\" src={pyoseon} alt=\"\"/>:\r\n            (this.area===\"seogwipo\"?<img id=\"seogwipoImg\" src={seogwipo} alt=\"\"/>:(this.area===\"sungsan\"?<img id=\"sungsanImg\" src={sungsan} alt=\"\"/>:\r\n            (this.area===\"udo\"?<img id=\"udoImg\" src={udo} alt=\"\"/>:\"\"))))))))))));\r\n\r\n        let intro = this.area===\"jeju\"?\"제주시\":(this.area===\"jocheon\"?\"조천읍\":(this.area===\"aewol\"?\"애월읍\":(this.area===\"andeok\"?\"안덕면\":\r\n            (this.area===\"daejung\"?\"대정읍\":(this.area===\"gujwa\"?\"구좌읍\":(this.area===\"hangyeong\"?\"한경면\":(this.area===\"hanrim\"?\"한림읍\":\r\n            (this.area===\"namwon\"?\"남원읍\":(this.area===\"pyoseon\"?\"표선면\":(this.area===\"seogwipo\"?\"서귀포시\":(this.area===\"sungsan\"?\"성산읍\":\r\n            (this.area===\"udo\"?\"우도\":\"\"))))))))))));\r\n\r\n        let content = this.area===\"jeju\"?<span>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;제주시는 한반도와 마주 대하는 한라산 북사면의 중앙부에 위치한 관계로 예부터 연륙교통의 중심지로 발달하였을 뿐만 아니라, 모든 도로가 제주시를 중심으로 환상(環狀) 또는 방사상(放射狀)으로 뻗어 있고, 항공과 해운을 연결하는 지역으로, 제주관광의 관문역할을 하고 있다.\r\n            <br/>&nbsp;&nbsp;&nbsp;&nbsp;한라산국립공원을 비롯하여 봉개휴양림관광지·오라관광지구·삼양유원지·무수천유원지·산천단유원지·제주관광타워·사라봉공원·용담도시근린공원·남조봉공원 등 많은 관광자원이 있다. 최근 제주국제공항·제주항 등의 확장공사가 계속 추진되고 있어 국제관광도시로 발돋움하고 있다. 특히 2000년부터 관광객에 대한 무비자 입국이 옛 소련권 국가로까지 확대되어 제주관광산업 활성화 여건을 조성하고 있으며, 특성 있는 관광산업을 육성하고 동북아시아 중심축의 관광·휴양 거점도시로 개발하고 있다.\r\n            </span>\r\n            :(this.area===\"jocheon\"?<span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;동쪽은 구좌읍, 서쪽은 제주시, 남쪽은 서귀포시 남원읍·표선면(表善面)에 접하며, 북부는 제주해협에 면한다. 남쪽으로는 한라산 동쪽 연봉인 사라악(沙羅岳:1,300m)·성널오름[城板岳:1,215m]·괴평이오름(784m)·거문오름(718m) 등 비교적 높은 산이 있으나, 중산간지대(200∼500m)에는 넓은 초지가 발달하여 옛날부터 방목지대로 이용되었다. 교래리(橋來里) 일대에는 제동목장 등 기업목장이 있다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;해안저지대에는 넓은 평지가 발달하여 밭농사를 주로 하며, 주요 농산물로는 고구마·보리·유채·콩 등을 생산한다. 감귤 및 채소 등의 원예작물 재배도 활발하다. 중산간지대까지 버스가 왕래하여 제주시와 동일한 생활권을 형성하고 있다.\r\n                </span>\r\n            :(this.area===\"aewol\"?<span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;동쪽은 제주시, 서쪽은 한림읍, 남쪽은 한라산의 연봉인 붉은오름[赤岳:1,060m]·노로오름[老路岳:1,070m] 등을 사이에 두고 서귀포시·안덕면(安德面)과 접하고, 북쪽은 제주해협에 면한다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;북쪽 저지대에는 넓은 평지가 펼쳐져 있으며, 동귀리(東貴里)·귀일리(貴日里)·구엄리(舊嚴里) 등의 해안 저지대에는 논도 발달하였다. 주요농산물로는 쌀·보리를 비롯하여 고구마·콩·유채·채소 등을 생산하고 있으며, 감귤재배가 활발하다. 넓은 산간지역을 이용한 축산업도 활발하여 시온목장 등 기업목장이 이루어지고 소·돼지·말 등을 사육한다. 애월항은 제주항의 보조항구로서의 구실을 맡고 있으며, 제주시와 동일생활권을 이루고 있다. 교통은 제주시의 시내버스가 운행되고 있어 편리하다.\r\n                </span>\r\n            :(this.area===\"andeok\"?<span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;동쪽은 서귀포시, 서쪽은 대정읍, 북쪽은 돌오름(861m)·왕이매(620m)·당오름(440m) 등을 사이에 두고 제주시 애월읍·한림읍과 경계를 이루며, 남쪽은 바다에 면한다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;광평리(廣坪里)가 500m, 상천리(上川里)가 380m, 동광리(東廣里)가 280m 이상의 고지대에 발달해 있다. 경지면적은 2,653ha로 대부분이 밭농사를 짓고 있으며, 고구마·보리·유채·감자·잡곡 등의 생산이 많고, 감귤 재배도 많이 한다. 해안일주도로, 중문고속화도로, 여러 지방도가 면을 지나서 교통은 편리하다. 화순리(和順里)의 화순항(港)은 천연의 양항이며 화순화력발전소가 있다. 산방산(山房山:395m) 및 부근 용머리의 해안절경, 안덕계곡, 화순해수욕장 등은 관광지로서도 유명하다.\r\n                </span>\r\n            :(this.area===\"daejung\"?<span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;13개 리 및 2개의 부속도서인 가파도(加波島)와 마라도(馬羅島)로 이루어져 있다. 동쪽은 안덕면(安德面), 북쪽은 제주시 한경면(翰京面)과 접하고 서·남쪽은 바다에 면한다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;한라산 정상부에서 멀리 떨어진 남서쪽 사면에 위치하기 때문에 높은 산이 별로 없고, 다른 읍·면과는 달리 전역이 해발고도 200m 이하의 저지대로 이루어져 있다. 모슬봉(慕瑟峰:187m)·가시악(加時岳:123m)·농남봉(農南峰:100m)·송악산(松岳山:84m)·단산(簞山:160m) 등 기생화산이 있다. 농업은 밭농사를 중심으로 고구마·보리·콩·잡곡 등의 생산이 많고, 감귤재배가 성하다. 모슬포항을 중심으로 연근해 어업이 발달하여 통조림공장이 있다. 또한 10여 개의 녹말공장이 있으며, 소규모의 농가별 목장도 있다. 읍소재지인 모슬포는 가파도와 마라도를 연결하는 선박의 기착지로, 본도 서부의 교통요지를 이루고 있으며, 해군·공군 부대가 주둔하고 있다.\r\n                </span>\r\n            :(this.area===\"gujwa\"?<span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;서쪽은 조천읍(朝天邑), 남쪽은 서귀포시 성산읍·표선면(表善面)과 접하고, 동쪽과 북쪽은 남해에 면한다. 1980년 12월 읍으로 승격하였다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;한라산 북동 사면에 위치하여 비교적 낮은 분석구(噴石丘) 등이 분포하며, 하천의 발달은 미약하다. 주요 농산물은 고구마·보리·콩 등이 비교적 많고, 일부지역에서 감귤재배가 이루어지고 있다. 낮은 산간지대에는 넓은 목야지가 발달하여 예로부터 좋은 목장지대가 되고 있다. 동·북부가 바다에 면하고 있는데도 어로·수산양식업은 미미한 편이다.\r\n                </span>\r\n            :(this.area===\"hangyeong\"?<span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;원래는 한림면(翰林面)의 일부였으나, 1956년 한림읍으로 승격되면서 서부 일부가 분리되어 한경면이 되었다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;한라산의 북서사면 가장자리에 위치한 관계로 해발고도 200m 이하의 저지대를 이루어 해안 일주 도로변과 중산간지대(中山間地帶)에 취락이 골고루 발달하였다. 고구마·보리·맥주맥·유채 등을 생산하며, 최근 감귤 수확도 많아졌다. 중산간지대에 많은 초지를 가지고 있어 2개의 공동목장 등 대규모 기업목장이 있다. 신창리(新昌里)와 본도의 가장 서부에 위치한 고산리(高山里)를 중심으로 중산간지대에 버스가 왕래한다. 고산리의 당산봉(唐山峰:148m) 및 차귀도(遮歸島), 황새 도래지 등의 관광지가 있다.\r\n                </span>\r\n            :(this.area===\"hanrim\"?<span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;제주특별자치도 제주시의 서부 지역에 있는 읍이다. 동쪽은 애월읍, 서쪽은 한경면, 남쪽은 서귀포시 안덕면, 북쪽은 바다와 접하고 있다. 남쪽 중산간 지대에는 금오름, 문도지오름 등이 분포해 있고 이시돌목장과 같은 목장이 들어서 있다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;읍사무소는 한림리에 있다. 고려 시대에는 '명월현(明月縣)'이라 했다. 조선 시대에는 제주목 소속의 우면(右面)이었는데, 18세기 후반 신우면과 구우면으로 분리되면서 '구우면(舊右面)'이 되었다. 1915년에는 제주도(濟州島) 구우면이라 했고, 1935년에는 한림면(翰林面)으로 개칭했다. 1956년에 한림면을 폐지하고 한림읍과 한경면으로 분리했다. 읍 소재지인 한림리를 비롯한 15개의 법정리를 관할하고 있다.\r\n                </span>\r\n            :(this.area===\"namwon\"?<span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;서귀포시에서 두번째로 인구가 많은(약 18,000명) 것 치고는 생활환경이 여러모로 부족해 보이는 경우가 있는데, 서귀포시가 바로 옆이고 남조로를 통해서 제주시도 빠르게 갈 수 있기 때문에 읍내에 편의시설등의 발전이 늦었다. 같은 서귀포시 동부권인 표선이나 성산에 비해 관광지가 부족한것도 원인중 하나. 그리고 넓이빨도 많이 작용한다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;1118번 지방도(남조로)를 통해 제주시로 갈 수 있으며, 이외의 서귀포 지역과는 제주일주도로로 연결된다. 한남리에 국가태풍센터가 있다. 남원큰엉, 코코몽에코파크, 신영영화박물관 등의 주요 관광지가 있으며, 남제주체육관이나 구 남제주보건소(현 서귀포 동부보건소) 등 남제주군의 중심으로 육성하려 했던 흔적이 보이나 시군통합으로 물거품. 실제로 시군통합에 가장 많이 반대한 지역이기도 하다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;농업으로는 제주도에서 탑클래스이며, 그래서인지 감귤농사 리즈시절엔 부자가 많았던 지역이다. 서귀포시 지역 내에서도 남원지역, 특히 위미의 감귤은 맛있기로 유명하다. 또한 제주도민의 특성인 무뚝뚝함, 외지인에 대한 경계가 상대적으로 덜해 오히려 선입견을 가졌던 관광객이 어색함을 느낄 정도이다.\r\n                </span>\r\n            :(this.area===\"pyoseon\"?<span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;동부는 천미천(川尾川)을 경계로 성산읍, 서부는 송천(松川)을 경계로 남원읍, 북부는 거문오름(718m)·가문이오름(306m)·백약이오름(311m) 등을 경계로 제주시 조천읍·구좌읍과 접하며, 남부는 남해(南海)에 면해 있다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;해발고도 200∼500m의 중산간지대(中山間地帶)에는 넓은 초지가 발달하여 예로부터 방목지대가 되었고, 지금도 대규모 목장이 있다. 고구마·보리·유채 등의 농작물을 생산하고, 최근 감귤 수확이 늘었다. 정의현(旌義縣)의 치소(治所)였던 성읍리(城邑里)는 민속촌으로 지정되어 관광지가 되었다. 표선리(表善里)를 기점으로 중산간지대에 버스가 왕래한다. 동부산업도로의 포장으로 제주시와의 거리가 1시간대로 단축되어 교통이 편리해졌다.\r\n                </span>\r\n            :(this.area===\"seogwipo\"?<span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;북부에는 한라산과 그 자화산인 기생화산이 솟아 있다. 한라산(1,950m)은 정상 부근에서는 종상화산(鐘狀火山)의 산형(山形)을 형성하여 급한 경사를 이루고, 산록면은 완경사를 이루나, 북사면보다는 약간 경사도가 큰 편이다. 해안저지대는 평지를 이루나, 북사면보다 다소 좁다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;하천은 도내에서는 비교적 잘 발달하여 효돈천·정술내·에이리내·연외천·악근천(岳近川)·큰내·창고천(倉庫川) 등이 남류한다. 이들 하천은 유년기곡(幼年期谷)의 깊은 골짜기를 형성하면서 일부 하천은 하류에서 폭포를 이루고 있는데, 천지연(天地淵)·정방(正房)·천제연(天帝淵) 폭포 등이 유명하다. 특히 정방폭포는 직접 해면으로 낙하하는 것으로 유명하다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;해안은 대부분 조면암질 안산암 및 현무암의 단애가 수직으로 주상절리(柱狀節理)를 이루어 절경을 형성하고, 또 서귀포 앞바다에는 숲섬[森島]·문섬[蚊島]·새섬[茅島]·범섬[虎島] 등 4개의 섬이 해안과 어우러져서 절경을 이룬다. 남쪽 해상에는 한국 최남단의 마라도와 가파도가 자리잡고 있다.\r\n                </span>\r\n            :(this.area===\"sungsan\"?<span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;바다에 면하고, 서쪽으로 천미천(川尾川)을 사이에 두고 표선면(表善面), 북쪽으로 제주시 구좌읍과 접한다.경사가 완만한 한라산 남동쪽 산록에 위치하기 때문에 대부분이 해발고도 200m 이하의 저지를 이루며, 두산봉(斗山峰:146m)·대수산봉(大水山峰:137m)·대왕산(大王山:157m)·일출봉(日出峰:182m)·독자봉(獨子峰:159m)·모구리오름(232m)·궁대악(弓帶岳) 등 산들도 해발고도 200m를 넘는 것이 거의 없다. 농경지는 대부분이 밭으로, 고구마·보리·콩·유채·잡곡 등의 생산이 많다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;성산포항을 중심으로 연근해어업이 발달되어 수산물 냉동이나 해조류 가공 등의 수산가공업이 성하며, 다른 지역과 마찬가지로 10여 개의 소규모 녹말공장이 있다. 남서부에 있는 대정읍과 마찬가지로 대규모 기업목장은 없고 영세목장이 있을 뿐이다. 특히 관광명소인 일출봉의 해돋이는 일대 장관이며, 산기슭에는 일광사(日光寺)가 있고, 해안에는 해적과 왜적을 막기 위해 쌓은 성산성이 있다.\r\n                </span>\r\n            :(this.area===\"udo\"?<span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;우도는 성산 일출봉 남쪽 바다 앞에 떠 있는 섬이다. 성산포에서 3.8km, 여객선으로 10분이면 닿는 거리에 있다. 성산포 일출봉에 갔다가 찾게 되는 곳이 우도다. 면적 6.18km2, 해안선 길이 17km로 제주도의 63개 부속도서 가운데 가장 큰 섬이다. 우도의 경지 면적은 우도 전체 면적의 약 71%로 마늘, 땅콩 등을 재배하고 있다. 또한 해녀들에 의한 해산물 채취가 많이 이루어지고 있다. 우도의 해녀들은 일찍부터 가정 경제를 책임지는 가장으로서 물질을 하기 위해 우리나라 서남 · 동해안뿐만 아니라 중국과 일본 해안까지 진출하기도 했다 한다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;우도는 소가 머리를 내민 모양(牛頭形) 또는 누워 있는 모양(臥牛形)이라 해서 ‘소섬’ 즉 우도로 명명된 곳이나 1900년에는 향교 훈장 오유학이 물에 뜬 두둑이라는 뜻의 ‘연평도’로 개명하여 현재까지 연평리로 불리고 있다. 1986년 4월 1일에 우도면으로 승격되었다. 현재는 4개 행정리에 12개 자연 부락으로 나누어져 있다. 4개 행정리는 천진리, 서광리, 오봉리, 조일리 등이다. 면사무소, 숙박 시설, 종교 시설, 등대박물관, 연평초중학교, 보건소 등의 시설이 있다. 반농반어(半農半漁)의 전형적인 농어촌 마을이다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;남쪽 해안과 북동쪽 탁진포를 제외한 모든 해안에는 해식애가 발달했고, 한라산의 기생화산인 쇠머리오름이 있을 뿐 섬 전체가 하나의 용암대지이며, 고도 30m 이내의 넓고 비옥한 평지이다. 주요 농산물은 고구마 · 보리 · 마늘 등이며, 가축 사육도 활발하다. 부근 해역에서는 고등어 · 갈치 · 전복 등이 많이 잡힌다.\r\n                </span>:\"\"))))))))))));\r\n\r\n        return (\r\n            <div>\r\n                {/* <h4>Tourintro {this.props.area}</h4> */}\r\n                <div id=\"mainImg\">\r\n                    {img}\r\n                    <br/>\r\n                </div>\r\n                {\r\n                    (this.type && this.type == \"search\")\r\n                    ? (\r\n                        \"\"\r\n                    )\r\n                    : (\r\n                        <div>\r\n                            <div className=\"tourIntroTitle\">\r\n                                <span className=\"tourIntroTitleContent\" style={{backgroundColor: 'white', color: '#036E38'}}>\r\n                                    &nbsp;&nbsp;&nbsp;{intro}&nbsp;&nbsp;&nbsp;\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"tourIntroContent\">\r\n                                {content}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tourintro;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\auth\\MakeLoginBtn.js",["929","930","931","932","933"],"import React,{Component} from 'react';\r\nimport { createMuiTheme, withStyles, makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { orange } from '@material-ui/core/colors';\r\n\r\nconst BootstrapButton = withStyles({\r\n    root: {\r\n      boxShadow: 'none',\r\n      textTransform: 'none',\r\n      fontSize: 16,\r\n      padding: '6px 12px',\r\n      border: '1px solid',\r\n      lineHeight: 1.5,\r\n      backgroundColor: '#0063cc',\r\n      borderColor: '#0063cc',\r\n      fontFamily: [\r\n        '-apple-system',\r\n        'BlinkMacSystemFont',\r\n        '\"Segoe UI\"',\r\n        'Roboto',\r\n        '\"Helvetica Neue\"',\r\n        'Arial',\r\n        'sans-serif',\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(','),\r\n      '&:hover': {\r\n        backgroundColor: '#0069d9',\r\n        borderColor: '#0062cc',\r\n        boxShadow: 'none',\r\n      },\r\n      '&:active': {\r\n        boxShadow: 'none',\r\n        backgroundColor: '#0062cc',\r\n        borderColor: '#005cbf',\r\n      },\r\n      '&:focus': {\r\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\r\n      },\r\n    },\r\n  })(Button);\r\n  \r\n  const ColorButton = withStyles((theme) => ({\r\n    root: {\r\n      color: theme.palette.getContrastText(orange[500]),\r\n      backgroundColor: orange[500],\r\n      '&:hover': {\r\n        backgroundColor: orange[700],\r\n      },\r\n    },\r\n  }))(Button);\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    outline: {\r\n      outline: 'none!important',\r\n    },\r\n  }));\r\n  \r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: orange,\r\n    },\r\n  });\r\n  \r\n  export default function CustomizedButtons(props) {\r\n    const classes = useStyles();\r\n    console.log(props);\r\n  \r\n    const parentOnLoginHandler = props.parentOnLoginHandler;\r\n    \r\n    return (\r\n      <div>\r\n        <Button variant=\"outlined\" color=\"primary\" type=\"button\" className={classes.outline}\r\n        onClick={parentOnLoginHandler}>\r\n                    Sign in\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\auth\\KakaoLoginBtnComp3.js",["934"],"import React, { Component } from \"react\";\r\n\r\nconst { Kakao } = window;\r\n\r\nclass KakaoLoginBtnComp3 extends Component {\r\n    // componentDidMount() {\r\n    //     Kakao.init('5b1bc09ea2391d811062370fac0b13dd');\r\n    //     console.log(\"Kakao.isInitialized() : \" + Kakao.isInitialized());\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default KakaoLoginBtnComp3;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\auth\\KakaoLoginBtnComp.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\auth\\FaceBookLoginBtnComp.js",["935"],"import FacebookLogin from \"react-facebook-login\";\r\nimport React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nclass FaceBookLoginBtnComp extends Component {\r\n\r\n    state = {\r\n        isLoggedIn: false,\r\n        id: '',\r\n        name: '',\r\n        email: '',\r\n    }\r\n\r\n    responseFacebook = response => {\r\n        console.log(response);\r\n\r\n        this.setState({\r\n            isLoggedIn:true,\r\n            id: response.id,\r\n            name: response.name,\r\n            email: response.email,\r\n        });\r\n    };\r\n\r\n    componentClicked = () => console.log('clicked');\r\n\r\n    render() {\r\n\r\n        let fbContent;\r\n\r\n        if(this.state.isLoggedIn) {\r\n            fbContent = (\r\n                <div>\r\n                    <h2>{this.state.name}</h2>\r\n                    Email : {this.state.email}\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            fbContent = (\r\n                <FacebookLogin\r\n                    appId=\"513629929622627\"\r\n                    autoLoad={false} // 실행과 동시에 자동으로 로그인 팝업창이 뜸\r\n                    fields=\"name,email.picture\" // 어떤정보를 받아올지 입력하는 필드\r\n                    scope=\"public_profile,user_friends\"\r\n                    onClick={this.componentClicked} // this.바인딩 추가\r\n                    callback={this.responseFacebook} // this.바인딩 추가\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {fbContent}\r\n            </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default FaceBookLoginBtnComp;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\auth\\NaverLoginBtnComp.js",["936","937","938","939","940","941","942","943"],"import { getSuggestedQuery } from '@testing-library/react';\r\nimport React , { Component, useEffect, useState } from 'react';\r\nimport reactDOM from 'react-dom';\r\nimport { refreshTokenSetup } from \"./refreshToken\";\r\nimport { URL, actionType } from \"../../../redux/config\";\r\nimport axios from 'axios';\r\nimport store from \"../../../redux/store\";\r\n\r\n//window에 있는 naver 비구조화 할당하여 선언한다.\r\n//window객체에서 뽑아야 하는 naver 파라미터는 global로\r\n//선언해주지않으면사용이불가한다.\r\nconst { naver } = window;\r\n\r\nfunction NaverLoginBtnComp (props) {\r\n    \r\n    const Login = () => {\r\n        Naver();\r\n        // UserProfile();\r\n    }\r\n\r\n    useEffect(Login, []);\r\n\r\n    const setLoginId = (loginId) => {\r\n        store.dispatch({\r\n            type: actionType.LOG_IN,\r\n            loginId: loginId,\r\n            logged: true\r\n        }); \r\n        \r\n        // 처리후 되돌아갈 곳\r\n        window.location.replace(\"/\");\r\n        \r\n    }\r\n\r\n    //client_id 와 redirect_uri 등록\r\n    //JavaScript용 라이브러리 동작에 필요한 기본정보를 설정하는 코드\r\n\r\n    //사용 가능한 Option\r\n    //color: 버튼 색상. white, green\r\n    //type: 버튼 타입. 1(버튼형), 2(작은 배너), 3(큰 배너)\r\n    //height: 배너 및 버튼 높이 (사용자 지정값 px)\r\n    const Naver = () => {\r\n        \r\n        let naverLogin = new naver.LoginWithNaverId({\r\n            clientId: 'dPXRHN5aH3Xl6lXxm7bn',\r\n            callbackUrl: \"http://localhost:3000/login?naver=true\",\r\n            isPopup: false, // 팝업을 통한 연동처리 여부\r\n            loginButton: {color: \"green\", type: 3, height: 60},\r\n            callbackHandle: true\r\n            // callback 페이지가 분리되었을 경우에 callback 페이지에서는 callback처리를 해줄수 있도록 설정합니다\r\n        });\r\n        \r\n        // 설정정보를 초기화하고 연동을 준비\r\n        naverLogin.init();\r\n    \r\n        console.log(naverLogin.getLoginStatus());\r\n\r\n        // naverLogin.getLoginStatus((status) => {\r\n        //     if (status) {\r\n        //         console.log(status);\r\n        //         const email = naverLogin.user.getEmail();\r\n        //         const name = naverLogin.user.getNickName();\r\n        //         const profileImage = naverLogin.user.getProfileImage();\r\n        //         const id = naverLogin.user.getId();\r\n        //         const hp = naverLogin.user.getMobile();\r\n        //         console.log(\"네이버로그인상태 : \" + name);\r\n                \r\n        //     } else {\r\n        //         console.log('AccessToken이 올바르지 않습니다.');\r\n        //     }\r\n        // });\r\n        \r\n        var el = document.getElementById(\"naverIdLogin\");\r\n\r\n        el.addEventListener('click', function() {\r\n            naverLogin.getLoginStatus(function (status) {\r\n                if (status && naver) {\r\n                    // 필수적으로 받아야하는 프로필 정보가 있다면 callback처리 시점에 체크\r\n                    var email = naverLogin.user.getEmail();\r\n                    var name = naverLogin.user.getNickName();\r\n                    var profileImage = naverLogin.user.getProfileImage();\r\n                    var id = naverLogin.user.getId();\r\n                    var hp = naverLogin.user.getMobile();\r\n                    \r\n                    if( email == undefined || email == null ) {\r\n                        alert(\"이메일은 필수정보입니다. 정보제공을 동의해주세요.\");\r\n                        // 사용자 정보 재동의를 위하여 다시 네아로 동의페이지로 이동함\r\n                        naverLogin.reprompt();\r\n                        return;\r\n                    }\r\n    \r\n                    let url = URL + \"/member/insertsocial\";\r\n    \r\n                    axios.post(url, {id:email.split(\"@\")[0], name:name, provider:id, \r\n                        photo:profileImage, email:email.split(\"@\")[0], email2:'naver.com'})\r\n                            .then(result=>{\r\n                                \r\n                                setLoginId(email.split(\"@\")[0]);\r\n                            }).catch(err=>{\r\n                                console.log(\"naver db 저장 실패 : \" + err);\r\n                            })\r\n                    \r\n                } else {\r\n                    console.log(\"callback 처리에 실패하였습니다.\");\r\n                    console.log(status);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    // const UserProfile = () => {\r\n    //     window.location.href.includes('access_token') && GetUser();\r\n    //     function GetUser() {\r\n    //         console.log(\"window.location.href : \" + window.location.href);\r\n    //         const location = window.location.href.split('=')[1];\r\n    //         console.log(\"로케이션 : \" + location);\r\n    //         console.log(\"로케이션 0번째 : \" + window.location.href.split(\"=\")[0]);\r\n    //         console.log(\"로케이션 길이 : \" + window.location.href.split(\"=\").length);\r\n    //         for (var i=0; i < window.location.href.split(\"=\").length; i = i + 1)\r\n    //         {\r\n    //             console.log(window.location.href.split(\"=\")[i]);\r\n    //         }\r\n    //         var sharpPos = window.location.href.indexOf('#', 0);\r\n    //         console.log(\"# 위치 : \" + sharpPos);\r\n            \r\n    //         var sharpSplit = window.location.href.split(\"#\")[1];\r\n    //         var idxEq = sharpSplit.indexOf(\"=\");\r\n    //         var startPos = idxEq + 1;\r\n    //         var tokenEnd = sharpSplit.indexOf(\"&\");\r\n\r\n    //         const token = sharpSplit.substring(startPos, tokenEnd);\r\n            \r\n    //         console.log(\"token : \" + token);\r\n    //         fetch(`${URL}/account/sign-in`, {\r\n    //             method: \"GET\",\r\n    //             headers : {\r\n    //                 \"Content-type\" : \"application/json\",\r\n    //                 \"Authorization\" : token\r\n    //             },\r\n    //         })\r\n    //         .then(response => response.json())\r\n    //         .then(response => {\r\n    //             console.log(\"데이터 확인 : \" + response.name);\r\n    //             localStorage.setItem(\"access_token\", response.token);\r\n    //             localStorage.setItem(\"nickname\", response.nickname);\r\n    //             localStorage.setItem(\"image\",response.image);\r\n    //             setUserData({\r\n    //                 nickname : response.nickname,\r\n    //                 image : response.image\r\n    //             })\r\n    //         })\r\n    //         .catch(err => console.log(\"err : \", err));\r\n    //     }\r\n    // };\r\n\r\n    return (\r\n        //네이버 아이디로 로그인 버튼 생성\r\n        //자바스크립트용 라이브러리는 네이버 아이디로 로그인 버튼을\r\n        //자동으로 생성해주는 스크립트 기능이 포함되어있습니다.\r\n        //사용 가능한 로그인 버튼은 크기별 3가지 색상별 2가지씩\r\n        //총 6가지가 제공되며 \r\n        //각각 스크립트 내에 loginButton option을 통하여 세팅\r\n        <>\r\n        <div id=\"naverIdLogin\">\r\n            네이버로그인\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NaverLoginBtnComp;\r\n// class NaverLoginBtnComp extends Component\r\n// {\r\n//     // 백엔드에 정보를 저장하기 위해 state에 id, name, provider를 저장함\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             id: '',\r\n//             name: '',\r\n//             provider: '',\r\n//             accessToken: ''\r\n//         }\r\n//     }\r\n\r\n//     render() {\r\n        \r\n        \r\n        \r\n//         return (\r\n//             <>\r\n//             <br />\r\n//             <br />\r\n            \r\n//             </>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default NaverLoginBtnComp;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\auth\\GoogleLogoutBtnComp.js",["944","945","946","947"],"import React , { Component } from 'react';\r\nimport reactDOM from 'react-dom';\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport store from \"../../../redux/store\";\r\nimport { URL, actionType, mainViewType } from \"../../../redux/config\";\r\n\r\nclass GoogleLogoutBtnComp extends Component\r\n{\r\n    \r\n    setGoogleOut = () => {\r\n        console.log(\"구글로 로그아웃했습니다\");\r\n        store.dispatch({\r\n            type: actionType.googleLogout,\r\n            googleOn: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const responseGoogle = (response) => {\r\n            console.log(response);\r\n        }\r\n\r\n        const onSuccess = (res) => {\r\n            alert('Logout 되었습니다');\r\n            this.setGoogleOut();\r\n            alert(\"setGoogleOut() 후 스토어에 저장된 구글로그인 상태 : \" + store.getState().googleOn);\r\n            \r\n            // window.location.href(\"/\");\r\n        }\r\n\r\n        return (\r\n            <>\r\n            <br />\r\n            <br />\r\n            <GoogleLogout\r\n                clientId=\"256166181377-83u2uuteqgosooa3um2i3o36ho1325md.apps.googleusercontent.com\"\r\n                buttonText=\"Logout\"\r\n                onLogoutSuccess={onSuccess}\r\n            />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GoogleLogoutBtnComp;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\auth\\GoogleLoginBtnComp.js",["948","949"],"import React , { Component } from 'react';\r\nimport reactDOM from 'react-dom';\r\nimport GoogleLogin from 'react-google-login';\r\nimport { refreshTokenSetup } from \"./refreshToken\";\r\nimport store from \"../../../redux/store\";\r\nimport { URL, actionType, mainViewType } from \"../../../redux/config\";\r\nimport axios from 'axios';\r\nimport '../join/SignupCss.css';\r\nimport {withRouter } from \"react-router-dom\";\r\n\r\nclass GoogleLoginBtnComp extends Component\r\n{\r\n    // 백엔드에 정보를 저장하기 위해 state에 id, name, provider를 저장함\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            provider: '',\r\n            accessToken: '',\r\n            email: '',\r\n            email2: '',\r\n            photo: '',\r\n        }\r\n    }\r\n\r\n    setLoginId = (loginId) => {\r\n        console.log(\"LoginPage setLoginId()\");\r\n        store.dispatch({\r\n            type: actionType.LOG_IN,\r\n            // mainView: mainViewType.MainPage\r\n            loginId: this.state.id\r\n        });\r\n    }\r\n\r\n    setGoogleOn = () => {\r\n        console.log(\"구글로 로그인했습니다\");\r\n        store.dispatch({\r\n            type: actionType.googleLogin,\r\n            googleOn: true,\r\n            loginId: this.state.email.split(\"@\")[0],\r\n            logged: true\r\n        });\r\n        this.props.history.push(\"/\");\r\n    }\r\n    \r\n    // 로그인에 실패한 경우에는 에러를 넘겨줌 => onFailure함수에서 error 출력\r\n    onFailure = (res) => {\r\n        console.log('[Login failed] res:', res);\r\n    };\r\n\r\n    responseGoogle = (response) => {\r\n        console.log(response);\r\n    }\r\n    \r\n    // 로그인에 성공하면 json을 반환해줌 => onSuccess함수에서 state에 id, name을 저장\r\n    onSuccess = (res) => {\r\n        console.log('[Login Success] 로그인한 사용자:', res);\r\n        // console.log('로그인한 사용자 id : ' +  res.googleId);\r\n\r\n        this.setState({\r\n            id: res.googleId,\r\n            name: res.profileObj.name,\r\n            email: res.profileObj.email,\r\n            email2: 'gmail.com',\r\n            photo: res.profileObj.imageUrl,\r\n        });\r\n        let url = URL + \"/member/insertsocial\";\r\n\r\n        axios.post(url, {id:this.state.email.split(\"@\")[0], name:this.state.name, provider:this.state.id, \r\n            photo:this.state.photo, email:this.state.email.split(\"@\")[0], email2:this.state.email2})\r\n                .then(result=>{\r\n                    \r\n                }).catch(err=>{\r\n                    console.log(\"google db 저장 실패 : \" + err);\r\n                })\r\n\r\n        this.setGoogleOn();\r\n        // alert(\"스토어에 저장된 구글로그인 상태 : \" + store.getState().googleOn);\r\n\r\n        // initializing the setup\r\n        refreshTokenSetup(res);\r\n        };\r\n\r\n        // 로그인에 실패한 경우에는 에러를 넘겨줌 => onFailure함수에서 error 출력\r\n        onFailure = (res) => {\r\n            console.log('[Login failed] res:', res);\r\n        };\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"googleLogin\">\r\n            <GoogleLogin\r\n                clientId=\"256166181377-83u2uuteqgosooa3um2i3o36ho1325md.apps.googleusercontent.com\"\r\n                buttonText=\"구글 아이디로 로그인\"\r\n                onSuccess={this.onSuccess.bind(this)}\r\n                onFailure={this.onFailure.bind(this)}\r\n                cookiePolicy={'single_host_origin'}\r\n                // isSignedIn={true}\r\n            />\r\n            </div>\r\n        );\r\n    };\r\n\r\n}\r\n\r\nexport default withRouter(GoogleLoginBtnComp);","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\SharePlan\\SharePlanRoot.js",["950"],"import React, {Component} from \"react\";\r\nimport SharePlanSub from './SharePlanSub';\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\nimport './SharePlanCss.css';\r\n\r\nclass SharePlanRoot extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        //console.log(\"SharePlanRoot constructor\", props);\r\n\r\n        this.state={\r\n            clist:[],\r\n            //groupNum: this.props.row.groupNum\r\n        }\r\n        \r\n    }\r\n\r\n    // getList=()=>{\r\n    //     let url=URL+\"/plan/list\";\r\n    //     axios.get(url)\r\n    //     .then(res=>{\r\n    //         this.setState({\r\n    //             list:res.data\r\n    //         });\r\n    //     }).catch(err=>{\r\n    //         console.log(\"리스트 오류:\"+err);\r\n    //       })\r\n    // }\r\n\r\n    // componentDidMount(){\r\n    //     this.getList();\r\n    // }\r\n\r\n    getGroupData=()=>{\r\n        let url=URL+\"/plan/groupdata?groupnum=\"+this.props.row.groupNum;\r\n        console.log(\"그룹넘버 : \" + this.props.row.groupNum);\r\n        axios.get(url)\r\n        .then(res=>{\r\n            console.log(res.data);\r\n\r\n            this.setState({\r\n                clist:res.data\r\n            });\r\n        }).catch(err=>{\r\n            console.log(\"목록 오류:\"+err);\r\n          })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getGroupData();\r\n    }\r\n\r\n\r\n    \r\n    \r\n    render(){\r\n        const {row}=this.props.row;\r\n       // const {list}=this.props;\r\n        const {day}=this.props.day;\r\n        //const {list}=this.props.list\r\n        // var wishday=row.wishday;\r\n        // var title=row.title;\r\n        return(\r\n            <div className=\"slide-list-item\">\r\n                {/* {row.groupNum} */}\r\n                {this.state.clist.map((row)=>(\r\n                    <SharePlanSub row={row} day={day}></SharePlanSub>\r\n                ))}\r\n                {/* <SharePlanSub glist={this.state.glist}></SharePlanSub> */}\r\n                \r\n\r\n                \r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SharePlanRoot;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\SharePlan\\SharePlanList.js",["951","952","953","954","955","956","957","958","959","960","961","962","963","964"],"import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\nimport SharePlanListData from \"./SharePlanListData\";\r\nimport {URL} from \"../../../redux/config\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport HotelIcon from '@material-ui/icons/Hotel';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass SharePlanList extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        //console.log(\"SharePlanPageComp constructor\", props);\r\n\r\n        this.state={\r\n            list:[]\r\n        }\r\n\r\n\r\n\r\n    \r\n    }\r\n\r\n    getPlan=()=>{\r\n        let url=URL+\"/plan/groupnum\";\r\n\r\n        axios.get(url)\r\n        .then(res=>{\r\n            this.setState({\r\n                list:res.data\r\n                \r\n            });\r\n        }).catch(err=>{\r\n            console.log(\"리스트 num 오류:\"+err);\r\n          })\r\n\r\n    }\r\n\r\n    // getPlanCount=()=>{\r\n    //     let url=URL+\"/plan/plancount?groupnum=\"+this.props.row.groupNum;\r\n\r\n    //     axios.get(url)\r\n    //     .then(res=>{\r\n    //       //console.log(\"데이터 ; \" + res.data);\r\n    //         this.setState({\r\n    //             list:res.data\r\n                \r\n    //         });\r\n    //     }).catch(err=>{\r\n    //         console.log(\"리스트 갯수 오류:\"+err);\r\n    //       })\r\n    // }\r\n\r\n\r\n    componentDidMount(){\r\n        this.getPlan();\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"react-out\">\r\n                {this.state.list.map((row,idx)=>(\r\n                    <SharePlanListData row={row} idx={row.groupNum}></SharePlanListData>\r\n                ))}   \r\n    \r\n      \r\n      \r\n    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SharePlanList;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\tour\\ItemComp.js",["965","966"],"import React,{Component} from 'react';\r\nimport './TourCss.css';\r\nimport Box from '@material-ui/core/Box';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport axios from 'axios';\r\nimport {URL} from '../../../redux/config';\r\n\r\nclass ItemComp extends Component {\r\n\r\n    updateLikes = () =>{\r\n        let url = URL + \"/spot/updatelikes?contentsid=\" + this.props.row.contentsid;\r\n\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.props.getList();\r\n            }).catch(err=>{\r\n                console.log(\"tourlist likes 업데이트 오류 : \" + err);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const {row}=this.props;\r\n        const addr = row.roadaddr!=null?row.roadaddr.split(\" \"):row.addr!=null?row.addr.split(\" \"):\"\";\r\n        \r\n        return (\r\n\r\n            <Box m={1} id=\"itemBox\">\r\n                <div style={{cursor: 'pointer'}} onClick={\r\n                    ()=>{\r\n                        this.props.history.push(\"/tour/\" + row.contentsid);\r\n                    }\r\n                }>\r\n                    <img id=\"itemImg\" src={row.thumbnail} alt=\"\"></img><br/>\r\n                    <div id=\"itemTitle\" style={{whiteSpace:'nowrap', textOverflow:'ellipsis', overflow:'hidden'}}>\r\n                        <b style={{color:'#888'}}>{row.title}</b><br/>  \r\n                    </div>\r\n                    <div id=\"itemContentDiv\">\r\n                        <p id=\"itemContent\" style={{fontWeight:'500', color:'#888', overflow:'hidden'}}>{row.introduction}</p>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div id=\"itemLikes\" style={{backgroundColor:'#FaFaFa', color:'#aaa'}}>\r\n                    <ThumbUpAltIcon id=\"tourThumbIcon\" style={{cursor: 'pointer'}} onClick={this.updateLikes.bind(this)}/>&nbsp;&nbsp;{row.likes}\r\n                    {/* <span id=\"itemAddr\" style={{float:'right', overflow:'hidden', whiteSpace:'nowrap', textOverflow:'ellipsis'}}>\r\n                        <LocationOnIcon id=\"tourLocationIcon\"/>&nbsp;{addr[addr.length-2]}&nbsp;{addr[addr.length-1]}\r\n                    </span> */}\r\n                    <span style={{float:'right'}}><span class=\"fas fa-star\" style={{color: \"#F0CD58\"}}></span>&nbsp;{row.star}</span>\r\n                </div>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemComp;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\SharePlan\\ChatRoomItem.js",["967","968","969","970","971","972"],"import React, {Component} from \"react\";\r\nimport './Chat.css';\r\nimport axios from 'axios';\r\nimport {actionType, URL} from \"../../../redux/config\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport gsap, {Quint, TweenMax} from \"gsap\";\r\nimport profileImg_temp from \"../../../image/noProfile.png\";\r\nimport store from \"../../../redux/store\";\r\nimport ChattingLogic from \"../../../ChattingLogic\";\r\n\r\nclass ChatRoomItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"ChatRoomItem props\", props);\r\n\r\n        this.state = {\r\n            friend: this.props.friend,\r\n            num: this.props.row.num,\r\n        }\r\n    }\r\n\r\n    onClickChattingRoom = (row) => {\r\n        console.log(row);\r\n        /*let chat = new ChattingLogic();\r\n        let unsubscribe = store.subscribe(() => {\r\n            if (store.getState().publishFunctionMsg == \"setSelectedRoomNum\") {\r\n                chat.getMsgList((res) => {\r\n                    console.log(\"click th chatting.\", res);\r\n                    gsap.to(\".containerRoot\", {\r\n                        scrollTrigger: \".containerRoot\",\r\n                        x: -500,\r\n                        duration: 1,\r\n                        ease: Quint.easeInOut,\r\n                    });\r\n                });\r\n\r\n                // //release.\r\n                // store.dispatch({\r\n                //     type: actionType.publishFunctionMsg,\r\n                //     publishFunctionMsg: \"\",\r\n                // });\r\n\r\n                unsubscribe();\r\n            }\r\n        });*/\r\n        gsap.to(\".containerRoot\", {\r\n            scrollTrigger: \".containerRoot\",\r\n            x: -500,\r\n            duration: 1,\r\n            ease: Quint.easeInOut,\r\n        });\r\n\r\n        window.setTimeout(()=>{\r\n            //div.container div#chattingBoard\r\n            let chattingBoard = document.getElementById(\"chattingBoard\");\r\n            console.log(\"setScrollBottom()\", chattingBoard);\r\n\r\n            if (chattingBoard) {\r\n                chattingBoard.scrollTo(0, chattingBoard.scrollHeight);\r\n            }\r\n        },500);\r\n\r\n        store.dispatch({\r\n            type: actionType.setSelectedRoomNum,\r\n            selectedRoomNum: Number(row.num),\r\n            selectedFriend: this.state.friend,\r\n        });\r\n\r\n        store.dispatch({\r\n            type: actionType.publishFunctionMsg,\r\n            publishFunctionMsg: \"setSelectedRoomNum\",\r\n        });\r\n\r\n        store.dispatch({\r\n            type: actionType.publishFunctionMsg,\r\n            publishFunctionMsg: \"changeChatAction\",\r\n        });\r\n    }\r\n\r\n    render() {\r\n        /* row\r\n        lastMsg: \"네그럼 오늘 일찍 집에 가세요  ㅃ\"\r\n        num: \"33\"\r\n        user1: \"yangyk7364\"\r\n        user2: \"sanghee\"\r\n        * */\r\n        const {row, idx} = this.props;\r\n        let profileImg = profileImg_temp;\r\n\r\n        return (\r\n            <table>\r\n                <tr>\r\n                    <th className='profileImg'\r\n                        onClick={this.onClickChattingRoom.bind(this, row)}\r\n                    >\r\n                        <img src={profileImg} className=\"profileImg\"/>\r\n                    </th>\r\n                    <th className='room'\r\n                        onClick={this.onClickChattingRoom.bind(this, row)}\r\n                    >\r\n                        <div>\r\n                            <b>\r\n                                {this.props.friend}\r\n                            </b>\r\n                            <br/>\r\n                            {row.lastMsg}\r\n                        </div>\r\n                    </th>\r\n                    <th className='go'>\r\n                        <button type='button' onClick={\r\n                            () => {\r\n                                console.log(\"click button chatting.\");\r\n                                // url은 유지한 채로 채팅 창 내 변화만 허용.\r\n                                // tr 전체를 눌렀을때 채팅방 이동.\r\n                                // this.props.history.push('/chattingroom/' + row.num);\r\n                            }\r\n                        }>버튼\r\n                        </button>\r\n                    </th>\r\n                </tr>\r\n            </table>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(ChatRoomItem);\r\n\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\Weather.js",["973","974","975","976","977","978","979","980","981","982","983","984","985"],"/*global kakao*/\r\nimport React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport store from \"../../../redux/store\";\r\nimport { URL, actionType } from \"../../../redux/config\";\r\nimport ReactAnimatedWeather from 'react-animated-weather';\r\nimport OPENNURI from \"../../../image/img_opentype01.png\";\r\nimport ColorSkycons, { ColorSkyconsType } from 'react-color-skycons'\r\n\r\n// ReactAnimatedWeather\r\nconst defaults = {\r\n    icon: 'CLEAR_DAY',\r\n    color: 'goldenrod',\r\n    size: 64,\r\n    animate: true\r\n};\r\n// 리액트AnimatedWeather\r\n\r\n// ColorSkycons\r\nconst svgProps = {\r\n    style: { backgroundColor: 'blue' },\r\n}\r\n// ColorSkycons\r\n\r\n// 날짜\r\nlet today = new Date();\r\nlet year = today.getFullYear(); // 년도\r\nlet month = today.getMonth() + 1; // 월\r\nlet date = today.getDate(); // 날짜\r\n\r\nlet hours = today.getHours(); // 시\r\nmonth = month < 10 ? '0' + month : month;\r\ndate = date < 10 ? '0' + date : date;\r\nhours = hours < 10 ? '0' + hours : hours;\r\nlet callHour = String(24 * 8); // 8일\r\n// 날짜\r\n\r\n// 위치가져오기관련정보\r\nlet geo_options = {\r\n    enableHighAccuracy: true,\r\n    maximumAge        : 30000,\r\n    timeout           : 27000  \r\n};\r\n// 위치가져오기관련정보\r\n\r\n// LCC DFS 좌표변환을 위한 기초 자료\r\nlet RE = 6371.00877; // 지구 반경 (km)\r\nlet GRID = 5.0; // 격자 간격 (km)\r\nlet SLAT1 = 30.0; // 투영 위도1(degree)\r\nlet SLAT2 = 60.0; // 투영 위도2(degree)\r\nlet OLON = 126.0; // 기준점 경도 (degree)\r\nlet OLAT = 38.0; // 기준점 위도 (degree)\r\nlet XO = 43; // 기준점 X좌표 (GRID)\r\nlet YO = 136; // 기준점 Y좌표 (GRID)\r\n// LCC DFS 좌표변환을 위한 기초 자료\r\n\r\n// LCC DFS 좌표변환 ( code : \"toXY\"(위경도->좌표, v1:위도, v2:경도), \"toLL\"(좌표->위경도, v1:x, v2:y) )\r\n\r\nclass Weather extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"Weather class 생성자\", props);\r\n        \r\n        store.subscribe(function() {\r\n            // console.log(\"날씨 클래스 생성자에서 state 변경에 대한 변화를 구독합니다 변화를 확인했습니다 store에서 weatherInfo 값을 가져와 첫번째 courseAreaName을 보여줍니다 : \" + store.getState().weatherInfo[0].courseName);\r\n        }.bind(this));\r\n\r\n        \r\n        // 리덕스스토어에구독한다\r\n        \r\n        // 리덕스를 안쓰고 클래스 내부 state를 씁니다\r\n        this.state = {\r\n            // c_tm: [], // 동네예보 예보 시각\r\n            // c_courseAreaName: [], // 코스 지역이름\r\n            // c_spotAreaName: [], // 관광지점 지역이름\r\n            // c_courseName: [], // 관광코스 명\r\n            // c_thema: [], // 관광지 명\r\n            // c_th3: [], // 일 3시간 기온\r\n            // c_maxTa: [], // 최고 기온\r\n            // c_minTa: [], //최저 기온\r\n            // c_wd: [], // 풍향\r\n            // c_ws: [], // 풍속\r\n            // c_sky: [], // 하늘상태\r\n            // c_rhm: [], // 습도\r\n            // c_pop: [], // 강수확률\r\n            // c_rn: [], // 강수량\r\n            c_weatherInfo: [], // 전체 날씨 정보1,\r\n            c_weatherInfo_2: [], // 전체 날씨 정보2\r\n            c_weatherInfo_3: [], // 초단기실황조회 전체 날씨 정보3\r\n            c_weatherInfo_4: [], // 초단기실황조회_2 전체 날씨 정보4\r\n            c_weatherInfo_5: [], // 초단기예보조회 전체 날씨 정보5\r\n            c_weatherInfo_6: [], // 동네예보조회 전체 날씨 정보6\r\n            jejuGridList: [], // 초기 리스트는 비어있습니다.\r\n            time: '',\r\n            selectBoxValue: '?',\r\n            c_latitude: '', // 현재|선택 위도\r\n            c_longitude: '', // 현재|선택 \r\n            c_address: '', // 구주소|도로명주소\r\n        };\r\n        // 리덕스를 안쓰고 클래스 내부 state를 씁니다\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.getWeatherList();\r\n        this.getWeatherList_2();\r\n        // this.getWeatherList_3();\r\n        this.getLocation();\r\n        this._getJejuGridList();\r\n    }\r\n    \r\n    getWeatherList = () => {\r\n        /*\r\n        let url = 'http://apis.data.go.kr/1360000/TourStnInfoService/getTourStnVilageFcst';\r\n        let queryParams = '?' + encodeURIComponent('ServiceKey') + '=' + 'ijFCZNWcCKbWGchBc5vZ%2F%2FXIG5vnZeeOgt1m23u3U0BXhc8dVvq%2BdymzHUQDmarDgb0XcV%2BV7gmzgn9T3JSsZQ%3D%3D';\r\n        queryParams += '&' + encodeURIComponent('pageNo') + '=' + encodeURIComponent('1');\r\n        queryParams += '&' + encodeURIComponent('numOfRows') + '=' + encodeURIComponent('10');\r\n        queryParams += '&' + encodeURIComponent('dataType') + '=' + encodeURIComponent('JSON');\r\n        let today = new Date();\r\n        \r\n        let year = today.getFullYear(); // 년도\r\n        let month = today.getMonth() + 1; // 월\r\n        let date = today.getDate(); // 날짜\r\n        let day = today.getDay(); // 요일\r\n        \r\n        let hours = today.getHours(); // 시\r\n        month = month < 10 ? '0' + month : month;\r\n        date = date < 10 ? '0' + date : date;\r\n        hours = hours < 10 ? '0' + hours : hours;\r\n        // document.write(year+month+date+hours);\r\n        queryParams += '&' + encodeURIComponent('CURRENT_DATE') + '=' + encodeURIComponent(year+month+date+hours);\r\n        let callHour = String(24 * 8); // 8일\r\n        queryParams += '&' + encodeURIComponent('HOUR') + '=' + encodeURIComponent(callHour); // CURRENT_DATE부터 8일 후까지의 자료 호출\r\n        queryParams += '&' + encodeURIComponent('COURSE_ID') + '=' + encodeURIComponent('1'); // 관광 코스ID\r\n        \r\n        url = url + queryParams;\r\n        \r\n        axios.get(url)\r\n        .then((response) => {\r\n            console.log(response);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n            */\r\n           \r\n        var url = 'http://apis.data.go.kr/1360000/TourStnInfoService/getTourStnVilageFcst';\r\n        var queryParams = '?' + encodeURIComponent('ServiceKey') + '=' + 'ijFCZNWcCKbWGchBc5vZ%2F%2FXIG5vnZeeOgt1m23u3U0BXhc8dVvq%2BdymzHUQDmarDgb0XcV%2BV7gmzgn9T3JSsZQ%3D%3D';\r\n        queryParams += '&' + encodeURIComponent('pageNo') + '=' + encodeURIComponent('1');\r\n        queryParams += '&' + encodeURIComponent('numOfRows') + '=' + encodeURIComponent('8'); // 한 페이지 결과 수\r\n        queryParams += '&' + encodeURIComponent('dataType') + '=' + encodeURIComponent('json');\r\n        queryParams += '&' + encodeURIComponent('CURRENT_DATE') + '=' + encodeURIComponent(year+month+date+hours);\r\n        queryParams += '&' + encodeURIComponent('HOUR') + '=' + encodeURIComponent(callHour); // CURRENT_DATE부터 8일 후까지의 자료 호출\r\n        queryParams += '&' + encodeURIComponent('COURSE_ID') + '=' + encodeURIComponent('50'); // 관광 코스ID\r\n        console.log(\"/getTourStnVilageFcst\" + queryParams);\r\n        \r\n        // 아래 url이 중간부터 있는 이유는 package.json 에\r\n        // \"proxy\": \"http://apis.data.go.kr/1360000\",\r\n        // 저것을 미리 세팅해두었기 때문입니다.\r\n        // axios.get(\"/getTourStnVilageFcst\" + queryParams)\r\n        axios.get(\"/TourStnInfoService/getTourStnVilageFcst\" + queryParams)\r\n        .then(res => {\r\n                console.log(\"기상청 리턴값 res:\", res);\r\n                console.log(\"기상청 리턴값 res.data.response.body.items.item:\", res.data.response.body.items.item);\r\n                \r\n                // 날씨클래스 내부 state에 정보 저장한다\r\n                this.setState({\r\n                    c_weatherInfo: res.data.response.body.items.item,\r\n                });\r\n                // console.log(res.data);\r\n                // 날씨클래스 내부 state에 정보 저장한다\r\n\r\n                // 리덕스스토어에 액션함수를 보낸다\r\n                let reduxWeather = res.data.response.body.items.item;\r\n                \r\n                store.dispatch({\r\n                    type: actionType.weatherUpdate,\r\n                    weatherInfo: reduxWeather,\r\n                });\r\n                // 리덕스스토어에 액션함수를 보낸다\r\n                \r\n                // 로컬스토리지에 String으로 변경해 저장한다\r\n                localStorage.setItem(\"weather_1\", JSON.stringify(res.data));\r\n                // 로컬스토리지에 String으로 변경해 저장한다\r\n            })\r\n            .catch(err => {\r\n                console.log(\"기상청 리턴값 err:\", err);\r\n            });\r\n        }\r\n        \r\n        getWeatherList_2 = () => {\r\n        \r\n        let url_2 = 'http://apis.data.go.kr/1360000/TourStnInfoService/getTourStnWthrIdx';\r\n        let queryParams_2 = '?' + encodeURIComponent('ServiceKey') + '=' + 'ijFCZNWcCKbWGchBc5vZ%2F%2FXIG5vnZeeOgt1m23u3U0BXhc8dVvq%2BdymzHUQDmarDgb0XcV%2BV7gmzgn9T3JSsZQ%3D%3D';\r\n        queryParams_2 += '&' + encodeURIComponent('pageNo') + '=' + encodeURIComponent('1'); // 페이지번호\r\n        queryParams_2 += '&' + encodeURIComponent('numOfRows') + '=' + encodeURIComponent('8'); // 한 페이지 결과 수\r\n        queryParams_2 += '&' + encodeURIComponent('dataType') + '=' + encodeURIComponent('JSON');\r\n        queryParams_2 += '&' + encodeURIComponent('CURRENT_DATE') + '=' + encodeURIComponent(year+month+date+hours); // 현재시각\r\n        queryParams_2 += '&' + encodeURIComponent('HOUR') + '=' + encodeURIComponent(callHour); // CURRENT_DATE부터 8일 후까지의 자료 호출\r\n        queryParams_2 += '&' + encodeURIComponent('COURSE_ID') + '=' + encodeURIComponent('50'); // 관광 코스ID\r\n        \r\n        console.log(\"/getTourStnWthrIdx\" + queryParams_2);\r\n        \r\n        // axios.get(\"/getTourStnWthrIdx\" + queryParams_2)\r\n        axios.get(\"/TourStnInfoService/getTourStnWthrIdx\" + queryParams_2)\r\n        .then(res2 => {\r\n            console.log(\"기상청 리턴값_2 res2 : \" + res2);\r\n                console.log(\"기상청 리턴값_2 res2.data.response.body.items.item : \" + res2.data.response.body.items.item);\r\n                \r\n                // 날씨클래스 내부 state에 정보 저장한다\r\n            this.setState({\r\n                c_weatherInfo_2: res2.data.response.body.items.item,\r\n            });\r\n            // 날씨클래스 내부 state에 정보 저장한다\r\n\r\n            // 리덕스스토어에 액션함수를 보낸다\r\n            let reduxWeather_2 = res2.data.response.body.items.item;\r\n            \r\n            store.dispatch({\r\n                type: actionType.weatherUpdate,\r\n                weatherInfo_2: reduxWeather_2,\r\n            });\r\n            // 리덕스스토어에 액션함수를 보낸다\r\n            \r\n            //로컬스토리지에 String으로 변경해 저장한다\r\n            localStorage.setItem(\"weather_2\", JSON.stringify(res2.data));\r\n            //로컬스토리지에 String으로 변경해 저장한다\r\n        })\r\n        .catch(err => {\r\n            console.log(\"기상청 리턴값_2 err_2 : \", err);\r\n        });\r\n    }\r\n    \r\n    getWeatherList_3 = () => {\r\n\r\n        let url_3 = 'http://apis.data.go.kr/1360000/VilageFcstInfoService/getUltraSrtNcst';\r\n        let queryParams_3 = '?' + encodeURIComponent('ServiceKey') + '=' + 'ijFCZNWcCKbWGchBc5vZ%2F%2FXIG5vnZeeOgt1m23u3U0BXhc8dVvq%2BdymzHUQDmarDgb0XcV%2BV7gmzgn9T3JSsZQ%3D%3D';\r\n        queryParams_3 += '&' + encodeURIComponent('pageNo') + '=' + encodeURIComponent('1');\r\n        queryParams_3 += '&' + encodeURIComponent('numOfRows') + '=' + encodeURIComponent('8');\r\n        queryParams_3 += '&' + encodeURIComponent('dataType') + '=' + encodeURIComponent('JSON');\r\n        queryParams_3 += '&' + encodeURIComponent('base_date') + '=' + encodeURIComponent(year+month+date); // 발표일자\r\n        queryParams_3 += '&' + encodeURIComponent('base_time') + '=' + encodeURIComponent('0600'); // 발표시각 06시 발표(정시단위)\r\n        queryParams_3 += '&' + encodeURIComponent('nx') + '=' + encodeURIComponent('56'); // 예보지점 X 좌표값\r\n        queryParams_3 += '&' + encodeURIComponent('ny') + '=' + encodeURIComponent('33'); // 예보지점 Y 좌표\r\n        console.log(\"/getUltraSrtNcst\" + queryParams_3);\r\n        \r\n        axios.get(\"/VilageFcstInfoService/getUltraSrtNcst\" + queryParams_3)\r\n        .then(res3 => {\r\n            console.log(\"기상청 리턴값_3 res3.data.response.body.items.item : \" + res3.data.response.body.items.item);\r\n                \r\n            // 날씨클래스 내부 state에 정보 저장한다.\r\n            this.setState({\r\n                    c_weatherInfo_3: res3.data.response.body.items.item, \r\n                });\r\n                // 날씨클래스 내부 state에 정보 저장한다.\r\n                \r\n                // 리덕스스토어에 액션함수를 보낸다\r\n                let reduxWeather_3 = res3.data.response.body.items.item;\r\n                \r\n                store.dispatch({\r\n                    type: actionType.weatherUpdate,\r\n                    weatherInfo_3: reduxWeather_3,\r\n                });\r\n                // 리덕스스토어에 액션함수를 보낸다\r\n                \r\n                //로컬스토리지에 String으로 변경하여 저장한다\r\n                localStorage.setItem(\"weather_3\", JSON.stringify(res3.data));\r\n                //로컬스토리지에 String으로 변경하여 저장한다\r\n            })\r\n            .catch(err => {\r\n                console.log(\"기상청 리턴값_3 err_3 : \" + err);\r\n            });\r\n        }\r\n        \r\n    getLocation = () => {\r\n        if(navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(this.locationSuccess, this.locationError, geo_options);\r\n        }else{\r\n            console.log(\"지오 로케이션 없음\");\r\n        }\r\n    };\r\n    \r\n    locationSuccess = (p) => {\r\n        var latitude = p.coords.latitude,\r\n        longitude = p.coords.longitude;\r\n        this.setState({\r\n            c_latitude: latitude,\r\n            c_longitude: longitude,\r\n        });\r\n        console.log(\"현재 위도 : \" + latitude +\", 현재 경도 : \" + longitude);\r\n        \r\n        // 주소-좌표 변환 객체를 생성합니다\r\n        var geocoder = new kakao.maps.services.Geocoder();\r\n\r\n        var coord = new kakao.maps.LatLng(latitude, longitude);\r\n        var callback = (result, status) => {\r\n            if (status === kakao.maps.services.Status.OK) {\r\n                console.log('현재 있는 곳 위도와 경도를 주소로 변환하면 : ' + result[0].address.address_name + ' 입니다');\r\n                this.setState({\r\n                    c_address: result[0].address.address_name,\r\n                });\r\n            }\r\n        };\r\n    \r\n        // 좌표 값에 해당하는 구 주소와 도로명 주소 정보를 요청한다.\r\n        geocoder.coord2Address(coord.getLng(), coord.getLat(), callback);\r\n        \r\n        var rs = this.dfs_xy_conv(\"toXY\",latitude,longitude);\r\n        \r\n        // 위도/경도 -> 기상청 좌표x / 좌표 y 변환\r\n        this.xml2jsonCurrentWth(rs.nx, rs.ny);\r\n    }\r\n    \r\n    locationError = (error) => {\r\n        var errorTypes = {\r\n            0 : \"에러 내용확인안됨\",\r\n            1 : \"허용을 안눌렀습니다\",\r\n            2 : \"위치가 안잡힙니다\",\r\n            3 : \"응답시간이 지났습니다\"\r\n        };\r\n        var errorMsg = errorTypes[error.code];\r\n        console.log(errorMsg);\r\n    }\r\n    \r\n    dfs_xy_conv = (code, v1, v2) => {\r\n        var DEGRAD = Math.PI / 180.0;\r\n        var RADDEG = 180.0 / Math.PI;\r\n        \r\n        var re = RE / GRID;\r\n        var slat1 = SLAT1 * DEGRAD;\r\n        var slat2 = SLAT2 * DEGRAD;\r\n        var olon = OLON * DEGRAD;\r\n        var olat = OLAT * DEGRAD;\r\n\r\n        var sn = Math.tan(Math.PI * 0.25 + slat2 * 0.5) / Math.tan(Math.PI * 0.25 + slat1 * 0.5);\r\n        sn = Math.log(Math.cos(slat1) / Math.cos(slat2)) / Math.log(sn);\r\n        var sf = Math.tan(Math.PI * 0.25 + slat1 * 0.5);\r\n        sf = Math.pow(sf, sn) * Math.cos(slat1) / sn;\r\n        var ro = Math.tan(Math.PI * 0.25 + olat * 0.5);\r\n        ro = re * sf / Math.pow(ro, sn);\r\n        var rs = {};\r\n        if (code == \"toXY\") {\r\n            \r\n            rs['lat'] = v1;\r\n            rs['lng'] = v2;\r\n            var ra = Math.tan(Math.PI * 0.25 + (v1) * DEGRAD * 0.5);\r\n            ra = re * sf / Math.pow(ra, sn);\r\n            var theta = v2 * DEGRAD - olon;\r\n            if (theta > Math.PI) theta -= 2.0 * Math.PI;\r\n            if (theta < -Math.PI) theta += 2.0 * Math.PI;\r\n            theta *= sn;\r\n            rs['nx'] = Math.floor(ra * Math.sin(theta) + XO + 0.5);\r\n            rs['ny'] = Math.floor(ro - ra * Math.cos(theta) + YO + 0.5);\r\n        }\r\n        else {\r\n            rs['nx'] = v1;\r\n            rs['ny'] = v2;\r\n            var xn = v1 - XO;\r\n            var yn = ro - v2 + YO;\r\n            ra = Math.sqrt(xn * xn + yn * yn);\r\n            if (sn < 0.0) ra = -ra;\r\n            var alat = Math.pow((re * sf / ra), (1.0 / sn));\r\n            alat = 2.0 * Math.atan(alat) - Math.PI * 0.5;\r\n            \r\n            if (Math.abs(xn) <= 0.0) {\r\n                theta = 0.0;\r\n            }\r\n            else {\r\n                if (Math.abs(yn) <= 0.0) {\r\n                    theta = Math.PI * 0.5;\r\n                    if (xn < 0.0) theta = -theta; \r\n                }\r\n                else theta = Math.atan2(xn, yn);\r\n            }\r\n            var alon = theta / sn + olon;\r\n            rs['lat'] = alat * RADDEG;\r\n            rs['lng'] = alon * RADDEG;\r\n        }\r\n        return rs;\r\n    }\r\n\r\n    xml2jsonCurrentWth = (nx, ny) => {\r\n        var today_2 = new Date();\r\n        var dd = today_2.getDate();\r\n        var mm = today_2.getMonth()+1;\r\n        var yyyy = today_2.getFullYear();\r\n        var hours = today_2.getHours();\r\n        var minutes = today_2.getMinutes();\r\n        console.log(\"시간 (분) : \" + minutes);\r\n\r\n        if(minutes <= 40){\r\n            // 40분 이전이라면 한시간 전 값\r\n            hours = hours - 1;\r\n            if(hours < 0){\r\n                // 자정 이전은 전날로 계산\r\n                // 00:40분 이전이라면 'base_date'는 전날이고 'base_time'은 2300이다.\r\n                today_2.setDate(today.getDate() - 1);\r\n                dd = today_2.getDate();\r\n                mm = today_2.getMonth() + 1;\r\n                yyyy = today_2.getFullYear();\r\n                hours = 23;\r\n            }\r\n        }\r\n        if(hours < 10) {\r\n            hours = '0' + hours;\r\n        }\r\n        if(mm < 10) {\r\n            mm = '0' + mm;\r\n        }\r\n        if(dd < 10) {\r\n            dd = '0' + dd;\r\n        }\r\n        \r\n        var _nx = nx,\r\n        _ny = ny,\r\n        apikey = 'ijFCZNWcCKbWGchBc5vZ%2F%2FXIG5vnZeeOgt1m23u3U0BXhc8dVvq%2BdymzHUQDmarDgb0XcV%2BV7gmzgn9T3JSsZQ%3D%3D',\r\n        basetime = hours + \"00\",\r\n        url_4 = 'http://apis.data.go.kr/1360000/VilageFcstInfoService/getUltraSrtNcst';\r\n        today_2 = yyyy+\"\"+mm+\"\"+dd;\r\n        var queryParams_4 = '?ServiceKey=' + apikey;\r\n        queryParams_4 += '&numOfRows=8&pageNo=1';\r\n        queryParams_4 += '&dataType=JSON';\r\n        queryParams_4 += '&base_date=' + today_2; // 오늘 날짜\r\n        queryParams_4 += '&base_time=' + basetime; // 요청 가능 발표 시간\r\n        queryParams_4 += '&nx=' + _nx + '&ny=' + _ny;\r\n        \r\n        axios.get(\"/VilageFcstInfoService/getUltraSrtNcst\" + queryParams_4)\r\n        .then(res4 => {\r\n                console.log(\"초단기실황조회_2 : \" + res4.data.response.body.items.item);\r\n                console.log(\"/VilageFcstInfoService/getUltraSrtNcst\" + queryParams_4);\r\n                \r\n                // 날씨 클래스 내부 state에 정보 저장한다\r\n                this.setState({\r\n                    c_weatherInfo_4: res4.data.response.body.items.item,\r\n                });\r\n                // 날씨 클래스 내부 state에 정보 저장한다\r\n            })\r\n            .catch(err => {\r\n                console.log(\"초단기실황조회 error : \" + err);\r\n                alert(\"다시 시도해주세요.\\n : \" + err);\r\n            });\r\n\r\n        var queryParams_5 = '?' + encodeURIComponent('ServiceKey') + '=' + apikey;\r\n        queryParams_5 += '&' + encodeURIComponent('numOfRows') + '=' + encodeURIComponent('10');\r\n        queryParams_5 += '&' + encodeURIComponent('pageNo') + '=' + encodeURIComponent('1');\r\n        queryParams_5 += '&' + encodeURIComponent('dataType') + '=' + encodeURIComponent('JSON');\r\n        queryParams_5 += '&' + encodeURIComponent('base_date') + '=' + encodeURIComponent(today_2);\r\n        queryParams_5 += '&' + encodeURIComponent('base_time') + '=' + encodeURIComponent(basetime);\r\n        queryParams_5 += '&' + encodeURIComponent('nx') + '=' + encodeURIComponent(_nx);\r\n        queryParams_5 += '&' + encodeURIComponent('ny') + '=' + encodeURIComponent(_ny);\r\n\r\n        axios.get(\"/VilageFcstInfoService/getUltraSrtFcst\" + queryParams_5)\r\n            .then(res5 => {\r\n                console.log(\"초단기예보조회 : \" + res5.data.response.body.items.item[0].category);\r\n                console.log(\"/VilageFcstInfoService/getUltraSrtFcst\" + queryParams_5);\r\n\r\n                    // 날씨 클래스 내부 state에 정보 저장한다\r\n                    this.setState({\r\n                        c_weatherInfo_5: res5.data.response.body.items.item,\r\n                    });\r\n                    // 날씨 클래스 내부 state에 정보 저장한다\r\n                })\r\n                .catch(err => {\r\n                    console.log(\"초단기예보조회 error : \" + err);\r\n                    alert(\"다시 시도해주세요.\\n : \" + err);\r\n                });\r\n        \r\n        var url_6 = 'http://apis.data.go.kr/1360000/VilageFcstInfoService/getVilageFcst';\r\n        var queryParams_6 = '?' + encodeURIComponent('ServiceKey') + '=' + apikey;\r\n        queryParams_6 += '&' + encodeURIComponent('pageNo') + '=' + encodeURIComponent('1');\r\n        queryParams_6 += '&' + encodeURIComponent('numOfRows') + '=' + encodeURIComponent('14');\r\n        queryParams_6 += '&' + encodeURIComponent('dataType') + '=' + encodeURIComponent('JSON');\r\n        queryParams_6 += '&' + encodeURIComponent('base_date') + '=' + encodeURIComponent(year+month+date);\r\n        queryParams_6 += '&' + encodeURIComponent('base_time') + '=' + encodeURIComponent(hours+'00');\r\n        queryParams_6 += '&' + encodeURIComponent('nx') + '=' + encodeURIComponent(_nx);\r\n        queryParams_6 += '&' + encodeURIComponent('ny') + '=' + encodeURIComponent(_ny);\r\n\r\n        axios.get(\"/VilageFcstInfoService/getVilageFcst\" + queryParams_6)\r\n        .then(res6 => {\r\n            console.log(\"/VilageFcstInfoService/getVilageFcst\" + queryParams_6);\r\n                console.log(\"동네예보조회 : \" + res6.data.response.body.items.item[0].category);\r\n                \r\n                // 날씨 클래스 내부 state에 정보 저장한다\r\n                this.setState({\r\n                    c_weatherInfo_6: res6.data.response.body.items.item,\r\n                });\r\n                // 날씨 클래스 내부 state에 정보 저장한다\r\n            })\r\n            .catch(err => {\r\n                console.log(\"동네예보조회 error : \" + err);\r\n                alert(\"동네예보조회를 다시 시도해주세요.\\n : \" + err);\r\n            });\r\n    }\r\n    \r\n    _getJejuGridList = () => {\r\n        // jeju_grid_list를 가지고 옵니다.\r\n    const jejuGridUrl = 'dummy/jeju_grid_list.json';\r\n    \r\n    axios.get(jejuGridUrl)\r\n    .then(data => {\r\n        // 가지고 온 리스트를 state에 저장합니다.\r\n        this.setState({\r\n            jejuGridList: data.data\r\n            });\r\n            console.log(\"제주도 격자 X : \" + data.data[0][Object.keys(data.data[0])[4]]);\r\n            console.log(\"제주도 격자 Y : \" + data.data[0][Object.keys(data.data[0])[5]]);\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n        \r\n    // select박스 선택하면 다른 지역 날씨 보여주는 이벤트\r\n    selectChange = (event) => {\r\n    var dataset = event.target.options[event.target.selectedIndex].dataset;\r\n    \r\n    console.log(\"select박스 선택한 value 행정구역코드 : \" + event.target.value);\r\n    console.log(\"data-nx 와 data-ny : \" + dataset.nx + \", \" + dataset.ny);\r\n    \r\n    this.xml2jsonCurrentWth(dataset.nx, dataset.ny);\r\n    \r\n    // 주소-좌표 변환 객체를 생성합니다\r\n    var geocoder = new kakao.maps.services.Geocoder();\r\n    \r\n    var coord = new kakao.maps.LatLng(dataset.latitude, dataset.longitude);\r\n    var callback = (result, status) => {\r\n        if (status === kakao.maps.services.Status.OK) {\r\n            console.log('현재 있는 곳 위도와 경도를 주소로 변환하면 : ' + result[0].address.address_name + ' 입니다');\r\n            this.setState({\r\n                c_address: result[0].address.address_name,\r\n            });\r\n        }\r\n    };\r\n    \r\n    // 좌표 값에 해당하는 구 주소와 도로명 주소 정보를 요청한다.\r\n    geocoder.coord2Address(coord.getLng(), coord.getLat(), callback);\r\n    };\r\n    \r\n    render() {\r\n        const { c_weatherInfo } = this.state;\r\n        \r\n        const skyStatus = ['CLEAR_DAY', 'PARTLY_CLOUDY_DAY', 'CLOUDY', 'FOG', 'RAIN', 'RAIN_SNOW', 'SLEET', 'SNOW'];\r\n        \r\n        const skyStatusEnum = Object.freeze({\r\n            CLEAR_DAY: 0,\r\n            PARTLY_CLOUDY_DAY: 1,\r\n            CLOUDY: 2,\r\n            FOG: 3,\r\n            RAIN: 4,\r\n            RAIN_SNOW: 5,\r\n            SLEET: 6,\r\n            SNOW: 7,\r\n        });\r\n\r\n        const skyColor = ['goldenrod', 'grey', 'grey', 'black', 'grey', 'black', 'black', 'black'];\r\n        \r\n        var options = this.state.jejuGridList.map((jejuGrid) => {\r\n            return(\r\n                <option \r\n                    data-nx={jejuGrid[Object.keys(jejuGrid)[4]]} \r\n                    data-ny={jejuGrid[Object.keys(jejuGrid)[5]]}\r\n                    value={jejuGrid[Object.keys(jejuGrid)[0]]}\r\n                    data-longitude={jejuGrid[Object.keys(jejuGrid)[6]]}\r\n                    data-latitude={jejuGrid[Object.keys(jejuGrid)[7]]}>\r\n                        {jejuGrid[Object.keys(jejuGrid)[1]]}&nbsp;\r\n                        {jejuGrid[Object.keys(jejuGrid)[2]]}&nbsp;\r\n                        {jejuGrid[Object.keys(jejuGrid)[3]]}&nbsp;\r\n                </option>\r\n            );\r\n        });\r\n        \r\n        return (\r\n            \r\n            <div style={{ fontSize : '.7rem' }}>\r\n\r\n                {/* <select onChange={this.selectChange.bind(this)} value={this.state.selectBoxValue}>\r\n                    { this.state.jejuGridList.map((jejuGrid, index) => (\r\n                        <option \r\n                        value={index} \r\n                        data-nx={jejuGrid[Object.keys(jejuGrid)[4]]} \r\n                        data-ny={jejuGrid[Object.keys(jejuGrid)[5]]}\r\n                        >\r\n                            {jejuGrid[Object.keys(jejuGrid)[1]]}&nbsp;\r\n                            {jejuGrid[Object.keys(jejuGrid)[2]]}&nbsp;\r\n                            {jejuGrid[Object.keys(jejuGrid)[3]]}\r\n                            </option>\r\n                            )) }\r\n                        </select> */}\r\n\r\n                {/* 자식 컴포넌트에서 부모컴포넌트의 함수 호출하기 */}\r\n                {/* <h1>{this.state.selectBoxValue}</h1>\r\n                <SelectWeatherArea \r\n                _jejuGridList={this.state.jejuGridList}\r\n                change={this.selectChange.bind(this)}\r\n                /> */}\r\n\r\n                <select onChange={this.selectChange} value={this.props.selectBoxValue}>\r\n                    {options}\r\n                </select>\r\n\r\n                {this.state.c_address}\r\n\r\n                <br />\r\n\r\n                총 데이타수:\r\n                {this.state.c_weatherInfo.length}개\r\n                {/* {JSON.parse(localStorage.getItem('weather_1'))} */}\r\n                <br />\r\n\r\n                '관광지-지역이름' &nbsp; '코스 명' &nbsp; '관광지명' &nbsp; '테마' &nbsp; '최고기온' &nbsp; '최저기온' &nbsp; '풍향' &nbsp; '풍속' &nbsp; '하늘상태' &nbsp; '습도' &nbsp; '강수확률' &nbsp; '강수량' &nbsp;\r\n                <br />\r\n                {\r\n                    c_weatherInfo.map((row)=>(\r\n                        <>\r\n                        ({row.spotAreaName})\r\n                        ({row.courseName})\r\n                        ({row.spotName})\r\n                        ({row.thema})\r\n                        ({row.maxTa})\r\n                        ({row.minTa})\r\n                        ({row.wd})\r\n                        ({row.ws})\r\n                        {/* {skyStatus.map((findName,index)=>(\r\n                            this.setState({\r\n                                sky : row.sky === index + 1 ? findName : ''\r\n                            })\r\n                        ))} */}\r\n\r\n                        <ReactAnimatedWeather\r\n                            icon={skyStatus[row.sky-1]}\r\n                            color={skyColor[row.sky-1]}\r\n                            size={defaults.size}\r\n                            animate={defaults.animate}\r\n                        />\r\n                        \r\n                        <ColorSkycons\r\n                            type = { Object.keys(skyStatusEnum).find(name => skyStatusEnum[name] === row.sky-1) }\r\n                            animate = { defaults.animate }\r\n                            size = { defaults.size }\r\n                            resizeClear = { true }\r\n                            // {...svgProps}\r\n                        />\r\n                        \r\n                        ({skyStatus[row.sky-1]})\r\n                        ({row.rhm})\r\n                        ({row.pop})\r\n                        ({row.rn})\r\n                        <br />\r\n                        </>\r\n                        ))\r\n                }\r\n\r\n                '체감온도'\r\n                <br />\r\n                {\r\n                    this.state.c_weatherInfo_2.map((row)=>(\r\n                        <>\r\n                        ({row.btIndex})\r\n                        </>\r\n                        ))\r\n                }\r\n\r\n                <br />\r\n                '초단기실황조회'\r\n                <br/>\r\n                '기온' '동서바람성분' '풍향' '남북바람성분' '풍속'\r\n                <br />\r\n                {\r\n                    // store.getState.weatherInfo_3.map((row)=>(\r\n                    this.state.c_weatherInfo_4.filter(w => w.category !== 'PTY' && w.category !== 'REH' && w.category !== 'RN1').map((row)=>(\r\n                        <>\r\n                            ({row.category})\r\n                            ({row.obsrValue})\r\n                        </>\r\n                    ))\r\n                }\r\n\r\n                <br />\r\n                '동네예보조회'\r\n                {this.state.c_weatherInfo_6.length}개\r\n                <br/>\r\n                '발표시각' &nbsp; '예보일자' &nbsp; '예보시각' &nbsp; '자료구분문자' &nbsp; '예보 값'\r\n                <br />\r\n                {\r\n                    this.state.c_weatherInfo_6.map((row)=>(\r\n                        <>\r\n                            <span>\r\n                                {/* ({row.baseTime}) */}\r\n                                {row.baseTime}\r\n                            </span>\r\n                            <span>\r\n                                {/* ({row.fcstDate}) */}\r\n                                {row.fcstDate}\r\n                            </span>\r\n                            <span>\r\n                                {/* ({row.fcstTime}) */}\r\n                                {row.fcstTime}\r\n                            </span>\r\n                            <span>\r\n                                {/* ({row.category}) */}\r\n                                {row.category}\r\n                            </span>\r\n                            <span>\r\n                                {/* ({row.fcstValue}) */}\r\n                                {row.fcstValue}\r\n                            </span>\r\n                            <br />\r\n                        </>\r\n                    ))\r\n                }\r\n                <h4>Weather</h4>\r\n\r\n                <img src = { OPENNURI } alt='OPENNURI' />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Weather;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\ShareBoardRowItem.js",["986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012"],"import React, {Component, useState} from \"react\";\r\nimport {Route, Link} from \"react-router-dom\";\r\nimport ShareBoardUpdateForm from \"./ShareBoardUpdateForm\";\r\nimport Modal from './Modal';\r\nimport axios from \"axios\";\r\nimport {actionType, mainViewType, URL} from '../../../redux/config';\r\nimport ShareReview from './ShareReview';\r\nimport store from \"../../../redux/store\";\r\nimport Box from '@material-ui/core/Box';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport SmsIcon from '@material-ui/icons/Sms';\r\nimport TextsmsIcon from '@material-ui/icons/Textsms';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport './Share.css';\r\nimport {Delete} from \"@material-ui/icons\";\r\n// import \"../tour/TourCss.css\"\r\nimport imgX from \"../../../image/imgX.png\";\r\nimport { MDBBtn, MDBCardImage, MDBModal, MDBModalBody, MDBModalHeader, MDBMask, MDBView, MDBModalFooter, MDBIcon } from 'mdbreact';\r\nimport { MDBPopover, MDBPopoverBody } from \"mdbreact\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n/*\r\nrow:\r\n    addr: \"제주시 제주동 제주읍 제주리 제주제주\"\r\n    content: \"맛있습니다. 맛있습니다. 맛있습니다. 맛있습니다.↵맛있습니다. 맛있습니다. 맛있습니다. 맛있습니다↵맛있습니다. 맛있습니다. 맛있습니다. 맛있습니다\"\r\n    id: \"hee0134\"\r\n    likes: 0\r\n    num: \"422\"\r\n    photo: \"jeju20210122102347.png\"\r\n    regroup: 422\r\n    relevel: 0\r\n    restep: 0\r\n    star: \"4\"\r\n    subject: \"제주도 맛집맛집\"\r\n    writeday: \"2021-01-22\"\r\n\r\n    addr: \"\"\r\n    content: \"맛있습니다\"\r\n    id: null\r\n    likes: 0\r\n    num: \"474\"\r\n    photo: \"jeju20210129150010.jpg\"\r\n    regroup: 473\r\n    relevel: 0\r\n    restep: 0\r\n    star: \"0\"\r\n    subject: \"해녀촌\"\r\n    writeday: \"2021-01-30\"\r\n */\r\n\r\nconst StyledRating = withStyles({\r\n    iconFilled: {\r\n        color: '#ff6d75',\r\n    },\r\n    iconHover: {\r\n        color: '#ff3d47',\r\n    },\r\n})(Rating);\r\n\r\n\r\nclass ShareBoardRowItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"constructor\", this.props);\r\n        //스크롤\r\n        this.myRef = React.createRef()\r\n        this.state = {\r\n            scrollTop: 0,\r\n            answerCount: 0,\r\n        }\r\n        this.state = {\r\n            modalOpen: false,\r\n            likes: 0,\r\n            open: false,\r\n            alertOpen: false,\r\n            alertSetOpen: false\r\n        }\r\n\r\n\r\n        store.dispatch({\r\n            type: actionType.setMainView,\r\n            mainView: mainViewType.ShareBoard,\r\n        });\r\n\r\n        this.getAnswerCount();\r\n    }\r\n\r\n    getAnswerCount = () => {\r\n        let num = this.props.row.num;\r\n        let url = URL + \"/share/answercount\" +\r\n            \"?num=\" + num;\r\n\r\n        axios.get(url\r\n        ).then(res => {\r\n            // console.log(\"getAnswerCount() res\", res);\r\n            this.setState({\r\n                answerCount: res.data\r\n            });\r\n        }).catch(err => {\r\n            console.log(\"getAnswerCount() err\", err);\r\n        });\r\n    }\r\n\r\n\r\n    //스크롤\r\n    onScroll = () => {\r\n        const scrollY = window.scrollY //Don't get confused by what's scrolling - It's not the window\r\n        const scrollTop = this.myRef.current.scrollTop\r\n        // console.log(`onScroll, window.scrollY: ${scrollY} myRef.scrollTop: ${scrollTop}`);\r\n        this.setState({\r\n            scrollTop: scrollTop\r\n        })\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n          open: !this.state.open\r\n        });\r\n      }\r\n\r\n\r\n    //삭제하는 함수 이벤트\r\n    onDeleteData = (e) => {\r\n        e.preventDefault();\r\n        let num = this.props.row.num;\r\n        let regroup = this.props.row.regroup;\r\n        let url = URL + \"/share/delete\";\r\n        let data = {\r\n            num: num,\r\n            regroup: regroup,\r\n        }\r\n\r\n        // console.log(\"onDeleteData\", url, data);\r\n\r\n        if (window.confirm(\"삭제하시겠습니까?\")) {\r\n            axios.post(url, data\r\n            ).then(res => {\r\n                // console.log(\"onDeleteData() res\", res);\r\n                store.dispatch({\r\n                    type: actionType.shareBoardUpdate,\r\n                });\r\n\r\n                //메인 페이지 또는 공유 페이지인지에 따라 다르게 적용.\r\n                // if(store.getState().mainView == mainViewType.ShareBoard){\r\n                //     this.props.history.goBack();\r\n                // } else{\r\n                window.location.reload();\r\n                // }\r\n\r\n            }).catch(err => {\r\n                console.log(\"onDeleteData() err\", err);\r\n            });\r\n        }\r\n    }\r\n\r\n    onInsertAnswer = () => {\r\n        // 원본 리뷰글의 댓글\r\n        // regroup 현재꺼 / relevel 1 / restep 현재꺼 /\r\n        let num = this.props.row.num;\r\n        let regroup = this.props.row.regroup;\r\n        let relevel = this.props.row.relevel;\r\n        let restep = this.props.row.restep;\r\n        let content = this.refs.content.value;\r\n        let id = store.getState().loginId;\r\n        let star = 0;\r\n        let url = URL + \"/share/insert\" +\r\n            \"?\" +\r\n            \"relevel=\" + relevel +\r\n            \"&restep=\" + restep +\r\n            \"&regroup=\" + regroup;\r\n\r\n        let data = {\r\n            num: num,\r\n            content: content,\r\n            star: star,\r\n            id: id,\r\n        }\r\n\r\n        console.log(url, data);\r\n\r\n        axios.post(url, data\r\n        ).then(res => {\r\n            // console.log(\"onInsertAnswer res\", res);\r\n            this.refs.content.value='';\r\n            store.dispatch({\r\n                type: actionType.shareBoardUpdate,\r\n            });\r\n            this.getAnswerCount();\r\n        }).catch(err => {\r\n            console.log(\"onInsertAnswer err\", err);\r\n        })\r\n\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({modalOpen: true})\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({modalOpen: false})\r\n    }\r\n\r\n\r\n    getItemBottomLikeBox = (row) => {\r\n        let itemBottomBtnDiv = null;\r\n        let isCondition = (this.props.currentPage != null && this.props.currentPage != undefined);\r\n        // console.log(\"getItemBottomLikeBox\", this.props.currentPage, isCondition);\r\n\r\n        if (store.getState().logged && store.getState().loginId == row.id && isCondition) {\r\n            itemBottomBtnDiv = (\r\n                <div\r\n                    id=\"DivItemLikeBox\"\r\n                >\r\n                    {/* 좋아요 버튼 */}\r\n                    <ThumbUpAltIcon\r\n                        className=\"ShareThumbIcon\"\r\n                        onClick={this.addLikes}\r\n                    />&nbsp;{row.likes + this.state.likes}&nbsp;&nbsp;\r\n\r\n                    <SmsIcon\r\n                        className=\"ShareThumbIcon\"\r\n                        onClick=\"\"\r\n                    />&nbsp;{this.state.answerCount}&nbsp;\r\n\r\n                    {/* 삭제 버튼 */}\r\n                    <DeleteIcon\r\n                        className=\"ShareListDel\"\r\n                        onClick={this.onDeleteData.bind(this)}\r\n                    />\r\n\r\n                    {/* modify 버튼 */}\r\n                    <BuildIcon\r\n                        className=\"ShareListUp\"\r\n                        onClick={() => {\r\n                            // this.props.history.push(`/share/update/${this.props.row.num}/${this.props.currentPage}`);\r\n                            if (!this.props.currentPage) {\r\n                                window.location.href = `/share/update/${this.props.row.num}/0`;\r\n                            } else {\r\n                                window.location.href = `/share/update/${this.props.row.num}/${this.props.currentPage}`;\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n            )\r\n        } else {\r\n            itemBottomBtnDiv = (\r\n                <div\r\n                    id=\"DivItemLikeBox\"\r\n                >\r\n                    {/* 좋아요 버튼 */}\r\n                    <ThumbUpAltIcon\r\n                        className=\"ShareThumbIcon\"\r\n                        onClick={this.addLikes}\r\n                    />&nbsp;{row.likes + this.state.likes}&nbsp;&nbsp;\r\n\r\n                    <SmsIcon\r\n                        className=\"ShareThumbIcon\"\r\n                        onClick=\"\"\r\n                    />&nbsp;{this.state.answerCount}&nbsp;\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return itemBottomBtnDiv;\r\n    }\r\n\r\n    getThumbnailImg = (_strSrc) => {\r\n        let resultImg = null;\r\n        let srcImg = URL + \"/\" + _strSrc;\r\n\r\n        if (_strSrc == \"no\") {\r\n            resultImg = (\r\n                <MDBCardImage\r\n                        hover\r\n                        overlay='white-slight'\r\n                        className='card-img-top'\r\n                        src={imgX}\r\n                        alt='이미지 없음'\r\n                        onClick={this.toggle.bind(this)} id=\"ShareImg\"\r\n                        />\r\n                // <img\r\n                //     src={imgX}\r\n                //     style={{\r\n                //         width: \"100%\"\r\n                //     }}\r\n                // />\r\n            )\r\n        } else {\r\n            resultImg = (\r\n                <MDBCardImage\r\n                        hover\r\n                        overlay='white-slight'\r\n                        className='card-img-top'\r\n                        src={srcImg}\r\n                        onError={(e) => {\r\n                            console.log(\"img error\");\r\n                            e.target.src = imgX;\r\n                        }}\r\n                        onClick={this.toggle.bind(this)} id=\"ShareImg\"\r\n                        alt='이미지 없음'\r\n                        />\r\n                // <img\r\n                //     src={srcImg}\r\n                //     onError={(e) => {\r\n                //         console.log(\"img error\");\r\n                //         e.target.src = imgX;\r\n                //     }}\r\n                //     style={{\r\n                //         width: \"100%\"\r\n                //     }}\r\n                // />\r\n            )\r\n        }\r\n\r\n        return resultImg;\r\n    }\r\n\r\n    addLikes = () => {\r\n        // /share/updatelikes\r\n        let num = this.props.row.num;\r\n        let url = URL + \"/share/updatelikes\" +\r\n            \"?num=\" + num;\r\n\r\n        console.log(url);\r\n\r\n        axios.get(url\r\n        ).then(res => {\r\n            console.log(\"addLikes res\", res);\r\n            store.dispatch({\r\n                type: actionType.shareBoardUpdate,\r\n            });\r\n            this.setState({\r\n                likes: this.state.likes + 1,\r\n            })\r\n        }).catch(err => {\r\n            console.log(\"addLikes err\", err);\r\n        })\r\n    }\r\n\r\n    insertWish=()=>{\r\n        let url = URL + \"/wish/insertshare\";\r\n        let memId = store.getState().loginId;\r\n        let shareNum = this.props.row.num;\r\n        let content = this.props.row.addr;\r\n        let wishday = this.refs.wishday.value;\r\n        let wishtime = this.refs.wishtime.value;\r\n        let money = this.refs.money.value==''?null:this.refs.money.value;\r\n\r\n        console.log(this.refs.wishday.value);\r\n        if(wishday == '' || wishtime == '')\r\n            alert(\"날짜와 시간을 모두 선택해주세요.\");\r\n        else{\r\n            axios.post(url, {memId, shareNum, content, wishday, wishtime, money})\r\n            .then(res=>{\r\n                this.toggle();\r\n                this.setState({\r\n                    alertOpen: true\r\n                })\r\n            }).catch(err=>{\r\n                console.log(\"spotwish insert 오류 : \" + err);\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n    row:\r\n        addr: \"제주시 제주동 제주읍 제주리 제주제주\"\r\n        content: \"맛있습니다. 맛있습니다. 맛있습니다. 맛있습니다.↵맛있습니다. 맛있습니다. 맛있습니다. 맛있습니다↵맛있습니다. 맛있습니다. 맛있습니다. 맛있습니다\"\r\n        id: \"hee0134\"\r\n        likes: 0\r\n        num: \"422\"\r\n        photo: \"jeju20210122102347.png\"\r\n        regroup: 422\r\n        relevel: 0\r\n        restep: 0\r\n        star: \"4\"\r\n        subject: \"제주도 맛집맛집\"\r\n        writeday: \"2021-01-22\"\r\n\r\n    row:\r\n        addr: \"\"\r\n        content: \"맛있습니다\"\r\n        id: \"yangyk7364\"\r\n        likes: 0\r\n        num: \"474\"\r\n        photo: \"jeju20210129150010.jpg\"\r\n        regroup: 473\r\n        relevel: 0\r\n        restep: 0\r\n        star: \"0\"\r\n        subject: \"해녀촌\"\r\n        writeday: \"2021-01-30\"\r\n     */\r\n    render() {\r\n        const {row} = this.props;\r\n        // console.log(store.getState().loginId, row.id);\r\n        let itemBottomBtnDiv = this.getItemBottomLikeBox(row);\r\n        let ThumbnailImg = this.getThumbnailImg(row.photo);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Box m={1} id=\"ShareListBox\">\r\n                    <div onClick={this.toggle.bind(this)}>\r\n                        {ThumbnailImg}\r\n                        <div id=\"ShareListTitle\"\r\n                             style={{\r\n                                 fontSize: \"25px\",\r\n                                 fontWeight: \"bold\",\r\n                             }}\r\n                        >\r\n                            {row.subject.split(\",\")[0]==\"Food\"?\r\n                            <h6 className=\"font-weight-bold green-text\">\r\n                                <MDBIcon icon=\"utensils\" className=\"pr-2\" />\r\n                                Food\r\n                            </h6>:\"\"}\r\n\r\n                            {row.subject.split(\",\")[0]==\"Cafe\"?\r\n                            <h6 className=\"font-weight-bold pink-text\">\r\n                                <MDBIcon icon=\"mug-hot\" className=\"pr-2\" />\r\n                                Cafe\r\n                            </h6>:\"\"}\r\n\r\n                            {row.subject.split(\",\")[0]==\"Bar\"?\r\n                            <h6 className=\"font-weight-bold blue-text\">\r\n                                <MDBIcon icon=\"glass-cheers\" className=\"pr-2\" />\r\n                                Bar\r\n                            </h6>:\"\"}\r\n                            {row.subject.split(\",\")[1]}\r\n                        </div>\r\n                        <div id=\"ShareListContent\" style={{overflow: 'hidden'}}>\r\n                            {row.content}\r\n                        </div>\r\n                    </div>\r\n                    {itemBottomBtnDiv}\r\n                </Box>\r\n\r\n                {/*/////////////////////////////////////Modal/////////////////////////////////////////////////////*/}\r\n                {/* //header 부분에 텍스트를 입력한다. */}\r\n                <MDBModal isOpen={this.state.open} toggle={this.toggle} size=\"lg\" position=\"bottom\">\r\n                    <MDBModalHeader toggle={this.toggle}>\r\n\r\n                        {row.subject.split(\",\")[0]==\"Food\"?\r\n                            <b className=\"green-text ShareModalCategory\"><MDBIcon icon=\"utensils\" className=\"pr-2\" />Food</b>:\"\"}\r\n\r\n                            {row.subject.split(\",\")[0]==\"Cafe\"?\r\n                            <b className=\"pink-text ShareModalCategory\"><MDBIcon icon=\"mug-hot\" className=\"pr-2\" />Cafe</b>:\"\"}\r\n\r\n                            {row.subject.split(\",\")[0]==\"Bar\"?\r\n                            <b className=\"blue-text ShareModalCategory\"><MDBIcon icon=\"glass-cheers\" className=\"pr-2\" />Bar</b>:\"\"}\r\n\r\n                        &nbsp;&nbsp;\r\n                        <span id=\"ShareModalTitle\"><b>{row.id}</b>님이 공유하신 맛집입니다.</span></MDBModalHeader>\r\n                    <MDBModalBody>\r\n                        <div id=\"ShareModalAll\" ref={this.myRef} onScroll={this.onScroll}>\r\n                        <Box display=\"flex\"\r\n                            flexWrap=\"wrap\"\r\n                            p={1}\r\n                            m={1}\r\n                            bgcolor=\"background.paper\"\r\n                            justifyContent=\"center\"\r\n                            css={{maxWidth: '100%'}}\r\n                        >\r\n                            <Box m={1} className=\"ShareModalItemBox\">\r\n                                <MDBView className=\"rounded z-depth-2 mb-lg-0 mb-4\" hover waves>\r\n                                    <img\r\n                                        className=\"img-fluid\"\r\n                                        src={row.photo!=\"no\"?URL + \"/\" + row.photo:imgX}\r\n                                        alt=\"\"\r\n                                        onError={(e) => {\r\n                                            console.log(\"img error\");\r\n                                            e.target.src = imgX;\r\n                                        }}\r\n                                    />\r\n                                    <MDBMask overlay=\"white-slight\" />\r\n                                </MDBView>\r\n                            </Box>\r\n                            <Box m={1} className=\"ShareModalItemBox\" style={{position: 'relative'}}>\r\n                                <br/>\r\n                                <Rating\r\n                                    defaultValue={row.star}\r\n                                    emptyIcon={<StarBorderIcon fontSize=\"inherit\"/>}\r\n                                    readOnly={true}\r\n                                />\r\n                                <div style={{position: 'absolute', right: '5px', top: '5px'}}>\r\n                                    <b style={{color: 'gray'}}>{row.writeday}</b>\r\n                                </div>\r\n                                <h3 className=\"mb-3 p-0\" style={{fontWeight: '900'}}>\r\n                                    {row.subject.split(\",\")[1]}\r\n                                </h3>\r\n                                <p>\r\n                                    <MDBIcon icon=\"map-marker-alt\" />&nbsp;&nbsp;{row.addr}\r\n                                </p>\r\n                            </Box>\r\n                            <Box m={1} className=\"ShareModalItemContent\">\r\n                                {row.content}\r\n                            </Box>\r\n                        </Box>\r\n                        <br/>\r\n                        <hr/>\r\n\r\n                            <div id=\"ShareReviewWrite\">\r\n                            <MDBIcon icon=\"comments\" className=\"green-text pr-3\" style={{marginLeft: '10px'}}/><b style={{fontWeight: '700'}}>다녀온 후기나 궁금한 질문을 자유롭게 나눠보아요.</b>\r\n                                <br/><br/>\r\n                                <textarea\r\n                                            placeholder=\"댓글 입력\"\r\n                                            className=\"form-control\"\r\n                                            ref=\"content\"\r\n                                            style={{resize: 'none'}}\r\n                                        ></textarea>\r\n                                        <MDBBtn color=\"dark-green\" id=\"ShareReviewSave\"\r\n                                                onClick={()=>{\r\n                                                    if(store.getState().logged==true){\r\n                                                        this.onInsertAnswer();\r\n                                                    }\r\n                                                    else\r\n                                                        alert(\"로그인이 필요한 서비스입니다.\");\r\n                                                }}\r\n                                                style={{float: 'right'}}\r\n                                        >작성\r\n                                        </MDBBtn>\r\n                            </div>\r\n                        </div>\r\n                            <ShareReview regroup={row.regroup}/>\r\n\r\n                    </MDBModalBody>\r\n                    <MDBModalFooter>\r\n                    <MDBBtn color=\"dark-green\" onClick={this.toggle}>Close</MDBBtn>\r\n                    {store.getState().logged==true?\r\n                    <MDBPopover\r\n                    placement=\"top\"\r\n                    popover\r\n                    clickable\r\n                    id=\"popper5\"\r\n                    >\r\n                        <MDBBtn color=\"primary\">일정추가</MDBBtn>\r\n                        <div>\r\n                            <MDBPopoverBody>\r\n                                <div className=\"ShareModalInsertPlan\">\r\n                                    <span className=\"spotmodalTitle\">일정 추가</span><br/>\r\n                                    👨‍🍳&nbsp;&nbsp;{row.subject.split(\",\")[1]}<br/>\r\n                                    &nbsp;<MDBIcon icon=\"map-marker-alt\" />&nbsp;&nbsp;{row.addr}<br/>\r\n                                    🗓&nbsp;&nbsp;여행 날짜\r\n                                    <input type=\"date\" class=\"form-control form-control-sm\" ref=\"wishday\"></input>\r\n                                    ⏰&nbsp;&nbsp;예정 시간\r\n                                    <input type=\"time\" class=\"form-control form-control-sm\" ref=\"wishtime\"></input>\r\n                                    💰&nbsp;&nbsp;<b>비용</b>\r\n                                    <input type=\"text\" class=\"form-control form-control-sm\" ref=\"money\"/><br/>\r\n                                    <div style={{textAlign: 'center'}}>\r\n                                        <MDBBtn color=\"primary\" onClick={this.insertWish.bind(this)}>추가</MDBBtn>\r\n                                    </div>\r\n                                </div>\r\n                            </MDBPopoverBody>\r\n                        </div>\r\n                    </MDBPopover>\r\n                    :\"\"}\r\n\r\n                    </MDBModalFooter>\r\n                </MDBModal>\r\n\r\n                {/* alert 창 */}\r\n                <Dialog\r\n                    open={this.state.alertOpen}\r\n                    onClose={()=>{this.setState({alertOpen:false})}}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"일정 추가 완료\"}</DialogTitle>\r\n                    <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Mypage로 이동하여 확인하시겠습니까?\r\n                    </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                    <Button onClick={()=>{this.setState({alertOpen:false})}} color=\"primary\">\r\n                        NO\r\n                    </Button>\r\n                    <Button onClick={\r\n                        ()=>{\r\n                            this.setState({\r\n                                alertOpen: false\r\n                            })\r\n                            this.props.history.push(\"/mypage\");\r\n                        }\r\n                    } color=\"primary\" autoFocus>\r\n                        YES\r\n                    </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                {/*//////////////////////////////////////////////////////////////////////////////////////////*/}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ShareBoardRowItem\r\n\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\BoardSample.js",["1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027"],"import React, {useState, useEffect} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport axios from 'axios';\r\nimport {arrJejuLoc_en, arrJejuLoc_ko, URL} from \"../../../redux/config\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {red} from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\n\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport BoardSampleItem from './BoardSampleItem';\r\nimport ItemComp from \"../tour/ItemComp\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // maxWidth: 345\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: \"56.25%\" // 16:9\r\n    },\r\n    expand: {\r\n        transform: \"rotate(0deg)\",\r\n        marginLeft: \"auto\",\r\n        transition: theme.transitions.create(\"transform\", {\r\n            duration: theme.transitions.duration.shortest\r\n        })\r\n    },\r\n    expandOpen: {\r\n        transform: \"rotate(180deg)\"\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500]\r\n    },\r\n    paperRoot: {\r\n        display: \"flex\",\r\n        // flexWrap: \"wrap\",\r\n        overflow: \"auto\",\r\n        \"& > *\": {\r\n            // flexShrink: \"0\",\r\n            // margin: \"10px\",\r\n            // padding: \"10px\",\r\n            // width: \"300px\",\r\n            // height: \"300px\",\r\n            // overflow: \"hidden\",\r\n            // textAlign: \"center\",\r\n            // objectFit: \"cover\"\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function BoardSample(props) {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [spotList, setSpotList] = useState([]);\r\n    const idx = props.idx;\r\n\r\n    useEffect(() => {\r\n        getList();\r\n\r\n        return () => {\r\n            let divTemp = document.querySelector(\".hotPlace_sample div div\");\r\n            if (divTemp) {\r\n                divTemp.scrollTo(0, 0);\r\n            }\r\n        }\r\n    }, [idx]);\r\n\r\n\r\n    // 통신 메서드\r\n    function getList() {\r\n        const url = URL + '/spot/list' +\r\n            '?start=0' +\r\n            '&perPage=5' +\r\n            '&label2=' + arrJejuLoc_en[idx];\r\n        axios.get(url)\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n                setSpotList(response.data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(\"실패\", error);\r\n            });\r\n    }\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>&nbsp;&nbsp;&nbsp;&nbsp;{arrJejuLoc_ko[idx]}</h1>\r\n            <hr/>\r\n            <div className={classes.paperRoot}>\r\n                {spotList.map((row, i) => {\r\n                    // console.log(i, row, props.history);\r\n                    return (\r\n                        <ItemComp row={row} key={i}\r\n                                  history={props.history}\r\n                                  getList={getList.bind(this)}\r\n                        ></ItemComp>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n/*\r\n<Card className={classes.root}>\r\n                    <CardHeader\r\n                        avatar={\r\n                            <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                YK\r\n                            </Avatar>\r\n                        }\r\n                        action={\r\n                            <IconButton aria-label=\"settings\">\r\n                                <MoreVertIcon/>\r\n                            </IconButton>\r\n                        }\r\n                        title=\"Shrimp and Chorizo Paella\"\r\n                        subheader=\"September 14, 2016\"\r\n                    />\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image=\"/static/images/cards/paella.jpg\"\r\n                        title=\"Paella dish\"\r\n                    />\r\n                    <CardContent>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            This impressive paella is a perfect party dish and a fun meal to cook\r\n                            together with your guests. Add 1 cup of frozen peas along with the\r\n                            mussels, if you like.\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions disableSpacing>\r\n                        <IconButton aria-label=\"add to favorites\">\r\n                            <FavoriteIcon/>\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"share\">\r\n                            <ShareIcon/>\r\n                        </IconButton>\r\n                    </CardActions>\r\n                </Card>\r\n */\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\auth\\refreshToken.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\menus\\TourList.js",["1028"],"import React, {Component} from \"react\";\r\n\r\nclass TourList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TourList;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\NoticeItemComp.js",["1029","1030"],"import React, {Component} from \"react\";\r\nimport {Box} from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport '../tour/TourCss.css';\r\n\r\nclass NoticeItemComp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // this.paperRoot = {\r\n        //     display: \"flex\",\r\n        //     flexWrap: \"wrap\",\r\n        //     \"& > *\": {\r\n        //         margin: \"10px\",\r\n        //         padding: \"10px\",\r\n        //         width: \"300px\",\r\n        //         height: \"400px\",\r\n        //         overflow: \"hidden\",\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    showDetailNotice = ()=>{\r\n\r\n    }\r\n\r\n    /*\r\n    * content: \"글 올립니다 올려요\"\r\n    num: \"32\"\r\n    readcount: 22\r\n    star: \"0\"\r\n    subject: \"글 테스트용 올려요\"\r\n    writeday: \"2020-12-09 02:06\"\r\n    * */\r\n    render() {\r\n        const {row} = this.props;\r\n        console.log(row);\r\n        return (\r\n            <Box m={1} id=\"itemBox\">\r\n                <div style={{\r\n                    cursor: 'pointer',\r\n\r\n                }}\r\n                     onClick=\"\"\r\n                >\r\n                    <div id=\"itemTitle\"\r\n                         style={{whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: 'hidden'}}\r\n                    >\r\n                        <b style={{color: '#888'}}\r\n                        >{row.subject}\r\n                        </b><br/>\r\n                    </div>\r\n                    <div id=\"itemContentDiv\">\r\n                        <p id=\"itemContent\"\r\n                           style={{fontWeight: '500', color: '#888', overflow: 'hidden'}}\r\n                        >{row.content}\r\n                        </p>\r\n                    </div>\r\n                    <div id=\"itemContentDiv\">\r\n                        <p id=\"itemContent\"\r\n                           style={{fontWeight: '500', color: '#888', overflow: 'hidden'}}\r\n                        >{row.writeday}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoticeItemComp;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\SharePlan\\SharePlanSub.js",["1031","1032","1033","1034","1035","1036","1037","1038"],"import React, {Component} from \"react\";\r\nimport { Dialog, DialogTitle,DialogActions, DialogContent, DialogContentText,Button } from \"@material-ui/core\";\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\nimport './SharePlanCss.css';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\nclass SharePlanSub extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        //console.log(\"SharePlanRoot constructor\", props);\r\n\r\n        this.state={\r\n            deleteOpen:false,\r\n            deleteSetOpen:false\r\n        }\r\n\r\n        \r\n        \r\n    }\r\n\r\n    deleteOpen=()=>{\r\n        this.setState({\r\n            deleteOpen:true\r\n        })\r\n    };\r\n\r\n    deleteClose=()=>{\r\n        this.setState({\r\n            deleteOpen:false\r\n        })\r\n    };\r\n\r\n\r\n    onDelete=()=>{\r\n        let url=URL+\"/plan/delete?num=\"+this.props.row.num;\r\n        \r\n        console.log(this.props.row.num); \r\n        \r\n        axios.get(url)\r\n        .then(res=>{\r\n            this.deleteClose();\r\n            \r\n        }).catch(err=>{\r\n          console.log(\"삭제시 오류:\"+err);\r\n        });\r\n       }\r\n\r\n       onGroupDelete=()=>{\r\n        let url=URL+\"/plan/groupdelete?groupnum=\"+this.props.row.groupNum;\r\n        \r\n        console.log(this.props.row.groupNum); \r\n        \r\n        axios.get(url)\r\n        .then(res=>{\r\n            this.deleteClose();\r\n            \r\n        }).catch(err=>{\r\n          console.log(\"삭제시 오류:\"+err);\r\n        });\r\n       }\r\n\r\n\r\n\r\n    // onGroup=()=>{\r\n    //     let url=URL+\"/plan/group?memId=\"+store.getState().loginId + \"&wishday=\"+this.refs.wishday.value;\r\n    //     axios.get(url)\r\n    //     .then(res=>{\r\n    //         this.setState({\r\n    //             list:res.data\r\n    //         });\r\n    //     }).catch(err=>{\r\n    //         console.log(\"목록 오류:\"+err);\r\n    //       })\r\n    // }\r\n\r\n\r\n\r\n    render(){\r\n        // const {row}=this.props;\r\n        // const {glist}=this.props;\r\n        // const day=this.props.day;\r\n        // var wishday=row.wishday;\r\n        // var title=row.title;\r\n        // const {groupNum}=this.props.groupNum;\r\n        return(\r\n            <div>\r\n                \r\n            <div style={{cursor:'pointer',fontSize:20}} onClick={this.deleteOpen.bind(this)} >\r\n                {this.props.row.wishday===this.props.day?this.props.row.title:this.props.row.title}\r\n               \r\n               {/* {this.props.row.groupNum} */}\r\n              \r\n               {this.props.row.comment!==null?<span>💬{this.props.row.comment}</span>:''}\r\n               <Dialog \r\n                    open={this.state.deleteOpen} \r\n                    onClose={this.deleteClose.bind(this)}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                     <DialogTitle id=\"alert-dialog-title\">{this.props.row.title}</DialogTitle>\r\n                        <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            해당 공유일정을 삭제하시겠습니까?\r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                        <Button onClick={this.deleteClose.bind(this)} color=\"primary\">\r\n                            닫기\r\n                        </Button>\r\n                        <Button  onClick={this.onDelete.bind(this)} color=\"primary\" autoFocus>\r\n                            삭제\r\n                        </Button>\r\n                        <Button  onClick={this.onGroupDelete.bind(this)} color=\"primary\" autoFocus>\r\n                            그룹전체삭제\r\n                        </Button>\r\n                        </DialogActions>\r\n                 </Dialog>\r\n                \r\n                \r\n                 \r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SharePlanSub;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\MyPlanRightItem.js",["1039","1040","1041","1042"],"import React, {Component} from 'react';\r\nimport './MyPlanComp.css';\r\nimport axios from 'axios';\r\nimport {URL} from '../../../redux/config';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { MDBMask, MDBView, MDBBtn, MDBIcon } from \"mdbreact\";\r\n\r\nclass MyPlanRightItem extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n    }\r\n\r\n    render(){\r\n        \r\n        const {row} = this.props;\r\n\r\n        return (\r\n            <div className=\"myplanRightItemBox\">\r\n            {/* <div>  */}\r\n            {/* <div> */}\r\n                <MDBView>\r\n                    <img src={row.thumbnail} alt=\"\" class=\"myplanRightItemImg\"/>\r\n                    <MDBMask className=\"flex-center\" overlay=\"stylish-light\" style={{flexWrap:'wrap'}}>\r\n                        <p className=\"white-text\" style={{fontWeight: '500'}}>{row.title}</p>\r\n                        <MDBBtn rounded href={`/tour/${row.contentsid}`}>\r\n                            <MDBIcon icon=\"clone left\" /> 보러가기\r\n                        </MDBBtn>\r\n                    </MDBMask>\r\n                </MDBView>    \r\n                {/* </div> */}\r\n                {/* <div class=\"myplanRightTitle\" style={{position: 'absolute', bottom: '5%', left: '30%', color: 'white', textAlign: 'center'}}>\r\n                    {row.title}\r\n                </div> */}\r\n            </div>\r\n            // <Paper elevation={3}>\r\n            //     <br/>\r\n            //     <div id=\"myplanRightThumb\"></div>\r\n            // </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyPlanRightItem;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\MyPlanLeftItem.js",["1043","1044","1045","1046","1047","1048","1049","1050","1051","1052"],"import React, {Component} from 'react';\r\nimport './MyPlanComp.css';\r\nimport axios from 'axios';\r\nimport {URL} from '../../../redux/config';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nclass MyPlanLeftItem extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            title:''\r\n        }\r\n\r\n        let date = new Date();\r\n        this.today = date.getFullYear() + \"-\" + Number(date.getMonth()+1) + \"-\" + date.getDate();\r\n    }\r\n\r\n    getSpotTitle = () => {\r\n        let url = URL + \"/wish/spottitle?contentsid=\" + this.props.row.spotId;\r\n\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    title: res.data\r\n                })\r\n            }).catch(err=>{\r\n                console.log(\"myplan getSpotTitle 오류 : \" + err);\r\n            })\r\n    }\r\n\r\n    getShareSubject = () => {\r\n        let url = URL + \"/wish/sharesubject?num=\" + this.props.row.shareNum;\r\n\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    title: res.data\r\n                })\r\n            }).catch(err=>{\r\n                console.log(\"myplan getShareSubject 오류 : \" + err);\r\n            })\r\n    }\r\n\r\n    componentWillMount(){\r\n        if(this.props.row.spotId != null)\r\n            this.getSpotTitle();\r\n        else if(this.props.row.shareNum != null)\r\n            this.getShareSubject();\r\n    }\r\n\r\n    render(){\r\n        \r\n        const {row} = this.props;\r\n        const title = row.spotId!=null?this.state.title:row.shareNum!=null?this.state.title.split(\",\")[1]:row.aroundId!=null?row.aroundId:\r\n            row.content.split(\",\")[1];\r\n        // const icon = row.spotId!=null?\"🛕\":row.shareNum!=null?\"👨‍🍳\":row.content!=null&row.aroundId==null?\"📅\"\r\n        //     :row.aroundId!=null&row.content.split(\",\")[0]==\"음식점\"?\"🍔\":row.aroundId!=null&row.content.split(\",\")[0]==\"카페\"?\"☕\":\"🛌\";\r\n\r\n        var icon='';\r\n        if(row.spotid!=null)\r\n            icon = \"🛕\";\r\n        else if(row.shareNum!=null)\r\n            icon = \"👨‍🍳\";\r\n        else if(row.aroundId!=null){\r\n            if(row.content.split(\",\")[0]==\"음식점\")\r\n                icon = \"🍔\";\r\n            else if(row.content.split(\",\")[0]==\"카페\")\r\n                icon = \"☕\";\r\n            else \r\n                icon = \"🛌\";\r\n        }\r\n        else if(row.content!=null&row.aroundId==null){\r\n            if(row.content.split(\",\")[0]==\"우도배\")\r\n                icon = \"🚢\";\r\n            else if(row.content.split(\",\")[0]==\"렌트카\")\r\n                icon = \"🚗\";\r\n            else if(row.content.split(\",\")[0]==\"항공\")\r\n                icon = \"✈\";\r\n            else \r\n                icon = \"📅\";\r\n        }\r\n        var betweenDay = parseInt((new Date(row.wishday) - new Date(this.today))/ (24*60*60*1000));\r\n        var isToday = Number(this.today.split(\"-\")[0]) == Number(row.wishday.split(\"-\")[0]) ?\r\n                     Number(this.today.split(\"-\")[1]) == Number(row.wishday.split(\"-\")[1]) ? \r\n                     Number(this.today.split(\"-\")[2]) == Number(row.wishday.split(\"-\")[2]) ? true: false: false: false;\r\n        return (\r\n            <div>\r\n                <ListItem className=\"myplanLeftList\">\r\n                    <ListItemAvatar>\r\n                        <Avatar>\r\n                            {/* <ImageIcon/> */}\r\n                            {icon}\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={title} secondary={isToday==true?`예정시간 ${row.wishtime}`:`D-${betweenDay}`}/>\r\n                </ListItem>\r\n                <Divider variant=\"inset\" component=\"li\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyPlanLeftItem;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\SharePlan\\SharePlanListData.js",["1053"],"import React, {Component} from \"react\";\r\nimport SharePlanListSub from \"./SharePlanListSub\";\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\n\r\n\r\n\r\nclass SharePlanListData extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        //console.log(\"SharePlanPageComp constructor\", props);\r\n\r\n        this.state={\r\n            group:[]\r\n        }\r\n\r\n\r\n\r\n    \r\n    }\r\n\r\n    getGroupData=()=>{\r\n        let url=URL+\"/plan/groupdata?groupnum=\"+this.props.row.groupNum;\r\n        //console.log(\"그룹넘버 : \" + this.props.row.groupNum);\r\n        \r\n        axios.get(url)\r\n        .then(res=>{\r\n            console.log(res.data);\r\n\r\n            this.setState({\r\n                group:res.data\r\n            });\r\n        }).catch(err=>{\r\n            console.log(\"목록 오류:\"+err);\r\n          })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getGroupData();\r\n    }\r\n\r\n\r\n\r\n    // getGroupData=()=>{\r\n    //     let url=URL+\"/plan/groupdata?groupnum=\"+this.props.row.groupNum;\r\n    //     console.log(\"그룹넘버 : \" + this.props.row.groupNum);\r\n    //     axios.get(url)\r\n    //     .then(res=>{\r\n    //         console.log(res.data);\r\n\r\n    //         this.setState({\r\n    //             clist:res.data\r\n    //         });\r\n    //     }).catch(err=>{\r\n    //         console.log(\"목록 오류:\"+err);\r\n    //       })\r\n    // }\r\n\r\n    \r\n\r\n\r\n    render(){\r\n        \r\n        return(\r\n            \r\n            <div>\r\n               \r\n               {this.props.row.groupNum==1?this.state.group.map((row)=>(\r\n                   <SharePlanListSub row={row}></SharePlanListSub>\r\n               )):''}\r\n                \r\n            </div>\r\n            \r\n           \r\n        )\r\n    }\r\n}\r\n\r\nexport default SharePlanListData;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\BoardSampleItem.js",["1054","1055","1056","1057"],"import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\nimport {Route, Link} from \"react-router-dom\";\r\nimport {URL} from \"../../../redux/config\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nclass BoardSampleItem extends Component {\r\n\r\n    render() {\r\n        const {row} = this.props;\r\n        return (\r\n            <Paper elevation={3}>\r\n                {row.title}\r\n                <img src={row.thumbnail} alt=\"profile\"/>\r\n            </Paper>            \r\n        )        \r\n    }\r\n}\r\n\r\nexport default BoardSampleItem;\r\n\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\SharePlan\\SharePlanListSub.js",["1058","1059"],"import React, {Component} from \"react\";\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\r\n\r\n\r\nclass SharePlanListSub extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        //console.log(\"SharePlanPageComp constructor\", props);\r\n\r\n        \r\n\r\n\r\n\r\n    \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                 <TimelineItem>\r\n        <TimelineOppositeContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {this.props.row.wishtime}\r\n          </Typography>\r\n        </TimelineOppositeContent>\r\n        <TimelineSeparator>\r\n          <TimelineDot>\r\n            <FastfoodIcon />\r\n          </TimelineDot>\r\n          <TimelineConnector />\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          \r\n            <Typography variant=\"h6\" component=\"h1\">\r\n              {this.props.row.title}\r\n            </Typography>\r\n            <Typography>{this.props.row.content}</Typography>\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SharePlanListSub;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\Modal.js",["1060"],"import React, { Component,useState } from 'react';\r\nimport './Modal.css'\r\n\r\nclass Modal extends Component {\r\n    render() {\r\n        // 열기, 닫기, 모달 헤더 텍스트를 부모로부터 받아옴\r\n        const { open, close, header } = this.props;\r\n\r\n        return (\r\n            <div className={ open ? 'openModal modal': 'modal' }>\r\n                { open ? (\r\n                    <section>\r\n                        <header>\r\n                            { header }\r\n                            <button className=\"close\" onClick={close} > &times; </button>\r\n                        </header>\r\n                        <main>\r\n                            {this.props.children}\r\n                        </main>\r\n                        {/* <footer>\r\n                            <button className=\"close\" onClick={close}> 댓글목록 </button>\r\n                        </footer> */}\r\n                    </section>\r\n                ) : null }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\ShareReview.js",["1061","1062"],"import React, {Component, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {URL} from '../../../redux/config';\r\nimport ReviewItem from './ReviewItem';\r\nimport store from \"../../../redux/store\";\r\nimport { MDBIcon } from 'mdbreact';\r\n\r\nclass ShareReview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            listData: []\r\n        }\r\n        this.regroup = this.props.regroup;\r\n\r\n        //글 추가가 되면 자동 호출되게끔 subscribe 등록.\r\n        store.subscribe(this.getAnswerList.bind(this));\r\n    }\r\n\r\n    getAnswerList = () => {\r\n        //댓글 출력하는 함수.\r\n        let url = URL + \"/share/answer\" +\r\n            \"?regroup=\" + this.regroup;\r\n        // console.log(url);\r\n\r\n        axios.get(url\r\n        ).then(res => {\r\n            // console.log(res);\r\n            this.setState({\r\n                listData: res.data\r\n            });\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAnswerList();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n                <hr/>\r\n                {\r\n                    this.state.listData.map((row, idx) => {\r\n                        return (\r\n                            <ReviewItem row={row} key={idx} idx={idx}\r\n                                        history={this.props.history}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShareReview;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\tour\\ReviewListComp.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\tour\\MapComp.js",["1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075"],"/*global kakao */\r\nimport React, { useEffect, useState} from \"react\";\r\nimport './kakaomap.css';\r\nimport Box from '@material-ui/core/Box';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\r\nimport LocalCafeIcon from '@material-ui/icons/LocalCafe';\r\nimport HotelIcon from '@material-ui/icons/Hotel';\r\nimport AroundModal from \"./AroundModal\";\r\nimport UseModal from './UseModal';\r\n\r\nconst MapComp=(props)=> {\r\n\r\n    let longitude = useState(0);\r\n    let latitude = useState(0);\r\n    let title = useState(\"\");\r\n    const [category, setCategory] = useState(\"\");\r\n    const [wishTitle, setWishTitle] = useState(\"\");\r\n    const [wishContent, setWishContent] = useState(\"\");\r\n    \r\n    const [value, setValue] = React.useState(0);\r\n\r\n    console.log(\"longitude : \" + props.longitude);\r\n    useEffect(() => {\r\n        \r\n        longitude = props.longitude;\r\n        latitude = props.latitude;\r\n        title = props.title;\r\n\r\n        mapscript();\r\n    });\r\n\r\n  const mapscript = () => {\r\n    \r\n    //let markers = [];\r\n    let placeOverlay = new kakao.maps.CustomOverlay({zIndex:1}), \r\n        contentNode = document.createElement('div'), // 커스텀 오버레이의 컨텐츠 엘리먼트 입니다 \r\n        markers = [], // 마커를 담을 배열입니다\r\n        currCategory = '';\r\n\r\n\r\n    let mapContainer = document.getElementById(\"map\"), mapOption = {\r\n        center: new kakao.maps.LatLng(latitude, longitude), // 지도의 중심좌표\r\n        level: 3 // 지도의 확대 레벨\r\n    };\r\n\r\n    const map = new kakao.maps.Map(mapContainer, mapOption);\r\n    let ps = new kakao.maps.services.Places(map);\r\n    \r\n    //마커가 표시 될 위치\r\n    let markerPosition = new kakao.maps.LatLng(\r\n        latitude,\r\n        longitude\r\n    );\r\n\r\n    // 마커를 생성\r\n    let marker = new kakao.maps.Marker({\r\n        map:map,\r\n      position: markerPosition,\r\n      title: title\r\n    });\r\n\r\n    let content = '<div className=\"wrap\"><div className=\"info\"><div className=\"mtitle\">' + title\r\n            + '<div className=\"close\" onClick={this.closeOverlay.bind(this)} title=\"닫기\"></div></div></div></div>';\r\n\r\n    //마커 위에 커스텀오버레이를 표시합니다\r\n    //마커를 중심으로 커스텀 오버레이를 표시하기위해 CSS를 이용해 위치를 설정했습니다\r\n    let overlay = new kakao.maps.CustomOverlay({\r\n        content: content,\r\n        map: map,\r\n        position: marker.getPosition()       \r\n    });\r\n    //마커를 클릭했을 때 커스텀 오버레이를 표시합니다\r\n    kakao.maps.event.addListener(marker, 'click', function() {\r\n        overlay.setMap(map);\r\n    });\r\n    // 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\r\n    let infowindow = new kakao.maps.InfoWindow({zIndex:1});\r\n\r\n    //커스텀 오버레이를 닫기 위해 호출되는 함수입니다 \r\n    function closeOverlay() {\r\n        overlay.setMap(null);     \r\n    }\r\n    // 지도에 idle 이벤트를 등록합니다\r\n    kakao.maps.event.addListener(map, 'idle', searchPlaces);\r\n    // 커스텀 오버레이의 컨텐츠 노드에 css class를 추가합니다 \r\n    contentNode.className = 'placeinfo_wrap';\r\n    // 커스텀 오버레이의 컨텐츠 노드에 mousedown, touchstart 이벤트가 발생했을때\r\n    // 지도 객체에 이벤트가 전달되지 않도록 이벤트 핸들러로 kakao.maps.event.preventMap 메소드를 등록합니다 \r\n    addEventHandle(contentNode, 'mousedown', kakao.maps.event.preventMap);\r\n    addEventHandle(contentNode, 'touchstart', kakao.maps.event.preventMap);\r\n    // 커스텀 오버레이 컨텐츠를 설정합니다\r\n    placeOverlay.setContent(contentNode);  \r\n    // 각 카테고리에 클릭 이벤트를 등록합니다\r\n    addCategoryClickEvent();   \r\n    \r\n    //searchPlaces();\r\n\r\n    function addEventHandle(target, type, callback) {\r\n        if (target.addEventListener) {\r\n            target.addEventListener(type, callback);\r\n        } else {\r\n            target.attachEvent('on' + type, callback);\r\n        }\r\n    }\r\n    // 키워드 검색을 요청하는 함수입니다\r\n    function searchPlaces() {\r\n        if (!currCategory) {\r\n            return;\r\n        }\r\n        \r\n        // 커스텀 오버레이를 숨깁니다 \r\n        placeOverlay.setMap(null);\r\n        // 지도에 표시되고 있는 마커를 제거합니다\r\n        removeMarker();\r\n        \r\n        ps.categorySearch(currCategory, placesSearchCB, {useMapBounds:true});\r\n        \r\n    }\r\n    // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\r\nfunction placesSearchCB(data, status, pagination) {\r\n\r\n    if (status === kakao.maps.services.Status.OK) {\r\n         // 정상적으로 검색이 완료됐으면 지도에 마커를 표출합니다\r\n\r\n         displayPlaces(data);\r\n         \r\n      // 페이지 번호를 표출합니다\r\n         displayPagination(pagination);\r\n     } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\r\n         // 검색결과가 없는경우 해야할 처리가 있다면 이곳에 작성해 주세요\r\n         displayPlaces(null);\r\n     } else if (status === kakao.maps.services.Status.ERROR) {\r\n         // 에러로 인해 검색결과가 나오지 않은 경우 해야할 처리가 있다면 이곳에 작성해 주세요\r\n         \r\n     }\r\n }\r\n // 검색 결과 목록과 마커를 표출하는 함수입니다\r\n function displayPlaces(places) {\r\n    // 몇번째 카테고리가 선택되어 있는지 얻어옵니다\r\n     // 이 순서는 스프라이트 이미지에서의 위치를 계산하는데 사용됩니다\r\n     var order = document.getElementById(currCategory).getAttribute('data-order');\r\n     var listEl = document.getElementById('placesList'), \r\n     menuEl = document.getElementById('menu_wrap'),\r\n     fragment = document.createDocumentFragment(), \r\n     bounds = new kakao.maps.LatLngBounds(), \r\n     listStr = '';\r\n  // 검색 결과 목록에 추가된 항목들을 제거합니다\r\n     removeAllChildNods(listEl);\r\n     // 지도에 표시되고 있는 마커를 제거합니다\r\n     removeMarker();\r\n     \r\n     if(places == null){\r\n        itemEl = getListItem(-1, null);\r\n        fragment.appendChild(itemEl);\r\n     }\r\n    else{\r\n        for ( var i=0; i<places.length; i++ ) {\r\n            // 마커를 생성하고 지도에 표시합니다\r\n            var placePosition = new kakao.maps.LatLng(places[i].y, places[i].x),\r\n                marker = addMarker(placePosition, i), \r\n                itemEl = getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다\r\n            // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n            // LatLngBounds 객체에 좌표를 추가합니다\r\n            bounds.extend(placePosition);\r\n            // 마커와 검색결과 항목에 mouseover 했을때\r\n            // 해당 장소에 인포윈도우에 장소명을 표시합니다\r\n            // mouseout 했을 때는 인포윈도우를 닫습니다\r\n            (function(marker, place) {\r\n                kakao.maps.event.addListener(marker, 'click', function() {\r\n                    displayPlaceInfo(place);\r\n                });\r\n            })(marker, places[i]);\r\n            fragment.appendChild(itemEl);\r\n        }\r\n    }\r\n    \r\n     // 검색결과 항목들을 검색결과 목록 Elemnet에 추가합니다\r\n     listEl.appendChild(fragment);\r\n    // menuEl.scrollTop = 0;\r\n     // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n     //map.setBounds(bounds);\r\n }\r\n // 검색결과 항목을 Element로 반환하는 함수입니다\r\n function getListItem(index, places) {\r\n     \r\n     if(index == -1){\r\n        var el = document.createElement('li'),\r\n        itemStr = \"<div><br/>검색 결과가 존재하지 않습니다.</div>\";\r\n        el.innerHTML = itemStr;\r\n        el.className = 'item';\r\n    \r\n        return el;\r\n     }\r\n    else{\r\n        // setting(places);\r\n        var el = document.createElement('li'),\r\n        itemStr = '<table className=\"table table-bordered\" id=\"placeListTable\"><tr>' +\r\n                    '<td style={{width:\"20%\"}}><span class=\"markerbg marker_' + (index+1) + '\"></span></td>' +\r\n                    '<td style={{width:\"60%\"}}><a class=\"info\" href=\"' + places.place_url + '\" target=\"_blank\" title=\"' + places.place_name + '\">' +\r\n                    '<p>' + places.place_name + '</p>';\r\n        itemStr += '<span class=\"gray\">' +  places.address_name  + '</span>';      \r\n        itemStr += '<span class=\"tel\">' + places.phone  + '</span>' + \r\n                    '</a></td>' +\r\n                    '<td style={{width:\"20%\"}}><div class=\"addWishBtn\">일정추가</div></td></tr></table>';\r\n        el.innerHTML = itemStr;\r\n        el.onclick=function(){\r\n            setWishTitle(places.place_name);\r\n            setWishContent(places.address_name);\r\n            toggle();\r\n        }\r\n        el.className = 'item';\r\n                \r\n        return el;\r\n\r\n        // return <div dangerouslySetInnerHTML={{ __html : itemStr}}></div>;\r\n    }    \r\n }\r\n \r\n \r\n \r\n // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\r\n function addMarker(position, idx, title) {\r\n     var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png', // 마커 이미지 url, 스프라이트 이미지를 씁니다\r\n         imageSize = new kakao.maps.Size(36, 37),  // 마커 이미지의 크기\r\n         imgOptions =  {\r\n             spriteSize : new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기\r\n             spriteOrigin : new kakao.maps.Point(0, (idx*46)+10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\r\n             offset: new kakao.maps.Point(13, 37) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\r\n         },\r\n         markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\r\n             marker = new kakao.maps.Marker({\r\n             position: position, // 마커의 위치\r\n             image: markerImage \r\n         });\r\n     marker.setMap(map); // 지도 위에 마커를 표출합니다\r\n     markers.push(marker);  // 배열에 생성된 마커를 추가합니다\r\n     return marker;\r\n }\r\n // 지도 위에 표시되고 있는 마커를 모두 제거합니다\r\n function removeMarker() {\r\n     for ( var i = 0; i < markers.length; i++ ) {\r\n         markers[i].setMap(null);\r\n     }   \r\n     markers = [];\r\n }\r\n // 검색결과 목록 하단에 페이지번호를 표시는 함수입니다\r\n function displayPagination(pagination) {\r\n     var paginationEl = document.getElementById('pagination'),\r\n         fragment = document.createDocumentFragment(),\r\n         i; \r\n     // 기존에 추가된 페이지번호를 삭제합니다\r\n     while (paginationEl.hasChildNodes()) {\r\n         paginationEl.removeChild (paginationEl.lastChild);\r\n     }\r\n     for (i=1; i<=pagination.last; i++) {\r\n         var el = document.createElement('a');\r\n         el.href = \"#\";\r\n         el.innerHTML = i;\r\n         if (i===pagination.current) {\r\n             el.className = 'on';\r\n         } else {\r\n             el.onclick = (function(i) {\r\n                 return function() {\r\n                     pagination.gotoPage(i);\r\n                 }\r\n             })(i);\r\n         }\r\n         fragment.appendChild(el);\r\n     }\r\n     paginationEl.appendChild(fragment);\r\n }\r\n\r\n    // 클릭한 마커에 대한 장소 상세정보를 커스텀 오버레이로 표시하는 함수입니다\r\n    function displayPlaceInfo (place) {\r\n        var content = '<div class=\"placeinfo\">' +\r\n                        '   <a class=\"title\" href=\"' + place.place_url + '\" target=\"_blank\" title=\"' + place.place_name + '\">' + place.place_name + '</a>';   \r\n\r\n        if (place.road_address_name) {\r\n            content += '    <span title=\"' + place.road_address_name + '\">' + place.road_address_name + '</span>' +\r\n                        '  <span class=\"jibun\" title=\"' + place.address_name + '\">(지번 : ' + place.address_name + ')</span>';\r\n        }  else {\r\n            content += '    <span title=\"' + place.address_name + '\">' + place.address_name + '</span>';\r\n        }                \r\n    \r\n        content += '    <span class=\"tel\">' + place.phone + '</span>' + \r\n                    '</div>' + \r\n                    '<div class=\"after\"></div>';\r\n\r\n        contentNode.innerHTML = content;\r\n        placeOverlay.setPosition(new kakao.maps.LatLng(place.y, place.x));\r\n        placeOverlay.setMap(map);  \r\n    }\r\n\r\n    // 검색결과 목록의 자식 Element를 제거하는 함수입니다\r\n    function removeAllChildNods(el) {   \r\n        while (el.hasChildNodes()) {\r\n            el.removeChild (el.lastChild);\r\n        }\r\n    }\r\n  \r\n    //각 카테고리에 클릭 이벤트를 등록합니다\r\n    function addCategoryClickEvent() {\r\n        var category = document.getElementById('category'),\r\n            children = category.children;\r\n        for (var i=0; i<children.length; i++) {\r\n            children[i].onclick = onClickCategory;\r\n        }\r\n    }\r\n\r\n    //카테고리를 클릭했을 때 호출되는 함수입니다\r\n    function onClickCategory() {\r\n        var id = this.id, className = this.className;\r\n\r\n        placeOverlay.setMap(null);\r\n        if (className === 'on') {\r\n            currCategory = '';\r\n            // changeCategoryClass();\r\n            removeMarker();\r\n        } else {\r\n            currCategory = id;\r\n            setCategory(currCategory);\r\n            // changeCategoryClass(this);\r\n            searchPlaces();\r\n        }\r\n    }\r\n\r\n    //클릭된 카테고리에만 클릭된 스타일을 적용하는 함수입니다\r\n    // function changeCategoryClass(el) {\r\n    //     var category = document.getElementById('category'),\r\n    //         children = category.children,\r\n    //         i;\r\n    //     for ( i=0; i<children.length; i++ ) {\r\n    //         children[i].className = '';\r\n    //     }\r\n    //     if (el) {\r\n    //         el.className = 'on';\r\n    //     } \r\n    // } \r\n    // 마커를 지도 위에 표시\r\n    marker.setMap(map);\r\n  };\r\n\r\n\r\n    const {isShowing, toggle} = UseModal();\r\n  return (\r\n      <div>\r\n          {/* <div id=\"map\" style={{ width: \"500px\", height: \"500px\" }}></div> */}\r\n          \r\n          {/* <button className=\"button-default\" onClick={toggle}>Show Modal</button> */}\r\n          {/* 모달 */}\r\n          <AroundModal\r\n                isShowing={isShowing}\r\n                hide={toggle}\r\n                wishTitle = {wishTitle}\r\n                wishContent = {wishContent}\r\n                category = {category}\r\n            />\r\n\r\n          <Box className=\"map_wrap\" style={{textAlign: 'center'}}\r\n                        display=\"flex\"\r\n                        flexWrap=\"wrap\"\r\n                        p={1}\r\n                        m={1}\r\n                        bgcolor=\"background.paper\"\r\n                        justifyContent=\"center\"\r\n                        css={{ maxWidth: '100%' }}\r\n                    >\r\n                        \r\n                        <Box m={1} id=\"map\" style={{position:'relative', overflow:'hidden'}}>\r\n                            <input type=\"hidden\" value={title} id=\"keyword\" size=\"15\"></input>\r\n                        </Box>\r\n\r\n                        <br/><br/>\r\n                        \r\n                        <Box m={1} id=\"placeListBox\">\r\n                            <BottomNavigation\r\n                                    id=\"category\"\r\n                                    value={value}\r\n                                    onChange={(event, newValue) => {\r\n                                        setValue(newValue);\r\n                                    }}\r\n                                    showLabels\r\n                                    >\r\n                                    <BottomNavigationAction id=\"FD6\" data-order=\"0\" label=\"Food\" icon={<RestaurantIcon />} \r\n                                        style={{borderLeft: '1px solid #ddd', borderTop: '1px solid #ddd', borderBottom: '1px solid #ddd'}} />\r\n                                    <BottomNavigationAction id=\"CE7\" data-order=\"1\" label=\"Cafe\" icon={<LocalCafeIcon />} style={{border: '1px solid #ddd'}} />\r\n                                    <BottomNavigationAction id=\"AD5\" data-order=\"2\" label=\"Rooms\" icon={<HotelIcon />}\r\n                                        style={{borderRight: '1px solid #ddd', borderTop: '1px solid #ddd', borderBottom: '1px solid #ddd'}}/>\r\n                                    </BottomNavigation>\r\n                            <div id=\"menu_wrap\" class=\"bg_white\">\r\n                                <ul id=\"placesList\">\r\n                                    <li style={{marginTop: '30px'}}>원하시는 카테고리를 선택해주세요.</li>\r\n                                </ul>\r\n                                <div id=\"pagination\"></div>\r\n                            </div>\r\n                        </Box>\r\n                        \r\n                    </Box>\r\n\r\n                    {/* 일정 추가 모달 */}\r\n                    {/* <Modal\r\n                        aria-labelledby=\"transition-modal-title\"\r\n                        aria-describedby=\"transition-modal-description\"\r\n                        className=\"aroundmodal\"\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        closeAfterTransition\r\n                        BackdropComponent={Backdrop}\r\n                        BackdropProps={{\r\n                        timeout: 500,\r\n                        }}\r\n                    >\r\n                        <Fade in={open}>\r\n                        <div className=\"aroundpaper\">\r\n                            <span className=\"aroundmodalTitle\">일정 추가</span><br/> */}\r\n                            {/* 🏰&nbsp;&nbsp;{this.state.spotdata.title}<br/> */}\r\n                            {/* 🗺&nbsp;&nbsp;{this.state.spotdata.roadaddr}<br/> */}\r\n                            {/* 🗓&nbsp;&nbsp;여행 날짜\r\n                            <input type=\"date\" class=\"form-control form-control-sm\" ref=\"wishday\"></input>\r\n                            ⏰&nbsp;&nbsp;예정 시간\r\n                            <input type=\"time\" class=\"form-control form-control-sm\" ref=\"wishtime\"></input><br/>\r\n                            <div style={{textAlign: 'center'}}>\r\n                                <button type=\"button\" class=\"btn btn-warning aroundmodalBtn\"><b>추가</b></button>\r\n                            </div>\r\n\r\n                        </div>\r\n                        </Fade>\r\n                    </Modal> */}\r\n\r\n                    \r\n      </div>   \r\n  );\r\n}\r\n\r\nexport default MapComp;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipTableB1.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipTableB2.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipTableA1.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipTableA3.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipTableA2.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipTableA4.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\ReviewItem.js",["1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090"],"import React, {Component, useState} from 'react';\r\nimport {actionType, boardActionType, URL} from \"../../../redux/config\";\r\nimport axios from \"axios\";\r\nimport store from \"../../../redux/store\";\r\nimport {MDBBtn} from \"mdbreact\";\r\nimport imgX from \"../../../image/imgX.png\";\r\nimport userimg from '../../../image/user.png';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport './Share.css';\r\nimport { Visibility } from '@material-ui/icons';\r\nimport SubdirectoryArrowRightIcon from '@material-ui/icons/SubdirectoryArrowRight';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\n\r\nclass ReviewItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n            saveType: \"\",\r\n            photo:''\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    onTriggerInput = (type = null) => {\r\n\r\n        const {row} = this.props;\r\n        var className = `.input_answer_${row.regroup}_${row.relevel}_${row.restep}`;\r\n        console.log(className);\r\n\r\n        let divInput = document.querySelector(className);\r\n\r\n        // if (this.state.saveType == type) {\r\n        //통신 끝나고 들어온건지, 댓글쓰기/수정 버튼눌러 들어온건지.\r\n        if (type != null) {\r\n            if (this.state.saveType == type) {\r\n                if (this.state.isOpen) {\r\n                    divInput.style.display = \"none\";\r\n                    this.setState({\r\n                        isOpen: false,\r\n                    });\r\n                } else {\r\n                    divInput.style.display = \"block\";\r\n                    this.setState({\r\n                        isOpen: true,\r\n                        saveType: type,\r\n                    });\r\n                }\r\n            } else {\r\n                divInput.style.display = \"block\";\r\n                this.setState({\r\n                    isOpen: true,\r\n                    saveType: type,\r\n                });\r\n            }\r\n        } else {\r\n            divInput.style.display = \"none\";\r\n            this.setState({\r\n                isOpen: false,\r\n                saveType: \"\",\r\n            });\r\n        }\r\n    }\r\n\r\n    onSaveButton = () => {\r\n        console.log(this.state.saveType);\r\n        if (this.state.saveType == \"insert\") {\r\n            this.onInsertSubAnswer();\r\n        } else if (this.state.saveType == \"update\") {\r\n            this.onUpdateSubAnswer();\r\n        }\r\n    }\r\n\r\n    onInsertSubAnswer = () => {\r\n        // 리뷰 대댓글 추가.\r\n        let num = this.props.row.num;\r\n        let regroup = this.props.row.regroup;\r\n        let relevel = this.props.row.relevel;\r\n        let restep = this.props.row.restep;\r\n        let content = this.refs.content.value;\r\n        let id = store.getState().loginId;\r\n        let star = 0;\r\n\r\n        let url = URL + \"/share/insert\" +\r\n            \"?\" +\r\n            \"relevel=\" + relevel +\r\n            \"&restep=\" + restep +\r\n            \"&regroup=\" + regroup;\r\n\r\n        let data = {\r\n            num: num,\r\n            content: content,\r\n            star: star,\r\n            id: id,\r\n        }\r\n\r\n        console.log(url, data);\r\n\r\n        axios.post(url, data\r\n        ).then(res => {\r\n            console.log(\"onInsertAnswer res\", res);\r\n            \r\n            store.dispatch({\r\n                type: actionType.shareBoardUpdate,\r\n            });\r\n\r\n            this.refs.content.value = \"\";\r\n            var del = document.getElementsByClassName(\"ShareReviewAll\");\r\n                for(var i=0; del.length; i++){\r\n                    del.item(i).style.display = \"none\";\r\n                }\r\n\r\n            this.onTriggerInput();\r\n        }).catch(err => {\r\n            console.log(\"onInsertAnswer err\", err);\r\n        })\r\n    }\r\n\r\n    onDeleteSubAnswer = () => {\r\n        let num = this.props.row.num;\r\n        let regroup = this.props.row.regroup;\r\n        let url = URL + \"/share/deleteanswer\" +\r\n            \"?num=\" + num;\r\n\r\n        console.log(\"onDeleteData\", url);\r\n\r\n        if (window.confirm(\"삭제하시겠습니까?\")) {\r\n            axios.get(url\r\n            ).then(res => {\r\n\r\n                store.dispatch({\r\n                    type: actionType.shareBoardUpdate,\r\n                });\r\n\r\n                var del = document.getElementsByClassName(\"ShareReviewAll\");\r\n                for(var i=0; del.length; i++){\r\n                    del.item(i).style.display = \"none\";\r\n                }\r\n\r\n            }).catch(err => {\r\n                console.log(\"onDeleteData() err\", err);\r\n            });\r\n        }\r\n    }\r\n\r\n    onUpdateSubAnswer = () => {\r\n        let num = this.props.row.num;\r\n        let content = this.refs.content.value;\r\n        let url = URL + \"/share/updateanswer\" +\r\n            \"?num=\" + num +\r\n            \"&content=\" + content;\r\n        console.log(\"onUpdateSubAnswer\", url);\r\n\r\n        if (window.confirm(\"수정하시겠습니까?\")) {\r\n            axios.post(url\r\n            ).then(res => {\r\n                console.log(\"onUpdateSubAnswer() res\", res);\r\n                \r\n                store.dispatch({\r\n                    type: actionType.shareBoardUpdate,\r\n                });\r\n\r\n                var del = document.getElementsByClassName(\"ShareReviewAll\");\r\n                for(var i=0; del.length; i++){\r\n                    del.item(i).style.display = \"none\";\r\n                }\r\n                // this.props.history.push(\"/share\");\r\n                this.refs.content.value = \"\";\r\n                this.onTriggerInput();\r\n            }).catch(err => {\r\n                console.log(\"onUpdateSubAnswer() err\", err);\r\n            });\r\n        }\r\n    }\r\n\r\n    getIsDisableAnswerButton = (row, actionType = null) => {\r\n        // disabled={row.content.includes(\"삭제된 글입니다.\") ? true : false}\r\n        // console.log(row.id, store.getState().loginId, actionType);\r\n        if (actionType == boardActionType.write) {\r\n            return false;\r\n        } else {\r\n            if (row.content.includes(\"삭제된 글입니다.\")) {\r\n                return true;\r\n            } else if (row.id != store.getState().loginId) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    // 프로필 사진\r\n    getPhoto = () => {\r\n        let url = URL + '/member/getdata?id=' + this.props.row.id;\r\n        axios.get(url)\r\n        .then(response=>{\r\n            this.setState({\r\n                photo: response.data.photo       \r\n            })\r\n        }).catch(err=>{\r\n            console.log(\"목록 오류:\"+err);\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getPhoto();\r\n    }\r\n    /*\r\n        addr: null\r\n        content: \"댓글 수정 가능한지.\"\r\n        id: null\r\n        likes: 0\r\n        num: \"488\"\r\n        photo: \"no\"\r\n        regroup: 476\r\n        relevel: 1\r\n        restep: 3\r\n        star: \"0\"\r\n        subject: null\r\n        writeday: \"2021-02-04\"\r\n    */\r\n    render() {\r\n        const {row} = this.props;\r\n        const photo = this.state.photo==\"no\"?userimg:URL + \"/\" + this.state.photo;\r\n\r\n        return (\r\n            <div className=\"ShareModalReviewItem\" style={{marginLeft: `calc(30px*${row.relevel})`, borderBottom: '1px dotted #ddd'}}>\r\n                {/*num:{row.num} / {row.photo} / id:{row.id}*/}\r\n                {/*/ {row.regroup} / {row.relevel} / {row.restep} / 내용 :*/}\r\n\r\n                {row.relevel==1?<br/>:<SubdirectoryArrowRightIcon style={{color: '#ddd', marginRight: '5px'}}/>}\r\n                  <img\r\n                    src={photo}\r\n                    alt=\"\"\r\n                    className=\"ShareModalReviewProfile\"\r\n                    style={{borderRadius:'100%', border:'0.1px solid #ddd'}}\r\n                  />\r\n                &nbsp;&nbsp;<b style={{fontWeight: '900'}}>{row.id}</b>&nbsp;&nbsp;\r\n                \r\n                {/* 수정버튼 */}\r\n                {row.id==store.getState().loginId?\r\n                    <BuildIcon className=\"ShareModalUpBtn\" style={{color: '#aaa', cursor: 'pointer'}}\r\n                        onClick={this.onTriggerInput.bind(this, \"update\")}\r\n                        disabled={this.getIsDisableAnswerButton(row)}/>:\"\"\r\n                }\r\n                <br/>\r\n\r\n                <div className=\"ShareModalMsg\" style={{position: 'relative'}} onMouseOver={()=>{\r\n                    document.getElementsByClassName(\"ShareModalReviews\")[this.props.idx].style.visibility='visible';\r\n                }} onMouseOut={()=>{\r\n                    document.getElementsByClassName(\"ShareModalReviews\")[this.props.idx].style.visibility='collapse';\r\n                }}>\r\n                    {row.content}&nbsp;&nbsp;\r\n\r\n                    {/* 추가 버튼 */}\r\n                    <SubdirectoryArrowRightIcon className=\"ShareModalReviews\" style={{visibility: 'collapse', color: '#ddd', cursor: 'pointer'}}\r\n                        onClick={this.onTriggerInput.bind(this, \"insert\")} disabled={this.getIsDisableAnswerButton(row, boardActionType.write)}/>\r\n                \r\n                    <div style={{position:'absolute', right:'5px', bottom:'5px', color: '#888'}}>{row.writeday}</div>\r\n                </div>\r\n\r\n                {/* <MDBBtn size=\"sm\" color=\"deep-orange\"\r\n                        onClick={this.onTriggerInput.bind(this, \"insert\")}\r\n                        disabled={this.getIsDisableAnswerButton(row, boardActionType.write)}\r\n                ><b style={{fontSize: '12px'}}>댓글 쓰기</b>\r\n                </MDBBtn>\r\n                &nbsp;\r\n                <MDBBtn size=\"sm\" color=\"deep-orange\"\r\n                        onClick={this.onTriggerInput.bind(this, \"update\")}\r\n                        disabled={this.getIsDisableAnswerButton(row)}\r\n                ><b style={{fontSize: '12px'}}>댓글 수정</b>\r\n                </MDBBtn>\r\n                &nbsp;\r\n                <MDBBtn size=\"sm\" color=\"deep-orange\"\r\n                        onClick={this.onDeleteSubAnswer.bind(this)}\r\n                        disabled={this.getIsDisableAnswerButton(row)}\r\n                ><b style={{fontSize: '12px'}}>댓글 삭제</b>\r\n                </MDBBtn> */}\r\n\r\n                {/*댓글 입력창 on/off*/}\r\n                <div className={`input_answer_${row.regroup}_${row.relevel}_${row.restep} ShareReviewAll`}\r\n                     style={{\r\n                         display: \"none\",\r\n                     }}\r\n                >\r\n                    <textarea\r\n                        placeholder={(this.state.saveType == \"insert\")\r\n                            ? \"댓글 입력\"\r\n                            : \"수정 댓글 입력\"}\r\n                        id=\"shareInputAnswer\"\r\n                        className=\"form-control\"\r\n                        ref=\"content\"\r\n                        style={{resize: 'none'}}\r\n                    />\r\n                    <div style={{textAlign: 'right'}}>\r\n                        {this.state.saveType == \"update\"? \r\n                        <MDBBtn color=\"primary\"\r\n                                onClick={this.onDeleteSubAnswer.bind(this)}\r\n                                    >삭제</MDBBtn>:\"\"}\r\n                        <MDBBtn color=\"dark-green\"\r\n                                onClick={this.onSaveButton.bind(this)}\r\n                        >저장</MDBBtn>\r\n                    </div>\r\n                </div>\r\n                {/* <hr/> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReviewItem;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\ReviewPage.js",["1091","1092","1093","1094","1095"],"import React, {Component} from 'react';\r\n\r\nclass ReviewPage extends Component {\r\n\r\n    render() {\r\n        const {startPage, endPage, currentPage, totalPage, paginate} = this.props;\r\n        let prev = startPage > 1 ?\r\n            <li className=\"page-item\" ><a class=\"page-link\" onClick={(e)=>{\r\n                e.preventDefault();\r\n                this.props.paginate(startPage - 1);\r\n            }}>◀</a></li> : \"\";\r\n\r\n        let next = endPage < totalPage ?\r\n            <li className=\"page-item\"><a class=\"page-link\" onClick={(e)=>{\r\n                e.preventDefault();\r\n                this.props.paginate(endPage + 1);\r\n            }}>▶</a></li> : \"\";\r\n\r\n        let page = [];\r\n\r\n        for (let i = startPage; i <= endPage; i++) {\r\n            page.push(i);\r\n        }\r\n\r\n        let pages = page.map(function (num, idx) {\r\n            return (\r\n                <li className=\"page-item\" key={idx}>\r\n                    <a class=\"page-link\"\r\n                       style={{\r\n                           color: num == currentPage ? \"#D1CC38\" : \"black\",\r\n                           fontWeight: num == currentPage ? \"700\" : \"\"\r\n                       }} onClick={(e)=>{\r\n                            e.preventDefault();\r\n                            paginate(num);\r\n                        }}>{num}</a></li>\r\n            )\r\n        });\r\n\r\n        let pagination = '';\r\n        if (matchMedia(\"screen and (max-width:770px)\").matches) {\r\n            pagination =\r\n                <ul className='pagination pagination-sm' style={{justifyContent: 'center', marginBottom: '100px'}}>\r\n                    {prev}\r\n                    {pages}\r\n                    {next}\r\n                </ul>;\r\n        } else {\r\n            pagination =\r\n                <ul className='pagination' style={{justifyContent: 'center', marginBottom: '100px'}}>\r\n                    {prev}\r\n                    {pages}\r\n                    {next}\r\n                </ul>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {pagination}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ReviewPage;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\ReviewList.js",["1096","1097","1098","1099","1100","1101"],"import React, {Component} from \"react\";\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport axios from 'axios';\r\nimport {URL} from '../../../redux/config';\r\nimport {Route, Link} from \"react-router-dom\";\r\nimport './style/MyReviewCss.css';\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\r\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\r\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\r\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\r\n\r\nclass ReviewList extends Component {\r\n\r\n\r\n    updateLikes = () =>{\r\n        let url = URL + \"/spot/updatelikes?contentsid=\" + this.props.row.contentsid;\r\n\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.props.getList();\r\n            }).catch(err=>{\r\n                console.log(\"tourlist likes 업데이트 오류 : \" + err);\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        const {row}=this.props;\r\n        const date = row.writeday.split(\" \")[0];\r\n        const photo = row.photo==\"no\"?\"x\":<img src={row.photo} alt=\"profile\"/>;\r\n        const star = row.star==1?<SentimentVeryDissatisfiedIcon/>:row.star==2?<SentimentDissatisfiedIcon/>:row.star==3?<SentimentSatisfiedIcon/>\r\n            :row.star==4?<SentimentSatisfiedAltIcon/>:<SentimentVerySatisfiedIcon/>;\r\n\r\n        let photoCol = '';\r\n        if (matchMedia(\"screen and (min-width:400px)\").matches) {\r\n            photoCol = <TableCell align=\"center\" className=\"mypageReCol\">{photo}</TableCell>;\r\n        }\r\n\r\n        return (\r\n           \r\n                <TableRow> \r\n                \r\n                    <TableCell align=\"center\" className=\"mypageReCol\">{this.props.idx}</TableCell>\r\n                    {photoCol}\r\n                    <TableCell className=\"mypageReCol\"> \r\n                        <Link to={`/tour/${row.contentsid}`} id=\"mypageReviewLink\">\r\n                            <div id=\"mypageReContent\" style={{whiteSpace:'nowrap', textOverflow:'ellipsis', overflow:'hidden'}}>{row.content}</div>\r\n                        </Link>   \r\n                    </TableCell>\r\n                    <TableCell align=\"center\" className=\"mypageReCol\" style={{color: '#F0CD58'}}>{star}</TableCell>\r\n                    <TableCell align=\"center\" width=\"20%\" className=\"mypageReCol\">{date}</TableCell>\r\n                \r\n                </TableRow>\r\n           \r\n        );\r\n    }\r\n}\r\nexport default ReviewList;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\Calendar.js",["1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116"],"import React, { Component } from 'react'\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\nimport DayItem from './DayItem';\r\nimport Header from './Header';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport './style/RCA.css';\r\nimport { TiTimes } from \"react-icons/ti\";\r\nimport ClistItem from './ClistItem';\r\nimport store from '../../../redux/store';\r\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link } from \"react-router-dom\";\r\n\r\nclass DateHeader extends Component {\r\n\r\n  dateToArray = (dates) => {\r\n    if (Array.isArray(dates)) {\r\n      return dates\r\n    } else if (typeof dates === \"string\") {\r\n      return dates.split(',')\r\n    } else {\r\n      return [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"]\r\n    }\r\n  }\r\n\r\n  mapArrayToDate = (dateArray) => {\r\n    try {\r\n      if (dateArray.length !== 7) {\r\n        console.log(new Error(\"dates props must be had 7 date\"))\r\n        dateArray = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"]\r\n      }\r\n\r\n      return dateArray.map((date, index) => {\r\n        const className = () => {\r\n          let className = \"RCA-calendar-date-component\";\r\n          if (index === 0) {\r\n            return className + \" date-sun\"\r\n          } else if (index === 6) {\r\n            return className + \" date-sat\"\r\n          } else {\r\n            return className + \" date-weekday\"\r\n          }\r\n        }\r\n        return (\r\n          <div className={className()} key={\"RCA-header-\" + date}>\r\n            {date}\r\n            \r\n          </div>\r\n        )\r\n      })\r\n    } catch{\r\n      throw new Error(\"date must be string or component\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"RCA-calendar-date-header\">\r\n        {this.mapArrayToDate(this.dateToArray(this.props.dates))}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Week extends Component {\r\n    constructor(props){\r\n      super(props);\r\n\r\n      this.ym = this.props.ymOfThisCalendar;\r\n      this.state={\r\n        // list:[],\r\n        clist:[],\r\n        open: false,\r\n        setOpen: false,\r\n        alertOpen: false,\r\n        alertSetOpen: false      \r\n      };\r\n\r\n      \r\n    }\r\n\r\n    toggle = () => {\r\n      this.setState({\r\n          open: !this.state.open\r\n      })\r\n    };\r\n\r\n    // alert 함수\r\n    alertOpen = () => {\r\n      this.setState({\r\n          alertOpen: true\r\n      })\r\n    };\r\n\r\n    alertClose = () => {\r\n      this.setState({\r\n          alertOpen: false\r\n      })\r\n    };\r\n      \r\n\r\n      getList=(day)=>{\r\n            let url = URL + \"/wish/daylist?memId=\"+store.getState().loginId + \"&day=\" + day ;\r\n            \r\n            axios.get(url)\r\n            .then(res=>{\r\n              console.log(\"출력:\"+res.data);\r\n              this.setState({\r\n                  clist:res.data\r\n              });\r\n          }).catch(err=>{\r\n            console.log(\"목록 오류:\"+err);\r\n          })\r\n    }\r\n    \r\n\r\n  Days = (firstDayFormat,weekIndex) => {\r\n      const _days = [];\r\n      \r\n\r\n      for (let i = 0; i < 7; i++) {\r\n\r\n        const Day = moment(firstDayFormat).add(i,'d');\r\n        _days.push({\r\n          yearMonthDayFormat: Day.format(\"YYYY-MM-DD\"),\r\n          getYear: Day.format('Y'),\r\n          getMonth: Day.format('M'),\r\n          getDay: Day.format('D'),\r\n          isHolyDay: false,\r\n          weekIndex\r\n        });\r\n      }\r\n\r\n      return _days;\r\n  }\r\n\r\n  mapDaysToComponents = (Days,calendarMonthYear ,selectedDayFormat ,fn = () => { }) => {\r\n\r\n    const thisMonth = moment(calendarMonthYear);\r\n\r\n    return Days.map((dayInfo, i) => {\r\n\r\n      let className = \"date-weekday-label\";\r\n\r\n      if (!thisMonth.isSame(dayInfo.yearMonthDayFormat,'month')) {\r\n        className = \"date-notThisMonth\";\r\n      } else if (i === 0) {\r\n        className = \"date-sun\"\r\n      }else if(i===6){\r\n        className =\"date-sat\"\r\n      }\r\n\r\n      if(moment(dayInfo.yearMonthDayFormat).isSame(selectedDayFormat,'day')){\r\n        className = \"selected\"\r\n        \r\n      }\r\n   \r\n        var date = new Date(); \r\n        var year = date.getFullYear(); \r\n        var month = new String(date.getMonth()); \r\n        var days = new String(date.getDate());\r\n        var today = new Date(year, month, days);\r\n        var selectDay = new Date(dayInfo.getYear, dayInfo.getMonth-1, dayInfo.getDay);\r\n        var betweenDay = selectDay.getTime() - today.getTime();\r\n      \r\n       return(\r\n          <div className={\"RCA-calendar-day \" + className} key={`RCA-${dayInfo.weekIndex}-${i}-day`}\r\n            onClick={() => {\r\n              fn(dayInfo.yearMonthDayFormat);\r\n              this.setState({\r\n                open: true\r\n              })\r\n              this.getList(dayInfo.yearMonthDayFormat);\r\n              \r\n            }}>\r\n              <label className=\"RCA-calendar-day-label\">\r\n                {dayInfo.getDay}\r\n               \r\n              \r\n              </label>\r\n              {this.props.list.map((row,idx)=>(\r\n                  <DayItem row={row} key={idx} className={className} dayInfo={dayInfo} i={i} fn={fn}></DayItem>\r\n                  \r\n              ))}\r\n              \r\n\r\n          </div>\r\n          \r\n       )      \r\n      })         \r\n    }\r\n\r\n    onData=()=>{\r\n      \r\n      let memId=store.getState().loginId;\r\n      let wishday=this.props.selected;\r\n      let comment=this.refs.comment.value;\r\n      let url= URL+\"/plan/groupinsert?memId=\"+ memId + \"&wishday=\" + wishday + \"&comment=\" +comment;\r\n      \r\n\r\n      axios.post(url,{memId,wishday,comment})\r\n      .then(res=>{\r\n        this.refs.comment.value='';\r\n          this.setState({\r\n            alertOpen: true,\r\n            \r\n          })\r\n      }).catch(err=>{\r\n       console.log(\"shareplan insert 오류 : \" + err);\r\n      })\r\n  }\r\n\r\n    \r\n\r\n  render() {\r\n\r\n    var content=this.state.clist.content;\r\n\r\n    return (\r\n      <div className=\"RCA-calendar-week\">\r\n        \r\n        {this.mapDaysToComponents(this.Days(this.props.firstDayOfThisWeekformat,this.props.weekIndex),\r\n        this.props.ymOfThisCalendar,\r\n        this.props.selected,\r\n        this.props.fn\r\n        )}\r\n\r\n\r\n          {/* 해당 날짜 출력 모달 */}\r\n          <MDBModal isOpen={this.state.open} toggle={this.toggle} centered className=\"RCA-planAddModal\">\r\n              <MDBModalHeader toggle={this.toggle}>{this.props.selected} 일정</MDBModalHeader>\r\n                  <MDBModalBody>\r\n                      <div>\r\n                        <Timeline align=\"alternate\">\r\n                          {this.state.clist.map((row)=>(\r\n                              <ClistItem row={row} getMonthList={this.props.getMonthList} toggle={this.toggle.bind(this)}/>\r\n                          ))}\r\n                        </Timeline>\r\n                       \r\n                      </div>\r\n                      <textarea maxLength=\"1000\" className=\"form-control\"\r\n                                   style={{width: '410px', height: '150px', resize: 'none', cursor: 'auto'}}\r\n                                   ref=\"comment\" placeholder=\"리뷰를 입력하세요\">\r\n                         </textarea>\r\n                  </MDBModalBody>\r\n              <MDBModalFooter>\r\n                  <MDBBtn color=\"dark-green\" onClick={this.onData.bind(this)}>공유</MDBBtn>\r\n              </MDBModalFooter>\r\n          </MDBModal>\r\n\r\n                {/* alert 창 */}\r\n                <Dialog\r\n                    open={this.state.alertOpen}\r\n                    onClose={this.alertClose.bind(this)}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"공유 완료\"}</DialogTitle>\r\n                    <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        공유 페이지로 이동하여 확인하시겠습니까?\r\n                    </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                    <Button onClick={this.alertClose.bind(this)} color=\"primary\">\r\n                        NO\r\n                    </Button>\r\n                    <Link to=\"/shareplan\">\r\n                      <Button onClick={\r\n                          ()=>{\r\n                              this.setState({\r\n                                  alertOpen: false\r\n                              })\r\n                          }\r\n                      } color=\"primary\" autoFocus>\r\n                          YES\r\n                    </Button>\r\n                    </Link>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                {/* <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className=\"calModal\"\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose.bind(this)}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                    timeout: 500,\r\n                    }}\r\n                  >\r\n                    <Fade in={this.state.open}>\r\n                    <div className=\"calPaper\">\r\n\r\n                        <h2 id=\"transition-modal-title\">{this.props.selected}</h2>\r\n                        \r\n                        <br/>\r\n                        {this.state.clist.map((row)=>(\r\n                            <ClistItem row={row}/>\r\n                        ))}\r\n                        \r\n                    </div>\r\n                    </Fade>\r\n                    \r\n                </Modal> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Calendar extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  Weeks = (monthYear,selected,clickFn) => {\r\n    const selectMonth = Number(this.props.selectMonth);\r\n    const firstDayOfMonth = moment(monthYear).startOf('month');\r\n    const firstDateOfMonth = firstDayOfMonth.get('d');\r\n\r\n    const firstDayOfWeek = firstDayOfMonth.clone().add(-firstDateOfMonth,'d');\r\n\r\n    const _Weeks = [];\r\n    \r\n    for (let i = 0; i < 6; i++) {\r\n\r\n      if(selectMonth < Number(firstDayOfWeek.clone().add(i * 7,'d').format(\"M\"))){\r\n        if(selectMonth==1 && Number(firstDayOfWeek.clone().add(i * 7,'d').format(\"M\"))==12){\r\n\r\n        }else{\r\n          break;\r\n        }\r\n      }\r\n      else if (selectMonth==12 && Number(firstDayOfWeek.clone().add(i * 7,'d').format(\"M\"))==1)\r\n        break;\r\n      \r\n      _Weeks.push((\r\n        <Week key={`RCA-calendar-week-${i}`}\r\n          weekIndex={i}\r\n          ymOfThisCalendar={firstDayOfMonth.format(\"YYYY-MM\")}\r\n          firstDayOfThisWeekformat={firstDayOfWeek.clone().add(i * 7,'d').format(\"YYYY-MM-DD\")}\r\n          selected={selected}\r\n          fn={clickFn}\r\n          list={this.props.list}\r\n          getMonthList={this.props.getMonthList}\r\n        />\r\n      ))\r\n    }\r\n    return _Weeks\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"RCA-calendar-container\">\r\n        <DateHeader dates={\"Sun, Mon, Tue, Wed, Thu, Fri, Sat\"} />\r\n        {this.Weeks(this.props.YM,this.props.selected,this.props.changeSelected)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Calendar;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\Header.js",["1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1127","1128","1129","1130","1131"],"import React, { Component } from 'react';\r\nimport {FcPrevious,FcNext,FcList} from 'react-icons/fc';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport './style/RCA.css';\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ScheduleAdd  from './ScheduleAdd';\r\nimport ScheduleList from './ScheduleList';\r\nimport store from '../../../redux/store';\r\nimport moment from 'moment';\r\nimport {MDBIcon} from 'mdbreact';\r\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\r\n\r\n class Header extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            open : false,\r\n            setOpen : false,\r\n            clist: [],\r\n            listopen:false,\r\n            setlistOpen:false,\r\n            // groupOfDay:''\r\n        }\r\n        this.groupOfDay='';\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.getList();\r\n    }\r\n    toggle = () => {\r\n        this.setState({\r\n            open: !this.state.open\r\n        });\r\n      }\r\n\r\n      listToggle = () => {\r\n        this.setState({\r\n            listopen: !this.state.listopen\r\n        });\r\n      }\r\n\r\n      setGroupOfDay=(value)=>{\r\n        this.groupOfDay = value;\r\n      }\r\n\r\n    //   getList=()=>{\r\n    //     let url = URL + \"/wish/schedulelist?memId=\"+store.getState().loginId + \"&wishday=\" + this.props.YM ;\r\n    //     console.log(\"월별 가져오기 : \" +  this.props.YM);\r\n        \r\n    //     axios.get(url)\r\n    //     .then(res=>{\r\n    //       this.setState({\r\n    //           clist: res.data\r\n    //       });\r\n    //   }).catch(err=>{\r\n    //     console.log(\"목록 오류:\"+err);\r\n    //   })\r\n    // }\r\n\r\n    getList=()=>{\r\n        let url = URL + \"/wish/schedulemonthlist?memId=\"+store.getState().loginId + \"&wishday=\" + this.props.YM ;\r\n        // console.log(\"월별 가져오기 : \" +  this.props.YM);\r\n        \r\n        axios.get(url)\r\n        .then(res=>{\r\n          this.setState({\r\n              clist: res.data\r\n          });\r\n      }).catch(err=>{\r\n        console.log(\"목록 오류:\"+err);\r\n      })\r\n    }\r\n\r\n      insertContent=()=>{\r\n        let url=URL+\"/wish/insertcontent\";\r\n        let memId=store.getState().loginId;\r\n        let content= \"일정,\" + this.refs.content.value;\r\n        let wishday=this.refs.wishday.value;\r\n        let wishtime=this.refs.wishtime.value;\r\n\r\n        if(content=='' || wishday=='' || wishtime=='')\r\n            alert(\"정보를 모두 입력해주세요.\");\r\n        else{\r\n            axios.post(url,{memId,content,wishday,wishtime})\r\n            .then(res=>{\r\n                this.setState({\r\n                    open: false\r\n                })\r\n                this.props.getData();\r\n            }).catch(err=>{\r\n                console.log(\"schedulewish insert 오류 : \" + err);\r\n            })   \r\n        }    \r\n    }\r\n\r\n    render() {\r\n        const month = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\r\n        \r\n\r\n        return (\r\n            <div className=\"RCA-header-container\">\r\n                <div className=\"RCA-header-Title\" style={{textAlign: 'center', position:'relative'}}>\r\n                    {/* <MDBIcon icon=\"align-justify\" style={{float: 'left', cursor: 'pointer'}} onClick={\r\n                            ()=>{\r\n                                this.setState({\r\n                                     listopen:true   \r\n                                })\r\n                            }\r\n                        } /> */}\r\n                        <Button variant=\"outlined\" className=\"add-list\"  style={{float: 'left'}} onClick={\r\n                            ()=>{\r\n                                this.setState({\r\n                                    listopen: true\r\n                                })\r\n                            }\r\n                        }>\r\n                        일정목록\r\n                        </Button>\r\n                        <ul className=\"RCA-header-buttons RCA-header-middle\">\r\n                            <li className=\"RCA-title-year\">\r\n                                {this.props.year}\r\n                            </li>\r\n                            <li>\r\n                            <i className=\"move-button left icon\" onClick={()=>{this.props.moveMonth(-1)}}>\r\n                                {/* <FcPrevious/>    */}\r\n                                <MDBIcon icon=\"angle-left\" />\r\n                            </i>\r\n                            </li>\r\n                            <li className=\"move\">\r\n                                {this.props.month}\r\n                            </li>\r\n                            <li>\r\n                            <i className=\"move-button right icon\" onClick={()=>{this.props.moveMonth(1)}}>\r\n                                <MDBIcon icon=\"angle-right\" />\r\n                            </i>\r\n                            </li>\r\n                            <li className=\"RCA-title-month\">\r\n                                {month[Number(this.props.month)-1]}\r\n                            </li>\r\n                        </ul>\r\n\r\n                        <Button variant=\"outlined\" className=\"add-list\"  style={{float: 'right'}} onClick={\r\n                            ()=>{\r\n                                this.setState({\r\n                                    open: true\r\n                                })\r\n                            }\r\n                        }>\r\n                        일정추가\r\n                        </Button>\r\n                    </div>\r\n                    \r\n                    {/* 일정 추가 모달 */}\r\n                    <MDBModal isOpen={this.state.open} toggle={this.toggle} centered>\r\n                        <MDBModalHeader toggle={this.toggle} className=\"RCA-planAddModal\">일정 추가</MDBModalHeader>\r\n                        <MDBModalBody>\r\n                            <div className=\"RCA-planAddModal\">\r\n                                {/* <span className=\"addtitle\">일정 추가</span><br/> */}\r\n                                📆&nbsp;&nbsp;나의 일정\r\n                                <input type=\"text\" className=\"form-control\" style={{height: '50px'}} ref=\"content\"></input><br/>\r\n                                🗓&nbsp;&nbsp;여행 날짜\r\n                                <input type=\"date\" class=\"form-control form-control-sm\" ref=\"wishday\"></input><br/>\r\n                                ⏰&nbsp;&nbsp;예정 시간\r\n                                <input type=\"time\" class=\"form-control form-control-sm\" ref=\"wishtime\"></input>\r\n                                {/* <div style={{textAlign: 'center'}}>\r\n                                    <button type=\"button\" class=\"btn btn-warning planAddBtn\" onClick={this.insertContent.bind(this)}><b>추가</b></button>\r\n                                </div> */}\r\n                            </div>\r\n                        </MDBModalBody>\r\n                        <MDBModalFooter>\r\n                        {/* <MDBBtn color=\"secondary\" onClick={this.toggle}>Close</MDBBtn> */}\r\n                        <MDBBtn color=\"dark-green\" onClick={this.insertContent.bind(this)}>추가</MDBBtn>\r\n                        </MDBModalFooter>\r\n                    </MDBModal>\r\n\r\n                    {/* 일정 리스트 모달 */}\r\n                    <MDBModal isOpen={this.state.listopen} toggle={this.listToggle} centered>\r\n                        <MDBModalHeader toggle={this.listToggle} className=\"RCA-planAddModal\">일정 목록</MDBModalHeader>\r\n                        <MDBModalBody>\r\n                            <div className=\"RCA-planAddModal\">\r\n                                {/* <ScheduleList clist={this.state.clist}></ScheduleList> */}\r\n                                {this.props.clist.map((row)=>(\r\n                                    <ScheduleList row={row} YM={this.props.YM}></ScheduleList>\r\n                                ))}\r\n                            </div>\r\n                        </MDBModalBody>\r\n                        <MDBModalFooter>\r\n                        <MDBBtn color=\"dark-green\" onClick={this.listToggle}>닫기</MDBBtn>\r\n                        </MDBModalFooter>\r\n                    </MDBModal>\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  \r\n  \r\n    \r\n\r\n\r\nexport default Header;\r\n\r\n\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\admin\\RowItem.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\MobileMyPage.js",["1132","1133","1134","1135","1136","1137","1138"],"import React, {Component} from \"react\";\r\nimport MemberUpdateFormComp from \"./MemberUpdateFormComp\";\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\nimport './style/MyinfoCss.css';\r\nimport userImg from '../../../image/user.png';\r\nimport store from \"../../../redux/store\";\r\nimport SocialUpdateForm from './SocialUpdateForm';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\n\r\nfunction ListItemLink(props) {\r\n    return <ListItem button component=\"a\" {...props} />;\r\n  }\r\n\r\nclass MobileMyPage extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            memberData: []\r\n        }\r\n    }\r\n\r\n    getMyData = () => {\r\n        let url = URL + '/member/getdata?id=' + store.getState().loginId;\r\n        axios.get(url)\r\n            .then(response => {\r\n                if(response.data.photo.substring(0,4)=='http'){\r\n                    this.setState({\r\n                        photoCheck: true\r\n                    })\r\n                }\r\n                this.setState({\r\n                    memberData: response.data\r\n                })\r\n            }).catch(err => {\r\n            console.log(\"목록 오류:\" + err);\r\n        })\r\n\r\n        url = URL + '/wish/wishcount?memId=' + store.getState().loginId;\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    wishCount: res.data\r\n                })\r\n            }).catch(err=>{\r\n                console.log(\"wishlist 일정갯수 가져오기 오류 : \" + err);\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMyData(); //처음 시작시 백엔드로부터 데이타 가져오기\r\n    }\r\n    \r\n    render() {\r\n        \r\n        const url = URL + \"/\";\r\n        const userimg = this.state.memberData.photo==\"no\"?userImg:\r\n            this.state.photoCheck?this.state.memberData.photo: url + this.state.memberData.photo;\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div id=\"mypageInfo\" style={{width: '100%', marginTop: '50px'}}>\r\n                    <List component=\"nav\" aria-label=\"secondary mailbox folders\">\r\n                        <table className=\"table table-bordered\">\r\n                            <tr>\r\n                                <td colSpan=\"2\" style={{textAlign: 'center'}}>\r\n                                    <img src={userimg} alt=\"이미지없음\" id=\"mypageUserImg\"\r\n                                    onError={(e) => {\r\n                                        console.log(\"img error\");\r\n                                        e.target.src = userImg;\r\n                                    }}\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td width=\"50%\">{this.state.memberData.id}</td>\r\n                                <td width=\"50%\">{this.state.memberData.name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td colSpan=\"2\">{this.state.memberData.email}@{this.state.memberData.email2}</td>\r\n                            </tr>\r\n                        </table>\r\n\r\n                        {/* <ListItem button>\r\n                            <ListItemText primary={this.state.memberData.id} />\r\n                        </ListItem>\r\n                        <ListItem button>\r\n                            <ListItemText primary={this.state.memberData.name} />\r\n                        </ListItem>\r\n                        <ListItem button>\r\n                            <ListItemText primary={this.state.memberData.hp} />\r\n                        </ListItem>\r\n                        <ListItem button>\r\n                            <ListItemText primary={`${this.state.memberData.email}@${this.state.memberData.email2}`} />\r\n                        </ListItem>\r\n                        <ListItem button>\r\n                            <ListItemText primary={this.state.memberData.address} />\r\n                        </ListItem> */}\r\n                    </List>\r\n                    <Divider />\r\n                    <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                        <ListItem button>\r\n                            <ListItemIcon>\r\n                                <span class=\"fas fa-user-alt\"></span>\r\n                            </ListItemIcon>\r\n                            {this.state.memberData.provider==\"no\"?\r\n                                <ListItemLink href=\"/mypage/pass/m\">\r\n                                    <ListItemText primary=\"My info\" />\r\n                                </ListItemLink>\r\n                                :<ListItemLink href=\"/mypage/social\">\r\n                                    <ListItemText primary=\"My info\" />\r\n                                </ListItemLink>    \r\n                            }\r\n                            <ListItemText primary=\">\" />\r\n                        </ListItem>\r\n                    </List>\r\n                    <Divider />\r\n                    <List component=\"nav\" aria-label=\"My plan\">\r\n                        <ListItem button>\r\n                            <ListItemIcon>\r\n                                <span className=\"far fa-calendar-check\"/>\r\n                            </ListItemIcon>\r\n                            <ListItemLink href=\"/mypage/plan\">\r\n                                <ListItemText primary=\"My plan\" />\r\n                            </ListItemLink>\r\n                            <ListItemText primary=\">\" />\r\n                        </ListItem>\r\n                    </List>\r\n                    <Divider />\r\n                    <List component=\"nav\" aria-label=\"mypageMyReview\">\r\n                        <ListItem button>\r\n                            <ListItemIcon>\r\n                                <span className=\"fas fa-comment-dots\"/>\r\n                            </ListItemIcon>\r\n                            <ListItemLink href=\"/mypage/review\">\r\n                                <ListItemText primary=\"My review\" />\r\n                            </ListItemLink>\r\n                            <ListItemText primary=\">\" />\r\n                        </ListItem>\r\n                    </List>\r\n                    <Divider />\r\n                    {/* <List component=\"nav\" aria-label=\"mypageReservation\">\r\n                        <ListItem button>\r\n                            <ListItemIcon>\r\n                                <span className=\"fas fa-splotch\"/>\r\n                            </ListItemIcon>\r\n                            <ListItemLink href=\"/mypage/reservation\">\r\n                                <ListItemText primary=\"My reservation\" />\r\n                            </ListItemLink>\r\n                            <ListItemText primary=\">\" />\r\n                        </ListItem>\r\n                    </List>\r\n                    <Divider /> */}\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n        \r\n        \r\n    }\r\n}\r\n\r\nexport default MobileMyPage;\r\n\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\DeskMyPage.js",["1139","1140","1141","1142","1143","1144","1145"],"import React, {Component} from \"react\";\r\nimport MemberUpdateFormComp from \"./MemberUpdateFormComp\";\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport MySchedule from './MySchedule';\r\nimport MyReviwe from './MyReview';\r\nimport MyWishlist from './MyWishlist';\r\nimport MyBudget from './MyBudget';\r\nimport './style/MyinfoCss.css';\r\nimport userImg from '../../../image/user.png';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PassCheck from './PassCheck';\r\nimport store from \"../../../redux/store\";\r\nimport SocialUpdateForm from './SocialUpdateForm';\r\n\r\nclass DeskMyPage extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"MypagePageComp constructor\", props);\r\n\r\n        this.state = {\r\n            memberData: [],\r\n            pageNum: '0',\r\n            value: 0,\r\n            wishCount: 0,\r\n            sharePlanCount:0,\r\n            passOk: false,\r\n            photoCheck: false\r\n        }\r\n    }\r\n    tabProps = (index) => {\r\n        return {\r\n          id: `simple-tab-${index}`,\r\n          'aria-controls': `simple-tabpanel-${index}`,\r\n        };\r\n      }\r\n\r\n      handleTabChange = (event,newValue) => {\r\n        this.setState({ value: newValue });\r\n      }\r\n    // 스프링에서 목록 가져오기\r\n    // member\r\n    getMyData = () => {\r\n        let url = URL + '/member/getdata?id=' + store.getState().loginId;\r\n        axios.get(url)\r\n            .then(response => {\r\n                if(response.data.photo.substring(0,4)=='http'){\r\n                    this.setState({\r\n                        photoCheck: true\r\n                    })\r\n                }\r\n                this.setState({\r\n                    memberData: response.data\r\n                })\r\n            }).catch(err => {\r\n            console.log(\"목록 오류:\" + err);\r\n        })\r\n\r\n        url = URL + '/wish/wishcount?memId=' + store.getState().loginId;\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    wishCount: res.data\r\n                })\r\n            }).catch(err=>{\r\n                console.log(\"wishlist 일정갯수 가져오기 오류 : \" + err);\r\n            })\r\n        \r\n        url=URL+\"/plan/count?memId=\"+store.getState().loginId;\r\n        axios.get(url)\r\n        .then(res=>{\r\n            this.setState({\r\n                sharePlanCount:res.data\r\n            })\r\n        }).catch(err=>{\r\n            console.log(\"sharePlan 갯수 가져오기 오류 :\"+err);\r\n        })    \r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMyData(); //처음 시작시 백엔드로부터 데이타 가져오기\r\n    }\r\n\r\n    passOk=(ok)=>{\r\n        this.setState({\r\n            passOk: ok\r\n        })\r\n        if(ok==false)\r\n            this.getMyData();\r\n    }\r\n\r\n    render() {\r\n\r\n        const url = URL + \"/\";\r\n        const userimg = this.state.memberData.photo==\"no\"?userImg:\r\n            this.state.photoCheck?this.state.memberData.photo: url + this.state.memberData.photo;\r\n        const address = this.state.memberData.addrdetail!==null?\"(\" + this.state.memberData.addrdetail + \")\":\"\";\r\n        const passOkTab = this.state.memberData.provider!='no'?<SocialUpdateForm/>\r\n            :this.state.passOk==true?<MemberUpdateFormComp num={this.state.memberData} passOk={this.passOk.bind(this)} history={this.props.history}/>\r\n            :<PassCheck passOk={this.passOk.bind(this)}/>;\r\n        \r\n\r\n        return (\r\n            <div>\r\n                <div id=\"mypageInfo\" style={{width: '100%', backgroundColor: '#f7f7f7', position: 'relative'}}>\r\n                    <p id=\"mypageInfoTitle\">내 정보 관리</p>\r\n                        <Box\r\n                            display=\"flex\"\r\n                            flexWrap=\"wrap\"\r\n                            // p={1}\r\n                            // m={1}\r\n                            justifyContent=\"center\"\r\n                            width=\"100%\"\r\n                        >\r\n\r\n                            <Box className=\"mypageInfoCol\" width=\"20%\" alignSelf=\"center\">\r\n                                <img src={userimg} alt=\"이미지없음\" id=\"mypageUserImg\"\r\n                                onError={(e) => {\r\n                                    console.log(\"img error\");\r\n                                    e.target.src = userImg;\r\n                                }}\r\n                                />\r\n                            </Box>\r\n                            <Box m={1} bgcolor=\"#fff\" width=\"50%\" className=\"mypageInfoCol\">\r\n                                <table>\r\n                                        <tr style={{borderBottom: '1px dotted #eee'}}>\r\n                                            <td>\r\n                                                <span class=\"fas fa-bookmark\"></span>\r\n                                            </td>\r\n                                            <td style={{paddingLeft: '10px'}}>\r\n                                                {this.state.memberData.id}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr style={{borderBottom: '1px dotted #eee'}}>\r\n                                            <td>\r\n                                            <span class=\"fas fa-user-alt\"></span>\r\n                                            </td>\r\n                                            <td style={{paddingLeft: '10px'}}>\r\n                                                {this.state.memberData.name}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr style={{borderBottom: '1px dotted #eee'}}>\r\n                                            <td>\r\n                                            <span class=\"fas fa-phone-alt\"></span>\r\n                                            </td>\r\n                                            <td style={{paddingLeft: '10px'}}>\r\n                                                {this.state.memberData.hp}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr style={{borderBottom: '1px dotted #eee'}}>\r\n                                            <td>\r\n                                                <span class=\"fas fa-envelope-open-text\"></span>\r\n                                            </td>\r\n                                            <td style={{paddingLeft: '10px'}}>\r\n                                                {this.state.memberData.email}@{this.state.memberData.email2}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>\r\n                                            <span class=\"fas fa-home\"></span>\r\n                                            </td>\r\n                                            <td style={{paddingLeft: '10px'}}>\r\n                                                {this.state.memberData.address}<br/>{address}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </table>\r\n                            </Box>\r\n                            <Box width=\"20%\" alignSelf=\"center\">\r\n                                <Box m={1} bgcolor=\"#fff\" className=\"mypageInfoCol\" style={{textAlign: 'center'}}>\r\n                                    <span className=\"mypageInfoSubtitle\">일정</span><br/>\r\n                                    <span className=\"mypageInfoSubContent\">{this.state.wishCount}</span>\r\n                                </Box>\r\n                                <Box m={1} bgcolor=\"#fff\" className=\"mypageInfoCol\" style={{textAlign: 'center'}}>\r\n                                    <span className=\"mypageInfoSubtitle\">공유한 일정</span><br/>\r\n                                    <span className=\"mypageInfoSubContent\">{this.state.sharePlanCount}</span>\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                        </Box>\r\n\r\n                </div>\r\n                \r\n                <Paper square style={{marginTop: '100px'}} id=\"mypageTabs\">\r\n                    <Tabs\r\n                        value={this.state.value}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        onChange={this.handleTabChange}\r\n                        aria-label=\"disabled tabs example\"\r\n                    >\r\n                        <Tab label=\"My Plan\" {...this.tabProps(0)}/>\r\n                        <Tab label=\"My Review\" {...this.tabProps(1)}/>\r\n                        <Tab label=\"My Budget\" {...this.tabProps(2)}/>\r\n                        <Tab label=\"My Info\" {...this.tabProps(3)}/>\r\n                    </Tabs>\r\n                    <TabPanel value={this.state.value} index={0}>\r\n                        <MySchedule/>\r\n                    </TabPanel>\r\n                    <TabPanel value={this.state.value} index={1}>\r\n                        <MyReviwe/>\r\n                    </TabPanel>\r\n                    <TabPanel value={this.state.value} index={2}>\r\n                        <MyBudget/>\r\n                    </TabPanel>\r\n                    <TabPanel value={this.state.value} index={3}>\r\n                        {/* <MemberUpdateFormComp/> */}\r\n                        {passOkTab}\r\n                    </TabPanel>\r\n                </Paper>\r\n                \r\n            </div>\r\n            \r\n        )\r\n        \r\n        \r\n    }\r\n}\r\nclass TabPanel extends Component {\r\n    render() {\r\n      return (\r\n        <Typography component=\"div\" hidden={this.props.value !== this.props.index}>\r\n          <Box p={3}>{this.props.children}</Box>\r\n        </Typography>\r\n      );\r\n    }\r\n  }\r\nexport default DeskMyPage;\r\n\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\notice\\NoticePagination.js",["1146","1147","1148","1149","1150","1151","1152"],"import React, {Component} from 'react';\r\n\r\nclass NoticePagination extends Component {\r\n\r\n    render() {\r\n        const {area, startPage, endPage, currentPage, totalPage, paginate, category, search, type} = this.props;\r\n        \r\n        let prev = startPage > 1 ?\r\n            <li className=\"page-item\">\r\n                <a className=\"page-link\" style={{color: 'black'}}\r\n                   href={`/notice/${startPage-1}`}\r\n                >◀</a>\r\n            </li> : \"\";\r\n\r\n        let next = endPage < totalPage ?\r\n            <li className=\"page-item\">\r\n                <a className=\"page-link\" style={{color: 'black'}}\r\n                   href={`/notice/${endPage + 1}`}\r\n                >▶</a>\r\n            </li> : \"\";\r\n\r\n        let page = [];\r\n\r\n        for (let i = startPage; i <= endPage; i++) {\r\n            page.push(i);\r\n        }\r\n\r\n        let pages = page.map(function (num, idx) {\r\n            return (\r\n                <li className=\"page-item\" key={idx}>\r\n                    <a className=\"page-link\"\r\n                       style={{\r\n                           color: num == currentPage ? \"#D1CC38\" : \"black\",\r\n                           fontWeight: num == currentPage ? \"700\" : \"\"\r\n                       }}\r\n                       href={`/notice/${num}`}\r\n                    >{num}</a>\r\n                </li>\r\n            )\r\n        });\r\n\r\n        let pagination = '';\r\n        if (matchMedia(\"screen and (max-width:770px)\").matches) {\r\n            pagination =\r\n                <ul className='pagination pagination-sm' style={{justifyContent: 'center', marginBottom: '100px'}}>\r\n                    {prev}\r\n                    {pages}\r\n                    {next}\r\n                </ul>;\r\n        } else {\r\n            pagination =\r\n                <ul className='pagination' style={{justifyContent: 'center', marginBottom: '100px'}}>\r\n                    {prev}\r\n                    {pages}\r\n                    {next}\r\n                </ul>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {pagination}\r\n                {/* <ul className='pagination' style={{justifyContent: 'center', marginBottom: '100px'}}>\r\n                    {prev}\r\n                    {pages}\r\n                    {next}\r\n\t\t\t    </ul> */}\r\n                {/* <Pagination id=\"tourListPage\" color=\"primary\" count={totalPage} page={currentPage} onChange={this.handleChange.bind(this)}/> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NoticePagination;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\notice\\BoardItem.js",["1153","1154","1155","1156"],"import React,{Component} from 'react';\r\nimport {Route, Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {URL} from '../../../redux/config';\r\nimport store from \"../../../redux/store\";\r\nimport moment from 'moment';\r\n\r\nclass BoardItem extends Component\r\n{\r\n    updateStar=()=>{\r\n        let url = URL + \"/notice/updatestar?num=\" + this.props.row.num;\r\n\r\n        if(store.getState().loginId==='admin'){\r\n            axios.get(url)\r\n            .then(res=>{\r\n                this.props.list();\r\n            }).catch(err=>{\r\n                console.log(\"notice updateStar 오류 : \" + err)\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        const {row, idx, history}=this.props;\r\n        let color = row.star == 1?\"#fafafa\":\"\";\r\n        const day = moment(row.writeday).format('YYYY-MM-DD');\r\n        return(\r\n            \r\n            <tr style={{backgroundColor: color}}>\r\n                <td align='center'>{idx}</td>\r\n                \r\n                    <td>\r\n                        \r\n                        <Link to={`/notice/content/${row.num}`}>{row.subject}</Link>\r\n                    </td>\r\n                <td align='center'>{day}</td>\r\n                <td align='center'>{row.star==1?<span style={{cursor: 'pointer'}} onClick={this.updateStar.bind(this)}>⭐</span>\r\n                    :<span className=\"far fa-star\" style={{cursor: 'pointer'}} onClick={this.updateStar.bind(this)}></span>}</td>\r\n\r\n            </tr>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default BoardItem;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\tour\\ReviewItemComp.js",["1157","1158","1159","1160","1161","1162","1163"],"import React,{Component} from 'react';\r\nimport axios from 'axios';\r\nimport {URL} from '../../../redux/config';\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\r\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\r\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\r\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport PropTypes from 'prop-types';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport store from '../../../redux/store';\r\nimport imgX from '../../../image/imgX.png';\r\n\r\nconst reviewcustomIcons = {\r\n    1: {\r\n      icon: <SentimentVeryDissatisfiedIcon />,\r\n      label: 'Very Dissatisfied',\r\n    },\r\n    2: {\r\n      icon: <SentimentDissatisfiedIcon />,\r\n      label: 'Dissatisfied',\r\n    },\r\n    3: {\r\n      icon: <SentimentSatisfiedIcon />,\r\n      label: 'Neutral',\r\n    },\r\n    4: {\r\n      icon: <SentimentSatisfiedAltIcon />,\r\n      label: 'Satisfied',\r\n    },\r\n    5: {\r\n      icon: <SentimentVerySatisfiedIcon />,\r\n      label: 'Very Satisfied',\r\n    },\r\n  };\r\n\r\n  function reviewIconContainer(props) {\r\n    const { value, ...other } = props;\r\n    return <span {...other}>{reviewcustomIcons[value].icon}</span>;\r\n  }\r\n  \r\n  reviewIconContainer.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n\r\nclass ReviewItemComp extends Component {\r\n\r\n    state={\r\n        update: false,\r\n        upload: 'no',\r\n        content:'',\r\n        star: '1'\r\n    }\r\n\r\n    changeHandler=(e)=>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    uploadImage=(e)=>{\r\n        console.log(\"upload\");\r\n        const uploadFile=e.target.files[0];\r\n        const imageFile=new FormData();\r\n        imageFile.append(\"uploadFile\",uploadFile);\r\n\r\n        let url = URL + \"/sreview/upload\";\r\n        \r\n        axios({\r\n            method:'post',\r\n            url:url,\r\n            data:imageFile,\r\n            headers:{'Content-Type':'multipart/form-data'}\r\n        }).then(res=>{\r\n            console.log(res.data.photoname);\r\n            this.setState({\r\n                upload: res.data.photoname\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    updateClick=()=>{\r\n        this.setState({\r\n            update: true\r\n        })\r\n\r\n        let url = URL + \"/sreview/select?num=\" + this.props.row.num;\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    content: res.data.content,\r\n                    upload: res.data.photo\r\n                })\r\n            }).catch(err=>{\r\n                console.log(\"update spotreview 오류 : \" + err);\r\n            })\r\n\r\n    }\r\n\r\n    handleDelete = () => {\r\n        let url = URL + \"/sreview/updatenoupload\";\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    upload:'이미지 없음'\r\n                })\r\n            })\r\n    };\r\n\r\n    update=()=>{\r\n        let url = URL + \"/sreview/update\";\r\n        let num = this.props.row.num;\r\n        let star = this.state.star;\r\n        let content = this.state.content;\r\n\r\n        console.log(star + \", \" + content);\r\n\r\n        axios.post(url, {num, star, content})\r\n            .then(res=>{\r\n                this.setState({\r\n                    update: false\r\n                })\r\n                this.props.list();\r\n            }).catch(err=>{\r\n                console.log(\"spotreview update 오류 : \" + err);\r\n            })\r\n    }\r\n\r\n    delete=()=>{\r\n        let url = URL + \"/sreview/delete?num=\" + this.props.row.num;\r\n\r\n        if(window.confirm(\"삭제하시겠습니까?\")){\r\n            axios.get(url)\r\n                .then(res=>{\r\n                    this.setState({\r\n                        update: false\r\n                    })\r\n                    this.props.list();\r\n                }).catch(err=>{\r\n                    console.log(\"spotreview delete 오류 : \" + err);\r\n                })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {row}=this.props;\r\n        const url = URL + \"/\";\r\n        // const url = \"http://localhost:9002/photo/\";\r\n        const photo = this.state.update==false?(row.photo===\"no\"?\"\":<td style={{width:'15%'}}>\r\n                            <img src={url + row.photo} alt=\"이미지 없음\" style={{width:'100px', height:'100px'}} \r\n                            onError={(e) => {\r\n                                console.log(\"img error\");\r\n                                e.target.src = imgX;\r\n                            }}\r\n                            />\r\n                            {/* <div className=\"tourReImg\" style={{display:'inline-block', border: '1px solid gray'}}></div> */}\r\n                        </td>):\"\";\r\n        const w = row.photo===\"no\"?\"2\":\"0\";\r\n        const star = row.star==1?<SentimentVeryDissatisfiedIcon/>:row.star==2?<SentimentDissatisfiedIcon/>\r\n        :row.star==3?<SentimentSatisfiedIcon/>:row.star==4?<SentimentSatisfiedAltIcon/>:<SentimentVerySatisfiedIcon/>\r\n\r\n        const chip = row.photo===\"no\"?(this.state.upload=='no'?\"\":<Chip\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                label={this.state.upload}\r\n                                                onDelete={this.handleDelete.bind(this)}\r\n                                            />):<Chip\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                            label={this.state.upload}\r\n                                            onDelete={this.handleDelete.bind(this)}\r\n                                        />;\r\n        // 로그인 아이디가 맞으면 출력\r\n        const edit = store.getState().loginId===row.memNum ? <div style={{position: 'absolute', top: '10px', right: '10px', cursor: 'pointer'}} class=\"fas fa-tools\" onClick={this.updateClick.bind(this)}></div>\r\n                :   \"\";\r\n\r\n        const tag = this.state.update==false?\r\n            <td style={{width:'75%', padding: '10px', position: 'relative'}} align=\"left\" colSpan={w}>\r\n                &nbsp;&nbsp;    \r\n                <span style={{color: '#F0CD58'}}>{star}</span>\r\n                &nbsp; &nbsp;<b>{row.memNum}</b><span style={{color: '#999'}}>님이 작성하신 후기입니다.</span>\r\n                <br/><br/>\r\n                <p>{row.content}</p>\r\n                {edit}\r\n                \r\n                <div style={{float: 'right', color: '#aaa'}}>\r\n                    {row.writeday}\r\n                </div>\r\n            </td>\r\n            :<td style={{width:'100%', padding: '10px', position: 'relative'}} align=\"left\" colSpan={2}>\r\n                <Rating\r\n                                    name=\"reviewcustomized-icons\"\r\n                                    defaultValue={row.star}\r\n                                    getLabelText={(value) => reviewcustomIcons[value].label}\r\n                                    IconContainerComponent={reviewIconContainer}\r\n                                    onChange={\r\n                                        (e)=>{\r\n                                            this.setState({\r\n                                                star : e.target.value\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                    />\r\n                <div style={{position: 'absolute', top:'5px', right:'5px', cursor: 'pointer'}} onClick={\r\n                    ()=>{\r\n                        this.setState({\r\n                            update: false\r\n                        })\r\n                    }\r\n                }>x</div>\r\n                <textarea name=\"content\" style={{resize: 'none', width: '100%'}} value={this.state.content} \r\n                                    className=\"form-control\" onChange={this.changeHandler.bind(this)}></textarea>\r\n                \r\n                <input style={{display:'none'}} id=\"upreview-icon-button-file\" type=\"file\" onChange={this.uploadImage.bind(this)}/>\r\n                <label htmlFor=\"upreview-icon-button-file\">\r\n                    <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" style={{marginBottom: '10px'}}>\r\n                        <PhotoCamera />\r\n                    </IconButton> \r\n                </label>\r\n                {chip}\r\n                <div style={{float:'right', marginTop: '10px'}}>\r\n                    <button type=\"button\" class=\"btn btn-warning\" onClick={this.update.bind(this)}>수정</button>\r\n                    <button type=\"button\" class=\"btn btn-warning\" onClick={this.delete.bind(this)}>삭제</button>\r\n                </div>\r\n            </td>;\r\n        return (\r\n            <tr>\r\n                {photo}\r\n                {tag}\r\n            </tr> \r\n        );\r\n    }\r\n}\r\n\r\nexport default ReviewItemComp;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\MobileMenu.js",["1164","1165","1166","1167","1168","1169","1170","1171","1172"],"import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport {NavLink, Route} from \"react-router-dom\";\r\nimport {actionType, mainViewType} from \"../../redux/config\";\r\nimport Slide from '@material-ui/core/Slide';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport PropTypes from 'prop-types';\r\nimport store from \"../../redux/store\";\r\nimport {withRouter } from \"react-router-dom\";\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport \"./Menu.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n      textAlign: 'center'\r\n    // display: 'none',\r\n    // [theme.breakpoints.up('sm')]: {\r\n    //   display: 'block',\r\n    // },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n\r\n//  아코디언\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nfunction HideOnScroll(props) {\r\n    const { children, window } = props;\r\n    // Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n  \r\n    return (\r\n      <Slide appear={false} direction=\"down\" in={!trigger}>\r\n        {children}\r\n      </Slide>\r\n    );\r\n  }\r\n  \r\n  HideOnScroll.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window: PropTypes.func,\r\n  };\r\n\r\nfunction MobileMenu(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\r\n  const [drawerSetOpen, setDrawerSetOpen] = React.useState(false);\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <NavLink to=\"/mypage\" onClick={handleMobileMenuClose} style={{color: 'black'}}> Mypage</NavLink>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <NavLink to=\"/\" onClick={\r\n                            ()=>{\r\n                                handleMobileMenuClose();\r\n                                props.setMainView(mainViewType.MainPage);\r\n                                props.setLogOut();\r\n                            }\r\n                        } style={{color: 'black'}}>\r\n            Logout\r\n        </NavLink>\r\n      </MenuItem>\r\n      \r\n    </Menu>\r\n  );\r\n\r\n    const handleDrawerOpen = () => {\r\n        console.log(\"click\");\r\n        setDrawerOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setDrawerOpen(false);\r\n    };\r\n\r\n    // 메뉴 열리는 창 //////////////////////////////////////////////////////////////////////////////////\r\n  const drawer = ()=> (\r\n    <div style={{width: '240px'}}\r\n        role=\"presentation\"\r\n        // onClick={handleDrawerClose}\r\n        onKeyDown={handleDrawerClose} className=\"mobildMenuDrawer\">\r\n      <Divider />\r\n      <List onClick={handleDrawerClose}>\r\n          <ListItem style={{fontWeight: '600'}}>\r\n            <NavLink exact to=\"/\"\r\n                    onClick={() => {\r\n                        console.log(\"Home NavLink onClick\");\r\n                        props.setMainView(mainViewType.MainPage);\r\n                    }}\r\n            >\r\n                Home\r\n            </NavLink>\r\n          </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <Accordion>\r\n                <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n                >\r\n                <Typography className={classes.heading} style={{fontWeight: '600', color: ' #036E38'}}>AREA</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <List onClick={handleDrawerClose}>\r\n                        <ListItem><a href=\"/tourlist/jeju/1\" style={{color: 'black'}}>제주</a></ListItem>\r\n                        <ListItem><a href=\"/tourlist/jocheon/1\" style={{color: 'black'}}>조천</a></ListItem>\r\n                        <ListItem><a href=\"/tourlist/gujwa/1\" style={{color: 'black'}}>구좌</a></ListItem>\r\n                        <ListItem><a href=\"/tourlist/sungsan/1\" style={{color: 'black'}}>성산</a></ListItem>\r\n                        <ListItem><a href=\"/tourlist/pyoseon/1\" style={{color: 'black'}}>표선</a></ListItem>\r\n                        <ListItem><a href=\"/tourlist/namwon/1\" style={{color: 'black'}}>남원</a></ListItem>\r\n                        <ListItem><a href=\"/tourlist/seogwipo/1\" style={{color: 'black'}}>서귀포</a></ListItem>\r\n                        <ListItem><a href=\"/tourlist/andeok/1\" style={{color: 'black'}}>안덕</a></ListItem>\r\n                        <ListItem><a href=\"/tourlist/daejung/1\" style={{color: 'black'}}>대정</a></ListItem>\r\n                        <ListItem><a href=\"/tourlist/hangyeong/1\" style={{color: 'black'}}>한경</a></ListItem>\r\n                        <ListItem><a href=\"/tourlist/hanrim/1\" style={{color: 'black'}}>한림</a></ListItem>\r\n                        <ListItem><a href=\"/tourlist/aewol/1\" style={{color: 'black'}}>애월</a></ListItem>\r\n                        <ListItem><a href=\"/tourlist/udo/1\" style={{color: 'black'}}>우도</a></ListItem>\r\n                    </List>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <Accordion>\r\n                <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n                >\r\n                <Typography className={classes.heading} style={{fontWeight: '600', color: ' #036E38'}}>SHARE</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <List onClick={handleDrawerClose}>\r\n                        <ListItem><a href=\"/share/1\" style={{color: 'black'}}>맛집 공유</a></ListItem>\r\n                        <ListItem><a href=\"/shareplan\" style={{color: 'black'}}>일정 공유</a></ListItem>\r\n                    </List>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n      </List>\r\n      \r\n      <Divider />\r\n      <List>\r\n        <Accordion>\r\n                <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n                >\r\n                <Typography className={classes.heading} style={{fontWeight: '600', color: ' #036E38'}}>TRAFFIC</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <List onClick={handleDrawerClose}>\r\n                        <ListItem><a href=\"/air\" style={{color: 'black'}}>항공</a></ListItem>\r\n                        <ListItem><a href=\"/car\" style={{color: 'black'}}>렌터카</a></ListItem>\r\n                        <ListItem><a href=\"/ship\" style={{color: 'black'}}>우도행 배편</a></ListItem>\r\n                    </List>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n      </List>\r\n      \r\n      <Divider />\r\n      <List onClick={handleDrawerClose} style={{fontWeight: '600'}}>\r\n          <ListItem><a href=\"/notice/1\">NOTICE</a></ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n        <SwipeableDrawer\r\n            anchor='left'\r\n            open={drawerOpen}\r\n            onClose={handleDrawerClose}\r\n            onOpen={handleDrawerOpen}\r\n        >\r\n            {drawer()}\r\n        </SwipeableDrawer>\r\n        <HideOnScroll {...props}>\r\n      <AppBar style={{backgroundColor: 'white', color: 'black'}}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n          >\r\n            <MenuIcon/>\r\n          </IconButton>\r\n          <div className={classes.grow} />\r\n          <Typography className={classes.title} variant=\"b\" noWrap>\r\n            제주 일상\r\n          </Typography>\r\n          \r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={(event)=>{\r\n                  if(store.getState().logged==true)\r\n                    handleMobileMenuOpen(event);\r\n                  else\r\n                    window.location.replace(\"/login\");\r\n              }}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      </HideOnScroll>\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(MobileMenu);","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\tour\\DetailReviewComp.js",["1173"],"import React,{Component} from 'react';\r\nimport axios from 'axios';\r\nimport {URL} from '../../../redux/config';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\r\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\r\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\r\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport './TourDetailCss.css';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport store from '../../../redux/store';\r\n\r\nconst customIcons = {\r\n    1: {\r\n      icon: <SentimentVeryDissatisfiedIcon />,\r\n      label: 'Very Dissatisfied',\r\n    },\r\n    2: {\r\n      icon: <SentimentDissatisfiedIcon />,\r\n      label: 'Dissatisfied',\r\n    },\r\n    3: {\r\n      icon: <SentimentSatisfiedIcon />,\r\n      label: 'Neutral',\r\n    },\r\n    4: {\r\n      icon: <SentimentSatisfiedAltIcon />,\r\n      label: 'Satisfied',\r\n    },\r\n    5: {\r\n      icon: <SentimentVerySatisfiedIcon />,\r\n      label: 'Very Satisfied',\r\n    },\r\n  };\r\n\r\n  function IconContainer(props) {\r\n    const { value, ...other } = props;\r\n    return <span {...other}>{customIcons[value].icon}</span>;\r\n  }\r\n  \r\n  IconContainer.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n\r\nclass DetailReviewComp extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            content:'',\r\n            upload:'',\r\n            star: '1'\r\n        }\r\n\r\n        this.contentsid = this.props.contentsid;\r\n\r\n    }\r\n\r\n    changeHandler=(e)=>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    insertReview=()=>{\r\n        if(!store.getState().logged){\r\n            alert(\"로그인이 필요한 서비스입니다.\")\r\n        }\r\n        else{\r\n            let memNum = store.getState().loginId; // 나중에 로그인상태의 아이디 집어넣기\r\n            let star = this.state.star;\r\n            let content = this.state.content;\r\n            let contentsid = this.contentsid;\r\n\r\n            // let url = \"http://localhost:9002/sreview/insert\";\r\n            let url = URL + \"/sreview/insert\";\r\n\r\n            axios.post(url, {contentsid, memNum, star, content})\r\n                .then(res=>{\r\n                    this.setState({\r\n                        content : \"\",\r\n                        upload: ''\r\n                    })\r\n                    //window.location.reload();\r\n                    this.props.getList();\r\n                }).catch(err=>{\r\n                    console.log(\"DetailReviewComp insert 오류 : \" + err);\r\n                })\r\n\r\n        }\r\n    }\r\n\r\n    uploadImage=(e)=>{\r\n        const uploadFile=e.target.files[0];\r\n        const imageFile=new FormData();\r\n        imageFile.append(\"uploadFile\",uploadFile);\r\n\r\n        let url = URL + \"/sreview/upload\";\r\n        \r\n        axios({\r\n            method:'post',\r\n            url:url,\r\n            data:imageFile,\r\n            headers:{'Content-Type':'multipart/form-data'}\r\n        }).then(res=>{\r\n            this.setState({\r\n                upload:res.data.photoname\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    handleDelete = () => {\r\n        let url = URL + \"/sreview/delupload\";\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    upload:''\r\n                })\r\n            })\r\n    };\r\n\r\n    render() {\r\n\r\n        const chip = this.state.upload==''?\"\":<Chip\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                label={this.state.upload}\r\n                                                onDelete={this.handleDelete.bind(this)}\r\n                                            />;\r\n        return (\r\n            <div>\r\n                <Box\r\n                        display=\"flex\"\r\n                        flexWrap=\"wrap\"\r\n                        p={1}\r\n                        m={1}\r\n                        bgcolor=\"background.paper\"\r\n                        justifyContent=\"center\"\r\n                        css={{ maxWidth: '100%' }}\r\n                    >\r\n                        <Box m={1} id=\"detailReField\">\r\n                           \r\n                            <label htmlFor=\"srContent\" style={{verticalAlign: 'middle', height: '45px'}}>\r\n                            <Box component=\"fieldset\" borderColor=\"transparent\">\r\n                            &nbsp;&nbsp;\r\n                                <Rating\r\n                                    name=\"customized-icons\"\r\n                                    defaultValue={1}\r\n                                    getLabelText={(value) => customIcons[value].label}\r\n                                    IconContainerComponent={IconContainer}\r\n                                    onChange={\r\n                                        (e)=>{\r\n                                            this.setState({\r\n                                                star : e.target.value\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                    />\r\n                                    \r\n                                    {/* &nbsp;&nbsp;<MoreVertIcon style={{marginBottom: '10px', color: \"#ddd\"}}/>&nbsp; */}\r\n                                    \r\n                            </Box> \r\n                            \r\n                            <textarea name=\"content\" id=\"srContent\" style={{resize: 'none'}} value={this.state.content} \r\n                                    className=\"form-control\" onChange={this.changeHandler.bind(this)}></textarea>\r\n                            <input style={{display:'none'}} id=\"review-icon-button-file\" type=\"file\" onChange={this.uploadImage.bind(this)}/>\r\n                                    <label htmlFor=\"review-icon-button-file\">\r\n                                        \r\n                                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" style={{marginBottom: '10px'}}>\r\n                                            <PhotoCamera />\r\n                                        </IconButton>  \r\n                                        {/* <span style={{display:'inline-block', paddingBottom: '20px'}}>{this.state.upload}</span> */}\r\n                                    </label>\r\n                                    {chip}\r\n                            </label>\r\n                                    \r\n                        </Box>\r\n                        <Box m={1} id=\"btnInsertBox\">\r\n                            <button type=\"button\" className=\"btn btn-warning\" id=\"btnInsertReview\"\r\n                                    onClick={this.insertReview.bind(this)}><b>작&nbsp;성</b></button>\r\n                        </Box>\r\n                </Box>\r\n                                   \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DetailReviewComp;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\tour\\AroundModal.js",["1174"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './kakaomap.css';\r\nimport {URL} from '../../../redux/config';\r\nimport AroundModalDetail from './AroundModalDetail';\r\n\r\nconst AroundModal = ({ isShowing, hide, wishTitle, wishContent, category }) => isShowing ? ReactDOM.createPortal(\r\n\r\n  <React.Fragment>\r\n    <div className=\"aroundmodal-overlay\"/>\r\n    <div className=\"aroundmodal-wrapper\" aria-modal aria-hidden tabIndex={-1} role=\"dialog\">\r\n      <div className=\"aroundmodal\">\r\n        <div className=\"aroundmodal-header\">\r\n          <button type=\"button\" className=\"aroundmodal-close-button\" data-dismiss=\"aroundmodal\" aria-label=\"Close\" onClick={hide}>\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n          <AroundModalDetail wishTitle={wishTitle} wishContent={wishContent} category={category}/>\r\n          \r\n      </div>\r\n    </div>\r\n  </React.Fragment>, document.body\r\n) : null;\r\n\r\nexport default AroundModal;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\tour\\UseModal.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\theme.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\WaveBorder.js",["1175","1176","1177","1178","1179"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport jeju1 from \"../../../image/jeju1.jpg\";\r\nimport jeju2 from \"../../../image/jeju2.jpg\";\r\nimport jeju3 from \"../../../image/jeju3.jpeg\";\r\nimport udo1 from \"../../../image/udo1.jpg\";\r\nimport Logo2 from \"../../../image/logo2.png\";\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\n\r\nconst styles = {\r\n    waves: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        marginBottom: -7,\r\n        height: \"7vw\",\r\n        minHeight: \"7vw\",\r\n        // \"z-index\": \"-5\",\r\n        // bottom: \"-1000\",\r\n    },\r\n    \"@keyframes moveForever\": {\r\n        from: {transform: \"translate3d(-90px, 0, 0)\"},\r\n        to: {transform: \"translate3d(85px, 0, 0)\"}\r\n    },\r\n    parallax: {\r\n        \"& > use\": {\r\n            animation: \"$moveForever 4s cubic-bezier(0.62, 0.5, 0.38, 0.5) infinite\",\r\n            animationDelay: props => `-${props.animationNegativeDelay}s`\r\n        }\r\n    },\r\n    content: {\r\n        textAlign: \"center\",\r\n        backgroundColor: \"#2d55aa\",\r\n        // minHeight: \"75vh\",\r\n        // margin: \"-.1em 0 0 0\",\r\n        color: \"#ffdd55\",\r\n        fontSize: \"2em\",\r\n        fontWeight: \"300\",\r\n        userSelect: \"none\",\r\n        cursor: \"default\",\r\n        outline: \"none\",\r\n    },\r\n};\r\n\r\nfunction WaveBorder(props) {\r\n    const id = String(Math.random());\r\n    const {\r\n        className,\r\n        lowerColor,\r\n        upperColor,\r\n        classes,\r\n        animationNegativeDelay,\r\n        ...rest\r\n    } = props;\r\n    return (\r\n        <div className={className} style={{background: upperColor}} {...rest}>\r\n            {/* <img className=\"mainPhotoComp_img1\" src={jeju1}/> */}\r\n            <svg\r\n                className={classes.waves}\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                xlink=\"http://www.w3.org/1999/xlink\"\r\n                viewBox=\"0 24 150 28\"\r\n                preserveAspectRatio=\"none\"\r\n                shapeRendering=\"auto\">\r\n                <defs>\r\n                    <path\r\n                        id={id}\r\n                        d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\"\r\n                    />\r\n                </defs>\r\n                <g className={classes.parallax}>\r\n                    <use href={`#${id}`} x=\"48\" y=\"6\" fill={lowerColor}/>\r\n                </g>\r\n            </svg>\r\n            {/*<div className=\"footerComp\">*/}\r\n            {/* <div> */}\r\n                {/* <hr/> */}\r\n                {/* <div className=\"content\">\r\n                    <br/>\r\n                    <img src={Logo2}\r\n                         style={{width: \"150px\"}}\r\n                         alt=\"logo2\"/>\r\n                    <br/>\r\n                    (주)멘도롱소랑 | 경기도 서초구 강남대로 459 (서초동 1300-34)<br/>\r\n                    사업자 번호 147-14-12345 | 전화번호:02-123-1234 | 팩스 02-1234-1234 | 이메일 help@naver.com\r\n                </div>\r\n            </div> */}\r\n            <MDBFooter color=\"unique-color-dark\" className=\"font-small pt-4 mt-4\">\r\n                <MDBContainer fluid className=\"text-center text-md-left\">\r\n                    <MDBRow>\r\n                    <MDBCol md=\"6\" style={{color: '#eee'}}>\r\n                        <h5 className=\"title\">(주)제주일상</h5>\r\n                        <p>\r\n                        경기도 서초구 강남대로 459 (서초동 1300-34)\r\n                        </p>\r\n                    </MDBCol>\r\n                    <MDBCol md=\"6\">\r\n                        {/* <h5 className=\"title\">Links</h5> */}\r\n                        <ul>\r\n                        <li className=\"list-unstyled\">\r\n                            <a href=\"#!\" style={{color: '#aaa'}}>사업자 번호 147-14-12345</a>\r\n                        </li>\r\n                        <li className=\"list-unstyled\">\r\n                            <a href=\"#!\" style={{color: '#aaa'}}>전화번호:02-123-1234</a>\r\n                        </li>\r\n                        <li className=\"list-unstyled\">\r\n                            <a href=\"#!\" style={{color: '#aaa'}}>팩스 02-1234-1234</a>\r\n                        </li>\r\n                        <li className=\"list-unstyled\">\r\n                            <a href=\"#!\" style={{color: '#aaa'}}>이메일 help@naver.com</a>\r\n                        </li>\r\n                        </ul>\r\n                    </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <div className=\"footer-copyright text-center py-3\">\r\n                    <MDBContainer fluid>\r\n                    &copy; {new Date().getFullYear()} Copyright: <a href=\"https://www.mdbootstrap.com\"> MDBootstrap.com </a>\r\n                    </MDBContainer>\r\n                </div>\r\n                </MDBFooter>\r\n        </div>\r\n    );\r\n}\r\n\r\nWaveBorder.propTypes = {\r\n    lowerColor: PropTypes.string.isRequired,\r\n    upperColor: PropTypes.string.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    animationNegativeDelay: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(WaveBorder);\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipNoticeA.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipFareTableA.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipIntro.js",["1180","1181","1182","1183","1184","1185"],"import React, {Component} from \"react\";\r\nimport '../ShipPageCss.css';\r\n\r\nclass ShipIntro extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let month = this.props.month==1?\"1~2월, 11,12월\":this.props.month==2?\"3월, 10월\":this.props.month==3?\"4월, 9월\":\r\n            this.props.month==4?\"5 ~ 8월\":this.props.month==11?\"1~3월, 10~12월\":\"4월 ~ 9월\";\r\n        return (\r\n            <div>\r\n                <div className=\"detailTitle\">\r\n                    <span className=\"detailTitleContent\" style={{backgroundColor: 'white', color: '#036E38'}}>\r\n                        &nbsp;&nbsp;배편 시간표&nbsp;&nbsp;\r\n                    </span>\r\n                </div>\r\n                <div className=\"detailIntro\" style={{color: \"#888\"}}>\r\n                    <b style={{color: '#555'}}>{this.props.title}</b> 배편 <b style={{color: '#555'}}>{month}</b> 날짜별 시간과 요금 정보입니다.<br/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShipIntro;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipFareAMobile.js",["1186"],"import React, {Component} from \"react\";\r\nimport ShipFareNotice from \"./ShipFareNotice\";\r\n\r\nclass ShipFareAMobile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <table class=\"table table-bordered\">\r\n                    <caption style={{captionSide: 'top'}}>총괄 요금표</caption>\r\n                    <thead>\r\n                        <tr>\r\n                            <td rowSpan=\"2\">구분</td>\r\n                            <td rowSpan=\"2\">왕복요금</td>\r\n                            <td colSpan=\"2\">편도요금</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>들어갈때</td>\r\n                            <td>나올때</td>\r\n                        </tr>\r\n                    </thead>\r\n                        <tr>\r\n                            <td>성인</td>\r\n                            <td>10,500원</td>\r\n                            <td>6,000원</td>\r\n                            <td>4,500원</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>중고등학생</td>\r\n                            <td>10,100원</td>\r\n                            <td>5,600원</td>\r\n                            <td>4,500원</td> \r\n                        </tr>\r\n                        <tr>\r\n                            <td>경로,장애인,유공자</td>\r\n                            <td>9,000원</td>\r\n                            <td>4,500원</td>\r\n                            <td>4,500원</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>초등학생</td>\r\n                            <td>3,800원</td>\r\n                            <td>2,300원</td>\r\n                            <td>1,500원</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>3~7세</td>\r\n                            <td>3,000원</td>\r\n                            <td>1,500원</td>\r\n                            <td>1,500원</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>경차</td>\r\n                            <td>21,600원</td>\r\n                            <td>12,800원</td>\r\n                            <td>8,800원</td>                            \r\n                        </tr>\r\n                        <tr>\r\n                            <td>중소형,9인승 이하 승합</td>\r\n                            <td>26,000원</td>\r\n                            <td>15,000원</td>\r\n                            <td>11,000원</td>  \r\n                        </tr>\r\n                        <tr>\r\n                            <td>대형(그렌져이상,수입차)12인승 이하 승합</td>\r\n                            <td>30,400원</td>\r\n                            <td>17,200원</td>\r\n                            <td>13,200원</td> \r\n                        </tr>\r\n                        <tr>\r\n                            <td>15인승 이하 승합</td>\r\n                            <td>37,000원</td>\r\n                            <td>20,500원</td>\r\n                            <td>16,500원</td> \r\n                        </tr>\r\n                        <tr>\r\n                            <td>카운티,25인승 이하</td>\r\n                            <td>61,000원</td>\r\n                            <td>33,500원</td>\r\n                            <td>27,500원</td>\r\n                        </tr>\r\n                    <tbody>\r\n                                           \r\n                    </tbody>\r\n                </table>\r\n                <table class=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <td rowSpan=\"2\">구분</td>\r\n                            <td colSpan=\"3\">요금 상세안내</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>선박요금</td>\r\n                            <td>도립공원입장료</td>\r\n                            <td>터미널이용료</td>\r\n                        </tr>\r\n                    </thead>\r\n                        <tr>\r\n                            <td>성인</td>                          \r\n                            <td>4,500원</td>\r\n                            <td>1,000원</td>\r\n                            <td>500원</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>중고등학생</td>                           \r\n                            <td>4,500원</td>\r\n                            <td>800원</td>\r\n                            <td>300원</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>경로,장애인,유공자</td>                       \r\n                            <td>4,500원</td>\r\n                            <td>-</td>\r\n                            <td>-</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>초등학생</td>                           \r\n                            <td>1,500원</td>\r\n                            <td>500원</td>\r\n                            <td>300원</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>3~7세</td>                          \r\n                            <td>1,500원</td>\r\n                            <td>-</td>\r\n                            <td>-</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>경차</td>                           \r\n                            <td>8,800원</td>\r\n                            <td>4,000원</td>\r\n                            <td rowSpan=\"5\">*렌터카 불가(장애인,노약자,임산부,영유아 탑승시 가능)</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>중소형,9인승 이하 승합</td>                            \r\n                            <td>11,000원</td>\r\n                            <td>4,000원</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>대형(그렌져이상,수입차)12인승 이하 승합</td>                         \r\n                            <td>13,200원</td>\r\n                            <td>4,000원</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>15인승 이하 승합</td>                          \r\n                            <td>16,500원</td>\r\n                            <td>4,000원</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>카운티,25인승 이하</td>                          \r\n                            <td>27,500원</td>\r\n                            <td>6,000원</td>\r\n                        </tr>\r\n                    <tbody>\r\n                                           \r\n                    </tbody>\r\n                </table>\r\n                <br/>\r\n                <ShipFareNotice/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShipFareAMobile;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipNoticeB.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipFareTableB.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipFareBMobile.js",["1187"],"import React, {Component} from \"react\";\r\nimport ShipFareNotice from \"./ShipFareNotice\";\r\n\r\nclass ShipFareBMobile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <table class=\"table table-bordered\">\r\n                    <caption style={{captionSide: 'top'}}>총괄 요금표</caption>\r\n                    <thead>\r\n                        <tr>\r\n                            <td rowSpan=\"2\">구분</td>\r\n                            <td rowSpan=\"2\">왕복요금</td>\r\n                            <td colSpan=\"2\">편도요금</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>들어갈때</td>\r\n                            <td>나올때</td>\r\n                        </tr>\r\n                    </thead>\r\n                        <tr>\r\n                            <td>성인</td>\r\n                            <td>10,000원</td>\r\n                            <td>5,500원</td>\r\n                            <td>4,500원</td>   \r\n                        </tr>\r\n                        <tr>\r\n                            <td>중고등학생</td>\r\n                            <td>9,800원</td>\r\n                            <td>5,300원</td>\r\n                            <td>4,500원</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>경로,장애인,유공자</td>\r\n                            <td>9,000원</td>\r\n                            <td>4,500원</td>\r\n                            <td>4,500원</td> \r\n                        </tr>\r\n                        <tr>\r\n                            <td>초등학생</td>\r\n                            <td>3,500원</td>\r\n                            <td>2,000원</td>\r\n                            <td>1,500원</td> \r\n                        </tr>\r\n                        <tr>\r\n                            <td>3~7세</td>\r\n                            <td>3,000원</td>\r\n                            <td>1,500원</td>\r\n                            <td>1,500원</td>  \r\n                        </tr>\r\n                        <tr>\r\n                            <td>경차</td>\r\n                            <td>21,600원</td>\r\n                            <td>12,800원</td>\r\n                            <td>8,800원</td>                            \r\n                        </tr>\r\n                        <tr>\r\n                            <td>중소형,9인승 이하 승합</td>\r\n                            <td>26,000원</td>\r\n                            <td>15,000원</td>\r\n                            <td>11,000원</td>  \r\n                        </tr>\r\n                        <tr>\r\n                            <td>대형(그렌져이상,수입차)12인승 이하 승합</td>\r\n                            <td>30,400원</td>\r\n                            <td>17,200원</td>\r\n                            <td>13,200원</td>  \r\n                        </tr>\r\n                        <tr>\r\n                            <td>15인승 이하 승합</td>\r\n                            <td>37,000원</td>\r\n                            <td>20,500원</td>\r\n                            <td>16,500원</td>  \r\n                        </tr>\r\n                        <tr>\r\n                            <td>카운티,25인승 이하</td>\r\n                            <td>61,000원</td>\r\n                            <td>33,500원</td>\r\n                            <td>27,500원</td> \r\n                        </tr>\r\n                    <tbody>\r\n                                           \r\n                    </tbody>\r\n                </table>\r\n                <table class=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <td rowSpan=\"2\">구분</td>\r\n                            <td colSpan=\"3\">요금 상세안내</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>선박요금</td>\r\n                            <td>도립공원입장료</td>\r\n                            <td>터미널이용료</td>\r\n                        </tr>\r\n                    </thead>\r\n                        <tr>\r\n                            <td>성인</td>                           \r\n                            <td>4,500원</td>\r\n                            <td>1,000원</td>\r\n                            <td>-</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>중고등학생</td>                           \r\n                            <td>4,500원</td>\r\n                            <td>800원</td>\r\n                            <td>-</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>경로,장애인,유공자</td>                           \r\n                            <td>4,500원</td>\r\n                            <td>-</td>\r\n                            <td>-</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>초등학생</td>                            \r\n                            <td>1,500원</td>\r\n                            <td>500원</td>\r\n                            <td>-</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>3~7세</td>                           \r\n                            <td>1,500원</td>\r\n                            <td>-</td>\r\n                            <td>-</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>경차</td>                          \r\n                            <td>8,800원</td>\r\n                            <td>4,000원</td>\r\n                            <td rowSpan=\"5\">*렌터카 불가(장애인,노약자,임산부,영유아 탑승시 가능)</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>중소형,9인승 이하 승합</td>                           \r\n                            <td>11,000원</td>\r\n                            <td>4,000원</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>대형(그렌져이상,수입차)12인승 이하 승합</td>                           \r\n                            <td>13,200원</td>\r\n                            <td>4,000원</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>15인승 이하 승합</td>                           \r\n                            <td>16,500원</td>\r\n                            <td>4,000원</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>카운티,25인승 이하</td>                         \r\n                            <td>27,500원</td>\r\n                            <td>6,000원</td>\r\n                        </tr>\r\n                    <tbody>\r\n                                           \r\n                    </tbody>\r\n                </table>\r\n                <br/>\r\n                <ShipFareNotice/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShipFareBMobile;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\DayItem.js",["1188","1189","1190","1191","1192"],"import React,{Component} from 'react';\r\nimport './style/RCA.css';\r\nimport DayDetail from './DayDetail';\r\nimport Header from './Header';\r\n\r\nclass DayItem extends Component {\r\n    \r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        // this.state={\r\n        //     // sharelist:[],\r\n        //     // spotlist:[],\r\n            \r\n        // };\r\n\r\n    }\r\n    // rendervalue=()=>{\r\n    //     return this.props.row.shareNum===null?0:'';\r\n    // }\r\n\r\n    // getShare=()=>{\r\n    //     let url=URL+\"/wish/sharesubject?num=\"+(this.props.row.shareNum!==null?'':0);\r\n    //     axios.get(url)\r\n    //     .then(res=>{\r\n    //         this.setState({\r\n    //             sharelist:res.data\r\n    //         });\r\n    //     }).catch(err=>{\r\n    //         console.log(\"목록 오류:\"+err);\r\n    //     })\r\n    // }\r\n\r\n    // componentDidMount(){\r\n    //     this.getShare();\r\n    // }\r\n\r\n    // componentWillUnmount(){\r\n    //     console.log(\"Day Item willmount\");\r\n    // }\r\n\r\n    // spot(){\r\n    //     let url = URL + \"/spot/select?contentsid=\" + this.props.row.spotId;\r\n    // }\r\n\r\n    render() {\r\n        \r\n        const {row} = this.props;\r\n        \r\n        var dayInfo = this.props.dayInfo;\r\n        var selectDay = new Date(dayInfo.getYear, dayInfo.getMonth-1, dayInfo.getDay);\r\n        var wishday=\"\"+row.wishday;\r\n        var y = wishday.substr(0,4);\r\n        var m = wishday.substr(5,2);\r\n        var d = wishday.substr(8,2);\r\n\r\n        var aroundId=row.aroundId;\r\n        var category=row.content;\r\n        var today = new Date(y, m-1, d);\r\n        var betweenDay = selectDay.getTime() - today.getTime(); \r\n        var tag = betweenDay==0?<DayDetail row={this.props.row}/>:\"\";\r\n        \r\n        return (\r\n            <span style={{color: 'black', fontWeight: '500'}}>\r\n                {tag}\r\n               \r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DayItem;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\ClistItem.js",["1193","1194","1195","1196","1197","1198","1199","1200","1201","1202","1203","1204","1205","1206"],"import React,{Component} from 'react';\r\nimport './style/RCA.css';\r\nimport {URL} from \"../../../redux/config\";\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport store from '../../../redux/store';\r\nimport {  FcCollaboration } from \"react-icons/fc\";\r\nimport moment from 'moment';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport HotelIcon from '@material-ui/icons/Hotel';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Form } from 'reactstrap';\r\n\r\n\r\nclass ClistItem extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            alertOpen: false,\r\n            alertSetOpen: false      \r\n        }\r\n\r\n    }\r\n\r\n    // alert 함수\r\n    alertOpen = () => {\r\n        this.setState({\r\n            alertOpen: true\r\n        })\r\n    };\r\n\r\n    alertClose = () => {\r\n        this.setState({\r\n            alertOpen: false\r\n        })\r\n    };\r\n    \r\n    onDelete=()=>{\r\n        let url=URL+\"/wish/delete?num=\"+this.props.row.num;\r\n        \r\n        console.log(this.props.row.num); \r\n        \r\n        axios.get(url)\r\n        .then(res=>{\r\n            this.alertClose();\r\n            this.props.toggle();\r\n            this.props.getMonthList();\r\n        }).catch(err=>{\r\n          console.log(\"삭제시 오류:\"+err);\r\n        });\r\n       }\r\n\r\n    //    onData=()=>{\r\n    //        let url= URL+\"/plan/insert\";\r\n    //        let memId=store.getState().loginId;\r\n    //        let title=this.props.row.title;\r\n    //        let content=this.props.row.addr;\r\n    //        let wishday=this.props.row.wishday;\r\n    //        let wishtime=this.props.row.wishtime;\r\n\r\n    //        axios.post(url,{memId,title,content,wishday,wishtime})\r\n    //        .then(res=>{\r\n    //             //this.props.history.push(\"/shareplan\");\r\n    //        }).catch(err=>{\r\n    //         console.log(\"shareplan insert 오류 : \" + err);\r\n    //        })\r\n\r\n    //    }\r\n\r\n    render() {\r\n        \r\n        const {row} = this.props;\r\n        \r\n        return (\r\n            // <div>\r\n            \r\n                <div>\r\n                <TimelineItem className=\"RCA-timeline\">\r\n                    <TimelineOppositeContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" className=\"RCA-timelineTitle\">\r\n                        {row.wishtime}\r\n                    </Typography>\r\n                    </TimelineOppositeContent>\r\n                    <TimelineSeparator>\r\n                    <TimelineDot color=\"primary\" variant=\"outlined\" className=\"RCA-timelineDot\">\r\n                        {/* <FastfoodIcon /> */}\r\n                        {row.content==\"spot\"?\"🛕\":row.content===\"myplan\"?\"📅\":row.content===\"share\"?\"👨‍🍳\":\r\n                            row.content.split(\",\")[0]===\"카페\"?\"☕\":row.content.split(\",\")[0]===\"음식점\"?\"🍔\":\r\n                            row.content.split(\",\")[0]===\"숙박\"?\"🛌\":\"\"}\r\n                    </TimelineDot>\r\n                    <TimelineConnector />\r\n                    </TimelineSeparator>\r\n                    <TimelineContent className=\"RCA-timelineTitle\">\r\n                        <div style={{cursor: 'pointer'}} onClick={this.alertOpen.bind(this)}>\r\n\r\n                            {row.content===\"share\"?row.title.split(\",\")[1]:row.title}\r\n                        </div>\r\n                    {/* <Paper elevation={3} className=\"RCA-timelineTitle\" style={{cursor: 'pointer'}} onClick={this.alertOpen.bind(this)}>\r\n                    \r\n                        \r\n                    </Paper> */}\r\n                    </TimelineContent>\r\n                    \r\n                    {/* alert 창 */}\r\n                    <Dialog\r\n                        open={this.state.alertOpen}\r\n                        onClose={this.alertClose.bind(this)}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\">{row.title}</DialogTitle>\r\n                        <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            해당 일정을 삭제하시겠습니까?\r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                        <Button onClick={this.alertClose.bind(this)} color=\"primary\">\r\n                            NO\r\n                        </Button>\r\n                        <Button onClick={this.onDelete.bind(this)} color=\"primary\" autoFocus>\r\n                            YES\r\n                        </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </TimelineItem>\r\n                \r\n                </div>\r\n                \r\n                \r\n\r\n                \r\n                // {\r\n                 //   row.content===\"spot\"?<div>{row.wishtime}&nbsp;🛕{row.title}<IconButton aria-label=\"delete\"  onClick={this.onDelete.bind(this)}><DeleteIcon/></IconButton>\r\n                    //  {/* <Button variant=\"warning\" onClick={this.onData.bind(this)}>일정공유</Button> */}\r\n                    //  {/* </div>:row.content===\"myplan\"?<div>{row.wishtime}&nbsp;📅{row.title}<IconButton aria-label=\"delete\"  onClick={this.onDelete.bind(this)}><DeleteIcon/></IconButton> */}\r\n                    // {/* <Button variant=\"warning\" onClick={this.onData.bind(this)}>일정공유</Button> */}\r\n                    // {/* </div>:row.content===\"share\"?<div>{row.wishtime}&nbsp;👨‍🍳{row.title}<IconButton aria-label=\"delete\"  onClick={this.onDelete.bind(this)}><DeleteIcon/></IconButton> */}\r\n                    // {/* <Button variant=\"warning\" onClick={this.onData.bind(this)}>일정공유</Button> */}\r\n                    // {/* </div>:row.content.split(\",\")[0]===\"카페\"?<div>{row.wishtime}&nbsp;☕{row.title}<IconButton aria-label=\"delete\"  onClick={this.onDelete.bind(this)}><DeleteIcon/></IconButton> */}\r\n                    // {/* <Button variant=\"warning\" onClick={this.onData.bind(this)}>일정공유</Button> */}\r\n                    // {/* </div>:row.content.split(\",\")[0]===\"음식점\"?<div>{row.wishtime}&nbsp;🍔{row.title}<IconButton aria-label=\"delete\"  onClick={this.onDelete.bind(this)}><DeleteIcon/></IconButton> */}\r\n                    // {/* <Button variant=\"warning\" onClick={this.onData.bind(this)}>일정공유</Button> */}\r\n                    // {/* </div>:row.content.split(\",\")[0]===\"숙박\"?<div>{row.wishtime}&nbsp;🛌{row.title}<IconButton aria-label=\"delete\"  onClick={this.onDelete.bind(this)}><DeleteIcon/></IconButton> */}\r\n                    // {/* <Button variant=\"warning\" onClick={this.onData.bind(this)}>일정공유</Button> */}\r\n                    // {/* </div>:''\r\n                // } */}\r\n            // </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ClistItem;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\ScheduleList.js",["1207","1208","1209","1210","1211","1212","1213"],"import React, { Component } from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport moment from 'moment';\r\nimport { FcOk } from \"react-icons/fc\";\r\nimport store from '../../../redux/store';\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\nimport './style/RCA.css';\r\n\r\n\r\nclass ScheduleList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            monthList: []\r\n        }\r\n    };\r\n\r\n    // getList=()=>{\r\n    //     let url = URL + \"/wish/schedulelist?memId=\"+store.getState().loginId + \"&wishday=\" + this.props.row.wishday ;\r\n    //     console.log(\"월별 가져오기 : \" +  this.props.row.wishday);\r\n        \r\n    //     axios.get(url)\r\n    //     .then(res=>{\r\n    //       this.setState({\r\n    //         monthList: res.data\r\n    //       });\r\n    //       console.log(res.data);\r\n    //   }).catch(err=>{\r\n    //     console.log(\"목록 오류:\"+err);\r\n    //   })\r\n    // }\r\n\r\n    // componentWillMount(){\r\n    //     this.getList();\r\n    // }\r\n    \r\n    render(){\r\n        var wishday = moment(this.props.row.wishday).format(\"YYYY-MM-DD\");\r\n\r\n        return(\r\n            \r\n                <div className=\"ScheduleListLine\">\r\n                    {/* {tag} */}\r\n                    {/* <FcOk/> */}\r\n                    🔖&nbsp;&nbsp;<b>{wishday}</b>\r\n                    &nbsp;&nbsp;&nbsp;{this.props.row.title}\r\n                </div>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default ScheduleList;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\ScheduleAdd.js",["1214","1215","1216","1217","1218","1219","1220","1221"],"import React, { Component } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport store from '../../../redux/store';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nclass ScheduleAdd extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n    }\r\n\r\n    insertContent=()=>{\r\n        let url=URL+\"/wish/insertcontent\";\r\n        let memId=store.getState().loginId;\r\n        let content=this.refs.content.value;\r\n        let wishday=this.refs.wishday.value;\r\n        let wishtime=this.refs.wishtime.value;\r\n\r\n        if(wishday=='' || wishtime=='')\r\n            alert(\"날짜와 시간을 모두 선택해주세요.\");\r\n        else{\r\n            axios.post(url,{memId,content,wishday,wishtime})\r\n            .then(res=>{\r\n                this.refs.content.value='';\r\n                this.refs.wishday.value='';\r\n                this.refs.wishtime.value='';\r\n            }).catch(err=>{\r\n                console.log(\"schedulewish insert 오류 : \" + err);\r\n            })   \r\n        }    \r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        const {row}=this.props;\r\n        const {key}=this.props;\r\n        return(\r\n            <div>\r\n                <span className=\"addtitle\">일정 추가</span><br/>\r\n                📆&nbsp;&nbsp;나의 일정\r\n                <input type=\"text\" className=\"form-control\" style={{width: '200px', height: '50px'}} ref=\"content\"></input>\r\n                🗓&nbsp;&nbsp;여행 날짜\r\n                <input type=\"date\" class=\"form-control form-control-sm\" ref=\"wishday\"></input>\r\n                ⏰&nbsp;&nbsp;예정 시간\r\n                <input type=\"time\" class=\"form-control form-control-sm\" ref=\"wishtime\"></input><br/>\r\n                <div style={{textAlign: 'center'}}>\r\n                    <button type=\"button\" class=\"btn btn-warning planAddBtn\" onClick={this.insertContent.bind(this)}><b>추가</b></button>\r\n                </div>\r\n            </div>\r\n            // <div>\r\n            //     <h2 id=\"transition-modal-title\">일정 추가</h2><br/>\r\n            //             <p id=\"transition-modal-description\">\r\n                            \r\n            //                         <span id=\"addtitle\" >일정</span>\r\n            //                         <span id=\"addcontent\">\r\n            //                         &nbsp;&nbsp;<input type=\"text\" className=\"form-control\" style={{width: '200px', height: '50px'}} ref=\"content\"></input><br/><br/></span>\r\n\r\n                                  \r\n                                \r\n            //                         <span id=\"addschedule\" >날짜</span>\r\n            //                         <span id=\"addwish\">\r\n            //                         &nbsp;&nbsp;<input type=\"date\" ref=\"wishday\"></input><br/><br/>\r\n            //                         </span>\r\n                            \r\n                                \r\n            //                         <span id=\"addschedule\">시간</span>\r\n            //                         <span id=\"addwish\">\r\n            //                         &nbsp;&nbsp; <input type=\"time\" ref=\"wishtime\"></input></span></p><br/><br/>\r\n            //             <div style={{textAlign:'center'}}>\r\n            //             <Button variant=\"warning\" onClick={this.insertContent.bind(this)}><b>추가</b></Button>\r\n            //             </div>\r\n            // </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ScheduleAdd;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\menus\\index.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\tour\\AroundModalDetail.js",["1222","1223","1224","1225","1226","1227","1228","1229","1230","1231"],"import React, { useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport {URL} from '../../../redux/config';\r\nimport './kakaomap.css';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport UseModal from './UseModal';\r\nimport {Route, Link} from \"react-router-dom\";\r\nimport store from '../../../redux/store';\r\n\r\nconst AroundModalDetail=(props)=> {\r\n\r\n  const [alertOpen, setAlertOpen] = useState(false);\r\n  const [alertSetOpen, setAlertSetOpen] = useState(false);\r\n  const [aroundwishday, setWishday] = useState('');\r\n  const [aroundwishtime, setWishtime] = useState('');\r\n  const [aroundwishmoney, setWishmoney] = useState('');\r\n\r\n    const {isShowing, toggle} = UseModal();\r\n\r\n    const insertAround=()=>{\r\n        let url = URL + \"/wish/insertaround\";\r\n        let memId = store.getState().loginId;\r\n        let category = props.category=='FD6'?'음식점':props.category=='CE7'?'카페':'숙박';\r\n        let aroundId = props.wishTitle;\r\n        let content = category + \",\" + props.wishContent;\r\n        let wishday = aroundwishday;\r\n        let wishtime = aroundwishtime;\r\n        let money = aroundwishmoney==''?null:aroundwishmoney;\r\n\r\n        // console.log(wishday);\r\n        if(wishday == '' || wishtime == '')\r\n            alert(\"날짜와 시간을 모두 선택해주세요.\");\r\n        else{\r\n            axios.post(url, {memId, aroundId, content, wishday, wishtime, money})\r\n            .then(res=>{\r\n              toggle();\r\n              handleAlertOpen();\r\n            }).catch(err=>{\r\n                console.log(\"aroundwish insert 오류 : \" + err);\r\n            })\r\n        }\r\n    }\r\n\r\n     // alert 함수\r\n     const handleAlertOpen = () => {\r\n      setAlertOpen(true);\r\n    };\r\n\r\n     const handleAlertClose = () => {\r\n      setAlertOpen(false);\r\n    };\r\n\r\n    const wishdayChange=(e)=>{\r\n        setWishday(e.target.value);\r\n    }\r\n\r\n    const wishtimeChange=(e)=>{\r\n      setWishtime(e.target.value);\r\n  }    \r\n    const wishmoneyChange=(e)=>{\r\n      setWishmoney(e.target.value);\r\n  }\r\n\r\n    return (\r\n      <div>\r\n          <div className=\"aroundpaper\">\r\n            <span className=\"aroundmodalTitle\">일정 추가</span><br/>\r\n              🏰&nbsp;&nbsp;{props.wishTitle}<br/>\r\n              🗺&nbsp;&nbsp;{props.wishContent}<br/>\r\n              🗓&nbsp;&nbsp;여행 날짜\r\n              <input type=\"date\" class=\"form-control form-control-sm\" value={aroundwishday} onChange={wishdayChange}></input>\r\n              ⏰&nbsp;&nbsp;예정 시간\r\n              <input type=\"time\" class=\"form-control form-control-sm\" value={aroundwishtime} onChange={wishtimeChange}></input>\r\n              💰&nbsp;&nbsp;<b>비용</b>\r\n              <input type=\"text\" class=\"form-control form-control-sm\" value={aroundwishmoney} onChange={wishmoneyChange}/><br/>\r\n              <div style={{textAlign: 'center'}}>\r\n                <button type=\"button\" class=\"btn btn-warning aroundmodalBtn\" onClick={insertAround}><b>추가</b></button>\r\n            </div>\r\n          </div>\r\n\r\n        \r\n                    <Dialog\r\n                      open={alertOpen}\r\n                      onClose={handleAlertClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                  >\r\n                      <DialogTitle id=\"alert-dialog-title\">{\"일정 추가 완료\"}</DialogTitle>\r\n                      <DialogContent>\r\n                      <DialogContentText id=\"alert-dialog-description\">\r\n                          Mypage로 이동하여 확인하시겠습니까?\r\n                      </DialogContentText>\r\n                      </DialogContent>\r\n                      <DialogActions>\r\n                      <Button onClick={handleAlertClose} color=\"primary\">\r\n                          NO\r\n                      </Button>\r\n                      <Link to=\"/mypage\" style={{marginRight: '10px'}} color=\"primary\">\r\n                        YES\r\n                      </Link>\r\n                      </DialogActions>\r\n                  </Dialog>\r\n      \r\n        </div>\r\n      \r\n      );\r\n}\r\n\r\nexport default AroundModalDetail;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ShipTable\\ShipFareNotice.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\DayDetail.js",["1232","1233","1234","1235","1236"],"import React,{Component} from 'react';\r\nimport axios from 'axios';\r\nimport './style/RCA.css';\r\nimport {URL} from \"../../../redux/config\";\r\nimport Header from './Header';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\n\r\n//import Subject from './Subject';\r\n\r\nclass DayDetail extends Component {\r\n    \r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n           list:'',\r\n        //    open : false,\r\n        //    setOpen : false\r\n            \r\n        };\r\n\r\n    }\r\n\r\n    // handleClose = () => {\r\n    //     this.setState({\r\n    //         open: false\r\n    //     })\r\n    //   };\r\n    // rendervalue=()=>{\r\n    //     return this.props.row.shareNum===null?0:'';\r\n    // }\r\n\r\n    getShare=()=>{\r\n        let url=URL+\"/wish/sharesubject?num=\"+ this.props.row.shareNum;\r\n        axios.get(url)\r\n        .then(res=>{\r\n            this.setState({\r\n                list:res.data\r\n            });\r\n        }).catch(err=>{\r\n            console.log(\"목록 오류:\"+err);\r\n        })\r\n    }\r\n\r\n    getSpot=()=>{\r\n        let url=URL+\"/wish/spottitle?contentsid=\"+ this.props.row.spotId;\r\n        axios.get(url)\r\n        .then(res=>{\r\n            // console.log(res.data);\r\n            this.setState({\r\n                list:res.data\r\n            });\r\n        }).catch(err=>{\r\n            console.log(\"목록 오류:\"+err);\r\n        })\r\n    }    \r\n\r\n    componentDidMount(){\r\n        if(this.props.row.shareNum!==null){\r\n            this.getShare();\r\n            // this.setState({\r\n            //     sharelist:this.state.list\r\n            // })\r\n        }\r\n        else if(this.props.row.spotId!==null){\r\n            this.getSpot();\r\n            // this.setState({\r\n            //     spotlist:this.state.list\r\n            // })\r\n        }\r\n        \r\n            \r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        const {row} = this.props;\r\n        \r\n        var aroundId=row.aroundId;\r\n        var content=row.content;\r\n        var shareNum=row.shareNum;\r\n        var spotId=row.spotId;\r\n        \r\n        var flag = ''\r\n      \r\n        var flag = aroundId!==null?content.split(\",\")[0]===\"음식점\"\r\n            ?'food':content.split(\",\")[0]===\"숙박\"?'bed':'coffee':'';\r\n\r\n        var around='';\r\n        if(flag==='food')\r\n            around = document.body.offsetWidth > 450?<div>🍔{aroundId}</div>:<span>🍔</span>;\r\n        else if(flag==='coffee')\r\n            around = document.body.offsetWidth > 450?<div>☕{aroundId}</div>:<span>☕</span>;\r\n        else \r\n            around = document.body.offsetWidth > 450?<div>🛌{aroundId}</div>:<span>🛌</span>;\r\n\r\n        flag = aroundId==null&&shareNum==null&&spotId==null?content.split(\",\")[0]===\"배\"\r\n            ?'🚢':content.split(\",\")[0]===\"렌트카\"?'🚗':content.split(\",\")[0]===\"항공\"?'✈':'📅':'';\r\n\r\n        var share = shareNum!=null?document.body.offsetWidth > 450?<div>👨‍🍳{this.state.list.split(\",\")[1]}</div>:<span>👨‍🍳</span>:'';\r\n        var spot = spotId!=null?document.body.offsetWidth > 450?<div>🛕{this.state.list}</div>:<span>🛕</span>:'';\r\n        var myTodo = (aroundId==null&&shareNum==null&&spotId==null)?document.body.offsetWidth > 450?<div>{flag}{content.split(\",\")[1]}</div>:<span>{flag}</span>:'';\r\n        var tag = aroundId!==null?around:shareNum!==null?share:spotId!==null?spot:myTodo;\r\n        \r\n        return (\r\n            <span style={{cursor: 'pointer'}}>\r\n\r\n                {tag}\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DayDetail;","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\menus\\Reservation.js",["1237"],"import React, {Component} from \"react\";\r\n\r\n\r\nclass Reservation extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*<b>비행기 렌터카 예약</b>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reservation;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\menus\\Tour.js",["1238"],"import React, {Component} from \"react\";\r\n\r\nclass Tour extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tour;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\menus\\Home.js",["1239","1240","1241"],"import React, {Component} from \"react\";\r\n// import BigText from '../component/BigText';\r\n// import Header from \"../component/Header\";\r\nimport store from \"../../../redux/store\";\r\nimport {actionType, mainViewType} from \"../../../redux/config\";\r\n\r\n// page init\r\n// constructor -> componentWillMount -> render\r\n\r\n// 다른메뉴 -> Home menu click\r\n// constructor -> componentWillMount -> render -> componentDidMount\r\n\r\n// Home menu 에서 -> 다른메뉴로 갈때.\r\n// componentWillUnmount\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"Home constructor\", this.props, this.state, store.getState());\r\n    }\r\n\r\n    componentWillMount() {\r\n        console.log(\"Home componentWillMount()\");\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState, nextContext) {\r\n        console.log(\"Home componentWillUpdate()\");\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        console.log(\"Home componentWillUnmount()\");\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(\"Home render()\");\r\n        return (\r\n            <div>\r\n                {/*<Header />*/}\r\n                {/*<BigText>홈</BigText>*/}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"Home componentDidMount()\");\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(\"Home componentDidUpdate()\");\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log(\"Home componentWillUnmount()\");\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\menus\\MyPage.js",["1242"],"import React, {Component} from \"react\";\r\n\r\nclass MyPage extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*<b>MyPage</b>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyPage;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\menus\\Notice.js",["1243"],"import React, {Component} from \"react\";\r\n\r\nclass Notice extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*<b>공지사항</b>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notice;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\menus\\Join.js",[],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\menus\\Login.js",["1244"],"import React, {Component} from \"react\";\r\n\r\nclass Login extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*<b>Login</b>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\menus\\Admin.js",["1245"],"import React, {Component} from \"react\";\r\n\r\nclass Admin extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*<b>Admin</b>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Admin;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\header\\menus\\ShareBoard.js",["1246"],"import React, {Component} from 'react';\r\n\r\nclass ShareBoard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*<b>맛집공유게시판</b>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShareBoard;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\Recommend\\RecommendCourse.js",["1247","1248"],"C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\MyBudget.js",["1249"],"import React, {Component} from \"react\";\r\nimport {URL} from '../../../redux/config';\r\nimport MyBudgetItem from \"./MyBudgetItem\";\r\nimport axios from 'axios';\r\nimport {WOW} from 'wowjs';\r\nimport store from '../../../redux/store'; \r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass MyBudget extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"MyBudget constructor\", props);\r\n        this.state={\r\n            listData:[],\r\n            wishday1:'',\r\n            wishday2:'',\r\n        };\r\n    }\r\n\r\n    list=()=>{\r\n        let memId = store.getState().loginId;        \r\n        let wishday1 = this.refs.wishday1.value;\r\n        let wishday2 = this.refs.wishday2.value;\r\n        let url = URL + \"/wish/budget?memId=\"+memId+\"&wishday1=\"+wishday1+\"&wishday2=\"+wishday2;\r\n        // console.log(url);\r\n        // console.log(wishday2);\r\n        // console.log(wishday1);\r\n\r\n        axios.get(url)\r\n        .then(res=>{\r\n            console.log(res.data);\r\n            this.setState({\r\n                listData:res.data\r\n            })\r\n        }).catch(err=>{\r\n            console.log(\"wishlist 오류 : \" + err);\r\n        })\r\n    }\r\n\r\n    sumlist=()=>{\r\n        let memId = store.getState().loginId;        \r\n        let wishday1 = this.refs.wishday1.value;\r\n        let wishday2 = this.refs.wishday2.value;\r\n        let url = URL + \"/wish/budgetsum?memId=\"+memId+\"&wishday1=\"+wishday1+\"&wishday2=\"+wishday2;\r\n        // console.log(url);\r\n        // console.log(wishday2);\r\n        // console.log(wishday1);\r\n\r\n        axios.get(url)\r\n        .then(res=>{\r\n            console.log(res.data);\r\n            this.setState({\r\n                sumData:res.data\r\n            })\r\n        }).catch(err=>{\r\n            console.log(\"wishlist 오류 : \" + err);\r\n        })\r\n    }\r\n    // modal 함수\r\n    handleOpen = () => {\r\n        if(!store.getState().logged){\r\n            alert(\"로그인이 필요한 서비스입니다.\");\r\n        }\r\n        else{\r\n            this.setState({\r\n                open: true\r\n            })\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            open: false\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"dayselect\">\r\n                🗓&nbsp;&nbsp;<b>시작일</b>\r\n                <input type=\"date\" class=\"form-control form-control-sm\" ref=\"wishday1\"></input>\r\n                🗓&nbsp;&nbsp;<b>종료일</b>\r\n                <input type=\"date\" class=\"form-control form-control-sm\" ref=\"wishday2\"></input>\r\n                </div>\r\n                <Button color=\"primary\" onClick={this.list.bind(this)}>검색</Button>\r\n                <div id=\"MyBudgetTable\">\r\n                    <table className=\"table table-hover\" id=\"MyBudgetMainTable\">\r\n                        <thead style={{backgroundColor: '#fafafa'}}>\r\n                            <tr style={{textAlign: 'center'}}>\r\n                                {/* <td style={{width:'5%'}}>#</td> */}\r\n                                <td style={{width:'50%'}}>한것</td>\r\n                                <td style={{width:'25%'}}>비용</td>\r\n                                <td style={{width:'25%'}}>일시</td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.listData.map((row, idx)=>(\r\n                                    <MyBudgetItem row={row} key={idx} history={this.props.history}/>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                        <tfoot>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td>{this.state.sumData}</td>\r\n                            </tr>\r\n                        </tfoot>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyBudget;\r\n","C:\\Users\\bitcamp\\Desktop\\파이널프로젝트\\jeju-front\\finalproject\\src\\component\\main\\mypage\\MyBudgetItem.js",[],{"ruleId":"1250","replacedBy":"1251"},{"ruleId":"1252","replacedBy":"1253"},{"ruleId":"1254","severity":1,"message":"1255","line":8,"column":15,"nodeType":"1256","messageId":"1257","endLine":8,"endColumn":20},{"ruleId":"1258","severity":1,"message":"1259","line":131,"column":53,"nodeType":"1260","messageId":"1261","endLine":131,"endColumn":55},{"ruleId":"1254","severity":1,"message":"1262","line":1,"column":9,"nodeType":"1256","messageId":"1257","endLine":1,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1263","line":1,"column":22,"nodeType":"1256","messageId":"1257","endLine":1,"endColumn":33},{"ruleId":"1254","severity":1,"message":"1264","line":2,"column":8,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1265","line":3,"column":8,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1266","line":3,"column":16,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":25},{"ruleId":"1254","severity":1,"message":"1267","line":2,"column":18,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":23},{"ruleId":"1254","severity":1,"message":"1268","line":3,"column":9,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1269","line":3,"column":15,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1270","line":3,"column":22,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":32},{"ruleId":"1254","severity":1,"message":"1271","line":3,"column":34,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":40},{"ruleId":"1254","severity":1,"message":"1272","line":3,"column":42,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":48},{"ruleId":"1254","severity":1,"message":"1273","line":3,"column":50,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":61},{"ruleId":"1254","severity":1,"message":"1274","line":3,"column":63,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":68},{"ruleId":"1254","severity":1,"message":"1275","line":3,"column":70,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":78},{"ruleId":"1254","severity":1,"message":"1276","line":3,"column":80,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":84},{"ruleId":"1254","severity":1,"message":"1277","line":7,"column":8,"nodeType":"1256","messageId":"1257","endLine":7,"endColumn":15},{"ruleId":"1254","severity":1,"message":"1278","line":8,"column":8,"nodeType":"1256","messageId":"1257","endLine":8,"endColumn":12},{"ruleId":"1254","severity":1,"message":"1279","line":9,"column":8,"nodeType":"1256","messageId":"1257","endLine":9,"endColumn":16},{"ruleId":"1254","severity":1,"message":"1280","line":10,"column":8,"nodeType":"1256","messageId":"1257","endLine":10,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1281","line":11,"column":8,"nodeType":"1256","messageId":"1257","endLine":11,"endColumn":18},{"ruleId":"1254","severity":1,"message":"1282","line":12,"column":8,"nodeType":"1256","messageId":"1257","endLine":12,"endColumn":16},{"ruleId":"1254","severity":1,"message":"1283","line":13,"column":8,"nodeType":"1256","messageId":"1257","endLine":13,"endColumn":23},{"ruleId":"1254","severity":1,"message":"1284","line":14,"column":8,"nodeType":"1256","messageId":"1257","endLine":14,"endColumn":25},{"ruleId":"1285","severity":1,"message":"1286","line":179,"column":21,"nodeType":"1287","endLine":179,"endColumn":50},{"ruleId":"1285","severity":1,"message":"1286","line":215,"column":21,"nodeType":"1287","endLine":215,"endColumn":50},{"ruleId":"1285","severity":1,"message":"1286","line":222,"column":21,"nodeType":"1287","endLine":222,"endColumn":50},{"ruleId":"1285","severity":1,"message":"1286","line":245,"column":25,"nodeType":"1287","endLine":245,"endColumn":54},{"ruleId":"1288","severity":1,"message":"1289","line":334,"column":17,"nodeType":"1290","messageId":"1291","endLine":334,"endColumn":52},{"ruleId":"1288","severity":1,"message":"1289","line":336,"column":17,"nodeType":"1290","messageId":"1291","endLine":336,"endColumn":47},{"ruleId":"1288","severity":1,"message":"1289","line":337,"column":21,"nodeType":"1290","messageId":"1291","endLine":337,"endColumn":40},{"ruleId":"1288","severity":1,"message":"1289","line":338,"column":17,"nodeType":"1290","messageId":"1291","endLine":338,"endColumn":33},{"ruleId":"1288","severity":1,"message":"1289","line":339,"column":17,"nodeType":"1290","messageId":"1291","endLine":339,"endColumn":65},{"ruleId":"1288","severity":1,"message":"1289","line":340,"column":21,"nodeType":"1290","messageId":"1291","endLine":340,"endColumn":54},{"ruleId":"1288","severity":1,"message":"1289","line":341,"column":17,"nodeType":"1290","messageId":"1291","endLine":341,"endColumn":33},{"ruleId":"1288","severity":1,"message":"1289","line":342,"column":18,"nodeType":"1290","messageId":"1291","endLine":342,"endColumn":61},{"ruleId":"1288","severity":1,"message":"1289","line":343,"column":21,"nodeType":"1290","messageId":"1291","endLine":343,"endColumn":44},{"ruleId":"1288","severity":1,"message":"1289","line":344,"column":17,"nodeType":"1290","messageId":"1291","endLine":344,"endColumn":33},{"ruleId":"1288","severity":1,"message":"1289","line":346,"column":17,"nodeType":"1290","messageId":"1291","endLine":346,"endColumn":91},{"ruleId":"1288","severity":1,"message":"1289","line":347,"column":17,"nodeType":"1290","messageId":"1291","endLine":347,"endColumn":95},{"ruleId":"1288","severity":1,"message":"1289","line":348,"column":17,"nodeType":"1290","messageId":"1291","endLine":348,"endColumn":83},{"ruleId":"1288","severity":1,"message":"1289","line":350,"column":17,"nodeType":"1290","messageId":"1291","endLine":350,"endColumn":64},{"ruleId":"1288","severity":1,"message":"1289","line":351,"column":21,"nodeType":"1290","messageId":"1291","endLine":351,"endColumn":52},{"ruleId":"1288","severity":1,"message":"1289","line":352,"column":17,"nodeType":"1290","messageId":"1291","endLine":352,"endColumn":33},{"ruleId":"1288","severity":1,"message":"1289","line":353,"column":17,"nodeType":"1290","messageId":"1291","endLine":353,"endColumn":79},{"ruleId":"1288","severity":1,"message":"1289","line":354,"column":21,"nodeType":"1290","messageId":"1291","endLine":354,"endColumn":44},{"ruleId":"1288","severity":1,"message":"1289","line":355,"column":17,"nodeType":"1290","messageId":"1291","endLine":356,"endColumn":55},{"ruleId":"1288","severity":1,"message":"1289","line":357,"column":21,"nodeType":"1290","messageId":"1291","endLine":357,"endColumn":42},{"ruleId":"1288","severity":1,"message":"1289","line":358,"column":17,"nodeType":"1290","messageId":"1291","endLine":359,"endColumn":54},{"ruleId":"1288","severity":1,"message":"1289","line":360,"column":21,"nodeType":"1290","messageId":"1291","endLine":360,"endColumn":42},{"ruleId":"1288","severity":1,"message":"1289","line":361,"column":17,"nodeType":"1290","messageId":"1291","endLine":361,"endColumn":33},{"ruleId":"1254","severity":1,"message":"1292","line":2,"column":8,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1293","line":4,"column":9,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":23},{"ruleId":"1254","severity":1,"message":"1294","line":4,"column":25,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":41},{"ruleId":"1254","severity":1,"message":"1295","line":4,"column":43,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":53},{"ruleId":"1254","severity":1,"message":"1296","line":5,"column":9,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":22},{"ruleId":"1254","severity":1,"message":"1297","line":6,"column":8,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1298","line":7,"column":8,"nodeType":"1256","messageId":"1257","endLine":7,"endColumn":17},{"ruleId":"1254","severity":1,"message":"1299","line":8,"column":8,"nodeType":"1256","messageId":"1257","endLine":8,"endColumn":24},{"ruleId":"1300","severity":1,"message":"1301","line":12,"column":5,"nodeType":"1302","messageId":"1303","endLine":15,"endColumn":6},{"ruleId":"1254","severity":1,"message":"1304","line":4,"column":8,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":22},{"ruleId":"1254","severity":1,"message":"1305","line":5,"column":8,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":26},{"ruleId":"1254","severity":1,"message":"1306","line":3,"column":9,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":19},{"ruleId":"1254","severity":1,"message":"1307","line":3,"column":21,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":33},{"ruleId":"1254","severity":1,"message":"1308","line":5,"column":8,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1309","line":13,"column":8,"nodeType":"1256","messageId":"1257","endLine":13,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1264","line":14,"column":8,"nodeType":"1256","messageId":"1257","endLine":14,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1310","line":5,"column":8,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1311","line":14,"column":8,"nodeType":"1256","messageId":"1257","endLine":14,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1312","line":15,"column":8,"nodeType":"1256","messageId":"1257","endLine":15,"endColumn":12},{"ruleId":"1254","severity":1,"message":"1313","line":16,"column":8,"nodeType":"1256","messageId":"1257","endLine":16,"endColumn":16},{"ruleId":"1258","severity":1,"message":"1259","line":58,"column":42,"nodeType":"1260","messageId":"1261","endLine":58,"endColumn":44},{"ruleId":"1258","severity":1,"message":"1259","line":63,"column":20,"nodeType":"1260","messageId":"1261","endLine":63,"endColumn":22},{"ruleId":"1258","severity":1,"message":"1259","line":63,"column":38,"nodeType":"1260","messageId":"1261","endLine":63,"endColumn":40},{"ruleId":"1258","severity":1,"message":"1259","line":141,"column":38,"nodeType":"1260","messageId":"1261","endLine":141,"endColumn":40},{"ruleId":"1258","severity":1,"message":"1259","line":141,"column":83,"nodeType":"1260","messageId":"1261","endLine":141,"endColumn":85},{"ruleId":"1258","severity":1,"message":"1259","line":142,"column":37,"nodeType":"1260","messageId":"1261","endLine":142,"endColumn":39},{"ruleId":"1258","severity":1,"message":"1259","line":142,"column":82,"nodeType":"1260","messageId":"1261","endLine":142,"endColumn":84},{"ruleId":"1258","severity":1,"message":"1259","line":144,"column":38,"nodeType":"1260","messageId":"1261","endLine":144,"endColumn":40},{"ruleId":"1258","severity":1,"message":"1259","line":144,"column":85,"nodeType":"1260","messageId":"1261","endLine":144,"endColumn":87},{"ruleId":"1258","severity":1,"message":"1314","line":166,"column":110,"nodeType":"1260","messageId":"1261","endLine":166,"endColumn":112},{"ruleId":"1254","severity":1,"message":"1315","line":86,"column":16,"nodeType":"1256","messageId":"1257","endLine":86,"endColumn":22},{"ruleId":"1316","severity":1,"message":"1317","line":111,"column":55,"nodeType":"1318","messageId":"1261","endLine":111,"endColumn":60},{"ruleId":"1316","severity":1,"message":"1317","line":112,"column":56,"nodeType":"1318","messageId":"1261","endLine":112,"endColumn":61},{"ruleId":"1316","severity":1,"message":"1317","line":113,"column":55,"nodeType":"1318","messageId":"1261","endLine":113,"endColumn":60},{"ruleId":"1316","severity":1,"message":"1317","line":114,"column":55,"nodeType":"1318","messageId":"1261","endLine":114,"endColumn":60},{"ruleId":"1258","severity":1,"message":"1259","line":67,"column":46,"nodeType":"1260","messageId":"1261","endLine":67,"endColumn":48},{"ruleId":"1254","severity":1,"message":"1319","line":1,"column":27,"nodeType":"1256","messageId":"1257","endLine":1,"endColumn":35},{"ruleId":"1254","severity":1,"message":"1267","line":2,"column":9,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1320","line":2,"column":16,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1321","line":3,"column":8,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":26},{"ruleId":"1254","severity":1,"message":"1322","line":147,"column":17,"nodeType":"1256","messageId":"1257","endLine":147,"endColumn":27},{"ruleId":"1254","severity":1,"message":"1323","line":147,"column":29,"nodeType":"1256","messageId":"1257","endLine":147,"endColumn":35},{"ruleId":"1254","severity":1,"message":"1324","line":147,"column":37,"nodeType":"1256","messageId":"1257","endLine":147,"endColumn":43},{"ruleId":"1258","severity":1,"message":"1314","line":171,"column":98,"nodeType":"1260","messageId":"1261","endLine":171,"endColumn":100},{"ruleId":"1258","severity":1,"message":"1259","line":226,"column":43,"nodeType":"1260","messageId":"1261","endLine":226,"endColumn":45},{"ruleId":"1254","severity":1,"message":"1267","line":2,"column":9,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1320","line":2,"column":16,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1325","line":3,"column":8,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":26},{"ruleId":"1254","severity":1,"message":"1326","line":9,"column":9,"nodeType":"1256","messageId":"1257","endLine":9,"endColumn":15},{"ruleId":"1254","severity":1,"message":"1327","line":11,"column":8,"nodeType":"1256","messageId":"1257","endLine":11,"endColumn":11},{"ruleId":"1254","severity":1,"message":"1328","line":24,"column":7,"nodeType":"1256","messageId":"1257","endLine":24,"endColumn":19},{"ruleId":"1258","severity":1,"message":"1259","line":137,"column":40,"nodeType":"1260","messageId":"1261","endLine":137,"endColumn":42},{"ruleId":"1254","severity":1,"message":"1267","line":2,"column":9,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1320","line":2,"column":16,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1325","line":3,"column":8,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":26},{"ruleId":"1254","severity":1,"message":"1327","line":8,"column":8,"nodeType":"1256","messageId":"1257","endLine":8,"endColumn":11},{"ruleId":"1258","severity":1,"message":"1259","line":127,"column":30,"nodeType":"1260","messageId":"1261","endLine":127,"endColumn":32},{"ruleId":"1258","severity":1,"message":"1259","line":153,"column":42,"nodeType":"1260","messageId":"1261","endLine":153,"endColumn":44},{"ruleId":"1258","severity":1,"message":"1259","line":153,"column":69,"nodeType":"1260","messageId":"1261","endLine":153,"endColumn":71},{"ruleId":"1254","severity":1,"message":"1329","line":3,"column":8,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":15},{"ruleId":"1254","severity":1,"message":"1307","line":5,"column":27,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":39},{"ruleId":"1254","severity":1,"message":"1330","line":2,"column":8,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":28},{"ruleId":"1254","severity":1,"message":"1264","line":3,"column":8,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1331","line":4,"column":9,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":12},{"ruleId":"1254","severity":1,"message":"1308","line":5,"column":8,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1332","line":6,"column":8,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":12},{"ruleId":"1254","severity":1,"message":"1333","line":7,"column":8,"nodeType":"1256","messageId":"1257","endLine":7,"endColumn":11},{"ruleId":"1254","severity":1,"message":"1334","line":10,"column":8,"nodeType":"1256","messageId":"1257","endLine":10,"endColumn":18},{"ruleId":"1254","severity":1,"message":"1335","line":11,"column":8,"nodeType":"1256","messageId":"1257","endLine":11,"endColumn":16},{"ruleId":"1254","severity":1,"message":"1336","line":12,"column":8,"nodeType":"1256","messageId":"1257","endLine":12,"endColumn":18},{"ruleId":"1254","severity":1,"message":"1337","line":14,"column":8,"nodeType":"1256","messageId":"1257","endLine":14,"endColumn":15},{"ruleId":"1254","severity":1,"message":"1310","line":15,"column":8,"nodeType":"1256","messageId":"1257","endLine":15,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1338","line":16,"column":8,"nodeType":"1256","messageId":"1257","endLine":16,"endColumn":17},{"ruleId":"1254","severity":1,"message":"1309","line":17,"column":8,"nodeType":"1256","messageId":"1257","endLine":17,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1339","line":18,"column":8,"nodeType":"1256","messageId":"1257","endLine":18,"endColumn":24},{"ruleId":"1254","severity":1,"message":"1340","line":137,"column":7,"nodeType":"1256","messageId":"1257","endLine":137,"endColumn":15},{"ruleId":"1254","severity":1,"message":"1264","line":2,"column":8,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1331","line":3,"column":9,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":12},{"ruleId":"1300","severity":1,"message":"1301","line":7,"column":5,"nodeType":"1302","messageId":"1303","endLine":11,"endColumn":6},{"ruleId":"1258","severity":1,"message":"1259","line":94,"column":42,"nodeType":"1260","messageId":"1261","endLine":94,"endColumn":44},{"ruleId":"1258","severity":1,"message":"1259","line":56,"column":33,"nodeType":"1260","messageId":"1261","endLine":56,"endColumn":35},{"ruleId":"1258","severity":1,"message":"1259","line":155,"column":31,"nodeType":"1260","messageId":"1261","endLine":155,"endColumn":33},{"ruleId":"1258","severity":1,"message":"1259","line":171,"column":31,"nodeType":"1260","messageId":"1261","endLine":171,"endColumn":33},{"ruleId":"1258","severity":1,"message":"1259","line":228,"column":38,"nodeType":"1260","messageId":"1261","endLine":228,"endColumn":40},{"ruleId":"1258","severity":1,"message":"1259","line":228,"column":61,"nodeType":"1260","messageId":"1261","endLine":228,"endColumn":63},{"ruleId":"1258","severity":1,"message":"1259","line":79,"column":33,"nodeType":"1260","messageId":"1261","endLine":79,"endColumn":35},{"ruleId":"1258","severity":1,"message":"1259","line":180,"column":31,"nodeType":"1260","messageId":"1261","endLine":180,"endColumn":33},{"ruleId":"1258","severity":1,"message":"1259","line":196,"column":31,"nodeType":"1260","messageId":"1261","endLine":196,"endColumn":33},{"ruleId":"1258","severity":1,"message":"1259","line":253,"column":38,"nodeType":"1260","messageId":"1261","endLine":253,"endColumn":40},{"ruleId":"1258","severity":1,"message":"1259","line":253,"column":61,"nodeType":"1260","messageId":"1261","endLine":253,"endColumn":63},{"ruleId":"1258","severity":1,"message":"1259","line":119,"column":42,"nodeType":"1260","messageId":"1261","endLine":119,"endColumn":44},{"ruleId":"1258","severity":1,"message":"1259","line":122,"column":20,"nodeType":"1260","messageId":"1261","endLine":122,"endColumn":22},{"ruleId":"1258","severity":1,"message":"1259","line":122,"column":38,"nodeType":"1260","messageId":"1261","endLine":122,"endColumn":40},{"ruleId":"1258","severity":1,"message":"1259","line":139,"column":44,"nodeType":"1260","messageId":"1261","endLine":139,"endColumn":46},{"ruleId":"1258","severity":1,"message":"1259","line":142,"column":38,"nodeType":"1260","messageId":"1261","endLine":142,"endColumn":40},{"ruleId":"1258","severity":1,"message":"1259","line":145,"column":38,"nodeType":"1260","messageId":"1261","endLine":145,"endColumn":40},{"ruleId":"1258","severity":1,"message":"1259","line":148,"column":38,"nodeType":"1260","messageId":"1261","endLine":148,"endColumn":40},{"ruleId":"1258","severity":1,"message":"1259","line":151,"column":38,"nodeType":"1260","messageId":"1261","endLine":151,"endColumn":40},{"ruleId":"1254","severity":1,"message":"1341","line":4,"column":10,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1342","line":4,"column":22,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":34},{"ruleId":"1254","severity":1,"message":"1295","line":4,"column":36,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":46},{"ruleId":"1254","severity":1,"message":"1343","line":4,"column":48,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":58},{"ruleId":"1254","severity":1,"message":"1344","line":123,"column":13,"nodeType":"1256","messageId":"1257","endLine":123,"endColumn":21},{"ruleId":"1258","severity":1,"message":"1259","line":176,"column":31,"nodeType":"1260","messageId":"1261","endLine":176,"endColumn":33},{"ruleId":"1258","severity":1,"message":"1259","line":192,"column":31,"nodeType":"1260","messageId":"1261","endLine":192,"endColumn":33},{"ruleId":"1258","severity":1,"message":"1259","line":321,"column":38,"nodeType":"1260","messageId":"1261","endLine":321,"endColumn":40},{"ruleId":"1254","severity":1,"message":"1345","line":1,"column":16,"nodeType":"1256","messageId":"1257","endLine":1,"endColumn":25},{"ruleId":"1254","severity":1,"message":"1264","line":3,"column":8,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1331","line":4,"column":21,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":24},{"ruleId":"1254","severity":1,"message":"1346","line":5,"column":9,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":19},{"ruleId":"1258","severity":1,"message":"1259","line":16,"column":65,"nodeType":"1260","messageId":"1261","endLine":16,"endColumn":67},{"ruleId":"1258","severity":1,"message":"1259","line":19,"column":99,"nodeType":"1260","messageId":"1261","endLine":19,"endColumn":101},{"ruleId":"1254","severity":1,"message":"1347","line":25,"column":9,"nodeType":"1256","messageId":"1257","endLine":25,"endColumn":18},{"ruleId":"1254","severity":1,"message":"1348","line":25,"column":20,"nodeType":"1256","messageId":"1257","endLine":25,"endColumn":29},{"ruleId":"1349","severity":1,"message":"1350","line":33,"column":8,"nodeType":"1351","endLine":33,"endColumn":25,"suggestions":"1352"},{"ruleId":"1258","severity":1,"message":"1314","line":52,"column":37,"nodeType":"1260","messageId":"1261","endLine":52,"endColumn":39},{"ruleId":"1254","severity":1,"message":"1353","line":72,"column":13,"nodeType":"1256","messageId":"1257","endLine":72,"endColumn":30},{"ruleId":"1258","severity":1,"message":"1259","line":140,"column":34,"nodeType":"1260","messageId":"1261","endLine":140,"endColumn":36},{"ruleId":"1354","severity":1,"message":"1355","line":177,"column":45,"nodeType":"1287","endLine":177,"endColumn":90},{"ruleId":"1258","severity":1,"message":"1259","line":215,"column":51,"nodeType":"1260","messageId":"1261","endLine":215,"endColumn":53},{"ruleId":"1254","severity":1,"message":"1264","line":3,"column":8,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1331","line":4,"column":21,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":24},{"ruleId":"1254","severity":1,"message":"1356","line":8,"column":8,"nodeType":"1256","messageId":"1257","endLine":8,"endColumn":12},{"ruleId":"1254","severity":1,"message":"1255","line":8,"column":15,"nodeType":"1256","messageId":"1257","endLine":8,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1357","line":8,"column":22,"nodeType":"1256","messageId":"1257","endLine":8,"endColumn":27},{"ruleId":"1258","severity":1,"message":"1259","line":26,"column":53,"nodeType":"1260","messageId":"1261","endLine":26,"endColumn":55},{"ruleId":"1258","severity":1,"message":"1259","line":42,"column":51,"nodeType":"1260","messageId":"1261","endLine":42,"endColumn":53},{"ruleId":"1258","severity":1,"message":"1259","line":118,"column":47,"nodeType":"1260","messageId":"1261","endLine":118,"endColumn":49},{"ruleId":"1254","severity":1,"message":"1307","line":6,"column":27,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":39},{"ruleId":"1254","severity":1,"message":"1358","line":8,"column":8,"nodeType":"1256","messageId":"1257","endLine":8,"endColumn":28},{"ruleId":"1254","severity":1,"message":"1359","line":9,"column":8,"nodeType":"1256","messageId":"1257","endLine":9,"endColumn":25},{"ruleId":"1254","severity":1,"message":"1360","line":10,"column":8,"nodeType":"1256","messageId":"1257","endLine":10,"endColumn":26},{"ruleId":"1254","severity":1,"message":"1361","line":12,"column":8,"nodeType":"1256","messageId":"1257","endLine":12,"endColumn":17},{"ruleId":"1254","severity":1,"message":"1362","line":14,"column":8,"nodeType":"1256","messageId":"1257","endLine":14,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1363","line":15,"column":10,"nodeType":"1256","messageId":"1257","endLine":15,"endColumn":21},{"ruleId":"1254","severity":1,"message":"1267","line":16,"column":9,"nodeType":"1256","messageId":"1257","endLine":16,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1320","line":16,"column":16,"nodeType":"1256","messageId":"1257","endLine":16,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1364","line":101,"column":15,"nodeType":"1256","messageId":"1257","endLine":101,"endColumn":35},{"ruleId":"1258","severity":1,"message":"1259","line":166,"column":45,"nodeType":"1260","messageId":"1261","endLine":166,"endColumn":47},{"ruleId":"1254","severity":1,"message":"1365","line":5,"column":8,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":22},{"ruleId":"1254","severity":1,"message":"1331","line":10,"column":21,"nodeType":"1256","messageId":"1257","endLine":10,"endColumn":24},{"ruleId":"1254","severity":1,"message":"1264","line":11,"column":8,"nodeType":"1256","messageId":"1257","endLine":11,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1366","line":40,"column":12,"nodeType":"1256","messageId":"1257","endLine":40,"endColumn":26},{"ruleId":"1254","severity":1,"message":"1367","line":40,"column":28,"nodeType":"1256","messageId":"1257","endLine":40,"endColumn":45},{"ruleId":"1258","severity":1,"message":"1259","line":62,"column":23,"nodeType":"1260","messageId":"1261","endLine":62,"endColumn":25},{"ruleId":"1258","severity":1,"message":"1259","line":146,"column":38,"nodeType":"1260","messageId":"1261","endLine":146,"endColumn":40},{"ruleId":"1254","severity":1,"message":"1345","line":1,"column":16,"nodeType":"1256","messageId":"1257","endLine":1,"endColumn":25},{"ruleId":"1254","severity":1,"message":"1368","line":1,"column":38,"nodeType":"1256","messageId":"1257","endLine":1,"endColumn":53},{"ruleId":"1254","severity":1,"message":"1369","line":1,"column":55,"nodeType":"1256","messageId":"1257","endLine":1,"endColumn":63},{"ruleId":"1254","severity":1,"message":"1370","line":2,"column":9,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":16},{"ruleId":"1254","severity":1,"message":"1267","line":2,"column":18,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":23},{"ruleId":"1254","severity":1,"message":"1307","line":4,"column":51,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":63},{"ruleId":"1254","severity":1,"message":"1275","line":5,"column":8,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":16},{"ruleId":"1254","severity":1,"message":"1371","line":6,"column":8,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1264","line":7,"column":8,"nodeType":"1256","messageId":"1257","endLine":7,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1331","line":8,"column":9,"nodeType":"1256","messageId":"1257","endLine":8,"endColumn":12},{"ruleId":"1254","severity":1,"message":"1298","line":10,"column":8,"nodeType":"1256","messageId":"1257","endLine":10,"endColumn":17},{"ruleId":"1254","severity":1,"message":"1310","line":11,"column":8,"nodeType":"1256","messageId":"1257","endLine":11,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1332","line":12,"column":8,"nodeType":"1256","messageId":"1257","endLine":12,"endColumn":12},{"ruleId":"1254","severity":1,"message":"1333","line":13,"column":8,"nodeType":"1256","messageId":"1257","endLine":13,"endColumn":11},{"ruleId":"1254","severity":1,"message":"1372","line":14,"column":8,"nodeType":"1256","messageId":"1257","endLine":14,"endColumn":18},{"ruleId":"1254","severity":1,"message":"1327","line":15,"column":8,"nodeType":"1256","messageId":"1257","endLine":15,"endColumn":11},{"ruleId":"1254","severity":1,"message":"1373","line":86,"column":12,"nodeType":"1256","messageId":"1257","endLine":86,"endColumn":17},{"ruleId":"1349","severity":1,"message":"1374","line":98,"column":8,"nodeType":"1351","endLine":98,"endColumn":20,"suggestions":"1375"},{"ruleId":"1254","severity":1,"message":"1376","line":100,"column":11,"nodeType":"1256","messageId":"1257","endLine":100,"endColumn":23},{"ruleId":"1254","severity":1,"message":"1377","line":105,"column":11,"nodeType":"1256","messageId":"1257","endLine":105,"endColumn":22},{"ruleId":"1354","severity":1,"message":"1355","line":243,"column":21,"nodeType":"1287","endLine":243,"endColumn":71},{"ruleId":"1354","severity":1,"message":"1355","line":244,"column":21,"nodeType":"1287","endLine":244,"endColumn":75},{"ruleId":"1354","severity":1,"message":"1355","line":245,"column":21,"nodeType":"1287","endLine":245,"endColumn":75},{"ruleId":"1354","severity":1,"message":"1355","line":246,"column":21,"nodeType":"1287","endLine":246,"endColumn":75},{"ruleId":"1354","severity":1,"message":"1355","line":247,"column":21,"nodeType":"1287","endLine":247,"endColumn":75},{"ruleId":"1354","severity":1,"message":"1355","line":248,"column":21,"nodeType":"1287","endLine":248,"endColumn":75},{"ruleId":"1354","severity":1,"message":"1355","line":249,"column":21,"nodeType":"1287","endLine":249,"endColumn":75},{"ruleId":"1354","severity":1,"message":"1355","line":250,"column":21,"nodeType":"1287","endLine":250,"endColumn":75},{"ruleId":"1354","severity":1,"message":"1355","line":251,"column":21,"nodeType":"1287","endLine":251,"endColumn":75},{"ruleId":"1354","severity":1,"message":"1355","line":252,"column":21,"nodeType":"1287","endLine":252,"endColumn":75},{"ruleId":"1354","severity":1,"message":"1355","line":253,"column":21,"nodeType":"1287","endLine":253,"endColumn":75},{"ruleId":"1354","severity":1,"message":"1355","line":254,"column":21,"nodeType":"1287","endLine":254,"endColumn":75},{"ruleId":"1354","severity":1,"message":"1355","line":255,"column":21,"nodeType":"1287","endLine":255,"endColumn":75},{"ruleId":"1354","severity":1,"message":"1355","line":256,"column":21,"nodeType":"1287","endLine":256,"endColumn":75},{"ruleId":"1285","severity":1,"message":"1378","line":261,"column":33,"nodeType":"1287","endLine":268,"endColumn":34},{"ruleId":"1288","severity":1,"message":"1289","line":446,"column":1,"nodeType":"1290","messageId":"1291","endLine":452,"endColumn":2},{"ruleId":"1288","severity":1,"message":"1289","line":453,"column":1,"nodeType":"1290","messageId":"1291","endLine":526,"endColumn":2},{"ruleId":"1300","severity":1,"message":"1301","line":5,"column":5,"nodeType":"1302","messageId":"1303","endLine":8,"endColumn":6},{"ruleId":"1354","severity":1,"message":"1355","line":16,"column":21,"nodeType":"1287","endLine":18,"endColumn":23},{"ruleId":"1379","severity":1,"message":"1380","line":28,"column":42,"nodeType":"1381","messageId":"1382","endLine":28,"endColumn":51},{"ruleId":"1285","severity":1,"message":"1378","line":34,"column":41,"nodeType":"1287","endLine":34,"endColumn":53},{"ruleId":"1300","severity":1,"message":"1301","line":5,"column":5,"nodeType":"1302","messageId":"1303","endLine":8,"endColumn":6},{"ruleId":"1354","severity":1,"message":"1355","line":16,"column":21,"nodeType":"1287","endLine":18,"endColumn":23},{"ruleId":"1379","severity":1,"message":"1380","line":28,"column":42,"nodeType":"1381","messageId":"1382","endLine":28,"endColumn":51},{"ruleId":"1285","severity":1,"message":"1378","line":34,"column":41,"nodeType":"1287","endLine":34,"endColumn":53},{"ruleId":"1254","severity":1,"message":"1383","line":3,"column":8,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1384","line":4,"column":8,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1385","line":5,"column":8,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":12},{"ruleId":"1300","severity":1,"message":"1301","line":17,"column":5,"nodeType":"1302","messageId":"1303","endLine":21,"endColumn":6},{"ruleId":"1354","severity":1,"message":"1355","line":79,"column":21,"nodeType":"1287","endLine":79,"endColumn":70},{"ruleId":"1254","severity":1,"message":"1279","line":3,"column":8,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":16},{"ruleId":"1254","severity":1,"message":"1280","line":4,"column":8,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1386","line":5,"column":8,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":22},{"ruleId":"1254","severity":1,"message":"1387","line":6,"column":8,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1388","line":7,"column":8,"nodeType":"1256","messageId":"1257","endLine":7,"endColumn":17},{"ruleId":"1254","severity":1,"message":"1389","line":8,"column":8,"nodeType":"1256","messageId":"1257","endLine":8,"endColumn":16},{"ruleId":"1254","severity":1,"message":"1390","line":9,"column":8,"nodeType":"1256","messageId":"1257","endLine":9,"endColumn":23},{"ruleId":"1254","severity":1,"message":"1391","line":10,"column":8,"nodeType":"1256","messageId":"1257","endLine":10,"endColumn":26},{"ruleId":"1254","severity":1,"message":"1392","line":11,"column":8,"nodeType":"1256","messageId":"1257","endLine":11,"endColumn":22},{"ruleId":"1254","severity":1,"message":"1277","line":12,"column":8,"nodeType":"1256","messageId":"1257","endLine":12,"endColumn":15},{"ruleId":"1254","severity":1,"message":"1310","line":13,"column":8,"nodeType":"1256","messageId":"1257","endLine":13,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1393","line":21,"column":8,"nodeType":"1256","messageId":"1257","endLine":21,"endColumn":14},{"ruleId":"1258","severity":1,"message":"1259","line":63,"column":41,"nodeType":"1260","messageId":"1261","endLine":63,"endColumn":43},{"ruleId":"1258","severity":1,"message":"1314","line":82,"column":40,"nodeType":"1260","messageId":"1261","endLine":82,"endColumn":42},{"ruleId":"1258","severity":1,"message":"1259","line":101,"column":40,"nodeType":"1260","messageId":"1261","endLine":101,"endColumn":42},{"ruleId":"1258","severity":1,"message":"1259","line":124,"column":46,"nodeType":"1260","messageId":"1261","endLine":124,"endColumn":48},{"ruleId":"1258","severity":1,"message":"1314","line":124,"column":77,"nodeType":"1260","messageId":"1261","endLine":124,"endColumn":79},{"ruleId":"1258","severity":1,"message":"1314","line":124,"column":104,"nodeType":"1260","messageId":"1261","endLine":124,"endColumn":106},{"ruleId":"1258","severity":1,"message":"1259","line":125,"column":30,"nodeType":"1260","messageId":"1261","endLine":125,"endColumn":32},{"ruleId":"1258","severity":1,"message":"1314","line":130,"column":38,"nodeType":"1260","messageId":"1261","endLine":130,"endColumn":40},{"ruleId":"1258","severity":1,"message":"1314","line":132,"column":46,"nodeType":"1260","messageId":"1261","endLine":132,"endColumn":48},{"ruleId":"1258","severity":1,"message":"1314","line":136,"column":50,"nodeType":"1260","messageId":"1261","endLine":136,"endColumn":52},{"ruleId":"1258","severity":1,"message":"1314","line":138,"column":51,"nodeType":"1260","messageId":"1261","endLine":138,"endColumn":53},{"ruleId":"1258","severity":1,"message":"1314","line":148,"column":41,"nodeType":"1260","messageId":"1261","endLine":148,"endColumn":43},{"ruleId":"1258","severity":1,"message":"1259","line":163,"column":49,"nodeType":"1260","messageId":"1261","endLine":163,"endColumn":51},{"ruleId":"1258","severity":1,"message":"1314","line":167,"column":33,"nodeType":"1260","messageId":"1261","endLine":167,"endColumn":35},{"ruleId":"1258","severity":1,"message":"1314","line":167,"column":60,"nodeType":"1260","messageId":"1261","endLine":167,"endColumn":62},{"ruleId":"1258","severity":1,"message":"1314","line":172,"column":37,"nodeType":"1260","messageId":"1261","endLine":172,"endColumn":39},{"ruleId":"1258","severity":1,"message":"1314","line":172,"column":64,"nodeType":"1260","messageId":"1261","endLine":172,"endColumn":66},{"ruleId":"1258","severity":1,"message":"1259","line":176,"column":33,"nodeType":"1260","messageId":"1261","endLine":176,"endColumn":35},{"ruleId":"1254","severity":1,"message":"1345","line":1,"column":16,"nodeType":"1256","messageId":"1257","endLine":1,"endColumn":25},{"ruleId":"1254","severity":1,"message":"1394","line":4,"column":8,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":19},{"ruleId":"1254","severity":1,"message":"1310","line":5,"column":8,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1395","line":69,"column":11,"nodeType":"1256","messageId":"1257","endLine":69,"endColumn":18},{"ruleId":"1254","severity":1,"message":"1396","line":73,"column":12,"nodeType":"1256","messageId":"1257","endLine":73,"endColumn":23},{"ruleId":"1254","severity":1,"message":"1397","line":73,"column":25,"nodeType":"1256","messageId":"1257","endLine":73,"endColumn":39},{"ruleId":"1258","severity":1,"message":"1259","line":76,"column":30,"nodeType":"1260","messageId":"1261","endLine":76,"endColumn":32},{"ruleId":"1258","severity":1,"message":"1259","line":78,"column":37,"nodeType":"1260","messageId":"1261","endLine":78,"endColumn":39},{"ruleId":"1258","severity":1,"message":"1259","line":80,"column":37,"nodeType":"1260","messageId":"1261","endLine":80,"endColumn":39},{"ruleId":"1254","severity":1,"message":"1398","line":6,"column":8,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":18},{"ruleId":"1254","severity":1,"message":"1399","line":7,"column":8,"nodeType":"1256","messageId":"1257","endLine":7,"endColumn":16},{"ruleId":"1254","severity":1,"message":"1400","line":8,"column":8,"nodeType":"1256","messageId":"1257","endLine":8,"endColumn":19},{"ruleId":"1254","severity":1,"message":"1401","line":9,"column":8,"nodeType":"1256","messageId":"1257","endLine":9,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1361","line":14,"column":8,"nodeType":"1256","messageId":"1257","endLine":14,"endColumn":17},{"ruleId":"1258","severity":1,"message":"1259","line":112,"column":37,"nodeType":"1260","messageId":"1261","endLine":112,"endColumn":39},{"ruleId":"1258","severity":1,"message":"1259","line":115,"column":35,"nodeType":"1260","messageId":"1261","endLine":115,"endColumn":37},{"ruleId":"1258","severity":1,"message":"1259","line":121,"column":24,"nodeType":"1260","messageId":"1261","endLine":121,"endColumn":26},{"ruleId":"1258","severity":1,"message":"1259","line":121,"column":42,"nodeType":"1260","messageId":"1261","endLine":121,"endColumn":44},{"ruleId":"1258","severity":1,"message":"1259","line":245,"column":64,"nodeType":"1260","messageId":"1261","endLine":245,"endColumn":66},{"ruleId":"1254","severity":1,"message":"1402","line":5,"column":8,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":11},{"ruleId":"1254","severity":1,"message":"1403","line":6,"column":8,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":19},{"ruleId":"1254","severity":1,"message":"1404","line":7,"column":8,"nodeType":"1256","messageId":"1257","endLine":7,"endColumn":24},{"ruleId":"1254","severity":1,"message":"1308","line":9,"column":8,"nodeType":"1256","messageId":"1257","endLine":9,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1332","line":10,"column":8,"nodeType":"1256","messageId":"1257","endLine":10,"endColumn":12},{"ruleId":"1254","severity":1,"message":"1333","line":11,"column":8,"nodeType":"1256","messageId":"1257","endLine":11,"endColumn":11},{"ruleId":"1254","severity":1,"message":"1372","line":12,"column":8,"nodeType":"1256","messageId":"1257","endLine":12,"endColumn":18},{"ruleId":"1254","severity":1,"message":"1398","line":15,"column":8,"nodeType":"1256","messageId":"1257","endLine":15,"endColumn":18},{"ruleId":"1254","severity":1,"message":"1399","line":16,"column":8,"nodeType":"1256","messageId":"1257","endLine":16,"endColumn":16},{"ruleId":"1254","severity":1,"message":"1400","line":17,"column":8,"nodeType":"1256","messageId":"1257","endLine":17,"endColumn":19},{"ruleId":"1254","severity":1,"message":"1401","line":18,"column":8,"nodeType":"1256","messageId":"1257","endLine":18,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1361","line":23,"column":8,"nodeType":"1256","messageId":"1257","endLine":23,"endColumn":17},{"ruleId":"1258","severity":1,"message":"1259","line":120,"column":39,"nodeType":"1260","messageId":"1261","endLine":120,"endColumn":41},{"ruleId":"1258","severity":1,"message":"1259","line":121,"column":39,"nodeType":"1260","messageId":"1261","endLine":121,"endColumn":41},{"ruleId":"1258","severity":1,"message":"1259","line":123,"column":35,"nodeType":"1260","messageId":"1261","endLine":123,"endColumn":37},{"ruleId":"1258","severity":1,"message":"1259","line":128,"column":32,"nodeType":"1260","messageId":"1261","endLine":128,"endColumn":34},{"ruleId":"1258","severity":1,"message":"1259","line":128,"column":59,"nodeType":"1260","messageId":"1261","endLine":128,"endColumn":61},{"ruleId":"1258","severity":1,"message":"1259","line":128,"column":77,"nodeType":"1260","messageId":"1261","endLine":128,"endColumn":79},{"ruleId":"1254","severity":1,"message":"1312","line":2,"column":8,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":12},{"ruleId":"1254","severity":1,"message":"1313","line":4,"column":8,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":16},{"ruleId":"1258","severity":1,"message":"1259","line":38,"column":42,"nodeType":"1260","messageId":"1261","endLine":38,"endColumn":44},{"ruleId":"1258","severity":1,"message":"1259","line":43,"column":20,"nodeType":"1260","messageId":"1261","endLine":43,"endColumn":22},{"ruleId":"1258","severity":1,"message":"1259","line":43,"column":38,"nodeType":"1260","messageId":"1261","endLine":43,"endColumn":40},{"ruleId":"1254","severity":1,"message":"1405","line":7,"column":66,"nodeType":"1256","messageId":"1257","endLine":7,"endColumn":74},{"ruleId":"1285","severity":1,"message":"1378","line":12,"column":17,"nodeType":"1287","endLine":20,"endColumn":18},{"ruleId":"1258","severity":1,"message":"1259","line":13,"column":32,"nodeType":"1260","messageId":"1261","endLine":13,"endColumn":34},{"ruleId":"1258","severity":1,"message":"1259","line":15,"column":32,"nodeType":"1260","messageId":"1261","endLine":15,"endColumn":34},{"ruleId":"1258","severity":1,"message":"1259","line":17,"column":36,"nodeType":"1260","messageId":"1261","endLine":17,"endColumn":38},{"ruleId":"1285","severity":1,"message":"1378","line":25,"column":17,"nodeType":"1287","endLine":33,"endColumn":18},{"ruleId":"1258","severity":1,"message":"1259","line":26,"column":32,"nodeType":"1260","messageId":"1261","endLine":26,"endColumn":34},{"ruleId":"1258","severity":1,"message":"1259","line":28,"column":32,"nodeType":"1260","messageId":"1261","endLine":28,"endColumn":34},{"ruleId":"1258","severity":1,"message":"1259","line":30,"column":36,"nodeType":"1260","messageId":"1261","endLine":30,"endColumn":38},{"ruleId":"1285","severity":1,"message":"1378","line":45,"column":21,"nodeType":"1287","endLine":57,"endColumn":22},{"ruleId":"1258","severity":1,"message":"1259","line":47,"column":39,"nodeType":"1260","messageId":"1261","endLine":47,"endColumn":41},{"ruleId":"1258","severity":1,"message":"1259","line":48,"column":44,"nodeType":"1260","messageId":"1261","endLine":48,"endColumn":46},{"ruleId":"1258","severity":1,"message":"1259","line":50,"column":36,"nodeType":"1260","messageId":"1261","endLine":50,"endColumn":38},{"ruleId":"1258","severity":1,"message":"1259","line":52,"column":36,"nodeType":"1260","messageId":"1261","endLine":52,"endColumn":38},{"ruleId":"1258","severity":1,"message":"1259","line":54,"column":40,"nodeType":"1260","messageId":"1261","endLine":54,"endColumn":42},{"ruleId":"1258","severity":1,"message":"1259","line":109,"column":45,"nodeType":"1260","messageId":"1261","endLine":109,"endColumn":47},{"ruleId":"1254","severity":1,"message":"1345","line":1,"column":15,"nodeType":"1256","messageId":"1257","endLine":1,"endColumn":24},{"ruleId":"1254","severity":1,"message":"1296","line":2,"column":50,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":63},{"ruleId":"1254","severity":1,"message":"1406","line":6,"column":7,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":22},{"ruleId":"1254","severity":1,"message":"1407","line":44,"column":9,"nodeType":"1256","messageId":"1257","endLine":44,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1408","line":63,"column":9,"nodeType":"1256","messageId":"1257","endLine":63,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1409","line":3,"column":9,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1410","line":3,"column":8,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1411","line":1,"column":10,"nodeType":"1256","messageId":"1257","endLine":1,"endColumn":27},{"ruleId":"1254","severity":1,"message":"1345","line":2,"column":18,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":27},{"ruleId":"1254","severity":1,"message":"1369","line":2,"column":40,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":48},{"ruleId":"1254","severity":1,"message":"1412","line":3,"column":8,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":16},{"ruleId":"1254","severity":1,"message":"1413","line":4,"column":10,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":27},{"ruleId":"1349","severity":1,"message":"1414","line":21,"column":22,"nodeType":"1351","endLine":21,"endColumn":24,"suggestions":"1415"},{"ruleId":"1254","severity":1,"message":"1416","line":83,"column":25,"nodeType":"1256","messageId":"1257","endLine":83,"endColumn":27},{"ruleId":"1258","severity":1,"message":"1259","line":85,"column":31,"nodeType":"1260","messageId":"1261","endLine":85,"endColumn":33},{"ruleId":"1254","severity":1,"message":"1412","line":2,"column":8,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":16},{"ruleId":"1254","severity":1,"message":"1331","line":5,"column":10,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1307","line":5,"column":27,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":39},{"ruleId":"1254","severity":1,"message":"1417","line":19,"column":15,"nodeType":"1256","messageId":"1257","endLine":19,"endColumn":29},{"ruleId":"1254","severity":1,"message":"1412","line":2,"column":8,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":16},{"ruleId":"1254","severity":1,"message":"1307","line":6,"column":27,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":39},{"ruleId":"1254","severity":1,"message":"1418","line":59,"column":16,"nodeType":"1256","messageId":"1257","endLine":59,"endColumn":19},{"ruleId":"1254","severity":1,"message":"1341","line":5,"column":10,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1419","line":6,"column":8,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":16},{"ruleId":"1254","severity":1,"message":"1420","line":7,"column":8,"nodeType":"1256","messageId":"1257","endLine":7,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1421","line":8,"column":8,"nodeType":"1256","messageId":"1257","endLine":8,"endColumn":25},{"ruleId":"1254","severity":1,"message":"1422","line":9,"column":8,"nodeType":"1256","messageId":"1257","endLine":9,"endColumn":25},{"ruleId":"1254","severity":1,"message":"1423","line":10,"column":8,"nodeType":"1256","messageId":"1257","endLine":10,"endColumn":23},{"ruleId":"1254","severity":1,"message":"1424","line":11,"column":8,"nodeType":"1256","messageId":"1257","endLine":11,"endColumn":31},{"ruleId":"1254","severity":1,"message":"1425","line":12,"column":8,"nodeType":"1256","messageId":"1257","endLine":12,"endColumn":19},{"ruleId":"1254","severity":1,"message":"1426","line":13,"column":8,"nodeType":"1256","messageId":"1257","endLine":13,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1427","line":14,"column":8,"nodeType":"1256","messageId":"1257","endLine":14,"endColumn":21},{"ruleId":"1254","severity":1,"message":"1428","line":15,"column":8,"nodeType":"1256","messageId":"1257","endLine":15,"endColumn":17},{"ruleId":"1254","severity":1,"message":"1429","line":16,"column":8,"nodeType":"1256","messageId":"1257","endLine":16,"endColumn":18},{"ruleId":"1254","severity":1,"message":"1310","line":17,"column":8,"nodeType":"1256","messageId":"1257","endLine":17,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1372","line":18,"column":8,"nodeType":"1256","messageId":"1257","endLine":18,"endColumn":18},{"ruleId":"1254","severity":1,"message":"1430","line":5,"column":8,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":22},{"ruleId":"1254","severity":1,"message":"1431","line":24,"column":15,"nodeType":"1256","messageId":"1257","endLine":24,"endColumn":19},{"ruleId":"1254","severity":1,"message":"1264","line":3,"column":8,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1331","line":4,"column":21,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":24},{"ruleId":"1254","severity":1,"message":"1432","line":6,"column":22,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":30},{"ruleId":"1254","severity":1,"message":"1433","line":9,"column":8,"nodeType":"1256","messageId":"1257","endLine":9,"endColumn":21},{"ruleId":"1254","severity":1,"message":"1434","line":88,"column":21,"nodeType":"1256","messageId":"1257","endLine":88,"endColumn":24},{"ruleId":"1354","severity":1,"message":"1355","line":97,"column":25,"nodeType":"1287","endLine":97,"endColumn":71},{"ruleId":"1254","severity":1,"message":"1331","line":5,"column":10,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1435","line":8,"column":24,"nodeType":"1256","messageId":"1257","endLine":8,"endColumn":40},{"ruleId":"1254","severity":1,"message":"1436","line":20,"column":7,"nodeType":"1256","messageId":"1257","endLine":20,"endColumn":15},{"ruleId":"1437","severity":1,"message":"1438","line":67,"column":11,"nodeType":"1439","messageId":"1261","endLine":67,"endColumn":15,"fix":"1440"},{"ruleId":"1254","severity":1,"message":"1441","line":147,"column":13,"nodeType":"1256","messageId":"1257","endLine":147,"endColumn":16},{"ruleId":"1442","severity":1,"message":"1443","line":148,"column":72,"nodeType":"1260","messageId":"1444","endLine":148,"endColumn":73},{"ruleId":"1254","severity":1,"message":"1445","line":193,"column":13,"nodeType":"1256","messageId":"1257","endLine":193,"endColumn":18},{"ruleId":"1442","severity":1,"message":"1443","line":194,"column":74,"nodeType":"1260","messageId":"1444","endLine":194,"endColumn":75},{"ruleId":"1254","severity":1,"message":"1446","line":236,"column":13,"nodeType":"1256","messageId":"1257","endLine":236,"endColumn":18},{"ruleId":"1442","severity":1,"message":"1443","line":237,"column":74,"nodeType":"1260","messageId":"1444","endLine":237,"endColumn":75},{"ruleId":"1258","severity":1,"message":"1259","line":342,"column":18,"nodeType":"1260","messageId":"1261","endLine":342,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1447","line":418,"column":9,"nodeType":"1256","messageId":"1257","endLine":418,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1448","line":468,"column":13,"nodeType":"1256","messageId":"1257","endLine":468,"endColumn":18},{"ruleId":"1254","severity":1,"message":"1369","line":1,"column":27,"nodeType":"1256","messageId":"1257","endLine":1,"endColumn":35},{"ruleId":"1254","severity":1,"message":"1267","line":2,"column":9,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1320","line":2,"column":16,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1449","line":3,"column":8,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":28},{"ruleId":"1254","severity":1,"message":"1311","line":4,"column":8,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1450","line":13,"column":8,"nodeType":"1256","messageId":"1257","endLine":13,"endColumn":21},{"ruleId":"1254","severity":1,"message":"1451","line":16,"column":8,"nodeType":"1256","messageId":"1257","endLine":16,"endColumn":22},{"ruleId":"1254","severity":1,"message":"1452","line":17,"column":8,"nodeType":"1256","messageId":"1257","endLine":17,"endColumn":29},{"ruleId":"1254","severity":1,"message":"1453","line":19,"column":8,"nodeType":"1256","messageId":"1257","endLine":19,"endColumn":19},{"ruleId":"1254","severity":1,"message":"1454","line":22,"column":9,"nodeType":"1256","messageId":"1257","endLine":22,"endColumn":15},{"ruleId":"1254","severity":1,"message":"1328","line":64,"column":7,"nodeType":"1256","messageId":"1257","endLine":64,"endColumn":19},{"ruleId":"1254","severity":1,"message":"1455","line":121,"column":15,"nodeType":"1256","messageId":"1257","endLine":121,"endColumn":22},{"ruleId":"1258","severity":1,"message":"1314","line":220,"column":85,"nodeType":"1260","messageId":"1261","endLine":220,"endColumn":87},{"ruleId":"1258","severity":1,"message":"1259","line":223,"column":65,"nodeType":"1260","messageId":"1261","endLine":223,"endColumn":67},{"ruleId":"1258","severity":1,"message":"1259","line":285,"column":21,"nodeType":"1260","messageId":"1261","endLine":285,"endColumn":23},{"ruleId":"1258","severity":1,"message":"1259","line":361,"column":42,"nodeType":"1260","messageId":"1261","endLine":361,"endColumn":44},{"ruleId":"1258","severity":1,"message":"1259","line":364,"column":20,"nodeType":"1260","messageId":"1261","endLine":364,"endColumn":22},{"ruleId":"1258","severity":1,"message":"1259","line":364,"column":38,"nodeType":"1260","messageId":"1261","endLine":364,"endColumn":40},{"ruleId":"1258","severity":1,"message":"1259","line":426,"column":55,"nodeType":"1260","messageId":"1261","endLine":426,"endColumn":57},{"ruleId":"1258","severity":1,"message":"1259","line":432,"column":55,"nodeType":"1260","messageId":"1261","endLine":432,"endColumn":57},{"ruleId":"1258","severity":1,"message":"1259","line":438,"column":55,"nodeType":"1260","messageId":"1261","endLine":438,"endColumn":57},{"ruleId":"1258","severity":1,"message":"1259","line":457,"column":51,"nodeType":"1260","messageId":"1261","endLine":457,"endColumn":53},{"ruleId":"1258","severity":1,"message":"1259","line":460,"column":55,"nodeType":"1260","messageId":"1261","endLine":460,"endColumn":57},{"ruleId":"1258","severity":1,"message":"1259","line":463,"column":55,"nodeType":"1260","messageId":"1261","endLine":463,"endColumn":57},{"ruleId":"1258","severity":1,"message":"1314","line":482,"column":55,"nodeType":"1260","messageId":"1261","endLine":482,"endColumn":57},{"ruleId":"1258","severity":1,"message":"1259","line":527,"column":79,"nodeType":"1260","messageId":"1261","endLine":527,"endColumn":81},{"ruleId":"1258","severity":1,"message":"1259","line":543,"column":45,"nodeType":"1260","messageId":"1261","endLine":543,"endColumn":47},{"ruleId":"1254","severity":1,"message":"1456","line":5,"column":8,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":12},{"ruleId":"1254","severity":1,"message":"1457","line":6,"column":8,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":18},{"ruleId":"1254","severity":1,"message":"1458","line":7,"column":8,"nodeType":"1256","messageId":"1257","endLine":7,"endColumn":17},{"ruleId":"1254","severity":1,"message":"1459","line":8,"column":8,"nodeType":"1256","messageId":"1257","endLine":8,"endColumn":19},{"ruleId":"1254","severity":1,"message":"1460","line":9,"column":8,"nodeType":"1256","messageId":"1257","endLine":9,"endColumn":19},{"ruleId":"1254","severity":1,"message":"1387","line":11,"column":8,"nodeType":"1256","messageId":"1257","endLine":11,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1281","line":12,"column":8,"nodeType":"1256","messageId":"1257","endLine":12,"endColumn":18},{"ruleId":"1254","severity":1,"message":"1372","line":13,"column":8,"nodeType":"1256","messageId":"1257","endLine":13,"endColumn":18},{"ruleId":"1254","severity":1,"message":"1461","line":15,"column":8,"nodeType":"1256","messageId":"1257","endLine":15,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1462","line":16,"column":8,"nodeType":"1256","messageId":"1257","endLine":16,"endColumn":17},{"ruleId":"1254","severity":1,"message":"1463","line":18,"column":8,"nodeType":"1256","messageId":"1257","endLine":18,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1310","line":20,"column":8,"nodeType":"1256","messageId":"1257","endLine":20,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1464","line":21,"column":8,"nodeType":"1256","messageId":"1257","endLine":21,"endColumn":23},{"ruleId":"1349","severity":1,"message":"1465","line":77,"column":8,"nodeType":"1351","endLine":77,"endColumn":13,"suggestions":"1466"},{"ruleId":"1254","severity":1,"message":"1467","line":96,"column":11,"nodeType":"1256","messageId":"1257","endLine":96,"endColumn":28},{"ruleId":"1300","severity":1,"message":"1301","line":5,"column":5,"nodeType":"1302","messageId":"1303","endLine":7,"endColumn":6},{"ruleId":"1254","severity":1,"message":"1310","line":3,"column":8,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":13},{"ruleId":"1300","severity":1,"message":"1301","line":8,"column":5,"nodeType":"1302","messageId":"1303","endLine":22,"endColumn":6},{"ruleId":"1254","severity":1,"message":"1420","line":3,"column":8,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1421","line":4,"column":8,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":25},{"ruleId":"1254","severity":1,"message":"1422","line":5,"column":8,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":25},{"ruleId":"1254","severity":1,"message":"1423","line":6,"column":8,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":23},{"ruleId":"1254","severity":1,"message":"1424","line":7,"column":8,"nodeType":"1256","messageId":"1257","endLine":7,"endColumn":31},{"ruleId":"1254","severity":1,"message":"1425","line":8,"column":8,"nodeType":"1256","messageId":"1257","endLine":8,"endColumn":19},{"ruleId":"1254","severity":1,"message":"1372","line":9,"column":8,"nodeType":"1256","messageId":"1257","endLine":9,"endColumn":18},{"ruleId":"1254","severity":1,"message":"1468","line":13,"column":8,"nodeType":"1256","messageId":"1257","endLine":13,"endColumn":15},{"ruleId":"1254","severity":1,"message":"1264","line":3,"column":8,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1331","line":4,"column":9,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":12},{"ruleId":"1254","severity":1,"message":"1310","line":5,"column":8,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":13},{"ruleId":"1300","severity":1,"message":"1301","line":10,"column":5,"nodeType":"1302","messageId":"1303","endLine":13,"endColumn":6},{"ruleId":"1254","severity":1,"message":"1388","line":9,"column":8,"nodeType":"1256","messageId":"1257","endLine":9,"endColumn":17},{"ruleId":"1258","severity":1,"message":"1259","line":72,"column":41,"nodeType":"1260","messageId":"1261","endLine":72,"endColumn":43},{"ruleId":"1258","severity":1,"message":"1259","line":74,"column":46,"nodeType":"1260","messageId":"1261","endLine":74,"endColumn":48},{"ruleId":"1258","severity":1,"message":"1259","line":80,"column":41,"nodeType":"1260","messageId":"1261","endLine":80,"endColumn":43},{"ruleId":"1258","severity":1,"message":"1259","line":82,"column":46,"nodeType":"1260","messageId":"1261","endLine":82,"endColumn":48},{"ruleId":"1258","severity":1,"message":"1259","line":84,"column":46,"nodeType":"1260","messageId":"1261","endLine":84,"endColumn":48},{"ruleId":"1258","severity":1,"message":"1259","line":90,"column":56,"nodeType":"1260","messageId":"1261","endLine":90,"endColumn":58},{"ruleId":"1258","severity":1,"message":"1259","line":91,"column":55,"nodeType":"1260","messageId":"1261","endLine":91,"endColumn":57},{"ruleId":"1258","severity":1,"message":"1259","line":92,"column":55,"nodeType":"1260","messageId":"1261","endLine":92,"endColumn":57},{"ruleId":"1258","severity":1,"message":"1259","line":102,"column":69,"nodeType":"1260","messageId":"1261","endLine":102,"endColumn":71},{"ruleId":"1258","severity":1,"message":"1259","line":68,"column":40,"nodeType":"1260","messageId":"1261","endLine":68,"endColumn":42},{"ruleId":"1254","severity":1,"message":"1264","line":2,"column":8,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1267","line":3,"column":9,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1320","line":3,"column":16,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1331","line":4,"column":9,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":12},{"ruleId":"1254","severity":1,"message":"1419","line":2,"column":8,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":16},{"ruleId":"1300","severity":1,"message":"1301","line":14,"column":5,"nodeType":"1302","messageId":"1303","endLine":23,"endColumn":6},{"ruleId":"1254","severity":1,"message":"1369","line":1,"column":27,"nodeType":"1256","messageId":"1257","endLine":1,"endColumn":35},{"ruleId":"1254","severity":1,"message":"1369","line":1,"column":27,"nodeType":"1256","messageId":"1257","endLine":1,"endColumn":35},{"ruleId":"1254","severity":1,"message":"1469","line":6,"column":10,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":17},{"ruleId":"1349","severity":1,"message":"1470","line":27,"column":21,"nodeType":"1471","endLine":27,"endColumn":36},{"ruleId":"1349","severity":1,"message":"1472","line":28,"column":20,"nodeType":"1471","endLine":28,"endColumn":34},{"ruleId":"1349","severity":1,"message":"1473","line":29,"column":17,"nodeType":"1471","endLine":29,"endColumn":28},{"ruleId":"1254","severity":1,"message":"1474","line":79,"column":9,"nodeType":"1256","messageId":"1257","endLine":79,"endColumn":19},{"ruleId":"1254","severity":1,"message":"1475","line":82,"column":14,"nodeType":"1256","messageId":"1257","endLine":82,"endColumn":26},{"ruleId":"1254","severity":1,"message":"1476","line":143,"column":10,"nodeType":"1256","messageId":"1257","endLine":143,"endColumn":15},{"ruleId":"1254","severity":1,"message":"1477","line":145,"column":6,"nodeType":"1256","messageId":"1257","endLine":145,"endColumn":12},{"ruleId":"1254","severity":1,"message":"1478","line":148,"column":6,"nodeType":"1256","messageId":"1257","endLine":148,"endColumn":13},{"ruleId":"1479","severity":1,"message":"1480","line":155,"column":9,"nodeType":"1256","messageId":"1481","endLine":155,"endColumn":15},{"ruleId":"1479","severity":1,"message":"1480","line":156,"column":30,"nodeType":"1256","messageId":"1481","endLine":156,"endColumn":36},{"ruleId":"1258","severity":1,"message":"1259","line":188,"column":15,"nodeType":"1260","messageId":"1261","endLine":188,"endColumn":17},{"ruleId":"1482","severity":1,"message":"1483","line":198,"column":13,"nodeType":"1256","messageId":"1484","endLine":198,"endColumn":15},{"ruleId":"1482","severity":1,"message":"1485","line":199,"column":9,"nodeType":"1256","messageId":"1484","endLine":199,"endColumn":16},{"ruleId":"1254","severity":1,"message":"1369","line":1,"column":27,"nodeType":"1256","messageId":"1257","endLine":1,"endColumn":35},{"ruleId":"1254","severity":1,"message":"1486","line":6,"column":8,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":12},{"ruleId":"1254","severity":1,"message":"1487","line":8,"column":8,"nodeType":"1256","messageId":"1257","endLine":8,"endColumn":16},{"ruleId":"1254","severity":1,"message":"1488","line":10,"column":10,"nodeType":"1256","messageId":"1257","endLine":10,"endColumn":20},{"ruleId":"1258","severity":1,"message":"1259","line":38,"column":37,"nodeType":"1260","messageId":"1261","endLine":38,"endColumn":39},{"ruleId":"1258","severity":1,"message":"1259","line":69,"column":33,"nodeType":"1260","messageId":"1261","endLine":69,"endColumn":35},{"ruleId":"1258","severity":1,"message":"1259","line":71,"column":40,"nodeType":"1260","messageId":"1261","endLine":71,"endColumn":42},{"ruleId":"1254","severity":1,"message":"1489","line":123,"column":13,"nodeType":"1256","messageId":"1257","endLine":123,"endColumn":20},{"ruleId":"1258","severity":1,"message":"1259","line":181,"column":24,"nodeType":"1260","messageId":"1261","endLine":181,"endColumn":26},{"ruleId":"1258","severity":1,"message":"1314","line":186,"column":31,"nodeType":"1260","messageId":"1261","endLine":186,"endColumn":33},{"ruleId":"1258","severity":1,"message":"1259","line":226,"column":39,"nodeType":"1260","messageId":"1261","endLine":226,"endColumn":41},{"ruleId":"1258","severity":1,"message":"1259","line":233,"column":29,"nodeType":"1260","messageId":"1261","endLine":233,"endColumn":31},{"ruleId":"1258","severity":1,"message":"1259","line":243,"column":24,"nodeType":"1260","messageId":"1261","endLine":243,"endColumn":26},{"ruleId":"1258","severity":1,"message":"1259","line":289,"column":59,"nodeType":"1260","messageId":"1261","endLine":289,"endColumn":61},{"ruleId":"1258","severity":1,"message":"1259","line":298,"column":46,"nodeType":"1260","messageId":"1261","endLine":298,"endColumn":48},{"ruleId":"1285","severity":1,"message":"1286","line":8,"column":40,"nodeType":"1287","endLine":11,"endColumn":16},{"ruleId":"1285","severity":1,"message":"1286","line":14,"column":39,"nodeType":"1287","endLine":17,"endColumn":16},{"ruleId":"1285","severity":1,"message":"1286","line":28,"column":21,"nodeType":"1287","endLine":35,"endColumn":28},{"ruleId":"1258","severity":1,"message":"1259","line":30,"column":39,"nodeType":"1260","messageId":"1261","endLine":30,"endColumn":41},{"ruleId":"1258","severity":1,"message":"1259","line":31,"column":44,"nodeType":"1260","messageId":"1261","endLine":31,"endColumn":46},{"ruleId":"1254","severity":1,"message":"1267","line":6,"column":9,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":14},{"ruleId":"1258","severity":1,"message":"1259","line":33,"column":32,"nodeType":"1260","messageId":"1261","endLine":33,"endColumn":34},{"ruleId":"1258","severity":1,"message":"1259","line":34,"column":30,"nodeType":"1260","messageId":"1261","endLine":34,"endColumn":32},{"ruleId":"1258","severity":1,"message":"1259","line":34,"column":75,"nodeType":"1260","messageId":"1261","endLine":34,"endColumn":77},{"ruleId":"1258","severity":1,"message":"1259","line":34,"column":116,"nodeType":"1260","messageId":"1261","endLine":34,"endColumn":118},{"ruleId":"1258","severity":1,"message":"1259","line":35,"column":22,"nodeType":"1260","messageId":"1261","endLine":35,"endColumn":24},{"ruleId":"1254","severity":1,"message":"1490","line":6,"column":8,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1311","line":7,"column":8,"nodeType":"1256","messageId":"1257","endLine":7,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1313","line":8,"column":8,"nodeType":"1256","messageId":"1257","endLine":8,"endColumn":16},{"ruleId":"1254","severity":1,"message":"1312","line":9,"column":8,"nodeType":"1256","messageId":"1257","endLine":9,"endColumn":12},{"ruleId":"1254","severity":1,"message":"1491","line":11,"column":10,"nodeType":"1256","messageId":"1257","endLine":11,"endColumn":17},{"ruleId":"1254","severity":1,"message":"1492","line":14,"column":10,"nodeType":"1256","messageId":"1257","endLine":14,"endColumn":22},{"ruleId":"1493","severity":1,"message":"1494","line":171,"column":21,"nodeType":"1495","messageId":"1496","endLine":171,"endColumn":48},{"ruleId":"1493","severity":1,"message":"1494","line":172,"column":20,"nodeType":"1495","messageId":"1496","endLine":172,"endColumn":46},{"ruleId":"1254","severity":1,"message":"1497","line":175,"column":13,"nodeType":"1256","messageId":"1257","endLine":175,"endColumn":23},{"ruleId":"1254","severity":1,"message":"1498","line":228,"column":9,"nodeType":"1256","messageId":"1257","endLine":228,"endColumn":16},{"ruleId":"1300","severity":1,"message":"1301","line":325,"column":3,"nodeType":"1302","messageId":"1303","endLine":327,"endColumn":4},{"ruleId":"1258","severity":1,"message":"1259","line":341,"column":23,"nodeType":"1260","messageId":"1261","endLine":341,"endColumn":25},{"ruleId":"1258","severity":1,"message":"1259","line":341,"column":87,"nodeType":"1260","messageId":"1261","endLine":341,"endColumn":89},{"ruleId":"1258","severity":1,"message":"1259","line":347,"column":27,"nodeType":"1260","messageId":"1261","endLine":347,"endColumn":29},{"ruleId":"1258","severity":1,"message":"1259","line":347,"column":92,"nodeType":"1260","messageId":"1261","endLine":347,"endColumn":94},{"ruleId":"1254","severity":1,"message":"1345","line":1,"column":17,"nodeType":"1256","messageId":"1257","endLine":1,"endColumn":26},{"ruleId":"1254","severity":1,"message":"1499","line":2,"column":9,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":19},{"ruleId":"1254","severity":1,"message":"1500","line":2,"column":20,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":26},{"ruleId":"1254","severity":1,"message":"1501","line":2,"column":27,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":33},{"ruleId":"1254","severity":1,"message":"1341","line":3,"column":10,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1311","line":4,"column":8,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1313","line":5,"column":8,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":16},{"ruleId":"1254","severity":1,"message":"1312","line":6,"column":8,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":12},{"ruleId":"1254","severity":1,"message":"1361","line":11,"column":8,"nodeType":"1256","messageId":"1257","endLine":11,"endColumn":17},{"ruleId":"1254","severity":1,"message":"1502","line":12,"column":8,"nodeType":"1256","messageId":"1257","endLine":12,"endColumn":19},{"ruleId":"1254","severity":1,"message":"1503","line":15,"column":8,"nodeType":"1256","messageId":"1257","endLine":15,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1492","line":17,"column":10,"nodeType":"1256","messageId":"1257","endLine":17,"endColumn":22},{"ruleId":"1258","severity":1,"message":"1259","line":88,"column":19,"nodeType":"1260","messageId":"1261","endLine":88,"endColumn":21},{"ruleId":"1258","severity":1,"message":"1259","line":88,"column":34,"nodeType":"1260","messageId":"1261","endLine":88,"endColumn":36},{"ruleId":"1258","severity":1,"message":"1259","line":88,"column":50,"nodeType":"1260","messageId":"1261","endLine":88,"endColumn":52},{"ruleId":"1254","severity":1,"message":"1330","line":2,"column":8,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":28},{"ruleId":"1254","severity":1,"message":"1339","line":8,"column":8,"nodeType":"1256","messageId":"1257","endLine":8,"endColumn":24},{"ruleId":"1254","severity":1,"message":"1504","line":14,"column":8,"nodeType":"1256","messageId":"1257","endLine":14,"endColumn":17},{"ruleId":"1254","severity":1,"message":"1505","line":15,"column":8,"nodeType":"1256","messageId":"1257","endLine":15,"endColumn":18},{"ruleId":"1258","severity":1,"message":"1259","line":35,"column":54,"nodeType":"1260","messageId":"1261","endLine":35,"endColumn":56},{"ruleId":"1258","severity":1,"message":"1259","line":65,"column":52,"nodeType":"1260","messageId":"1261","endLine":65,"endColumn":54},{"ruleId":"1258","severity":1,"message":"1259","line":115,"column":60,"nodeType":"1260","messageId":"1261","endLine":115,"endColumn":62},{"ruleId":"1254","severity":1,"message":"1308","line":5,"column":8,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1336","line":12,"column":8,"nodeType":"1256","messageId":"1257","endLine":12,"endColumn":18},{"ruleId":"1258","severity":1,"message":"1259","line":53,"column":54,"nodeType":"1260","messageId":"1261","endLine":53,"endColumn":56},{"ruleId":"1258","severity":1,"message":"1259","line":96,"column":14,"nodeType":"1260","messageId":"1261","endLine":96,"endColumn":16},{"ruleId":"1258","severity":1,"message":"1259","line":103,"column":52,"nodeType":"1260","messageId":"1261","endLine":103,"endColumn":54},{"ruleId":"1258","severity":1,"message":"1314","line":106,"column":57,"nodeType":"1260","messageId":"1261","endLine":106,"endColumn":59},{"ruleId":"1258","severity":1,"message":"1259","line":107,"column":31,"nodeType":"1260","messageId":"1261","endLine":107,"endColumn":33},{"ruleId":"1254","severity":1,"message":"1506","line":6,"column":16,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1405","line":6,"column":66,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":74},{"ruleId":"1254","severity":1,"message":"1507","line":6,"column":76,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":84},{"ruleId":"1254","severity":1,"message":"1508","line":6,"column":86,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":92},{"ruleId":"1254","severity":1,"message":"1509","line":6,"column":94,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":98},{"ruleId":"1258","severity":1,"message":"1259","line":33,"column":39,"nodeType":"1260","messageId":"1261","endLine":33,"endColumn":41},{"ruleId":"1258","severity":1,"message":"1259","line":34,"column":44,"nodeType":"1260","messageId":"1261","endLine":34,"endColumn":46},{"ruleId":"1254","severity":1,"message":"1267","line":2,"column":9,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1510","line":25,"column":26,"nodeType":"1256","messageId":"1257","endLine":25,"endColumn":33},{"ruleId":"1258","severity":1,"message":"1259","line":26,"column":30,"nodeType":"1260","messageId":"1261","endLine":26,"endColumn":32},{"ruleId":"1258","severity":1,"message":"1259","line":38,"column":45,"nodeType":"1260","messageId":"1261","endLine":38,"endColumn":47},{"ruleId":"1258","severity":1,"message":"1259","line":153,"column":40,"nodeType":"1260","messageId":"1261","endLine":153,"endColumn":42},{"ruleId":"1258","severity":1,"message":"1259","line":163,"column":30,"nodeType":"1260","messageId":"1261","endLine":163,"endColumn":32},{"ruleId":"1258","severity":1,"message":"1259","line":163,"column":75,"nodeType":"1260","messageId":"1261","endLine":163,"endColumn":77},{"ruleId":"1258","severity":1,"message":"1259","line":164,"column":18,"nodeType":"1260","messageId":"1261","endLine":164,"endColumn":20},{"ruleId":"1258","severity":1,"message":"1259","line":164,"column":56,"nodeType":"1260","messageId":"1261","endLine":164,"endColumn":58},{"ruleId":"1258","severity":1,"message":"1259","line":166,"column":57,"nodeType":"1260","messageId":"1261","endLine":166,"endColumn":59},{"ruleId":"1258","severity":1,"message":"1259","line":181,"column":38,"nodeType":"1260","messageId":"1261","endLine":181,"endColumn":40},{"ruleId":"1254","severity":1,"message":"1511","line":11,"column":8,"nodeType":"1256","messageId":"1257","endLine":11,"endColumn":25},{"ruleId":"1254","severity":1,"message":"1267","line":16,"column":18,"nodeType":"1256","messageId":"1257","endLine":16,"endColumn":23},{"ruleId":"1254","severity":1,"message":"1306","line":17,"column":9,"nodeType":"1256","messageId":"1257","endLine":17,"endColumn":19},{"ruleId":"1254","severity":1,"message":"1512","line":128,"column":10,"nodeType":"1256","messageId":"1257","endLine":128,"endColumn":23},{"ruleId":"1254","severity":1,"message":"1513","line":128,"column":25,"nodeType":"1256","messageId":"1257","endLine":128,"endColumn":41},{"ruleId":"1254","severity":1,"message":"1514","line":129,"column":9,"nodeType":"1256","messageId":"1257","endLine":129,"endColumn":19},{"ruleId":"1254","severity":1,"message":"1515","line":132,"column":9,"nodeType":"1256","messageId":"1257","endLine":132,"endColumn":30},{"ruleId":"1254","severity":1,"message":"1516","line":140,"column":9,"nodeType":"1256","messageId":"1257","endLine":140,"endColumn":24},{"ruleId":"1258","severity":1,"message":"1259","line":316,"column":45,"nodeType":"1260","messageId":"1261","endLine":316,"endColumn":47},{"ruleId":"1258","severity":1,"message":"1259","line":131,"column":39,"nodeType":"1260","messageId":"1261","endLine":131,"endColumn":41},{"ruleId":"1254","severity":1,"message":"1331","line":4,"column":9,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":12},{"ruleId":"1254","severity":1,"message":"1517","line":4,"column":8,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1383","line":5,"column":8,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1384","line":6,"column":8,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1385","line":7,"column":8,"nodeType":"1256","messageId":"1257","endLine":7,"endColumn":12},{"ruleId":"1254","severity":1,"message":"1292","line":8,"column":8,"nodeType":"1256","messageId":"1257","endLine":8,"endColumn":13},{"ruleId":"1300","severity":1,"message":"1301","line":6,"column":5,"nodeType":"1302","messageId":"1303","endLine":8,"endColumn":6},{"ruleId":"1258","severity":1,"message":"1259","line":11,"column":37,"nodeType":"1260","messageId":"1261","endLine":11,"endColumn":39},{"ruleId":"1258","severity":1,"message":"1259","line":11,"column":72,"nodeType":"1260","messageId":"1261","endLine":11,"endColumn":74},{"ruleId":"1258","severity":1,"message":"1259","line":11,"column":102,"nodeType":"1260","messageId":"1261","endLine":11,"endColumn":104},{"ruleId":"1258","severity":1,"message":"1259","line":12,"column":29,"nodeType":"1260","messageId":"1261","endLine":12,"endColumn":31},{"ruleId":"1258","severity":1,"message":"1259","line":12,"column":58,"nodeType":"1260","messageId":"1261","endLine":12,"endColumn":60},{"ruleId":"1300","severity":1,"message":"1301","line":5,"column":5,"nodeType":"1302","messageId":"1303","endLine":7,"endColumn":6},{"ruleId":"1300","severity":1,"message":"1301","line":5,"column":5,"nodeType":"1302","messageId":"1303","endLine":7,"endColumn":6},{"ruleId":"1254","severity":1,"message":"1490","line":4,"column":8,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":14},{"ruleId":"1300","severity":1,"message":"1301","line":9,"column":5,"nodeType":"1302","messageId":"1303","endLine":18,"endColumn":6},{"ruleId":"1254","severity":1,"message":"1518","line":58,"column":13,"nodeType":"1256","messageId":"1257","endLine":58,"endColumn":21},{"ruleId":"1254","severity":1,"message":"1507","line":59,"column":13,"nodeType":"1256","messageId":"1257","endLine":59,"endColumn":21},{"ruleId":"1258","severity":1,"message":"1259","line":62,"column":29,"nodeType":"1260","messageId":"1261","endLine":62,"endColumn":31},{"ruleId":"1254","severity":1,"message":"1341","line":5,"column":10,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1281","line":6,"column":8,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":18},{"ruleId":"1254","severity":1,"message":"1519","line":7,"column":8,"nodeType":"1256","messageId":"1257","endLine":7,"endColumn":18},{"ruleId":"1254","severity":1,"message":"1309","line":8,"column":8,"nodeType":"1256","messageId":"1257","endLine":8,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1520","line":9,"column":11,"nodeType":"1256","messageId":"1257","endLine":9,"endColumn":26},{"ruleId":"1254","severity":1,"message":"1503","line":10,"column":8,"nodeType":"1256","messageId":"1257","endLine":10,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1419","line":11,"column":8,"nodeType":"1256","messageId":"1257","endLine":11,"endColumn":16},{"ruleId":"1254","severity":1,"message":"1426","line":18,"column":8,"nodeType":"1256","messageId":"1257","endLine":18,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1427","line":19,"column":8,"nodeType":"1256","messageId":"1257","endLine":19,"endColumn":21},{"ruleId":"1254","severity":1,"message":"1428","line":20,"column":8,"nodeType":"1256","messageId":"1257","endLine":20,"endColumn":17},{"ruleId":"1254","severity":1,"message":"1429","line":21,"column":8,"nodeType":"1256","messageId":"1257","endLine":21,"endColumn":18},{"ruleId":"1254","severity":1,"message":"1310","line":22,"column":8,"nodeType":"1256","messageId":"1257","endLine":22,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1521","line":30,"column":10,"nodeType":"1256","messageId":"1257","endLine":30,"endColumn":14},{"ruleId":"1258","severity":1,"message":"1259","line":107,"column":37,"nodeType":"1260","messageId":"1261","endLine":107,"endColumn":39},{"ruleId":"1254","severity":1,"message":"1311","line":2,"column":8,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1313","line":3,"column":8,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":16},{"ruleId":"1254","severity":1,"message":"1312","line":4,"column":8,"nodeType":"1256","messageId":"1257","endLine":4,"endColumn":12},{"ruleId":"1254","severity":1,"message":"1522","line":6,"column":10,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1309","line":7,"column":8,"nodeType":"1256","messageId":"1257","endLine":7,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1264","line":8,"column":8,"nodeType":"1256","messageId":"1257","endLine":8,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1331","line":9,"column":9,"nodeType":"1256","messageId":"1257","endLine":9,"endColumn":12},{"ruleId":"1254","severity":1,"message":"1341","line":2,"column":10,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":20},{"ruleId":"1254","severity":1,"message":"1361","line":5,"column":8,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":17},{"ruleId":"1254","severity":1,"message":"1523","line":7,"column":10,"nodeType":"1256","messageId":"1257","endLine":7,"endColumn":16},{"ruleId":"1300","severity":1,"message":"1301","line":12,"column":5,"nodeType":"1302","messageId":"1303","endLine":15,"endColumn":6},{"ruleId":"1258","severity":1,"message":"1259","line":24,"column":19,"nodeType":"1260","messageId":"1261","endLine":24,"endColumn":21},{"ruleId":"1258","severity":1,"message":"1259","line":24,"column":35,"nodeType":"1260","messageId":"1261","endLine":24,"endColumn":37},{"ruleId":"1254","severity":1,"message":"1418","line":41,"column":16,"nodeType":"1256","messageId":"1257","endLine":41,"endColumn":19},{"ruleId":"1254","severity":1,"message":"1524","line":42,"column":16,"nodeType":"1256","messageId":"1257","endLine":42,"endColumn":19},{"ruleId":"1254","severity":1,"message":"1266","line":1,"column":17,"nodeType":"1256","messageId":"1257","endLine":1,"endColumn":26},{"ruleId":"1254","severity":1,"message":"1267","line":12,"column":9,"nodeType":"1256","messageId":"1257","endLine":12,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1525","line":18,"column":10,"nodeType":"1256","messageId":"1257","endLine":18,"endColumn":22},{"ruleId":"1254","severity":1,"message":"1526","line":18,"column":24,"nodeType":"1256","messageId":"1257","endLine":18,"endColumn":39},{"ruleId":"1254","severity":1,"message":"1527","line":23,"column":12,"nodeType":"1256","messageId":"1257","endLine":23,"endColumn":21},{"ruleId":"1258","severity":1,"message":"1259","line":28,"column":38,"nodeType":"1260","messageId":"1261","endLine":28,"endColumn":40},{"ruleId":"1258","severity":1,"message":"1259","line":28,"column":66,"nodeType":"1260","messageId":"1261","endLine":28,"endColumn":68},{"ruleId":"1258","severity":1,"message":"1259","line":33,"column":36,"nodeType":"1260","messageId":"1261","endLine":33,"endColumn":38},{"ruleId":"1258","severity":1,"message":"1259","line":36,"column":20,"nodeType":"1260","messageId":"1261","endLine":36,"endColumn":22},{"ruleId":"1258","severity":1,"message":"1259","line":36,"column":38,"nodeType":"1260","messageId":"1261","endLine":36,"endColumn":40},{"ruleId":"1254","severity":1,"message":"1490","line":5,"column":8,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":14},{"ruleId":"1254","severity":1,"message":"1311","line":6,"column":8,"nodeType":"1256","messageId":"1257","endLine":6,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1313","line":7,"column":8,"nodeType":"1256","messageId":"1257","endLine":7,"endColumn":16},{"ruleId":"1254","severity":1,"message":"1312","line":8,"column":8,"nodeType":"1256","messageId":"1257","endLine":8,"endColumn":12},{"ruleId":"1482","severity":1,"message":"1528","line":91,"column":13,"nodeType":"1256","messageId":"1484","endLine":91,"endColumn":17},{"ruleId":"1300","severity":1,"message":"1301","line":5,"column":5,"nodeType":"1302","messageId":"1303","endLine":7,"endColumn":6},{"ruleId":"1300","severity":1,"message":"1301","line":5,"column":5,"nodeType":"1302","messageId":"1303","endLine":7,"endColumn":6},{"ruleId":"1254","severity":1,"message":"1306","line":5,"column":9,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":19},{"ruleId":"1254","severity":1,"message":"1307","line":5,"column":21,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":33},{"ruleId":"1529","severity":1,"message":"1530","line":55,"column":5,"nodeType":"1302","messageId":"1261","endLine":57,"endColumn":6},{"ruleId":"1300","severity":1,"message":"1301","line":4,"column":5,"nodeType":"1302","messageId":"1303","endLine":6,"endColumn":6},{"ruleId":"1300","severity":1,"message":"1301","line":4,"column":5,"nodeType":"1302","messageId":"1303","endLine":6,"endColumn":6},{"ruleId":"1300","severity":1,"message":"1301","line":4,"column":5,"nodeType":"1302","messageId":"1303","endLine":6,"endColumn":6},{"ruleId":"1300","severity":1,"message":"1301","line":4,"column":5,"nodeType":"1302","messageId":"1303","endLine":6,"endColumn":6},{"ruleId":"1300","severity":1,"message":"1301","line":4,"column":5,"nodeType":"1302","messageId":"1303","endLine":6,"endColumn":6},{"ruleId":"1254","severity":1,"message":"1309","line":2,"column":8,"nodeType":"1256","messageId":"1257","endLine":2,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1264","line":3,"column":8,"nodeType":"1256","messageId":"1257","endLine":3,"endColumn":13},{"ruleId":"1254","severity":1,"message":"1531","line":5,"column":9,"nodeType":"1256","messageId":"1257","endLine":5,"endColumn":12},"no-native-reassign",["1532"],"no-negated-in-lhs",["1533"],"no-unused-vars","'Cubic' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'axios' is defined but never used.","'React' is defined but never used.","'useEffect' is defined but never used.","'Route' is defined but never used.","'Home' is defined but never used.","'Login' is defined but never used.","'ShareBoard' is defined but never used.","'MyPage' is defined but never used.","'Notice' is defined but never used.","'Reservation' is defined but never used.","'Admin' is defined but never used.","'TourList' is defined but never used.","'Tour' is defined but never used.","'Divider' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'SwipeableDrawer' is defined but never used.","'AccountCircleIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Logo2' is defined but never used.","'createMuiTheme' is defined but never used.","'MuiThemeProvider' is defined but never used.","'WithStyles' is defined but never used.","'ThemeProvider' is defined but never used.","'theme' is defined but never used.","'PropTypes' is defined but never used.","'styledComponents' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'NoticeMiniComp' is defined but never used.","'ShareBoardMiniComp' is defined but never used.","'actionType' is defined but never used.","'mainViewType' is defined but never used.","'AppBar' is defined but never used.","'store' is defined but never used.","'Paper' is defined but never used.","'Modal' is defined but never used.","'Fade' is defined but never used.","'Backdrop' is defined but never used.","Expected '!==' and instead saw '!='.","'boards' is assigned a value but never used.","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","'Fragment' is defined but never used.","'Link' is defined but never used.","'ShareBoardFormComp' is defined but never used.","'photoIndex' is assigned a value but never used.","'isOpen' is assigned a value but never used.","'images' is assigned a value but never used.","'ShareBoardPageComp' is defined but never used.","'MDBBtn' is defined but never used.","'Box' is defined but never used.","'StyledRating' is assigned a value but never used.","'RowItem' is defined but never used.","'MemberUpdateFormComp' is defined but never used.","'URL' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'MySchedule' is defined but never used.","'MyReviwe' is defined but never used.","'MyWishlist' is defined but never used.","'userImg' is defined but never used.","'PassCheck' is defined but never used.","'SocialUpdateForm' is defined but never used.","'TabPanel' is defined but never used.","'makeStyles' is defined but never used.","'createStyles' is defined but never used.","'withStyles' is defined but never used.","'provider' is assigned a value but never used.","'Component' is defined but never used.","'withRouter' is defined but never used.","'preMsgCnt' is defined but never used.","'curMsgCnt' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'printCommentEachOther'. Either include it or remove the dependency array.","ArrayExpression",["1534"],"'intervalContainer' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'gsap' is defined but never used.","'Quint' is defined but never used.","'FaceBookLoginBtnComp' is defined but never used.","'KakaoLoginBtnComp' is defined but never used.","'KakaoLoginBtnComp3' is defined but never used.","'TextField' is defined but never used.","'MakeLoginBtn' is defined but never used.","'FaThemeisle' is defined but never used.","'parentOnLoginHandler' is assigned a value but never used.","'FormHelperText' is defined but never used.","'searchDataList' is assigned a value but never used.","'setSearchDataList' is assigned a value but never used.","'useLayoutEffect' is defined but never used.","'useState' is defined but never used.","'NavLink' is defined but never used.","'TourPageComp' is defined but never used.","'Typography' is defined but never used.","'value' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setActionLocationEvent'. Either include it or remove the dependency array.",["1535"],"'handleChange' is assigned a value but never used.","'setMainView' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","'jeju2' is defined but never used.","'jeju3' is defined but never used.","'udo1' is defined but never used.","'ListItemAvatar' is defined but never used.","'Avatar' is defined but never used.","'ImageIcon' is defined but never used.","'WorkIcon' is defined but never used.","'BeachAccessIcon' is defined but never used.","'EventAvailableIcon' is defined but never used.","'FlightLandIcon' is defined but never used.","'Slider' is defined but never used.","'BoardSample' is defined but never used.","'classes' is assigned a value but never used.","'shareMyPlan' is assigned a value but never used.","'setShareMyPlan' is assigned a value but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'img' is defined but never used.","'SyncAltIcon' is defined but never used.","'TrendingFlatIcon' is defined but never used.","'paginate' is assigned a value but never used.","'BootstrapButton' is assigned a value but never used.","'ColorButton' is assigned a value but never used.","'theme' is assigned a value but never used.","'Kakao' is assigned a value but never used.","'styled' is defined but never used.","'getSuggestedQuery' is defined but never used.","'reactDOM' is defined but never used.","'refreshTokenSetup' is defined but never used.","React Hook useEffect has a missing dependency: 'Naver'. Either include it or remove the dependency array.",["1536"],"'hp' is assigned a value but never used.","'responseGoogle' is assigned a value but never used.","'row' is assigned a value but never used.","'Timeline' is defined but never used.","'TimelineItem' is defined but never used.","'TimelineSeparator' is defined but never used.","'TimelineConnector' is defined but never used.","'TimelineContent' is defined but never used.","'TimelineOppositeContent' is defined but never used.","'TimelineDot' is defined but never used.","'FastfoodIcon' is defined but never used.","'LaptopMacIcon' is defined but never used.","'HotelIcon' is defined but never used.","'RepeatIcon' is defined but never used.","'LocationOnIcon' is defined but never used.","'addr' is assigned a value but never used.","'TweenMax' is defined but never used.","'ChattingLogic' is defined but never used.","'idx' is assigned a value but never used.","'ColorSkyconsType' is defined but never used.","'svgProps' is assigned a value but never used.","no-extra-bind","The function binding is unnecessary.","CallExpression",{"range":"1537","text":"1538"},"'url' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'url_2' is assigned a value but never used.","'url_3' is assigned a value but never used.","'url_4' is assigned a value but never used.","'url_6' is assigned a value but never used.","'ShareBoardUpdateForm' is defined but never used.","'AddAPhotoIcon' is defined but never used.","'ChatBubbleIcon' is defined but never used.","'ChatBubbleOutlineIcon' is defined but never used.","'TextsmsIcon' is defined but never used.","'Delete' is defined but never used.","'scrollY' is assigned a value but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'BoardSampleItem' is defined but never used.","React Hook useEffect has a missing dependency: 'getList'. Either include it or remove the dependency array.",["1539"],"'handleExpandClick' is assigned a value but never used.","'Tooltip' is defined but never used.","'MDBIcon' is defined but never used.","Assignments to the 'longitude' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'latitude' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'title' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'infowindow' is assigned a value but never used.","'closeOverlay' is defined but never used.","'order' is assigned a value but never used.","'menuEl' is assigned a value but never used.","'listStr' is assigned a value but never used.","no-use-before-define","'itemEl' was used before it was defined.","usedBeforeDefined","no-redeclare","'el' is already defined.","redeclared","'itemStr' is already defined.","'imgX' is defined but never used.","'FaceIcon' is defined but never used.","'Visibility' is defined but never used.","'regroup' is assigned a value but never used.","'Header' is defined but never used.","'TiTimes' is defined but never used.","'MDBContainer' is defined but never used.","no-new-wrappers","Do not use String as a constructor.","NewExpression","noConstructor","'betweenDay' is assigned a value but never used.","'content' is assigned a value but never used.","'FcPrevious' is defined but never used.","'FcNext' is defined but never used.","'FcList' is defined but never used.","'ScheduleAdd' is defined but never used.","'moment' is defined but never used.","'InboxIcon' is defined but never used.","'DraftsIcon' is defined but never used.","'area' is assigned a value but never used.","'category' is assigned a value but never used.","'search' is assigned a value but never used.","'type' is assigned a value but never used.","'history' is assigned a value but never used.","'NotificationsIcon' is defined but never used.","'drawerSetOpen' is assigned a value but never used.","'setDrawerSetOpen' is assigned a value but never used.","'isMenuOpen' is assigned a value but never used.","'handleProfileMenuOpen' is assigned a value but never used.","'handleMenuClose' is assigned a value but never used.","'jeju1' is defined but never used.","'aroundId' is assigned a value but never used.","'DeleteIcon' is defined but never used.","'FcCollaboration' is defined but never used.","'Form' is defined but never used.","'FcOk' is defined but never used.","'Button' is defined but never used.","'key' is assigned a value but never used.","'alertSetOpen' is assigned a value but never used.","'setAlertSetOpen' is assigned a value but never used.","'isShowing' is assigned a value but never used.","'flag' is already defined.","no-dupe-class-members","Duplicate name 'componentWillUnmount'.","'WOW' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1540","fix":"1541"},{"desc":"1542","fix":"1543"},{"desc":"1544","fix":"1545"},[1948,1959],"",{"desc":"1546","fix":"1547"},"Update the dependencies array to be: [printCommentEachOther, selectedRoomNum]",{"range":"1548","text":"1549"},"Update the dependencies array to be: [scrollYVal, setActionLocationEvent]",{"range":"1550","text":"1551"},"Update the dependencies array to be: [Naver]",{"range":"1552","text":"1553"},"Update the dependencies array to be: [getList, idx]",{"range":"1554","text":"1555"},[1303,1320],"[printCommentEachOther, selectedRoomNum]",[3562,3574],"[scrollYVal, setActionLocationEvent]",[617,619],"[Naver]",[2397,2402],"[getList, idx]"]