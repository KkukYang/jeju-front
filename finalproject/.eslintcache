[{"C:\\finalproject\\jeju\\finalproject\\src\\index.js":"1","C:\\finalproject\\jeju\\finalproject\\src\\App.js":"2","C:\\finalproject\\jeju\\finalproject\\src\\reportWebVitals.js":"3","C:\\finalproject\\jeju\\finalproject\\src\\redux\\store.js":"4","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\reservation\\ShipPageComp.js":"5","C:\\finalproject\\jeju\\finalproject\\src\\component\\header\\Menu.js":"6","C:\\finalproject\\jeju\\finalproject\\src\\component\\footer\\FooterComp.js":"7","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\reservation\\RentCarPageComp.js":"8","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\MainPageComp.js":"9","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\SearchResultComp.js":"10","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\notice\\NoticeContent.js":"11","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\notice\\NoticePageComp.js":"12","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\notice\\Noticeinsert.js":"13","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\shareboard\\ShareBoardUpdateForm.js":"14","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\shareboard\\ShareBoardFormComp.js":"15","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\admin\\MemberListPageComp.js":"16","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\MypagePageComp.js":"17","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\MemberUpdateFormComp.js":"18","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\tour\\DetailTourComp.js":"19","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\SharePlan\\SharePlanPageComp.js":"20","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\tour\\TourPageComp.js":"21","C:\\finalproject\\jeju\\finalproject\\src\\redux\\config.js":"22","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\reservation\\ReservationPageComp.js":"23","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\shareboard\\ShareBoardPageComp.js":"24","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\auth\\LoginPageComp.js":"25","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\join\\SignupPageComp.js":"26","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\theme.js":"27","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\WaveBorder.js":"28","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\NoticeMiniComp.js":"29","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\SearchComp.js":"30","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\HotPlaceComp.js":"31","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\ShareBoardMiniComp.js":"32","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\MainPhotoComp.js":"33","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\MyPlanComp.js":"34","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\EtcBoardComp.js":"35","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\tour\\Tourintro.js":"36","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\tour\\PageComp.js":"37","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\tour\\ItemComp.js":"38","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\tour\\ReviewListComp.js":"39","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\tour\\MapComp.js":"40","C:\\finalproject\\jeju\\finalproject\\src\\component\\header\\menus\\index.js":"41","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\Weather.js":"42","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\tour\\DetailReviewComp.js":"43","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\tour\\UseModal.js":"44","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\tour\\AroundModal.js":"45","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\shareboard\\ShareBoardRowItem.js":"46","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\tour\\ReviewItemComp.js":"47","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\NoticeItemComp.js":"48","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\BoardSample.js":"49","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\MyPlanLeftItem.js":"50","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\MyPlanRightItem.js":"51","C:\\finalproject\\jeju\\finalproject\\src\\component\\header\\menus\\Join.js":"52","C:\\finalproject\\jeju\\finalproject\\src\\component\\header\\menus\\Admin.js":"53","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\tour\\AroundModalDetail.js":"54","C:\\finalproject\\jeju\\finalproject\\src\\component\\header\\menus\\MyPage.js":"55","C:\\finalproject\\jeju\\finalproject\\src\\component\\header\\menus\\Login.js":"56","C:\\finalproject\\jeju\\finalproject\\src\\component\\header\\menus\\ShareBoard.js":"57","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\shareboard\\Modal.js":"58","C:\\finalproject\\jeju\\finalproject\\src\\component\\header\\menus\\Tour.js":"59","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\shareboard\\ShareReview.js":"60","C:\\finalproject\\jeju\\finalproject\\src\\component\\header\\menus\\TourList.js":"61","C:\\finalproject\\jeju\\finalproject\\src\\component\\header\\menus\\Home.js":"62","C:\\finalproject\\jeju\\finalproject\\src\\component\\header\\menus\\Reservation.js":"63","C:\\finalproject\\jeju\\finalproject\\src\\component\\header\\menus\\Notice.js":"64","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\BoardSampleItem.js":"65","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\shareboard\\ReviewItem.js":"66","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\auth\\MakeLoginBtn.js":"67","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\auth\\KakaoLoginBtnComp.js":"68","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\auth\\FaceBookLoginBtnComp.js":"69","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\auth\\NaverLoginBtnComp.js":"70","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\auth\\GoogleLogoutBtnComp.js":"71","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\auth\\GoogleLoginBtnComp.js":"72","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\auth\\KakaoLoginBtnComp3.js":"73","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\PassCheck.js":"74","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\MyWishlist.js":"75","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\MySchedule.js":"76","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\MyReview.js":"77","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\admin\\RowItem.js":"78","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\notice\\BoardForm.js":"79","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\notice\\BoardItem.js":"80","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\auth\\refreshToken.js":"81","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\Header.js":"82","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\Calendar.js":"83","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\ReviewPage.js":"84","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\ReviewList.js":"85","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\ScheduleList.js":"86","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\DayItem.js":"87","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\ScheduleAdd.js":"88","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\ClistItem.js":"89","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\DayDetail.js":"90"},{"size":1058,"mtime":1611941608152,"results":"91","hashOfConfig":"92"},{"size":7974,"mtime":1612174882508,"results":"93","hashOfConfig":"92"},{"size":375,"mtime":1611941608152,"results":"94","hashOfConfig":"92"},{"size":3493,"mtime":1612242879558,"results":"95","hashOfConfig":"92"},{"size":369,"mtime":1612174882576,"results":"96","hashOfConfig":"92"},{"size":15074,"mtime":1612242879541,"results":"97","hashOfConfig":"92"},{"size":1391,"mtime":1611941607936,"results":"98","hashOfConfig":"92"},{"size":381,"mtime":1612174882574,"results":"99","hashOfConfig":"92"},{"size":2473,"mtime":1612174882540,"results":"100","hashOfConfig":"92"},{"size":7930,"mtime":1612174882566,"results":"101","hashOfConfig":"92"},{"size":2137,"mtime":1612174882570,"results":"102","hashOfConfig":"92"},{"size":3306,"mtime":1612174882572,"results":"103","hashOfConfig":"92"},{"size":2662,"mtime":1612174882574,"results":"104","hashOfConfig":"92"},{"size":7348,"mtime":1611941607974,"results":"105","hashOfConfig":"92"},{"size":6687,"mtime":1611941607974,"results":"106","hashOfConfig":"92"},{"size":2557,"mtime":1611941607951,"results":"107","hashOfConfig":"92"},{"size":12570,"mtime":1612055767486,"results":"108","hashOfConfig":"92"},{"size":13894,"mtime":1612055767471,"results":"109","hashOfConfig":"92"},{"size":11983,"mtime":1612174882594,"results":"110","hashOfConfig":"92"},{"size":453,"mtime":1611941607951,"results":"111","hashOfConfig":"92"},{"size":5900,"mtime":1611941607989,"results":"112","hashOfConfig":"92"},{"size":1799,"mtime":1612242908255,"results":"113","hashOfConfig":"92"},{"size":10179,"mtime":1612228703637,"results":"114","hashOfConfig":"92"},{"size":9973,"mtime":1612228703639,"results":"115","hashOfConfig":"92"},{"size":7197,"mtime":1612242879547,"results":"116","hashOfConfig":"92"},{"size":19653,"mtime":1612228703636,"results":"117","hashOfConfig":"92"},{"size":602,"mtime":1611941607967,"results":"118","hashOfConfig":"92"},{"size":3261,"mtime":1611941607967,"results":"119","hashOfConfig":"92"},{"size":1584,"mtime":1611941607967,"results":"120","hashOfConfig":"92"},{"size":5499,"mtime":1612174882565,"results":"121","hashOfConfig":"92"},{"size":25564,"mtime":1612174882535,"results":"122","hashOfConfig":"92"},{"size":1599,"mtime":1611941607967,"results":"123","hashOfConfig":"92"},{"size":2880,"mtime":1612174882542,"results":"124","hashOfConfig":"92"},{"size":7238,"mtime":1612242879555,"results":"125","hashOfConfig":"92"},{"size":5033,"mtime":1612174882533,"results":"126","hashOfConfig":"92"},{"size":19311,"mtime":1611941607989,"results":"127","hashOfConfig":"92"},{"size":3600,"mtime":1612174882597,"results":"128","hashOfConfig":"92"},{"size":2393,"mtime":1612174882596,"results":"129","hashOfConfig":"92"},{"size":4077,"mtime":1611941607989,"results":"130","hashOfConfig":"92"},{"size":18947,"mtime":1611941607974,"results":"131","hashOfConfig":"92"},{"size":618,"mtime":1611941607936,"results":"132","hashOfConfig":"92"},{"size":240,"mtime":1612174882569,"results":"133","hashOfConfig":"92"},{"size":7377,"mtime":1611941607974,"results":"134","hashOfConfig":"92"},{"size":449,"mtime":1611941607989,"results":"135","hashOfConfig":"92"},{"size":983,"mtime":1611941607974,"results":"136","hashOfConfig":"92"},{"size":11233,"mtime":1612228703640,"results":"137","hashOfConfig":"92"},{"size":8968,"mtime":1611941607989,"results":"138","hashOfConfig":"92"},{"size":2100,"mtime":1612174882562,"results":"139","hashOfConfig":"92"},{"size":5291,"mtime":1612174882532,"results":"140","hashOfConfig":"92"},{"size":3213,"mtime":1612174882546,"results":"141","hashOfConfig":"92"},{"size":1535,"mtime":1612242879556,"results":"142","hashOfConfig":"92"},{"size":326,"mtime":1611941607936,"results":"143","hashOfConfig":"92"},{"size":288,"mtime":1611941607936,"results":"144","hashOfConfig":"92"},{"size":4064,"mtime":1612079180518,"results":"145","hashOfConfig":"92"},{"size":291,"mtime":1611941607936,"results":"146","hashOfConfig":"92"},{"size":288,"mtime":1611941607936,"results":"147","hashOfConfig":"92"},{"size":315,"mtime":1611941607936,"results":"148","hashOfConfig":"92"},{"size":1019,"mtime":1611941607974,"results":"149","hashOfConfig":"92"},{"size":255,"mtime":1611941607936,"results":"150","hashOfConfig":"92"},{"size":1493,"mtime":1611941607974,"results":"151","hashOfConfig":"92"},{"size":263,"mtime":1611941607936,"results":"152","hashOfConfig":"92"},{"size":1507,"mtime":1611941607936,"results":"153","hashOfConfig":"92"},{"size":323,"mtime":1611941607936,"results":"154","hashOfConfig":"92"},{"size":297,"mtime":1611941607936,"results":"155","hashOfConfig":"92"},{"size":544,"mtime":1611941607951,"results":"156","hashOfConfig":"92"},{"size":6429,"mtime":1611941607974,"results":"157","hashOfConfig":"92"},{"size":2125,"mtime":1611941607951,"results":"158","hashOfConfig":"92"},{"size":1472,"mtime":1611941607951,"results":"159","hashOfConfig":"92"},{"size":1615,"mtime":1611941607951,"results":"160","hashOfConfig":"92"},{"size":7868,"mtime":1612242879548,"results":"161","hashOfConfig":"92"},{"size":1307,"mtime":1612174882523,"results":"162","hashOfConfig":"92"},{"size":3564,"mtime":1612242879545,"results":"163","hashOfConfig":"92"},{"size":424,"mtime":1612228703632,"results":"164","hashOfConfig":"92"},{"size":4035,"mtime":1612055767486,"results":"165","hashOfConfig":"92"},{"size":486,"mtime":1611941607967,"results":"166","hashOfConfig":"92"},{"size":3384,"mtime":1612178604660,"results":"167","hashOfConfig":"92"},{"size":5975,"mtime":1612055767486,"results":"168","hashOfConfig":"92"},{"size":563,"mtime":1611941607951,"results":"169","hashOfConfig":"92"},{"size":2693,"mtime":1611941607974,"results":"170","hashOfConfig":"92"},{"size":748,"mtime":1611941607974,"results":"171","hashOfConfig":"92"},{"size":713,"mtime":1611941607951,"results":"172","hashOfConfig":"92"},{"size":6194,"mtime":1612179353346,"results":"173","hashOfConfig":"92"},{"size":8377,"mtime":1612160004481,"results":"174","hashOfConfig":"92"},{"size":2104,"mtime":1612055767486,"results":"175","hashOfConfig":"92"},{"size":2634,"mtime":1612055767486,"results":"176","hashOfConfig":"92"},{"size":744,"mtime":1612229173837,"results":"177","hashOfConfig":"92"},{"size":1915,"mtime":1612096798525,"results":"178","hashOfConfig":"92"},{"size":2696,"mtime":1612112214852,"results":"179","hashOfConfig":"92"},{"size":3209,"mtime":1612242778146,"results":"180","hashOfConfig":"92"},{"size":2815,"mtime":1612145777247,"results":"181","hashOfConfig":"92"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},"oqlnnw",{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"184"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"184"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"184"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"184"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"184"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"184"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"184"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"184"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"184"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"184"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"184"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"184"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"184"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"184"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"184"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"184"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"184"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"184"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"184"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"184"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"184"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"184"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"184"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"184"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"184"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"184"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"184"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"184"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"184"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"184"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"184"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"184"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"184"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"184"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"184"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"184"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"184"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"184"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"184"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"184"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"184"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"184"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"184"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"184"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"184"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"184"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"184"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"184"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"184"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"184"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"184"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"184"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"184"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"184"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"184"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"184"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"184"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"184"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"184"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"184"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"184"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"184"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"417","messages":"418","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"184"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"184"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"425","messages":"426","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"184"},"C:\\finalproject\\jeju\\finalproject\\src\\index.js",[],["428","429"],"C:\\finalproject\\jeju\\finalproject\\src\\App.js",[],"C:\\finalproject\\jeju\\finalproject\\src\\reportWebVitals.js",[],"C:\\finalproject\\jeju\\finalproject\\src\\redux\\store.js",[],"C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\reservation\\ShipPageComp.js",[],"C:\\finalproject\\jeju\\finalproject\\src\\component\\header\\Menu.js",["430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467"],"import React, {Component} from 'react';\r\nimport {NavLink, Route} from \"react-router-dom\";\r\nimport {Home, Login, ShareBoard, MyPage, Notice, Reservation, Admin, TourList, Tour} from './menus';\r\nimport store from \"../../redux/store\";\r\nimport {actionType, mainViewType} from \"../../redux/config\";\r\nimport \"./Menu.css\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nclass Menu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // console.log(\"Menu constructor \", this.props)\r\n\r\n        this.state = {\r\n            type: this.props.type,\r\n            onLogin: this.props.onLogin,\r\n            onLogout: this.props.onLogout,\r\n            logged: store.getState().logged,\r\n            drawerOpen: false,\r\n            drawerSetOpen: false\r\n        }\r\n\r\n        store.subscribe(function () {\r\n            console.log(\"Menu subscribe()\", store.getState().logged);\r\n            this.setState({\r\n                logged: store.getState().logged,\r\n            });\r\n        }.bind(this));\r\n    }\r\n\r\n    setMainView = (mainView) => {\r\n        console.log(\"Home setMainView()\");\r\n        store.dispatch({\r\n            type: actionType.setMainView,\r\n            // mainView: mainViewType.MainPage\r\n            mainView: mainView\r\n        });\r\n    }\r\n\r\n    setLogOut = () => {\r\n        console.log(\"Menu setLogOut()\");\r\n\r\n        store.dispatch({\r\n            type: actionType.LOG_IN,\r\n            // mainView: mainViewType.MainPage\r\n            loginId: '',\r\n            logged: false\r\n        });\r\n    }\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState({\r\n            drawerOpen: true\r\n        })\r\n    };\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState({\r\n            drawerOpen: false\r\n        })\r\n    };\r\n\r\n    drawer = ()=> (\r\n        <div style={{width: '240px'}}\r\n            role=\"presentation\"\r\n            onClick={this.handleDrawerClose.bind(this)}\r\n            onKeyDown={this.handleDrawerClose.bind(this)}>\r\n          <Divider />\r\n          <List>\r\n              <ListItem>\r\n                <NavLink exact to=\"/\"\r\n                        onClick={() => {\r\n                            console.log(\"Home NavLink onClick\");\r\n                            this.setMainView(mainViewType.MainPage);\r\n                        }}\r\n                >\r\n                    Home\r\n                </NavLink>\r\n              </ListItem>\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n              <ListItem><a href=\"/tourlist/jeju/1\">제주</a></ListItem>\r\n              <ListItem><a href=\"/tourlist/jocheon/1\">조천</a></ListItem>\r\n              <ListItem><a href=\"/tourlist/gujwa/1\">구좌</a></ListItem>\r\n              <ListItem><a href=\"/tourlist/sungsan/1\">성산</a></ListItem>\r\n              <ListItem><a href=\"/tourlist/pyoseon/1\">표선</a></ListItem>\r\n              <ListItem><a href=\"/tourlist/namwon/1\">남원</a></ListItem>\r\n              <ListItem><a href=\"/tourlist/seogwipo/1\">서귀포</a></ListItem>\r\n              <ListItem><a href=\"/tourlist/andeok/1\">안덕</a></ListItem>\r\n              <ListItem><a href=\"/tourlist/daejung/1\">대정</a></ListItem>\r\n              <ListItem><a href=\"/tourlist/hangyeong/1\">한경</a></ListItem>\r\n              <ListItem><a href=\"/tourlist/hanrim/1\">한림</a></ListItem>\r\n              <ListItem><a href=\"/tourlist/aewol/1\">애월</a></ListItem>\r\n              <ListItem><a href=\"/tourlist/udo/1\">우도</a></ListItem>\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n              <ListItem><a href=\"/share/1\">맛집 공유</a></ListItem>\r\n              <ListItem><a href=\"/shareplan\">일정 공유</a></ListItem>\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n              <ListItem><a href=\"/reservation\">항공 / 렌터카예약</a></ListItem>\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n              <ListItem><a href=\"/notice\">공지사항</a></ListItem>\r\n          </List>\r\n          <Divider/>\r\n          <List>\r\n              <ListItem><a href=\"/\" onClick={\r\n                                ()=>{\r\n                                    console.log(\"Logout NavLink onClick\");\r\n                                    this.setMainView(mainViewType.MainPage);\r\n                                    this.setLogOut();\r\n                                }\r\n                            }>Logout</a></ListItem>\r\n          </List>\r\n        </div>\r\n      );\r\n\r\n    render() {\r\n        // console.log(\"메뉴에서 스토어 상태 : \" + store.getState().loginId);\r\n        // console.log(\"메뉴에서 스토어 로그인 상태 : \" + store.getState().logged);\r\n        // 부모컴포넌트(App->HeaderComp)에서 받아온 logged, onLogout을 통해 로그인 전에는 '로그인'을 로그인 후에는 '로그아웃'으로 글씨 변경\r\n        // 로그아웃일 경우 onLogout함수를 통해 logged를 다시 false로 바꿔준다.\r\n        // 부모컴포넌트가 HeaderComp->App이므로 props를 통해 value를 전달받을 수 있다. 그러나 Login컴포넌트의경우는 여러번 전달해야함.\r\n        // 따라서 전역적인 상태가 필요하다.\r\n\r\n\r\n        // let {logged} = this.props;\r\n        // console.log(\"Menu render \", this.props);\r\n\r\n        var className_div_menu = `${this.state.type} menu`;\r\n\r\n        var tag = document.body.offsetWidth > 450?\r\n            <div className={className_div_menu}>\r\n            <ul className=\"menu\">\r\n                <li className=\"logo\">\r\n                    <NavLink exact to=\"/\"\r\n                            onClick={() => {\r\n                                console.log(\"Home NavLink onClick\");\r\n                                this.setMainView(mainViewType.MainPage);\r\n                            }}\r\n                    >\r\n                        Home\r\n                    </NavLink>\r\n                </li>\r\n\r\n                {/* <li>\r\n                    <NavLink exact to=\"/admin\"\r\n                            onClick={() => {\r\n                                console.log(\"Admin NavLink onClick\");\r\n                                this.setMainView(mainViewType.Admin);\r\n                            }}\r\n                    >Admin</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink exact to=\"/join\"\r\n                            onClick={() => {\r\n                                console.log(\"Join NavLink onClick\");\r\n                                this.setMainView(mainViewType.JoinForm);\r\n                            }}\r\n                    >Join</NavLink>\r\n                </li> */}\r\n\r\n                <li className=\"dropdown\">\r\n                    <a className=\"dropdownTitle\">Tour</a>\r\n                        {/*<div class=\"dropdown-content\" >*/}\r\n                        <div className=\"dropdown-content\" >\r\n                            <a href=\"/tourlist/jeju/1\">제주</a>\r\n                            <a href=\"/tourlist/jocheon/1\">조천</a>\r\n                            <a href=\"/tourlist/gujwa/1\">구좌</a>\r\n                            <a href=\"/tourlist/sungsan/1\">성산</a>\r\n                            <a href=\"/tourlist/pyoseon/1\">표선</a>\r\n\r\n                            <a href=\"/tourlist/namwon/1\">남원</a>\r\n                            <a href=\"/tourlist/seogwipo/1\">서귀포</a>\r\n                            <a href=\"/tourlist/andeok/1\">안덕</a>\r\n                            <a href=\"/tourlist/daejung/1\">대정</a>\r\n                            <a href=\"/tourlist/hangyeong/1\">한경</a>\r\n\r\n                            <a href=\"/tourlist/hanrim/1\">한림</a>\r\n                            <a href=\"/tourlist/aewol/1\">애월</a>\r\n                            <a href=\"/tourlist/udo/1\">우도</a>\r\n                        </div>\r\n                </li>\r\n                {/* <li>\r\n                <NavLink exact to=\"/share\"\r\n                            onClick={() => {\r\n                                console.log(\"ShareBoard NavLink onClick\");\r\n                                this.setMainView(mainViewType.ShareBoard);\r\n                            }}\r\n                    >Share</NavLink>\r\n                </li> */}\r\n                <li className=\"dropdown\">\r\n                    <a className=\"dropdownTitle\">Share</a>\r\n                        <div className=\"dropdown-content\" >\r\n                            <a href=\"/share/1\">맛집 공유</a>\r\n                            <a href=\"/shareplan\">일정 공유</a>\r\n                        </div>\r\n                </li>\r\n                <li className=\"dropdown\">\r\n                    <a className=\"dropdownTitle\">Reservation</a>\r\n                        <div className=\"dropdown-content\" >\r\n                            <a href=\"/reservation\">Air</a>\r\n                            <a href=\"/carReservation\">Rentcar</a>\r\n                            <a href=\"/shipReservation\">Ship</a>\r\n                        </div>\r\n                    {/* <NavLink exact to=\"/reservation\"\r\n                            onClick={() => {\r\n                                console.log(\"Reservation NavLink onClick\");\r\n                                this.setMainView(mainViewType.Reservation);\r\n                            }}\r\n                    >Reservation</NavLink> */}\r\n                </li>\r\n                <li>\r\n                    <NavLink exact to=\"/notice\"\r\n                            onClick={() => {\r\n                                console.log(\"Notice NavLink onClick\");\r\n                                this.setMainView(mainViewType.Notice);\r\n                            }}\r\n                    >Notice</NavLink>\r\n                </li>\r\n                {this.state.logged ?\r\n                    <li className=\"dropdown\">\r\n                        <a className=\"dropdownTitle\">My</a>\r\n                        <div className=\"dropdown-content\" >\r\n                            <a href=\"/mypage\">MyPage</a>\r\n                            <a href=\"/\" onClick={\r\n                                ()=>{\r\n                                    console.log(\"Logout NavLink onClick\");\r\n                                    this.setMainView(mainViewType.MainPage);\r\n                                    this.setLogOut();\r\n                                }\r\n                            }>Logout</a>\r\n\r\n                        </div>\r\n                    </li>:\r\n                    <li>\r\n                        <NavLink exact to=\"/login\"\r\n                                onClick={() => {\r\n                                    console.log(\"Login NavLink onClick\");\r\n                                    this.setMainView(mainViewType.Login);\r\n                                }}\r\n                        >Login</NavLink>\r\n                    </li>\r\n                    }\r\n                </ul>\r\n            </div>:\r\n            // 모바일 메누\r\n            <div className={className_div_menu}>\r\n                <ul className=\"mobilemenu\">\r\n                <li>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={this.handleDrawerOpen.bind(this)}\r\n                                edge=\"start\"\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <SwipeableDrawer\r\n                                anchor='left'\r\n                                open={this.state.drawerOpen}\r\n                                onClose={this.handleDrawerClose.bind(this)}\r\n                                onOpen={this.handleDrawerOpen.bind(this)}\r\n                            >\r\n                                {this.drawer()}\r\n                            </SwipeableDrawer>\r\n                        </li>\r\n                        <li style={{textAlign: 'center'}}>Title</li>\r\n                        {this.state.logged ?\r\n                            <li>\r\n                                <NavLink exact to=\"/mypage\"\r\n                                        onClick={() => {\r\n                                            console.log(\"mypage NavLink onClick\");\r\n                                            this.setMainView(mainViewType.MyPage);\r\n                                        }}\r\n                                >\r\n                                    <IconButton >\r\n                                        <AccountCircleIcon/>\r\n                                    </IconButton>\r\n                                </NavLink>\r\n                            </li>:\r\n                            <li>\r\n                                <NavLink exact to=\"/login\"\r\n                                        onClick={() => {\r\n                                            console.log(\"Login NavLink onClick\");\r\n                                            this.setMainView(mainViewType.Login);\r\n                                        }}\r\n                                >\r\n                                    <IconButton >\r\n                                        <AccountCircleIcon/>\r\n                                    </IconButton>\r\n                                </NavLink>\r\n                            </li>\r\n                            }\r\n                </ul>\r\n            </div>\r\n            ;\r\n        return (\r\n            <div>\r\n                {tag}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;\r\n\r\n\r\n                {/*<hr style={{clear: 'both'}}/>*/}\r\n\r\n                {/* <Route exact path=\"/\"> */}\r\n                    {/*<Home></Home>*/}\r\n                {/* </Route> */}\r\n                {/* <Route exact path=\"/Reservation/:name?\"> */}\r\n                    {/*<Reservation></Reservation>*/}\r\n                {/* </Route> */}\r\n                 {/* <Route exact path=\"/Notice/:name?\"> */}\r\n                    {/*<Notice></Notice>*/}\r\n                {/* </Route> */}\r\n\r\n                {/* <Route exact path=\"/TourList/:name?\" component={TourList}></Route> */}\r\n                {/* <Route exact path=\"/TourList/:name?\" component={TourPageComp}></Route> */}\r\n                {/* <Route exact path=\"/Tour/:name?\" component={Tour}></Route> */}\r\n\r\n                {/* <Route exact path=\"/ShareBoard/:name?\"> */}\r\n                    {/*<ShareBoard></ShareBoard>*/}\r\n                {/* </Route> */}\r\n                {/* <Route exact path=\"/MyPage/:name?\" component={MyPage}> */}\r\n                    {/*<MyPage></MyPage>*/}\r\n                {/* </Route>\r\n                <Route exact path=\"/Login/:name?\"> */}\r\n                    {/*<Login></Login>*/}\r\n                {/* </Route>\r\n                <Route exact path=\"/Admin:name?\"> */}\r\n                    {/*<Admin></Admin>*/}\r\n                {/* </Route> */}\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\footer\\FooterComp.js",["468","469","470","471","472","473","474","475","476"],"import React, {Component} from \"react\";\r\nimport Logo2 from \"../../image/logo2.png\";\r\nimport WaveBorder from \"../main/mainpage/WaveBorder\";\r\nimport {createMuiTheme, MuiThemeProvider, WithStyles} from \"@material-ui/core\";\r\nimport {ThemeProvider} from 'styled-components';\r\nimport theme from \"../main/mainpage/theme\";\r\nimport PropTypes from \"prop-types\";\r\nimport styledComponents from \"styled-components\";\r\n\r\nclass FooterComp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // console.log(\"FooterComp constructor\", props);\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"FooterComp render()\", this.props);\r\n        return (\r\n            <WaveBorder upperColor=\"#FFFFFF\" lowerColor=\"rgba(45,85,170,.2)\" animationNegativeDelay={4}>\r\n                {/* <div className=\"footerComp\">\r\n                    <hr/>\r\n                    <img src={Logo2}\r\n                        style={{width: \"150px\"}}\r\n                        alt=\"logo2\"/>\r\n                    <br/>\r\n                    <p>\r\n                        (주)멘도롱소랑 | 경기도 서초구 강남대로 459 (서초동 1300-34)<br/>\r\n                        사업자 번호 147-14-12345 | 전화번호:02-123-1234 | 팩스 02-1234-1234 | 이메일 help@naver.com\r\n                    </p>\r\n                </div> */}\r\n            </WaveBorder>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FooterComp;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\reservation\\RentCarPageComp.js",[],"C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\MainPageComp.js",["477","478"],"import React, {Component} from \"react\";\r\nimport SearchComp from \"./SearchComp\";\r\nimport HotPlaceComp from \"./HotPlaceComp\";\r\nimport NoticeMiniComp from \"./NoticeMiniComp\";\r\nimport ShareBoardMiniComp from \"./ShareBoardMiniComp\";\r\nimport axios from \"axios\";\r\nimport {URL} from \"../../../redux/config\";\r\nimport \"./MainPageComp.css\"\r\nimport MainPhotoComp from \"./MainPhotoComp\";\r\nimport MyPlanComp from \"./MyPlanComp\";\r\nimport EtcBoardComp from \"./EtcBoardComp\";\r\n\r\nclass MainPageComp extends Component {\r\n\r\n    /**\r\n     * props\r\n     * setMainView={this.props.setMainView}\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n        // console.log(\"MainPageComp constructor\", props);\r\n\r\n        this.state = {\r\n            shareBoardList: [],\r\n            noticeList: [],\r\n        }\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getNoticeList.bind(this)();\r\n        this.getShareBoardList.bind(this)();\r\n        window.scrollTo(0,0);\r\n    }\r\n\r\n    getNoticeList = () => {\r\n        // console.log(\"getNoticeList()\");\r\n        var url = URL + \"/notice/list\";\r\n\r\n        axios.get(url\r\n        ).then((res) => {\r\n            // console.log(\"getNoticeList success : \", res);\r\n            this.setState({\r\n                noticeList: res.data\r\n            });\r\n        }).catch((error) => {\r\n            // console.log(\"getNoticeList error\", error);\r\n        });\r\n    }\r\n\r\n    getShareBoardList = () => {\r\n        // console.log(\"getShareBoardList()\");\r\n        var url = URL + \"/share/list?start=0&perPage=5\";\r\n\r\n        axios.get(url\r\n        ).then((res) => {\r\n            // console.log(\"getShareBoardList success : \", res);\r\n            this.setState({\r\n                shareBoardList: res.data\r\n            });\r\n        }).catch((error) => {\r\n            // console.log(\"getShareBoardList error\", error);\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * MainPhotoComp\r\n     * SearchComp | MyPlanComp\r\n     * HotPlaceComp\r\n     * EtcBoardComp\r\n     */\r\n    render() {\r\n        // console.log(\"MainPageComp render()\", this.props);\r\n        return (\r\n            <div className=\"mainPageComp\">\r\n                <MainPhotoComp/>\r\n                <div className=\"search-myplan\">\r\n                    <SearchComp history={this.props.history}/>\r\n                    <MyPlanComp/>\r\n                </div>\r\n                <HotPlaceComp history={this.props.history}/>\r\n                <EtcBoardComp/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MainPageComp;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\SearchResultComp.js",["479","480"],"import React, {Component} from \"react\";\r\nimport store from \"../../../redux/store\";\r\nimport {actionType, mainViewType, URL} from \"../../../redux/config\";\r\nimport axios from \"axios\";\r\nimport Tourintro from \"../tour/Tourintro\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ItemComp from \"../tour/ItemComp\";\r\nimport PageComp from \"../tour/PageComp\";\r\n\r\nclass SearchResultComp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(props);\r\n\r\n        let {category, searchVal} = store.getState().mainSearch;\r\n\r\n        this.state = {\r\n            area: \"jeju\", //props.match.params.name,\r\n            spotList: [],\r\n            pageNum: props.match.params.pageNum,\r\n            category: category,\r\n            searchVal: searchVal,\r\n        }\r\n\r\n        this.currentPage = this.state.pageNum;\r\n        this.totalCount = 0;\r\n        this.perPage = 12; // 한페이지당 보여질 글의 갯수\r\n        this.perBlock = 5; // 한블럭당 출력할 페이지의 갯수\r\n        this.totalPage = 0; // 총 페이지의 갯수\r\n        this.startPage = 0; // 각 블럭당 시작 페이지 번호\r\n        this.endPage = 0; // 각 블럭당 끝페이지 번호\r\n        this.start = 0; // 각 블럭당 불러올 글의 시작번호\r\n        this.end = 0; // 각 블럭당 글의 끝번호\r\n        this.no = 0; // 각 페이지에서 출력할 시작번호\r\n\r\n        this.select = category;\r\n    }\r\n\r\n\r\n    /*\r\n    @GetMapping(\"/spot/searchlist\")\r\n    public List<SpotlistDto> getSearchList(@RequestParam int start, @RequestParam int perPage,\r\n                                           @RequestParam String category, String search) {\r\n        System.out.println(\"start:\" + start);\r\n        System.out.println(\"perPage:\" + perPage);\r\n        System.out.println(\"category:\" + category);\r\n        System.out.println(\"search:\" + search);\r\n        return mapper.getSearchList(start, perPage, category, search);\r\n    }\r\n     */\r\n    getList = () => {\r\n        // 나머지가 있을 경우에는 1페이지 더 추가 (예 : 총글수가 9이고 한페이지당 2개씩 볼 경우)\r\n        this.totalPage = Math.floor(this.totalCount / this.perPage)\r\n            + (this.totalCount % this.perPage > 0 ? 1 : 0);\r\n\r\n        // 시작페이지와 끝페이지 구하기\r\n        this.startPage = Math.floor((this.currentPage - 1) / this.perBlock) * this.perBlock + 1;\r\n        this.endPage = this.startPage + this.perBlock - 1;\r\n\r\n        // 마지막 블럭은 endPage를 totalPage로 해놔야 한다.\r\n        if (this.endPage > this.totalPage) {\r\n            this.endPage = this.totalPage;\r\n        }\r\n\r\n        // mysql은 첫 글이 0번이므로 +1 안해도됨 (오라클은 1번)\r\n        this.start = (this.currentPage - 1) * this.perPage;\r\n        this.no = this.totalCount - (this.currentPage - 1) * this.perPage;\r\n\r\n        let url = URL + \"/spot/searchlist\" +\r\n            \"?start=\" + this.start +\r\n            \"&perPage=\" + this.perPage +\r\n            \"&category=\" + this.select +\r\n            \"&search=\" + this.state.searchVal;\r\n\r\n        console.log(url);\r\n\r\n        axios.get(url\r\n        ).then(res => {\r\n            console.log(\"res:\", res);\r\n            this.setState({\r\n                spotList: res.data\r\n            });\r\n        }).catch(err => {\r\n            console.log(\"spotlist getList 오류 : \", err);\r\n        });\r\n    }\r\n\r\n\r\n    /*\r\n        @GetMapping(\"/spot/searchcount\")\r\n        public int getSearchTotalCount(@RequestParam String category, @RequestParam String search) {\r\n            return mapper.getSearchTotalCount(category, search);\r\n        }\r\n     */\r\n    getTotalCount = () => {\r\n        let url = URL + \"/spot/searchcount\" +\r\n            \"?category=\" + this.select +\r\n            \"&search=\" + this.state.searchVal;\r\n\r\n        console.log(url);\r\n\r\n        axios.get(url\r\n        ).then(res => {\r\n            console.log(\"res:\", res);\r\n            this.totalCount = res.data;\r\n            this.getList();\r\n        }).catch(err => {\r\n            console.log(\"err:\", err);\r\n        });\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        window.scrollTo(0, 0);\r\n        this.getTotalCount();\r\n    }\r\n\r\n\r\n    selectChange = (e) => {\r\n        this.select = e.target.value;\r\n        this.getList();\r\n    }\r\n\r\n\r\n    render() {\r\n        // console.log(\"TourPageComp render()\", this.props);\r\n        return (\r\n            <div>\r\n                <Tourintro area={this.state.area}\r\n                           type=\"search\"\r\n                />\r\n                <br/><br/><br/>\r\n\r\n                {/* list 출력 */}\r\n                <div className=\"tourIntroTitle\">\r\n                    <span className=\"tourIntroTitleContent\" style={{backgroundColor: 'white', color: '#036E38'}}>\r\n                        &nbsp;&nbsp;&nbsp;\"{this.state.searchVal}\" 의 검색 결과&nbsp;&nbsp;&nbsp;\r\n                    </span>\r\n                </div>\r\n                <div style={{width: '100%'}}>\r\n                    <FormControl id=\"selectTourList\">\r\n                        <InputLabel>category</InputLabel>\r\n                        <Select native\r\n                                value={this.select}\r\n                                onChange={this.selectChange.bind(this)}\r\n                        >\r\n                            <option value=\"all\">All</option>\r\n                            <option value=\"area\">Location</option>\r\n                            <option value=\"spot\">Spot</option>\r\n                            <option value=\"tag\">Tag</option>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <br/><br/>\r\n\r\n                    <Box display=\"flex\"\r\n                         flexWrap=\"wrap\"\r\n                         p={1}\r\n                         m={1}\r\n                         bgcolor=\"background.paper\"\r\n                         justifyContent=\"center\"\r\n                         css={{maxWidth: '100%'}}\r\n                    >\r\n                        {this.state.spotList.map((row, idx) => (\r\n                            <ItemComp row={row}\r\n                                      key={idx}\r\n                                      history={this.props.history}\r\n                                      getList={this.getList.bind(this)}\r\n                            ></ItemComp>\r\n                        ))}\r\n                    </Box>\r\n                </div>\r\n                <br/><br/>\r\n\r\n                {/* 페이징 */}\r\n                <PageComp currentPage={this.currentPage}\r\n                          startPage={this.startPage}\r\n                          endPage={this.endPage}\r\n                          totalPage={this.totalPage}\r\n                          area={this.state.area}\r\n                          type=\"search\"\r\n                          category={this.state.category}\r\n                          search={this.state.searchVal}\r\n                ></PageComp>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchResultComp;\r\n\r\n/*\r\nexport default function SearchResultComp(props) {\r\n    console.log(\"SearchResultComp props\", props);\r\n    var mainSearch = store.getState().mainSearch;\r\n    console.log(mainSearch);\r\n    var category = mainSearch.category;\r\n    var searchVal = mainSearch.searchVal;\r\n    var searchResultDataList = mainSearch.searchResultDataList;\r\n    // console.log(searchResultDataList)\r\n\r\n    const getSearchResultDataList = () => {\r\n        return searchResultDataList.map((value, index) => {\r\n            return (\r\n                <div>\r\n                    {index} , {value.title}<br/>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n            [{category}] {searchVal} 로 검색한 결과.<br/>\r\n            {getSearchResultDataList()}\r\n        </div>\r\n    );\r\n}\r\n*/\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\notice\\NoticeContent.js",[],"C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\notice\\NoticePageComp.js",["481","482","483"],"import React, {Component} from \"react\";\r\nimport PlusImg from \"../../../image/plus.png\";\r\nimport BoardItem from \"./BoardItem\";\r\nimport axios from 'axios';\r\nimport './NoticeCss.css';\r\nimport {URL} from '../../../redux/config';\r\nimport BoardForm from './BoardForm';\r\nimport NoticeContent from './NoticeContent';\r\n\r\nclass NoticePageComp extends Component {\r\n    state={\r\n        maxNo:7,\r\n        listData:[]\r\n        \r\n    }\r\n\r\n    list=()=>{\r\n        let url= URL + \"/notice/list\";\r\n        console.log(url);\r\n\r\n        axios.get(url)\r\n        .then(res=>{\r\n            this.setState({\r\n                listData:res.data\r\n            })\r\n        })\r\n    }\r\n\r\n  \r\n\r\n    componentWillMount()\r\n    {\r\n        // this.onSelectData();\r\n        this.list();\r\n    }\r\n    render() {\r\n        const {boards}=this.state;\r\n\r\n        return (\r\n            <div>\r\n                {/*<a href=\"#NoticeMiniComp\">{this.props.name}</a>*/}\r\n                <BoardForm list={this.list.bind(this)}/>\r\n                <br/>\r\n                {this.props.name}<br/>\r\n                <button onClick={\r\n                    ()=>{\r\n\r\n                         this.props.history.push(\"/notice/insert/\"+this.props.row);\r\n                    }\r\n                }>\r\n                    <img src={PlusImg}\r\n                         style={{width: \"50px\"}}\r\n                    />\r\n                </button>\r\n                <table style={{width:'400px'}} id=\"noticeTable\">\r\n                    <caption><b>공지사항</b></caption>\r\n                    <thead>\r\n                    <tr style={{backgroundColor:'orange'}}>\r\n                        <th style={{width:'60px'}}>#</th>\r\n                        <th style={{width:'200px'}}>제목</th>\r\n                        <th style={{width:'50px'}}>작성일</th>\r\n                        <th style={{width:'50px'}}>⭐</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                      this.state.listData.map((row,idx)=>(\r\n                        <BoardItem row={row} key={idx} idx={idx}\r\n                        history={this.props.history}/>\r\n                        ))\r\n                    }\r\n                    {/* <tr>\r\n                        <td>\r\n                            <a href=\"#\">\r\n                                <span>1제목 입니다.</span>\r\n                            </a>\r\n                        </td>\r\n                        <td>1작성일 입니다.</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <a href=\"#\">\r\n                                <span>2제목 입니다.</span>\r\n                            </a>\r\n                        </td>\r\n                        <td>2작성일 입니다.</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <a href=\"#\">\r\n                                <span>3제목 입니다.</span>\r\n                            </a>\r\n                        </td>\r\n                        <td>3작성일 입니다.</td>\r\n                    </tr> */}\r\n                    </tbody>\r\n                </table>\r\n\r\n                    {/* <NoticeContent/> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default NoticePageComp;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\notice\\Noticeinsert.js",[],"C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\shareboard\\ShareBoardUpdateForm.js",["484","485","486","487"],"import React, {Component} from 'react';\r\nimport {Route, Link} from \"react-router-dom\";\r\nimport ShareBoardPageComp from \"./ShareBoardPageComp\";\r\n// import ShareBoardFormComp from \"./ShareBoardFormComp\";\r\nimport \"./Share.css\";\r\nimport axios from \"axios\";\r\nimport {URL} from \"../../../redux/config\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { MDBBtn } from \"mdbreact\";\r\n\r\nclass ShareBoardUpdateForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"ShareBoardUpdateForm constructor\", this.props);\r\n        this.num = this.props.match.params.num;\r\n        this.state = {\r\n            photoname: ''\r\n        }\r\n    }\r\n\r\n\r\n    //서버에 이미지 업로드하는 함수\r\n    uploadImage = (e) => {\r\n        const uploadFile = e.target.files[0];\r\n        const upload = new FormData();\r\n        upload.append(\"uploadFile\", uploadFile);\r\n\r\n        let url = URL + \"/share/upload\";\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: upload,\r\n            headers: {'Content-Type': 'multipart/form-data'}\r\n        }).then(res => {\r\n            this.setState({\r\n                photoname: res.data.photoname\r\n            })\r\n        }).catch(err => {\r\n            console.log(\"shareboard upload 오류 : \" + err);\r\n        })\r\n\r\n    }\r\n\r\n    //num 에 해당하는 데이타 가져오기\r\n    onSelectData = () => {\r\n        let url = URL + \"/share/select?num=\" + this.num;\r\n        axios.get(url)\r\n            .then(res => {\r\n                this.refs.subject.value = res.data.subject;\r\n                this.refs.addr.value = res.data.addr;\r\n                this.refs.content.value = res.data.content;\r\n                //이미지명은 state 이므로\r\n                this.setState({\r\n                    photoname: res.data.photoname\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.onSelectData();\r\n    }\r\n\r\n\r\n    onDataUpdate = (resolve) => {\r\n        //입력값 변수에 저장하기\r\n        let subject = this.refs.subject.value;\r\n        let addr = this.refs.addr.value;\r\n        let content = this.refs.content.value;\r\n        let star = 0;\r\n\r\n        //db 에 update\r\n        let url = URL + \"/share/update\";\r\n        let num = this.num;\r\n        axios.post(url, {num, subject, addr, content, star}\r\n        ).then(res => {\r\n            //값 지우기\r\n            this.refs.subject.value = '';\r\n            this.refs.addr.value = '';\r\n            this.refs.content.value = '';\r\n\r\n            //이미지도 지우기\r\n            this.setState({\r\n                photoname: ''\r\n            });\r\n\r\n            if (resolve != null) {\r\n                resolve();\r\n            }\r\n        }).catch(err => {\r\n            console.log(\"수정시 오류남:\" + err);\r\n        })\r\n\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        let _promise = new Promise((resolve, reject) => {\r\n            this.onDataUpdate(resolve);\r\n        });\r\n\r\n        _promise.then(() => {\r\n            alert('업데이트 하였습니다. 목록확인하세요 ' + this.state.subject);\r\n        }).then(() => {\r\n            this.props.history.push(\"/share\");\r\n        });\r\n    }\r\n\r\n    render() {\r\n        console.log(\"ShareBoardUpateForm render()\", this.props);\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div id=\"ShareFormSubject\">\r\n                <h3 id=\"sharesubject\">맛집공유 수정</h3>\r\n                </div>\r\n\r\n\r\n                <table id=\"ShareFormAll\">\r\n                    <tr>\r\n                        <th id=\"shareth\" style={{verticalAlign:'middle'}}><span>맛집이름 </span></th>\r\n                        <td id=\"sharetd\">\r\n                            <input className=\"form-control\" type=\"text\" style={{width: '200px', height: '50px'}}\r\n                                   placeholder=\"맛집이름을 적어주세요\" ref=\"subject\"/>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th id=\"shareth\" style={{verticalAlign:'middle'}}><span >맛집주소 </span></th>\r\n                        <td id=\"sharetd\">\r\n                            <input className=\"form-control\" type=\"text\" style={{width: '400px', height: '50px'}}\r\n                                   placeholder=\"맛집주소를 적어주세요\" ref=\"addr\"/>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th id=\"shareth\"  style={{verticalAlign:'middle'}}><span>이미지 </span></th>\r\n                        <td id=\"sharetd\">\r\n                            <input type=\"file\" onChange={this.uploadImage.bind(this)}/>\r\n                            {/* <img src={url + this.state.photoname} alt=\"이미지없음\" style={{width:'200px',height:'300px'}}/> */}\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th id=\"shareth\" style={{verticalAlign:'middle'}}><span>리뷰 </span></th>\r\n                        <td id=\"sharetd\">\r\n                         <textarea maxLength=\"1000\" className=\"form-control\"\r\n                                   style={{width: '600px', height: '150px', resize: 'none',cursor:'auto'}}\r\n                                   ref=\"content\" placeholder=\"리뷰를 입력하세요\">\r\n                         </textarea>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th id=\"shareth\" style={{verticalAlign:'middle'}}><span>평가 </span></th>\r\n                        \r\n                        <td id=\"sharetd\">\r\n                        <Box style={{marginTop:\"25px\"}} component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n                        <Rating\r\n                         name=\"customized-empty\"\r\n                         defaultValue={1}\r\n                         //precision={0.5}\r\n                         emptyIcon={<StarBorderIcon fontSize=\"inherit\" />}\r\n                         onChange={\r\n                            (e)=>{\r\n                                this.setState({\r\n                                    star : e.target.value\r\n                                })\r\n                            }\r\n                        }\r\n                         />\r\n                        </Box>\r\n                        </td>\r\n                    </tr>\r\n\r\n                </table>\r\n                \r\n                <div id=\"ShareFormButton\">\r\n                <MDBBtn size=\"sm\" color=\"deep-orange\" \r\n                        style={{color:'white',cursor:'pointer'}}\r\n                        onClick={this.handleSubmit.bind(this)}>\r\n                     <b style={{fontSize:'15px'}}>수정하기</b>\r\n                </MDBBtn>\r\n\r\n                <MDBBtn size=\"sm\" color=\"deep-orange\" \r\n                    style={{color:'white',cursor:'pointer'}}\r\n                    onClick={() => {\r\n                        this.props.history.goBack();\r\n                    }}>\r\n                     <b style={{fontSize:'15px'}}>목록</b>\r\n                </MDBBtn>\r\n             \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShareBoardUpdateForm;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\shareboard\\ShareBoardFormComp.js",["488","489","490"],"import React, {Component} from \"react\";\r\nimport {Route, Link} from \"react-router-dom\";\r\nimport ShareBoardPageComp from \"./ShareBoardPageComp\";\r\nimport axios from \"axios\";\r\nimport {URL} from '../../../redux/config';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { MDBBtn } from \"mdbreact\";\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport \"./Share.css\";\r\n\r\n\r\n\r\nconst StyledRating = withStyles({\r\n    iconFilled: {\r\n      color: '#ff6d75',\r\n    },\r\n    iconHover: {\r\n      color: '#ff3d47',\r\n    },\r\n  })(Rating);\r\n  \r\n\r\nclass ShareBoardFormComp extends Component {\r\n\r\n    state = {\r\n        photoname: ''\r\n        \r\n        \r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"ShareBoardFormComp constructor\", props);\r\n\r\n    }\r\n\r\n    //서버에 이미지 업로드하는 함수\r\n    uploadImage = (e) => {\r\n        const uploadFile = e.target.files[0];\r\n        const upload = new FormData();\r\n        upload.append(\"uploadFile\", uploadFile);\r\n\r\n        let url = URL + \"/share/upload\";\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: upload,\r\n            headers: {'Content-Type': 'multipart/form-data'}\r\n        }).then(res => {\r\n            this.setState({\r\n                photoname: res.data.photoname\r\n            })\r\n        }).catch(err => {\r\n            console.log(\"shareboard upload 오류 : \" + err);\r\n        })\r\n\r\n    }\r\n\r\n    onDataInsert = (resolve = null) => {\r\n        //입력값 state 변수에 저장하기\r\n        let subject = this.refs.subject.value;\r\n        let addr = this.refs.addr.value;\r\n        let content = this.refs.content.value;\r\n        let star = 0;\r\n\r\n        console.log(subject + \", \" + addr + \", \" + content);\r\n\r\n        //db 에 insert\r\n        let url = URL + \"/share/insert\";\r\n\r\n        axios.post(url, {subject, addr, content, star}\r\n        ).then(res => {\r\n            //값 지우기\r\n            this.refs.subject.value = '';\r\n            this.refs.addr.value = '';\r\n            this.refs.content.value = '';\r\n\r\n            //이미지도 지우기\r\n            this.setState({\r\n                photoname: ''\r\n            });\r\n\r\n            if (resolve != null) {\r\n                resolve();\r\n            }\r\n        }).catch(err => {\r\n            console.log(\"shareboard insert 오류 : \" + err);\r\n        })\r\n\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        let _promise = new Promise((resolve, reject) => {\r\n            this.onDataInsert(resolve);\r\n        });\r\n\r\n        _promise.then(() => {\r\n            alert('공유하였습니다. 목록확인하세요 ' + this.state.subject);\r\n        }).then(() => {\r\n            this.props.history.push(\"/share\");\r\n        });\r\n    }\r\n\r\n    render() {\r\n        //const url=\"http://localhost:9002/photo/\";\r\n        console.log(\"ShareBoardFormComp render()\", this.props);\r\n\r\n     \r\n            \r\n\r\n        return (\r\n            <div>\r\n                <div id=\"ShareFormSubject\">\r\n                <h3 id=\"sharesubject\">맛집공유</h3>\r\n                </div>\r\n\r\n             \r\n                <table id=\"ShareFormAll\">\r\n                    <tr>\r\n                        <th id=\"shareth\" style={{verticalAlign:'middle'}}><span>맛집이름 </span></th>\r\n                        <td id=\"sharetd\">\r\n                            <input className=\"form-control\" type=\"text\" style={{width: '200px', height: '50px'}}\r\n                                   placeholder=\"맛집이름을 적어주세요\" ref=\"subject\"/>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th id=\"shareth\" style={{verticalAlign:'middle'}}><span >맛집주소 </span></th>\r\n                        <td id=\"sharetd\">\r\n                            <input className=\"form-control\" type=\"text\" style={{width: '400px', height: '50px'}}\r\n                                   placeholder=\"맛집주소를 적어주세요\" ref=\"addr\"/>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th id=\"shareth\"  style={{verticalAlign:'middle'}}><span>이미지 </span></th>\r\n                        <td id=\"sharetd\">\r\n                            <input type=\"file\" onChange={this.uploadImage.bind(this)}/>\r\n                            {/* <img src={url + this.state.photoname} alt=\"이미지없음\" style={{width:'200px',height:'300px'}}/> */}\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th id=\"shareth\" style={{verticalAlign:'middle'}}><span>리뷰 </span></th>\r\n                        <td id=\"sharetd\">\r\n                         <textarea maxLength=\"1000\" className=\"form-control\"\r\n                                   style={{width: '600px', height: '150px', resize: 'none',cursor:'auto'}}\r\n                                   ref=\"content\" placeholder=\"리뷰를 입력하세요\">\r\n                         </textarea>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th id=\"shareth\" style={{verticalAlign:'middle'}}><span>평가 </span></th>\r\n                        \r\n                        <td id=\"sharetd\">\r\n                        <Box style={{marginTop:\"10px\"}}>\r\n                        <Rating\r\n                         \r\n                         defaultValue={0}\r\n                        \r\n                         emptyIcon={<StarBorderIcon fontSize=\"inherit\" />}\r\n                         onChange={\r\n                            (e)=>{\r\n                                this.setState({\r\n                                    star : e.target.value\r\n                                })\r\n                            }\r\n                        }\r\n                         />\r\n                        </Box>\r\n                        </td>\r\n                    </tr>\r\n\r\n                </table>\r\n              \r\n                \r\n                <div id=\"ShareFormButton\">\r\n                <MDBBtn size=\"sm\" color=\"deep-orange\" \r\n                        \r\n                        onClick={this.handleSubmit.bind(this)}>\r\n                     <b style={{fontSize:'15px'}}>공유하기</b>\r\n                </MDBBtn>\r\n                <Link to=\"/share\">\r\n                    <MDBBtn size=\"sm\" color=\"deep-orange\" \r\n                    >\r\n                     <b style={{fontSize:'15px'}}>목록</b>\r\n                    </MDBBtn>\r\n                </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ShareBoardFormComp;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\admin\\MemberListPageComp.js",["491","492"],"import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\nimport RowItem from \"./RowItem\";\r\nimport store from \"../../../redux/store\";\r\nimport { URL, actionType, mainViewType } from \"../../../redux/config\";\r\n\r\nclass MemberListPageComp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"LoginPageComp constructor\", props);\r\n        \r\n        // this.state={\r\n        //     // id:'',  //아이디를 저장하고 있을 state\r\n        //     // password:'',\r\n        //     // pwCheck: \"\",//비밀번호 두개가 일치하는가\r\n        //     // name : \"\",\r\n        //     // birth_date: \"\",\r\n        //     // phone : \"\",\r\n        //     // email : \"\",\r\n        //     // address : \"\",\r\n        //     // idcanUse: false,//중복된 아이디찾기 true여야 로그인가능\r\n\r\n        //     memberData: []\r\n        // }\r\n    }\r\n\r\n    // 스프링에서 목록 가져오기\r\n    list = () => {\r\n        let url = URL + \"/member/list\";\r\n        axios.get(url)\r\n        .then(response=>{\r\n            this.setState({\r\n                memberData:response.data\r\n            })\r\n        }).catch(err=>{\r\n            console.log(\"목록 오류:\"+err);\r\n        })\r\n    }\r\n    \r\n    MEMBERLIST = () => {\r\n        console.log(\"회원목록 보기 dispatch\");\r\n        let url = URL + \"/member/list\";\r\n        axios.get(url)\r\n        .then(response=>{\r\n            this.setState({\r\n                memberData:response.data\r\n            })\r\n        }).catch(err=>{\r\n            console.log(\"목록 오류:\"+err);\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.list(); //처음 시작시 백엔드로부터 데이타 가졍괴\r\n        \r\n        store.dispatch({ type: actionType.MEMBER_LIST });\r\n        store.subscribe(this.MEMBERLIST);\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        console.log(\"MemberListPageComp render()\", this.props);\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <b>회원 목록</b>\r\n                    <div>\r\n                        번호&nbsp;아이디&nbsp;이메일&nbsp;이름&nbsp;이미지&nbsp;휴대폰\r\n                    </div>\r\n                    {/* <div>\r\n                        {\r\n                            this.props.store.memberData.map((row, idx) => (\r\n                                <RowItem row={row} key={idx} />\r\n                            ))\r\n                        }\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MemberListPageComp;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\MypagePageComp.js",["493","494","495","496"],"import React, {Component} from \"react\";\r\nimport MemberUpdateFormComp from \"./MemberUpdateFormComp\";\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport MySchedule from './MySchedule';\r\nimport MyReviwe from './MyReview';\r\nimport MyWishlist from './MyWishlist';\r\nimport './style/MyinfoCss.css';\r\nimport userImg from '../../../image/user.png';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PassCheck from './PassCheck';\r\nimport store from \"../../../redux/store\";\r\n\r\nclass MypagePageComp extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"MypagePageComp constructor\", props);\r\n\r\n        this.state = {\r\n            memberData: [],\r\n            pageNum: '0',\r\n            value: 0,\r\n            wishCount: 0,\r\n            passOk: false\r\n        }\r\n    }\r\n    tabProps = (index) => {\r\n        return {\r\n          id: `simple-tab-${index}`,\r\n          'aria-controls': `simple-tabpanel-${index}`,\r\n        };\r\n      }\r\n      handleChange = (event, newValue) => {\r\n        this.setState({ value: newValue });\r\n      }\r\n    // 스프링에서 목록 가져오기\r\n    // member\r\n    getMyData = () => {\r\n        let url = URL + '/member/getdata?id=' + store.getState().loginId;\r\n        axios.get(url)\r\n            .then(response => {\r\n                this.setState({\r\n                    memberData: response.data\r\n                })\r\n            }).catch(err => {\r\n            console.log(\"목록 오류:\" + err);\r\n        })\r\n\r\n        url = URL + '/wish/wishcount?memId=' + store.getState().loginId;\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    wishCount: res.data\r\n                })\r\n            }).catch(err=>{\r\n                console.log(\"wishlist 일정갯수 가져오기 오류 : \" + err);\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMyData(); //처음 시작시 백엔드로부터 데이타 가져오기\r\n    }\r\n\r\n    passOk=(ok)=>{\r\n        this.setState({\r\n            passOk: ok\r\n        })\r\n        if(ok==false)\r\n            this.getMyData();\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"MypagePageComp render()\", this.props);\r\n        const url = URL + \"/\";\r\n        const userimg = this.state.memberData.photo==\"no\"?userImg:url+this.state.memberData.photo;\r\n        const address = this.state.memberData.addrdetail!==null?\"(\" + this.state.memberData.addrdetail + \")\":\"\";\r\n        const passOkTab = this.state.passOk==true?<MemberUpdateFormComp num={this.state.memberData} passOk={this.passOk.bind(this)} history={this.props.history}/>:<PassCheck passOk={this.passOk.bind(this)}/>;\r\n        \r\n        return (\r\n            <div>\r\n                <div id=\"mypageInfo\" style={{width: '100%', backgroundColor: '#f7f7f7', position: 'relative'}}>\r\n                    <p id=\"mypageInfoTitle\">내 정보 관리</p>\r\n                    <Box\r\n                        display=\"flex\"\r\n                        flexWrap=\"wrap\"\r\n                        // p={1}\r\n                        // m={1}\r\n                        justifyContent=\"center\"\r\n                        width=\"100%\"\r\n                    >\r\n\r\n                        <Box className=\"mypageInfoCol\" width=\"20%\" alignSelf=\"center\">\r\n                            <img src={userimg} alt=\"이미지없음\" id=\"mypageUserImg\"/>\r\n                        </Box>\r\n                        <Box m={1} bgcolor=\"#fff\" width=\"50%\" className=\"mypageInfoCol\">\r\n                            <table>\r\n                                    <tr style={{borderBottom: '1px dotted #eee'}}>\r\n                                        <td>\r\n                                            <span class=\"fas fa-bookmark\"></span>\r\n                                        </td>\r\n                                        <td style={{paddingLeft: '10px'}}>\r\n                                            {this.state.memberData.id}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr style={{borderBottom: '1px dotted #eee'}}>\r\n                                        <td>\r\n                                        <span class=\"fas fa-user-alt\"></span>\r\n                                        </td>\r\n                                        <td style={{paddingLeft: '10px'}}>\r\n                                            {this.state.memberData.name}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr style={{borderBottom: '1px dotted #eee'}}>\r\n                                        <td>\r\n                                        <span class=\"fas fa-phone-alt\"></span>\r\n                                        </td>\r\n                                        <td style={{paddingLeft: '10px'}}>\r\n                                            {this.state.memberData.hp}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr style={{borderBottom: '1px dotted #eee'}}>\r\n                                        <td>\r\n                                            <span class=\"fas fa-envelope-open-text\"></span>\r\n                                        </td>\r\n                                        <td style={{paddingLeft: '10px'}}>\r\n                                            {this.state.memberData.email}@{this.state.memberData.email2}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                        <span class=\"fas fa-home\"></span>\r\n                                        </td>\r\n                                        <td style={{paddingLeft: '10px'}}>\r\n                                            {this.state.memberData.address}<br/>{address}\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                        </Box>\r\n                        <Box width=\"20%\" alignSelf=\"center\">\r\n                            <Box m={1} bgcolor=\"#fff\" className=\"mypageInfoCol\" style={{textAlign: 'center'}}>\r\n                                <span className=\"mypageInfoSubtitle\">일정</span><br/>\r\n                                <span className=\"mypageInfoSubContent\">{this.state.wishCount}</span>\r\n                            </Box>\r\n                            <Box m={1} bgcolor=\"#fff\" className=\"mypageInfoCol\" style={{textAlign: 'center'}}>\r\n                                <span className=\"mypageInfoSubtitle\">공유한 일정</span><br/>\r\n                                <span className=\"mypageInfoSubContent\">0</span>\r\n                            </Box>\r\n                        </Box>\r\n                        \r\n                    </Box>\r\n\r\n                    {/* <table>\r\n                        <tr id=\"mypageInfoRow\" bgcolor=\"#fff\">\r\n                            <td className=\"mypageInfoCol\" style={{width:'20%', textAlign: 'center'}}>\r\n                                <img src={userImg} alt=\"이미지없음\" id=\"mypageUserImg\"/><br/>\r\n                            </td>\r\n                            <td className=\"mypageInfoCol\" style={{width:'40%'}}>\r\n                                <table>\r\n                                    <tr style={{borderBottom: '1px dotted #eee'}}>\r\n                                        <td>\r\n                                            <span class=\"fas fa-bookmark\"></span>\r\n                                        </td>\r\n                                        <td style={{paddingLeft: '10px'}}>\r\n                                            {this.state.memberData.id}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr style={{borderBottom: '1px dotted #eee'}}>\r\n                                        <td>\r\n                                        <span class=\"fas fa-user-alt\"></span>\r\n                                        </td>\r\n                                        <td style={{paddingLeft: '10px'}}>\r\n                                            {this.state.memberData.name}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr style={{borderBottom: '1px dotted #eee'}}>\r\n                                        <td>\r\n                                        <span class=\"fas fa-phone-alt\"></span>\r\n                                        </td>\r\n                                        <td style={{paddingLeft: '10px'}}>\r\n                                            {this.state.memberData.hp}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr style={{borderBottom: '1px dotted #eee'}}>\r\n                                        <td>\r\n                                            <span class=\"fas fa-envelope-open-text\"></span>\r\n                                        </td>\r\n                                        <td style={{paddingLeft: '10px'}}>\r\n                                            {this.state.memberData.email}@{this.state.memberData.email2}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                        <span class=\"fas fa-home\"></span>\r\n                                        </td>\r\n                                        <td style={{paddingLeft: '10px'}}>\r\n                                            {this.state.memberData.address}<br/>{address}\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </td>\r\n                            <td style={{width:'20%', textAlign: 'center'}}>\r\n                                <span className=\"mypageInfoSubtitle\">일정</span><br/>\r\n                                <span className=\"mypageInfoSubContent\">{this.state.wishCount}</span>\r\n                            </td>\r\n                            <td style={{width:'20%', textAlign: 'center'}}>\r\n                                <span className=\"mypageInfoSubtitle\">공유한 일정</span><br/>\r\n                                <span className=\"mypageInfoSubContent\">0</span>\r\n                            </td>\r\n                        </tr>\r\n                    </table> */}\r\n                </div>\r\n                \r\n                <Paper square style={{marginTop: '100px'}}>\r\n                    <Tabs\r\n                        value={this.state.value}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        onChange={this.handleChange}\r\n                        aria-label=\"disabled tabs example\"\r\n                    >\r\n                        <Tab label=\"My Plan\" {...this.tabProps(0)}/>\r\n                        <Tab label=\"My Review\" {...this.tabProps(1)}/>\r\n                        <Tab label=\"My Reservation\" {...this.tabProps(2)}/>\r\n                        <Tab label=\"My Info\" {...this.tabProps(3)}/>\r\n                    </Tabs>\r\n                    <TabPanel value={this.state.value} index={0}>\r\n                        <MySchedule/>\r\n                    </TabPanel>\r\n                    <TabPanel value={this.state.value} index={1}>\r\n                        <MyReviwe/>\r\n                    </TabPanel>\r\n                    <TabPanel value={this.state.value} index={2}>\r\n                        <MyWishlist/>\r\n                    </TabPanel>\r\n                    <TabPanel value={this.state.value} index={3}>\r\n                        {/* <MemberUpdateFormComp/> */}\r\n                        {passOkTab}\r\n                    </TabPanel>\r\n                </Paper>\r\n                \r\n            </div>\r\n            \r\n        )\r\n        \r\n        \r\n    }\r\n}\r\nclass TabPanel extends Component {\r\n    render() {\r\n      return (\r\n        <Typography component=\"div\" hidden={this.props.value !== this.props.index}>\r\n          <Box p={3}>{this.props.children}</Box>\r\n        </Typography>\r\n      );\r\n    }\r\n  }\r\nexport default MypagePageComp;\r\n\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\MemberUpdateFormComp.js",["497","498","499"],"import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\nimport './style/UpdateFormCss.css';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport DaumPostcode from 'react-daum-postcode';\r\n\r\nclass MemberUpdateFormComp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state={\r\n            id: '',\r\n            name: '',\r\n            gender: '',\r\n            photo: '',\r\n            address: '',\r\n            addrdetail: '',\r\n            email: '',\r\n            email2: '',\r\n            hp: '',\r\n            password: '',\r\n            showPassword: false,\r\n            zoneCode : \"\",\r\n            fullAddress : \"\",\r\n            isDaumPost : false,\r\n            isRegister : false,\r\n            register: [],\r\n        }\r\n    }    \r\n    \r\n    handleClickShowPassword=()=>{\r\n        var s = this.state.showPassword\r\n        this.setState({\r\n            showPassword: !s\r\n        })\r\n    }\r\n\r\n    handleMouseDownPassword=(e)=>{\r\n        e.preventDefault();\r\n    }\r\n\r\n    passChange = (prop) => (e) => {\r\n        this.setState({\r\n            [prop] : e.target.value\r\n        });\r\n    }\r\n\r\n    // 스프링에서 목록 가져오기\r\n    getData = () => {\r\n        let url = URL + '/member/getdata?id=sanghee';\r\n        axios.get(url)\r\n        .then(response=>{\r\n            this.setState({\r\n                id: response.data.id,\r\n                name: response.data.name,\r\n                password: response.data.pass,\r\n                gender: response.data.gender,\r\n                photo: response.data.photo,\r\n                fullAddress: response.data.address,\r\n                addrdetail: response.data.addrdetail,\r\n                email: response.data.email,\r\n                email2: response.data.email2,\r\n                hp: response.data.hp            \r\n            })\r\n            if(this.state.gender=='여자')\r\n                this.refs.woman.className = 'mypageUpdateBtn clickMypageUpdateBtn';\r\n            else\r\n                this.refs.man.className = 'mypageUpdateBtn clickMypageUpdateBtn';\r\n        }).catch(err=>{\r\n            console.log(\"목록 오류:\"+err);\r\n        })\r\n    }\r\n\r\n    changeEmail = (e) => {\r\n        console.log(\"changeEmail 함수\");\r\n        this.setState({\r\n            email2: e.target.value\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    //사진 업로드시 호출되는 함수\r\n    imageUpload=(e)=>{\r\n        const uploadFile = e.target.files[0];\r\n\r\n        //서버에 업로드\r\n        const memberFile = new FormData();\r\n        memberFile.append(\"uploadFile\",uploadFile);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: URL + '/member/upload',\r\n            data: memberFile,\r\n            headers: {'Content-Type':'multipart/form-data'}\r\n        }).then(response=>{\r\n            this.setState({\r\n                photo: response.data.photoname\r\n            })\r\n        }).catch(err=>{\r\n            console.log(\"이미지 업로드시 오류남:\"+err);\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(); //처음 시작시 백엔드로부터 데이타 가져오기\r\n    }\r\n\r\n    onUpdateMember = () => {\r\n        var id = this.state.id;\r\n        var name = this.state.name;\r\n        var pass = this.state.password;\r\n        var gender = this.state.gender;\r\n        var photo = this.state.photo;\r\n        var address = this.state.fullAddress;\r\n        var addrdetail = this.state.addrdetail;\r\n        var email = this.state.email;\r\n        var email2 = this.state.email2;\r\n        var hp = this.state.hp;\r\n        \r\n        let url = URL + \"/member/update\";\r\n\r\n        if(id.trim()==='' || name.trim()==='' || pass.trim()==='' \r\n            || gender.trim()==='' || address.trim()==='' || addrdetail.trim()==='' ||\r\n            email.trim()==='' || email2.trim()==='' || hp.trim()===''){\r\n                alert(\"정보를 모두 입력해주세요.\")\r\n        }\r\n        else {\r\n            axios.post(url, {\r\n                id, name, pass, gender, photo, address, addrdetail, email, email2, hp\r\n            })\r\n            .then(response => {\r\n                this.props.passOk(false);\r\n                window.scrollTo(0,0);\r\n                alert(\"정보가 수정되었습니다.\");\r\n            }).catch(err=>{\r\n                console.log(\"회원업데이트중 오류:\"+err);\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    onDeleteMember = () => {\r\n        let id = this.state.id;\r\n        let passCheck = this.state.passCheck;\r\n        let url = URL + \"/member/delete\";\r\n\r\n        console.log(id + \", \" +passCheck);\r\n        axios.post(url , {id:id,pass:passCheck})\r\n        .then(response => {\r\n            if(response.data)\r\n                this.props.history.push(\"/MainPage\");//정보 변경후 메인페이지로 이동\r\n            else\r\n                alert(\"비밀번호 틀림\");\r\n        }).catch(err=>{\r\n            console.log(\"회원삭제중 오류:\"+err);\r\n        })\r\n    }\r\n\r\n    womanClick=(e)=>{\r\n        if(e.target.className == 'mypageUpdateBtn clickMypageUpdateBtn'){\r\n            e.target.className = 'mypageUpdateBtn';\r\n            this.setState({\r\n                gender: ''\r\n            })       \r\n        }\r\n        else{\r\n            this.refs.man.className = \"mypageUpdateBtn\";\r\n            e.target.className = 'mypageUpdateBtn clickMypageUpdateBtn';\r\n            \r\n            this.setState({\r\n                gender: '여자'\r\n            })\r\n        }\r\n    }\r\n    manClick=(e)=>{\r\n        if(e.target.className == 'mypageUpdateBtn clickMypageUpdateBtn'){\r\n            e.target.className = 'mypageUpdateBtn';\r\n            this.setState({\r\n                gender: ''\r\n            })         \r\n        }\r\n        else{\r\n            this.refs.woman.className = \"mypageUpdateBtn\";\r\n            e.target.className = 'mypageUpdateBtn clickMypageUpdateBtn';\r\n            this.setState({\r\n                gender: '남자'\r\n            })  \r\n        }\r\n    }\r\n\r\n    // 주소검색\r\n    handleTogglePost = () => {\r\n        var p = this.state.isDaumPost;\r\n        this.setState({\r\n            isDaumPost : !p\r\n        })\r\n    }\r\n\r\n    // postcode\r\n    handleAddress = (data) => {\r\n        let AllAddress = data.address;\r\n        let extraAddress = ''; \r\n        let zoneCodes = data.zonecode;\r\n        \r\n        if (data.addressType === 'R') {\r\n          if (data.bname !== '') {\r\n            extraAddress += data.bname;\r\n          }\r\n          if (data.buildingName !== '') {\r\n            extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n          }\r\n          AllAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\r\n        }\r\n        this.setState ({\r\n            fullAddress: AllAddress,\r\n            zoneCode : zoneCodes\r\n        })\r\n      }\r\n\r\n    render() {\r\n        // console.log(\"MemberUpdateFormComp render()\", this.props);\r\n\r\n\r\n        return (\r\n            <div id=\"MypageUpdateForm\" style={{textAlign: 'center', position: 'relative'}}>\r\n\r\n                {/* <form onSubmit={this.onUpdateMember}> */}\r\n                    <table class=\"table table-bordered\">\r\n                        <caption style={{captionSide: 'top', textAlign: 'center'}}><b>회원정보 수정</b></caption>\r\n                        <tr>\r\n                        <td colSpan=\"2\"> <span class=\"fas fa-user-alt\"></span>&nbsp;&nbsp;{this.state.id}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                {/* <input type=\"password\" name=\"pass\" class=\"form-control\" value = {this.state.pass} onChange={this.handleChange} required/> */}\r\n                                <FormControl variant=\"outlined\">\r\n                                    <InputLabel htmlFor=\"mypageUpdatePassword\">Password</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"mypageUpdatePassword\"\r\n                                        type={this.state.showPassword ? 'text' : 'password'}\r\n                                        value={this.state.password}\r\n                                        onChange={this.passChange('password').bind(this)}\r\n                                        endAdornment={\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={this.handleClickShowPassword.bind(this)}\r\n                                            onMouseDown={this.handleMouseDownPassword.bind(this)}\r\n                                            edge=\"end\"\r\n                                            >\r\n                                            {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                        }\r\n                                        labelWidth={70}\r\n                                    />\r\n                                </FormControl>  \r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\"><input type=\"text\" name = \"name\" class=\"form-control\" value = {this.state.name} onChange={this.handleChange} required/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"mypageUpdateBtn\" ref=\"woman\" onClick={this.womanClick.bind(this)}>여자</td>\r\n                            <td className=\"mypageUpdateBtn\" ref=\"man\" onClick={this.manClick.bind(this)}>남자</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\"><input type=\"file\" name = \"photo\" onChange={this.imageUpload.bind(this)}/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <input type=\"text\" name = \"address\" class=\"form-control\" value = {this.state.fullAddress} disabled  required/>\r\n                                <br/>\r\n                                <input type=\"text\" name = \"addrdetail\" class=\"form-control\" value = {this.state.addrdetail} onChange={this.handleChange} required/>\r\n                                \r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\" onClick={this.handleTogglePost.bind(this)} style={{backgroundColor: '#036E38', color: 'white', cursor: 'pointer'}}>\r\n                                주소검색\r\n                                {\r\n                                    this.state.isDaumPost ?\r\n                                        <DaumPostcode\r\n                                            onComplete={this.handleAddress.bind(this)}\r\n                                            autoClose\r\n                                            className=\"postSearchModal\"\r\n                                            isDaumPost={this.state.isDaumPost}\r\n                                            />\r\n                                    : null\r\n                                }\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <input type=\"text\" name = \"email\" value = {this.state.email} className=\"mypageUpdateAddr\" onChange={this.handleChange} required/>@\r\n                                <input type=\"text\" name = \"email2\" value = {this.state.email2} className=\"mypageUpdateAddr\" onChange={this.handleChange} required/>\r\n                                &nbsp;\r\n                                <select name=\"selectemail\" className=\"mypageUpdateAddr\" onChange={this.changeEmail}>\r\n                                    <option disabled>선택하세요</option>\r\n                                    <option value=\"\">직접입력</option>\r\n                                    <option value=\"naver.com\">naver.com</option>\r\n                                    <option value=\"gmail.com\">gmail.com</option>\r\n                                    <option value=\"nate.com\">nate.com</option> \r\n                                </select>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\"><input type=\"text\" class=\"form-control\" name = \"hp\" value = {this.state.hp} onChange={this.handleChange} required/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"mypageUpdateBtn\">\r\n                                <span onClick={this.onUpdateMember.bind(this)}>정보 수정</span>\r\n                                {/* <button type=\"submit\" style={{padding: '0', fontWeight: '0', backgroundColor: 'rgba(255,255,255,0)', border: 'none'}}>정보 수정</button> */}\r\n                            </td>\r\n                            <td className=\"mypageUpdateBtn\">\r\n                                <span onClick={this.onDeleteMember.bind(this)}>회원 탈퇴</span>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemberUpdateFormComp;","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\tour\\DetailTourComp.js",["500","501","502","503","504","505","506"],"import React,{Component} from 'react';\r\nimport axios from 'axios';\r\nimport MapComp from './MapComp';\r\nimport ReviewListComp from './ReviewListComp';\r\nimport {URL} from '../../../redux/config';\r\nimport './TourDetailCss.css';\r\nimport './TourCss.css';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport store from '../../../redux/store';\r\n\r\nclass DetailTourComp extends Component {\r\n\r\n    constructor({match}, props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            spotdata:[],\r\n            contentsid: match.params.name,\r\n            open: false, \r\n            setOpen: false,\r\n            alertOpen: false,\r\n            alertSetOpen: false\r\n        }\r\n\r\n    }\r\n\r\n    // componentDidUpdate() {\r\n    //     window.scrollTo(0,0);\r\n    // }\r\n\r\n    getData=()=>{\r\n        const url = URL + \"/spot/select?contentsid=\" + this.state.contentsid;\r\n\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    spotdata : res.data\r\n                })\r\n            }).catch(err=>{\r\n                console.log(\"DetailTourComp getData 오류 : \" + err);\r\n            })\r\n    }\r\n\r\n    setAvgStar=()=>{\r\n        \r\n        let url = URL + \"/spot/updatestar?contentsid=\" + this.state.contentsid;\r\n\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.getData();\r\n            }).catch(err=>{\r\n                console.log(\"DetailTourComp setAvgStar 오류 : \" + err);\r\n            })\r\n    }\r\n\r\n    componentWillMount(){\r\n        console.log(\"DetailTourComp render()\", this.props);\r\n        this.setAvgStar();\r\n    }\r\n\r\n    // heartClick=(e)=>{\r\n    //     if(e.target.className == 'heart clickheart'){\r\n    //         e.target.className = 'heart';       \r\n    //     }\r\n    //     else{\r\n    //         // e.target.className = 'heart clickheart';\r\n    //         this.handleOpen();\r\n    //     }\r\n            \r\n    // }\r\n\r\n    // modal 함수\r\n    handleOpen = () => {\r\n        if(!store.getState().logged){\r\n            alert(\"로그인이 필요한 서비스입니다.\");\r\n        }\r\n        else{\r\n            this.setState({\r\n                open: true\r\n            })\r\n        }\r\n        \r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            open: false\r\n        })\r\n    };\r\n\r\n    // alert 함수\r\n    alertOpen = () => {\r\n        this.setState({\r\n            alertOpen: true\r\n        })\r\n    };\r\n\r\n    alertClose = () => {\r\n        this.setState({\r\n            alertOpen: false\r\n        })\r\n    };\r\n\r\n    insertWish=()=>{\r\n        let url = URL + \"/wish/insertspot\";\r\n        let memId = store.getState().loginId;\r\n        let spotId = this.state.contentsid;\r\n        let content = this.state.spotdata.roadaddr;\r\n        let wishday = this.refs.wishday.value;\r\n        let wishtime = this.refs.wishtime.value;\r\n\r\n        console.log(this.refs.wishday.value);\r\n        if(wishday == '' || wishtime == '')\r\n            alert(\"날짜와 시간을 모두 선택해주세요.\");\r\n        else{\r\n            axios.post(url, {memId, spotId, content, wishday, wishtime})\r\n            .then(res=>{\r\n                this.setState({\r\n                    open: false,\r\n                    alertOpen: true\r\n                })\r\n            }).catch(err=>{\r\n                console.log(\"spotwish insert 오류 : \" + err);\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        var star = this.state.spotdata.star==5?\r\n        <span id=\"thumbStar\" style={{color: \"#F0CD58\"}}><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span>\r\n                                                            <span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span></span>\r\n            :this.state.spotdata.star==4?\r\n            <span id=\"thumbStar\" style={{color: \"#F0CD58\"}}><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span>\r\n                                                            <span class=\"fas fa-star\"></span><span class=\"far fa-star\"></span></span>\r\n            :this.state.spotdata.star==3?\r\n            <span id=\"thumbStar\" style={{color: \"#F0CD58\"}}><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span>\r\n                                                            <span class=\"far fa-star\"></span><span class=\"far fa-star\"></span></span>\r\n            :this.state.spotdata.star==2?\r\n            <span id=\"thumbStar\" style={{color: \"#F0CD58\"}}><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span><span class=\"far fa-star\"></span>\r\n                                                            <span class=\"far fa-star\"></span><span class=\"far fa-star\"></span></span>\r\n            :this.state.spotdata.star==1?\r\n            <span id=\"thumbStar\" style={{color: \"#F0CD58\"}}><span class=\"fas fa-star\"></span><span class=\"far fa-star\"></span><span class=\"far fa-star\"></span>\r\n                                                            <span class=\"far fa-star\"></span><span class=\"far fa-star\"></span></span>\r\n            :<span id=\"thumbStar\" style={{color: \"#F0CD58\"}}><span class=\"far fa-star\"></span><span class=\"far fa-star\"></span><span class=\"far fa-star\"></span>\r\n            <span class=\"far fa-star\"></span><span class=\"far fa-star\"></span></span>;\r\n        \r\n        return (\r\n            <div>\r\n                {/* 이미지, spot 정보 */}\r\n                <img src={this.state.spotdata.img} alt=\"이미지 없음\" style={{width: '100%'}}>\r\n                    \r\n                </img>\r\n                <div style={{color: 'whitesmoke'}} class=\"thumbText\">\r\n                    <b id=\"thumbTitle\">{this.state.spotdata.title}</b><br/>\r\n                    <span id=\"thumbTag\" style={{color: '#bbb'}}>{this.state.spotdata.tag}</span><br/>\r\n                    <span id=\"thumbRoad\" style={{color: '#bbb'}}><span class=\"fa fa-map-marker\"></span>&nbsp;&nbsp;{this.state.spotdata.roadaddr}</span><br/>\r\n                    <Button variant=\"outlined\" id=\"thumbAddBtn\" style={{color: 'white', border: '1px solid #aaa'}} onClick={this.handleOpen.bind(this)}>일정추가</Button>\r\n                    {/* <span id=\"thumbHeart\" ref=\"thumbHeart\" className='heart' style={{position: 'absolute', cursor: 'pointer'}} onClick={this.heartClick.bind(this)}></span> */}\r\n                </div>\r\n                <br/><br/>\r\n\r\n                {/* 일정 추가 모달 */}\r\n                <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className=\"spotmodal\"\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose.bind(this)}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                    timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={this.state.open}>\r\n                    <div className=\"spotpaper\">\r\n                        <span className=\"spotmodalTitle\">일정 추가</span><br/>\r\n                        🏰&nbsp;&nbsp;{this.state.spotdata.title}<br/>\r\n                        🗺&nbsp;&nbsp;{this.state.spotdata.roadaddr}<br/>\r\n                        🗓&nbsp;&nbsp;여행 날짜\r\n                        <input type=\"date\" class=\"form-control form-control-sm\" ref=\"wishday\"></input>\r\n                        ⏰&nbsp;&nbsp;예정 시간\r\n                        <input type=\"time\" class=\"form-control form-control-sm\" ref=\"wishtime\"></input><br/>\r\n                        <div style={{textAlign: 'center'}}>\r\n                            <button type=\"button\" class=\"btn btn-warning spotmodalBtn\" onClick={this.insertWish.bind(this)}><b>추가</b></button>\r\n                        </div>\r\n                    </div>\r\n                    </Fade>\r\n                </Modal>\r\n\r\n                {/* 소개 */}\r\n                <div className=\"detailTitle\">\r\n                    <span className=\"detailTitleContent\" style={{backgroundColor:'white', color: '#036E38'}}>\r\n                        &nbsp;&nbsp;&nbsp;소개&nbsp;&nbsp;&nbsp;\r\n                    </span>\r\n                </div>\r\n                <br/>\r\n                <div id=\"thumbIntro\" style={{color: '#888'}}>\r\n                    {star}<br/>\r\n                    {this.state.spotdata.introduction}<br/>\r\n                    \r\n                    \r\n                    {/* <span id=\"thumbHeart\" ref=\"thumbHeart\" className='spotheart' style={{ cursor: 'pointer', position: 'absolute'}} onClick={this.heartClick.bind(this)}></span> */}\r\n                </div>\r\n                \r\n                {/* 주변 정보 */}\r\n                <div className=\"detailTitle\">\r\n                    <span className=\"detailTitleContent\" style={{backgroundColor:'white', color: '#036E38'}}>\r\n                        &nbsp;&nbsp;가보고 싶은 그 곳, {this.state.spotdata.title} &nbsp;&nbsp;\r\n                    </span>\r\n                </div>\r\n                <div className=\"detailIntro\" style={{color: \"#888\"}}>\r\n                    다양한 \"{this.state.spotdata.title}\"의 주변 정보를 소개합니다.\r\n                </div>\r\n                <br/>\r\n                \r\n                {/* 카카오 지도 */}\r\n                <MapComp longitude={this.state.spotdata.longitude} latitude={this.state.spotdata.latitude}\r\n                    title={this.state.spotdata.title}/>\r\n                <br/><br/>\r\n\r\n                <div className=\"detailTitle\">\r\n                    <span className=\"detailTitleContent\" style={{backgroundColor:'white', color: '#036E38'}}>\r\n                        &nbsp;&nbsp;&nbsp;후기&nbsp;&nbsp;&nbsp;\r\n                    </span>\r\n                </div>\r\n\r\n                {/* 후기 */}\r\n                <div className=\"detailIntro\" style={{color: \"#888\"}}>\r\n                    직접 다녀온 회원분들의 다양한 후기를 확인해보세요.<br/> \r\n                    여러분들의 생생한 후기를 남길 수 있습니다.\r\n                </div>\r\n                <ReviewListComp contentsid={this.state.contentsid}/>\r\n\r\n                {/* alert 창 */}\r\n                <Dialog\r\n                    open={this.state.alertOpen}\r\n                    onClose={this.alertClose.bind(this)}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"일정 추가 완료\"}</DialogTitle>\r\n                    <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Mypage로 이동하여 확인하시겠습니까?\r\n                    </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                    <Button onClick={this.alertClose.bind(this)} color=\"primary\">\r\n                        NO\r\n                    </Button>\r\n                    <Button onClick={\r\n                        ()=>{\r\n                            this.setState({\r\n                                alertOpen: false\r\n                            })\r\n                            this.props.history.push(\"/mypage\");\r\n                        }\r\n                    } color=\"primary\" autoFocus>\r\n                        YES\r\n                    </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DetailTourComp;","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\SharePlan\\SharePlanPageComp.js",[],"C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\tour\\TourPageComp.js",[],"C:\\finalproject\\jeju\\finalproject\\src\\redux\\config.js",["507","508","509","510","511"],"C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\reservation\\ReservationPageComp.js",["512","513","514","515"],"import React, {Component,useState} from \"react\";\r\nimport FlightTakeoffIcon from '@material-ui/icons/FlightTakeoff';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AirlineSeatReclineNormalIcon from '@material-ui/icons/AirlineSeatReclineNormal';\r\nimport img from './dd.PNG';\r\nimport SyncAltIcon from '@material-ui/icons/SyncAlt';\r\nimport TrendingFlatIcon from '@material-ui/icons/TrendingFlat';\r\n\r\n\r\n\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass ReservationPageComp extends Component { \r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"ReservationPageComp constructor\", props);\r\n        this.state = {\r\n            value: 0,\r\n            seat: '',\r\n            open: false\r\n\r\n        \r\n          }\r\n\r\n    }\r\n    \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            seat: e.target.value\r\n        })\r\n      };\r\n    \r\n    handleClose = () => {\r\n        this.setState({\r\n            open : false\r\n        })\r\n      };\r\n    \r\n    handleOpen = () => {\r\n        this.setState({\r\n            open : true\r\n        })\r\n      };\r\n \r\n    \r\n\r\n    a11yProps = (index) => {\r\n        return {\r\n          id: `simple-tab-${index}`,\r\n          'aria-controls': `simple-tabpanel-${index}`,\r\n        };\r\n      }\r\n      handleTabChange = (event, newValue) => {\r\n        this.setState({ value: newValue });\r\n      }\r\n\r\n    \r\n\r\n    render() {\r\n\r\n        \r\n        const { value } = this.state;\r\n        console.log(\"ReservationPageComp render()\", this.props);\r\n        return (\r\n            <div>\r\n                <div style={{margin:'0 auto',marginLeft:\"45%\",marginTop:\"3%\",marginBottom:'2%'}}>\r\n                <h1>항공예약</h1>\r\n                </div>\r\n\r\n                <div style={{border:'1px solid black',width:'800px',height:'550px',maring:'0 auto',marginLeft:'28%'}}>\r\n                    \r\n                    <div style={{border:'1px solid black'}} >\r\n                         {/*                       \r\n                         <div style={{borderRight:\"1px solid black\", float:'left'}}>\r\n                              <TrendingFlatIcon/><p>편도&nbsp;</p>\r\n                         </div>\r\n\r\n                         <div style={{float:'right'}}>\r\n                            <SyncAltIcon/><p>왕복 &nbsp;</p>\r\n                         </div> */}\r\n\r\n\r\n                        {/* 편도 왕복 선택 tab */}\r\n                         <AppBar position=\"static\"  color=\"default\">\r\n                           <Tabs value={this.state.value} onChange={this.handleTabChange.bind(this)} aria-label=\"full width tabs example\" indicatorColor=\"primary\" >\r\n                             <Tab label=\"편도\" icon={<TrendingFlatIcon/>} {...this.a11yProps(0)} />\r\n                             <Tab label=\"왕복\" icon={<SyncAltIcon/>} {...this.a11yProps(1)} />\r\n                           </Tabs>\r\n                         </AppBar>\r\n                      \r\n\r\n                        {/* 편도 */}\r\n                         <TabPanel value={this.state.value} index={0}>\r\n                            <div style={{border:'1px solid black',textAlign:'center',marginBottom:'50px'}}>\r\n                                    <b style={{fontSize:'40px',marginRight:'30px'}}>김포</b>\r\n                                    <FlightTakeoffIcon style={{width:'50px',height:'50px',color:'#00bfff',marginBottom:'25px'}}  />\r\n                                    <b style={{fontSize:'40px',marginLeft:'30px'}}>제주</b>\r\n                            </div>\r\n\r\n                   \r\n                            <div style={{border:'1px solid black'}}>\r\n                               <div  style={{marginBottom:'20px'}}>\r\n                          \r\n                                   <input type=\"date\" style={{marginRight:'10px',marginLeft:'180px',width:'380px'}}/>\r\n                                   \r\n                         \r\n                          \r\n                                   <div style={{float:'right',marginRight:'10px',marginBottom:'25px',marginTop:'10px'}}>\r\n                                      <button type=\"button\" className=\"btn btn-info\" style={{fontSize:'15px',width:'150px',height:'80px'}}>항공권 검색</button>\r\n                                   </div>\r\n                              </div>\r\n    \r\n                       \r\n                               <div>\r\n                                   {/* 인원선택 */}\r\n                                   <PersonIcon style={{marginLeft:'178px',marginTop:'25px'}}/>\r\n                                    <FormControl style={{width:'120px',paddingBottom:'20px',marginLeft:'20px',marginRight:'40px'}}>\r\n                                     <InputLabel>인원</InputLabel>\r\n                                       <Select\r\n                                       open={value.open}\r\n                                       onClose={this.handleClose.bind(this)}\r\n                                       onOpen={this.state.handleOpen}\r\n                                       value={value.seat}\r\n                                       onChange={this.handleChange.bind(this)}\r\n                                       >\r\n                                                                               \r\n                                            <option>성인</option>\r\n                                            <option>소아</option>\r\n                                            <option>유아</option>\r\n                                                                                       \r\n                                       </Select>\r\n                                   </FormControl>\r\n                                   \r\n                                  \r\n                                   {/* 좌석선택 */}\r\n                                   <AirlineSeatReclineNormalIcon style={{marginTop:'25px'}}/>\r\n                                  \r\n                                   <FormControl style={{width:'120px',paddingBottom:'20px',marginLeft:'20px'}}>\r\n                                     <InputLabel>좌석</InputLabel>\r\n                                       <Select\r\n                                       open={this.state.open}\r\n                                       onClose={this.handleClose.bind(this)}\r\n                                       onOpen={this.handleOpen.bind(this)}\r\n                                       value={this.state.seat}\r\n                                       onChange={this.handleChange.bind(this)}\r\n                                       >\r\n                                         <MenuItem value={\"일반석\"}>일반석</MenuItem>\r\n                                         <MenuItem >프리미엄 일반석</MenuItem>\r\n                                         <MenuItem >비지니스석</MenuItem>\r\n                                         <MenuItem >일등석</MenuItem>\r\n                                       </Select>\r\n                                   </FormControl>\r\n                                   \r\n                               </div>\r\n                            </div>\r\n\r\n                            <div style={{margin:'0 auto',textAlign:'center',marginTop:'50px'}}>\r\n                                <img src={img}/>\r\n                            </div>\r\n                        </TabPanel>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        {/* 왕복 */}\r\n                        <TabPanel value={this.state.value} index={1}>\r\n                            <div style={{border:'1px solid black',textAlign:'center',marginBottom:'50px'}}>\r\n                                 <b style={{fontSize:'40px',marginRight:'30px'}}>김포</b>\r\n                                 <FlightTakeoffIcon style={{width:'50px',height:'50px',color:'#00bfff',marginBottom:'25px'}}  />\r\n                                 <b style={{fontSize:'40px',marginLeft:'30px'}}>제주</b>\r\n                            </div>\r\n\r\n                   \r\n                            <div style={{border:'1px solid black'}}>\r\n                               <div  style={{marginBottom:'20px'}}>\r\n                          \r\n                                   <input type=\"date\" style={{marginRight:'60px',marginLeft:'180px'}}/>\r\n                                   <input type=\"date\" />\r\n                         \r\n                          \r\n                                   <div style={{float:'right',marginRight:'10px',marginBottom:'25px'}}>\r\n                                      <button type=\"button\" className=\"btn btn-info\" style={{fontSize:'15px',width:'150px',height:'70px'}}>항공권 검색</button>\r\n                                   </div>\r\n                              </div>\r\n    \r\n                       \r\n                               <div>\r\n                                   <PersonIcon style={{marginLeft:'178px'}}/><input type=\"form\" style={{width:'138px',marginRight:'50px'}}/>\r\n                                   <AirlineSeatReclineNormalIcon /><input type=\"form\" style={{width:'145px'}}/>\r\n                               </div>\r\n                            </div>\r\n\r\n                            <div style={{margin:'0 auto',textAlign:'center',marginTop:'80px'}}>\r\n                                <img src={img}/>\r\n                            </div>\r\n                        </TabPanel>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                   <div>\r\n            \r\n                   </div>\r\n\r\n             \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nclass TabPanel extends Component {\r\n    render() {\r\n      return (\r\n        <Typography component=\"div\" hidden={this.props.value !== this.props.index}>\r\n          <Box p={3}>{this.props.children}</Box>\r\n        </Typography>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default ReservationPageComp;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\shareboard\\ShareBoardPageComp.js",["516","517","518","519"],"import React, {Component, Fragment} from \"react\";\r\nimport {Route, Link} from \"react-router-dom\";\r\nimport ShareBoardFormComp from \"./ShareBoardFormComp\";\r\nimport ShareBoardRowItem from \"./ShareBoardRowItem\";\r\nimport {URL, actionType} from '../../../redux/config';\r\nimport {MDBBtn} from \"mdbreact\";\r\nimport axios from \"axios\";\r\nimport store from \"../../../redux/store\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PageComp from \"../tour/PageComp\";\r\n\r\n\r\nclass ShareBoardPageComp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"ShareBoardPageComp constructor\", this.props);\r\n        this.state = {\r\n            // area: match.params.name,\r\n            listData: [],\r\n            pageNum: props.match.params.pageNum,\r\n        }\r\n        // store.subscribe(this.getShareListByPaging.bind(this));\r\n        store.dispatch({\r\n            type: actionType.shareBoardUpdate,\r\n        });\r\n\r\n        this.currentPage = this.state.pageNum;\r\n        this.totalCount = 0;\r\n        this.perPage = 4; // 한페이지당 보여질 글의 갯수\r\n        this.perBlock = 3; // 한블럭당 출력할 페이지의 갯수\r\n        this.totalPage = 0; // 총 페이지의 갯수\r\n        this.startPage = 0; // 각 블럭당 시작 페이지 번호\r\n        this.endPage = 0; // 각 블럭당 끝페이지 번호\r\n        this.start = 0; // 각 블럭당 불러올 글의 시작번호\r\n        this.end = 0; // 각 블럭당 글의 끝번호\r\n        this.no = 0; // 각 페이지에서 출력할 시작번호\r\n\r\n        this.select = 'star';\r\n    }\r\n\r\n    getShareListByPaging = () => {\r\n        // 나머지가 있을 경우에는 1페이지 더 추가 (예 : 총글수가 9이고 한페이지당 2개씩 볼 경우)\r\n        this.totalPage = Math.floor(this.totalCount / this.perPage) + (this.totalCount % this.perPage > 0 ? 1 : 0);\r\n\r\n        // 시작페이지와 끝페이지 구하기\r\n        this.startPage = Math.floor((this.currentPage - 1) / this.perBlock) * this.perBlock + 1;\r\n        this.endPage = this.startPage + this.perBlock - 1;\r\n        // 마지막 블럭은 endPage를 totalPage로 해놔야 한다.\r\n        if (this.endPage > this.totalPage)\r\n            this.endPage = this.totalPage;\r\n\r\n        // mysql은 첫 글이 0번이므로 +1 안해도됨 (오라클은 1번)\r\n        this.start = (this.currentPage - 1) * this.perPage;\r\n\r\n        this.no = this.totalCount - (this.currentPage - 1) * this.perPage;\r\n\r\n        let url = URL + \"/share/list\" +\r\n            \"?start=\" + this.start +\r\n            \"&perPage=\" + this.perPage;\r\n\r\n        console.log(url);\r\n\r\n        axios.get(url\r\n        ).then(res => {\r\n            console.log(\"getShareListByPaging() res\", res);\r\n            this.setState({\r\n                listData: res.data\r\n            })\r\n        }).catch(err => {\r\n            console.log(\"getShareListByPaging() err\", err);\r\n        });\r\n    }\r\n\r\n    getTotalCount = () => {\r\n        let url = URL + \"/share/count\";\r\n\r\n        console.log(url);\r\n\r\n        axios.get(url)\r\n            .then(res => {\r\n                console.log(\"getTotalCount res : \", res);\r\n                this.totalCount = res.data;\r\n                this.getShareListByPaging();\r\n            }).catch(err => {\r\n            console.log(\"getTotalCount err : \", err);\r\n        })\r\n    }\r\n\r\n    getSearchShareListByPaging = () => {\r\n        // 나머지가 있을 경우에는 1페이지 더 추가 (예 : 총글수가 9이고 한페이지당 2개씩 볼 경우)\r\n        this.totalPage = Math.floor(this.totalCount / this.perPage) + (this.totalCount % this.perPage > 0 ? 1 : 0);\r\n\r\n        // 시작페이지와 끝페이지 구하기\r\n        this.startPage = Math.floor((this.currentPage - 1) / this.perBlock) * this.perBlock + 1;\r\n        this.endPage = this.startPage + this.perBlock - 1;\r\n        // 마지막 블럭은 endPage를 totalPage로 해놔야 한다.\r\n        if (this.endPage > this.totalPage)\r\n            this.endPage = this.totalPage;\r\n\r\n        // mysql은 첫 글이 0번이므로 +1 안해도됨 (오라클은 1번)\r\n        this.start = (this.currentPage - 1) * this.perPage;\r\n\r\n        this.no = this.totalCount - (this.currentPage - 1) * this.perPage;\r\n\r\n        let url = URL + \"/share/search\" +\r\n            \"?start=\" + this.start +\r\n            \"&perPage=\" + this.perPage +\r\n            \"&search=\" + this.refs.search.value;\r\n\r\n        console.log(url);\r\n\r\n        axios.get(url\r\n        ).then(res => {\r\n            console.log(\"searchShareList() res\", res);\r\n            this.setState({\r\n                listData: res.data\r\n            });\r\n        }).catch(err => {\r\n            console.log(\"searchShareList() err\", err);\r\n        });\r\n    }\r\n\r\n    getSearchTotalCount = () => {\r\n        let url = URL + \"/share/searchcount\" +\r\n            \"?search=\" + this.refs.search.value;\r\n\r\n        console.log(url);\r\n\r\n        axios.get(url)\r\n            .then(res => {\r\n                console.log(\"getSearchTotalCount res : \", res);\r\n                this.totalCount = res.data;\r\n                this.getSearchShareListByPaging();\r\n            }).catch(err => {\r\n            console.log(\"getSearchTotalCount err : \", err);\r\n        })\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getTotalCount();\r\n    }\r\n\r\n    // componentWillUpdate() {\r\n    //     this.getTotalCount();\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* 제목 */}\r\n                {/* <div style={{margin: \"0 auto\", marginLeft: \"45%\", marginTop: '1%', marginBottom: '4%'}}>\r\n                    <h3 id=\"sharesubject\">맛집 공유게시판</h3>\r\n                </div> */}\r\n                <div className=\"detailTitle\">\r\n                    <span className=\"detailTitleContent\" style={{backgroundColor: 'white', color: '#036E38'}}>\r\n                        &nbsp;&nbsp;맛집 공유게시판&nbsp;&nbsp;\r\n                    </span>\r\n                </div>\r\n                <div className=\"detailIntro\" style={{color: \"#888\"}}>\r\n                    나만 아는 숨음 맛집! 돈쭐 내주고 싶은 맛집!<br/>\r\n                    회원분들끼리 공유하는 공간입니다.\r\n                </div>\r\n                <br/>\r\n\r\n                {/*/!* 공유버튼 *!/*/}\r\n                <div>\r\n                    <Link to=\"/share/insert\">\r\n                        <MDBBtn size=\"sm\" color=\"dark-green\" type=\"button\"\r\n                                style={{float: 'right', marginRight: '7%'}}>\r\n                            <b style={{fontSize: '15px'}}>맛집공유</b>\r\n                        </MDBBtn>\r\n                    </Link>\r\n\r\n                    {/*onClick={this.getShareListByPaging.bind(this)}*/}\r\n                    <MDBBtn outline size=\"sm\" color=\"deep-orange\"\r\n                            onClick={\r\n                                () => {\r\n                                    this.setState({\r\n                                        pageNum: 1,\r\n                                    });\r\n                                    this.currentPage = 1;\r\n                                    this.getTotalCount();\r\n                                    this.refs.search.value = \"\";\r\n                                }\r\n                            }\r\n                            style={{float: 'left', marginLeft: '7%'}}>\r\n                        <b style={{fontSize: '15px'}}>전체글</b>\r\n                    </MDBBtn>\r\n\r\n                    <input type=\"search\" className=\"form-control\" ref=\"search\"\r\n                           style={{float: 'left', marginLeft: '7%', width: '200px', height: '40px', marginTop: '5px'}}\r\n                           onKeyDown={(e) => {\r\n                               // console.log(e);\r\n                               if (e.code == \"Enter\") {\r\n                                   this.setState({\r\n                                       pageNum: 1,\r\n                                   });\r\n                                   this.currentPage = 1;\r\n                                   this.getSearchTotalCount();\r\n                               }\r\n                           }}\r\n                    />\r\n\r\n                    {/*onClick={this.searchShareList.bind(this)}*/}\r\n                    <MDBBtn outline size=\"sm\" color=\"deep-orange\"\r\n                            onClick={\r\n                                () => {\r\n                                    this.setState({\r\n                                        pageNum: 1,\r\n                                    });\r\n                                    this.currentPage = 1;\r\n                                    this.getSearchTotalCount();\r\n                                }\r\n                            }\r\n                    >\r\n                        <b style={{fontSize: '15px'}}>검색</b>\r\n                    </MDBBtn>\r\n                </div>\r\n\r\n\r\n                {/* 게시판 폼 */}\r\n                <Box display=\"flex\"\r\n                     flexWrap=\"wrap\"\r\n                     p={1}\r\n                     m={1}\r\n                     bgcolor=\"background.paper\"\r\n                     justifyContent=\"center\"\r\n                     css={{maxWidth: '100%'}}\r\n                >\r\n                    {\r\n                        this.state.listData.map((row, idx) => (\r\n                            <ShareBoardRowItem row={row} key={idx}\r\n                                               list={this.getShareListByPaging.bind(this)}\r\n                                               history={this.props.history}\r\n                            />\r\n                        ))\r\n                    }\r\n                </Box>\r\n\r\n                {/* 페이징 */}\r\n                <PageComp currentPage={this.currentPage}\r\n                          startPage={this.startPage} endPage={this.endPage}\r\n                          totalPage={this.totalPage}\r\n                          type=\"share_restaurant\"\r\n                ></PageComp>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ShareBoardPageComp;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\auth\\LoginPageComp.js",["520","521","522","523","524","525","526","527","528","529"],"import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\nimport GoogleLoginBtnComp from \"./GoogleLoginBtnComp\";\r\nimport GoogleLogoutBtnComp from \"./GoogleLogoutBtnComp\";\r\nimport store from \"../../../redux/store\";\r\nimport { URL, actionType, mainViewType } from \"../../../redux/config\";\r\nimport NaverLoginBtnComp from \"./NaverLoginBtnComp\";\r\nimport FaceBookLoginBtnComp from \"./FaceBookLoginBtnComp\";\r\nimport KakaoLoginBtnComp from \"./KakaoLoginBtnComp\";\r\nimport KakaoLoginBtnComp3 from \"./KakaoLoginBtnComp3\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport MakeLoginBtn from \"./MakeLoginBtn\";\r\nimport { FaThemeisle } from \"react-icons/fa\";\r\nimport {Route, Link, withRouter } from \"react-router-dom\";\r\nimport '../join/SignupCss.css';\r\nimport jejuImg from '../../../image/jeju8.jpg';\r\n\r\nclass LoginPageComp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"LoginPageComp constructor\", props);\r\n        \r\n        this.state={\r\n            id:'',  //아이디를 저장하고 있을 state\r\n            pass:'',\r\n            pwCheck: \"\",//비밀번호 두개가 일치하는가\r\n            name : \"\",\r\n            birth_date: \"\",\r\n            phone : \"\",\r\n            email : \"\",\r\n            address : \"\",\r\n            idcanUse: false,//중복된 아이디찾기 true여야 로그인가능\r\n            logged:this.props.logged,\r\n            onLogin:this.onLogin,\r\n            googleOn : store.getState().googleOn\r\n        }\r\n\r\n        store.subscribe(function () {\r\n            this.setState({\r\n                googleOn: store.getState().googleOn,\r\n            });\r\n        }.bind(this));\r\n    }\r\n\r\n    setLoginId = (loginId) => {\r\n        console.log(\"LoginPage setLoginId()\");\r\n        store.dispatch({\r\n            type: actionType.LOG_IN,\r\n            // mainView: mainViewType.MainPage\r\n            loginId: loginId,\r\n            logged: true\r\n        });\r\n    }\r\n\r\n    // 변수 선언시 state 영역에 추가했을 경우에만 나중에 값변경이 가능하다\r\n    // 값 변경시에는 setState 를 이용해야만 한다\r\n    // 이벤트\r\n    changeEvent=(e)=>{\r\n        \r\n        // console.log(e.target.id+\":\"+e.target.value);\r\n        // 만약 엔터 누를때만 변경되도록 하고 싶으면\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    onLogin=()=>{\r\n        // console.log(\"로그인할 아이디는 \" + this.state.id + \"비밀번호는 \" + this.state.pass);\r\n        const data = {\r\n            id: this.state.id,\r\n            pass: this.state.pass\r\n        }\r\n        let url = URL + \"/member/login\";\r\n\r\n        axios.post(url, data)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            if(response.data){\r\n                // this.props.onLogin();\r\n                this.setLoginId(data.id);\r\n                // alert(store.getState().loginId+ \"가 스토어에 저장된 아이디입니다\");\r\n                this.props.history.push(\"/\");\r\n            }\r\n            else{\r\n                alert(\"아이디와 비밀번호가 맞지않습니다.\");\r\n                this.setState({\r\n                    pass: '',\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            console.log(\"로그인시 오류남:\"+err);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"LoginPageComp render()\", this.props);\r\n        // console.log(\"스토어에 있는 로그인 아이디 상태는 : \" + store.getState().loginId);\r\n        const parentOnLoginHandler = this.onLogin.bind(this);\r\n        return (\r\n            <div>\r\n                 {/* 날라가는 새 애니메이션 */}\r\n                 <div class=\"signImg\">\r\n                    <img src={jejuImg} alt=\"\"/>\r\n                </div>\r\n                <div class=\"container\">\r\n                    <div class=\"bird-container bird-container--one\">\r\n                        <div class=\"bird bird--one\"></div>\r\n                    </div>\r\n                    <div class=\"bird-container bird-container--two\">\r\n                        <div class=\"bird bird--two\"></div>\r\n                    </div>\r\n                    <div class=\"bird-container bird-container--three\">\r\n                        <div class=\"bird bird--three\"></div>\r\n                    </div>\r\n                    <div class=\"bird-container bird-container--four\">\r\n                        <div class=\"bird bird--four\"></div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"detailTitle\">\r\n                    <span className=\"detailTitleContent\" style={{backgroundColor:'white', color: '#036E38'}}>\r\n                        &nbsp;&nbsp;로그인&nbsp;&nbsp;\r\n                    </span>\r\n                </div>\r\n                {/* <div>\r\n                    {this.state.id}\r\n                    <h4 className=\"showIdResult\">{this.state.showIdResult}</h4>\r\n                </div> */}\r\n                <br />\r\n                \r\n                <div id=\"LoginForm\">\r\n                    <table class=\"table table-bordered\" style={{textAlign: 'center'}}>\r\n                        <tr>\r\n                            <td>\r\n                                <input type=\"text\" name = \"id\" class=\"form-control\" value = {this.state.id} onChange={this.changeEvent.bind(this)} \r\n                                    placeholder=\"아이디\"/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <input type=\"password\" name = \"pass\" class=\"form-control\" value = {this.state.pass} onChange={this.changeEvent.bind(this)} \r\n                                    placeholder=\"비밀번호\"/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"loginBtn\" style={{backgroundColor: '#036E38', color: 'white', cursor: 'pointer'}} onClick={this.onLogin.bind(this)}>\r\n                                <span>로그인</span>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    {/* <TextField id=\"standard-secondary\" label=\"아이디\" color=\"secondary\" \r\n                    type=\"text\" name=\"id\" value={ this.state.id }\r\n                    onChange = { this.changeEvent.bind(this) } />\r\n\r\n                    <br />\r\n\r\n                    <TextField id=\"standard-secondary\" label=\"비밀번호\" color=\"secondary\" \r\n                    type=\"password\" name=\"pass\" value={ this.state.pass }\r\n                    onChange = { this.changeEvent.bind(this) } /> */}\r\n\r\n                    <br />\r\n                    {/* <button type=\"button\"\r\n                    onClick={this.onLogin.bind(this)}>\r\n                        Sign in\r\n                    </button>\r\n                    <MakeLoginBtn \r\n                    parentOnLoginHandler={parentOnLoginHandler} />\r\n                    <h5>\r\n                        내 아이디는 {this.state.id} 입니다\r\n                        내 비밀번호는 {this.state.pass} 입니다\r\n                    </h5> */}\r\n                    {/* 회원가입 */}\r\n                    <Link to=\"/join\"><button type=\"button\" className=\"btn btn-warning\">회원가입</button></Link>\r\n                    \r\n                    {\r\n                        this.state.googleOn ==true ?\r\n                            <GoogleLogoutBtnComp /> : \r\n                            <GoogleLoginBtnComp />\r\n                    }\r\n                    <br />\r\n                    <br />\r\n                    <NaverLoginBtnComp />\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(LoginPageComp);\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\join\\SignupPageComp.js",["530","531","532","533","534","535","536","537"],"import React, { Component} from \"react\";\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\nimport { makeStyles, createStyles, WithStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport './SignupCss.css';\r\nimport DaumPostcode from 'react-daum-postcode';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport welcomeImg from '../../../image/jeju6.jpg';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport jejuImg from '../../../image/jeju8.jpg';\r\n\r\nclass SignupPageComp extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // console.log(\"SignupPageComp constructor\", props);\r\n        \r\n        this.state={\r\n            id:'',  //아이디를 저장하고 있을 state\r\n            password:'',\r\n            pwCheck: \"\",//비밀번호 두개가 일치하는가\r\n            name : '',\r\n            gender: '',\r\n            photo: '',\r\n            addrdetail: '',\r\n            email : '',\r\n            email2:'',\r\n            hp : \"\",\r\n            idcanUse: false,//중복된 아이디찾기 true여야 로그인가능\r\n            // files: [],\r\n            // events: [],\r\n            // filePreviews: {},\r\n            zoneCode : \"\",\r\n            fullAddress : \"\",\r\n            isDaumPost : false,\r\n            isRegister : false,\r\n            register: [],\r\n            alertOpen: false,\r\n            alertSetOpen: false\r\n        };\r\n\r\n        //함수 선언\r\n        this.onIdChk=this.onIdChk.bind(this);\r\n    }\r\n\r\n    // 변수 선언시 state 영역에 추가했을 경우에만 나중에 값변경이 가능하다\r\n    // 값 변경시에는 setState 를 이용해야만 한다\r\n    // 이벤트\r\n    changeEvent=(e)=>{\r\n        \r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    onIdChk=()=>{\r\n        \r\n        let url = URL + '/member/checkid?id=' + this.state.id;\r\n\r\n        axios.get(url)\r\n        .then(response=>{\r\n            if(response.data)\r\n            {\r\n                alert(\"사용가능한 아이디입니다.\");\r\n                this.setState({\r\n                    idcanUse: true\r\n                })\r\n            }\r\n            else\r\n            {\r\n                alert(\"사용중인 아이디입니다. 다른 아이디를 입력해주세요.\");\r\n                this.setState({\r\n                    id: '',\r\n                    idcanUse: false\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            console.log(\"아이디체크시 오류남:\"+err);\r\n        })\r\n    }\r\n\r\n    // onSubmitHandler = (e) => {\r\n    //     e.preventDefault();\r\n    //     this.onInsertMember();\r\n    // };\r\n\r\n    //사진 업로드시 호출되는 함수\r\n    imageUpload=(e)=>{\r\n        const uploadFile = e.target.files[0];\r\n\r\n        //서버에 업로드\r\n        const memberFile = new FormData();\r\n        memberFile.append(\"uploadFile\",uploadFile);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: URL + '/member/upload',\r\n            data: memberFile,\r\n            headers: {'Content-Type':'multipart/form-data'}\r\n        }).then(response=>{\r\n            this.setState({\r\n                photo: response.data.photoname\r\n            })\r\n        }).catch(err=>{\r\n            console.log(\"이미지 업로드시 오류남:\"+err);\r\n        })\r\n    }\r\n\r\n    onInsertMember = () => {\r\n        var id = this.state.id;\r\n        var provider = 'no';\r\n        var name = this.state.name;\r\n        var pass = this.state.password;\r\n        var pwCheck = this.state.pwCheck;\r\n        var gender = this.state.gender;\r\n        var photo = this.state.photo;\r\n        var address = this.state.fullAddress;\r\n        var addrdetail = this.state.addrdetail;\r\n        var email = this.state.email;\r\n        var email2 = this.state.email2;\r\n        var hp = this.state.hp;\r\n        let url = URL + \"/member/insert\";\r\n\r\n        if(id.trim()==='' || name.trim()==='' || pass.trim()==='' || pwCheck.trim()===''\r\n            || gender.trim()==='' || address.trim()==='' || addrdetail.trim()==='' ||\r\n            email.trim()==='' || email2.trim()==='' || hp.trim()===''){\r\n                \r\n            alert(\"정보를 모두 입력해주세요.\");\r\n        }\r\n        else{\r\n            if(this.state.idcanUse){\r\n                if(this.state.password === this.state.pwCheck){\r\n                    axios.post(url, {\r\n                        id, name, pass, gender, photo, address, addrdetail, email, email2, hp  \r\n                    })\r\n                        .then(response => {\r\n                            this.setState({\r\n                                alertOpen: true\r\n                            })\r\n                            // this.props.history.push(\"/login\");//저장 성공후 로그인으로 이동되도록 한다\r\n                        }).catch(err=>{\r\n                            console.log(\"회원가입시 오류남:\"+err);\r\n                        })\r\n                }\r\n                else {\r\n                    alert(\"비밀번호가 맞지 않습니다.\")\r\n                }\r\n            }\r\n            else {\r\n                alert(\"아이디 중복을 확인해주세요.\");\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    changeEmail = (e) => {\r\n        this.setState({\r\n            email2: e.target.value\r\n        })\r\n    }\r\n\r\n    womanClick=(e)=>{\r\n        if(e.target.className == 'mypageUpdateBtn clickMypageUpdateBtn'){\r\n            e.target.className = 'mypageUpdateBtn';\r\n            this.setState({\r\n                gender: ''\r\n            })       \r\n        }\r\n        else{\r\n            this.refs.man.className = \"mypageUpdateBtn\";\r\n            e.target.className = 'mypageUpdateBtn clickMypageUpdateBtn';\r\n            \r\n            this.setState({\r\n                gender: '여자'\r\n            })\r\n        }\r\n    }\r\n    manClick=(e)=>{\r\n        if(e.target.className == 'mypageUpdateBtn clickMypageUpdateBtn'){\r\n            e.target.className = 'mypageUpdateBtn';\r\n            this.setState({\r\n                gender: ''\r\n            })         \r\n        }\r\n        else{\r\n            this.refs.woman.className = \"mypageUpdateBtn\";\r\n            e.target.className = 'mypageUpdateBtn clickMypageUpdateBtn';\r\n            this.setState({\r\n                gender: '남자'\r\n            })  \r\n        }\r\n    }\r\n\r\n    // 주소검색\r\n    handleTogglePost = () => {\r\n        var p = this.state.isDaumPost;\r\n        this.setState({\r\n            isDaumPost : !p\r\n        })\r\n    }\r\n\r\n    // postcode\r\n    handleAddress = (data) => {\r\n        let AllAddress = data.address;\r\n        let extraAddress = ''; \r\n        let zoneCodes = data.zonecode;\r\n        \r\n        if (data.addressType === 'R') {\r\n          if (data.bname !== '') {\r\n            extraAddress += data.bname;\r\n          }\r\n          if (data.buildingName !== '') {\r\n            extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n          }\r\n          AllAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\r\n        }\r\n        this.setState ({\r\n            fullAddress: AllAddress,\r\n            zoneCode : zoneCodes\r\n        })\r\n      }\r\n\r\n\r\n    // onAdd = (event) => {\r\n    //     const afterStateChange = () => {\r\n    //         event.affectedFiles\r\n    //             .filter(file => !file.validationErrors)\r\n    //             .forEach(file => {\r\n    //                 const reader = new FileReader();\r\n\r\n    //                 reader.onloadend = (ev) => {\r\n    //                     this.setState({\r\n    //                         filePreviews: {\r\n    //                             ...this.state.filePreviews,\r\n    //                             [file.uid]: ev.target.result\r\n    //                         }\r\n    //                     });\r\n    //                 };\r\n\r\n    //                 reader.readAsDataURL(file.getRawFile());\r\n    //             });\r\n    //     };\r\n\r\n    //     this.setState({\r\n    //         files: event.newState,\r\n    //         events: [\r\n    //             ...this.state.events,\r\n    //             `선택된 파일: ${event.affectedFiles[0].name}`\r\n    //         ],\r\n    //     }, afterStateChange);\r\n\r\n    //     uploadFile = event.affectedFiles[0].name;\r\n    // }\r\n\r\n    // onRemove = (event) => {\r\n    //     const filePreviews = {\r\n    //         ...this.state.filePreviews\r\n    //     };\r\n\r\n    //     event.affectedFiles.forEach(file => {\r\n    //         delete filePreviews[file.uid];\r\n    //     });\r\n\r\n    //     this.setState({\r\n    //         files: event.newState,\r\n    //         events: [\r\n    //             ...this.state.events,\r\n    //             `파일 제거됨: ${event.affectedFiles[0].name}`\r\n    //         ],\r\n    //         filePreviews: filePreviews\r\n    //     });\r\n    // }\r\n\r\n    // onProgress = (event) => {\r\n    //     this.setState({\r\n    //         files: event.newState,\r\n    //         events: [\r\n    //             ...this.state.events,\r\n    //             `진행 정도: ${event.affectedFiles[0].progress} %`\r\n    //         ]\r\n    //     });\r\n    // }\r\n\r\n    // onStatusChange = (event) => {\r\n    //     const file = event.affectedFiles[0];\r\n\r\n    //     this.setState({\r\n    //         files: event.newState,\r\n    //         events: [\r\n    //             ...this.state.events,\r\n    //             `File '${file.name}' status changed to: ${fileStatuses[file.status]}`\r\n    //         ]\r\n    //     });\r\n    // }\r\n    \r\n    handleDelete = () => {\r\n        let url = URL + \"/member/delupload\";\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    photo:''\r\n                })\r\n            })\r\n    };\r\n\r\n    render() {\r\n\r\n        const chip = this.state.photo==''?\"\":<Chip\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                label={this.state.photo}\r\n                                                onDelete={this.handleDelete.bind(this)}\r\n                                            />;\r\n\r\n        return (\r\n            <div>\r\n                {/* 날라가는 새 애니메이션 */}\r\n                <div class=\"signImg\">\r\n                    <img src={jejuImg} alt=\"\"/>\r\n                </div>\r\n                <div class=\"container\">\r\n                    <div class=\"bird-container bird-container--one\">\r\n                        <div class=\"bird bird--one\"></div>\r\n                    </div>\r\n                    <div class=\"bird-container bird-container--two\">\r\n                        <div class=\"bird bird--two\"></div>\r\n                    </div>\r\n                    <div class=\"bird-container bird-container--three\">\r\n                        <div class=\"bird bird--three\"></div>\r\n                    </div>\r\n                    <div class=\"bird-container bird-container--four\">\r\n                        <div class=\"bird bird--four\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n            <div id=\"SignupForm\" style={{textAlign: 'center', position: 'relative'}}>\r\n                <table class=\"table table-bordered\">\r\n                    <caption style={{captionSide: 'top', textAlign: 'center'}}><b>회원가입</b></caption>\r\n                    <tr>\r\n                        <td colSpan=\"2\">\r\n                            <input type=\"text\" name = \"id\" class=\"form-control\" value = {this.state.id} onChange={this.changeEvent.bind(this)} \r\n                                placeholder=\"아이디\"/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan=\"2\" style={{backgroundColor: '#036E38', color: 'white', cursor: 'pointer'}} onClick={this.onIdChk.bind(this)}>\r\n                            아이디 중복 검사\r\n                        </td>\r\n                    </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <input type=\"password\" name = \"password\" class=\"form-control\" value = {this.state.password} onChange={this.changeEvent.bind(this)} \r\n                                    placeholder=\"비밀번호\"/>\r\n                            </td>\r\n                            <td>\r\n                                <input type=\"password\" name = \"pwCheck\" class=\"form-control\" value = {this.state.pwCheck} onChange={this.changeEvent.bind(this)} \r\n                                    placeholder=\"비밀번호 확인\"/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <input type=\"text\" name = \"name\" class=\"form-control\" value = {this.state.name} \r\n                                    onChange={this.changeEvent.bind(this)} placeholder=\"이름\" required/>\r\n                                \r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"mypageUpdateBtn\" ref=\"woman\" onClick={this.womanClick.bind(this)}>여자</td>\r\n                            <td className=\"mypageUpdateBtn\" ref=\"man\" onClick={this.manClick.bind(this)}>남자</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\" style={{padding: '0'}}>\r\n                                프로필 사진&nbsp;\r\n                                <input style={{display:'none'}} id=\"sign-icon-button-file\" name = \"photo\" type=\"file\" onChange={this.imageUpload.bind(this)}/>\r\n                                    <label htmlFor=\"sign-icon-button-file\">\r\n                                        \r\n                                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                            <PhotoCamera />\r\n                                        </IconButton>  \r\n                                    </label>\r\n                                    {chip}\r\n                                {/* <input type=\"file\" name = \"photo\" onChange={this.imageUpload.bind(this)}/> */}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <input type=\"text\" name = \"address\" class=\"form-control\" value = {this.state.fullAddress} placeholder=\"주소\" disabled required/>\r\n                                <br/>\r\n                                <input type=\"text\" name = \"addrdetail\" class=\"form-control\" value = {this.state.addrdetail} onChange={this.changeEvent.bind(this)} \r\n                                    placeholder=\"상세주소\" required/>\r\n                                \r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\" onClick={this.handleTogglePost.bind(this)} style={{backgroundColor: '#036E38', color: 'white', cursor: 'pointer'}}>\r\n                                주소검색\r\n                                {\r\n                                    this.state.isDaumPost ?\r\n                                        <DaumPostcode\r\n                                            onComplete={this.handleAddress.bind(this)}\r\n                                            autoClose\r\n                                            className=\"postSearchModal\"\r\n                                            isDaumPost={this.state.isDaumPost}\r\n                                            />\r\n                                    : null\r\n                                }\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <input type=\"text\" name = \"email\" value = {this.state.email} className=\"mypageUpdateAddr\" onChange={this.changeEvent.bind(this)} \r\n                                    placeholder=\"이메일\" required/>@\r\n                                <input type=\"text\" name = \"email2\" value = {this.state.email2} className=\"mypageUpdateAddr\" onChange={this.changeEvent.bind(this)} required/>\r\n                                &nbsp;\r\n                                <select name=\"selectemail\" className=\"mypageUpdateAddr\" onChange={this.changeEmail}>\r\n                                    <option disabled>선택하세요</option>\r\n                                    <option value=\"\">직접입력</option>\r\n                                    <option value=\"naver.com\">naver.com</option>\r\n                                    <option value=\"gmail.com\">gmail.com</option>\r\n                                    <option value=\"nate.com\">nate.com</option> \r\n                                </select>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\"><input type=\"text\" class=\"form-control\" name = \"hp\" value = {this.state.hp} onChange={this.changeEvent.bind(this)} \r\n                                placeholder=\"휴대폰 번호\" required/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"mypageUpdateBtn\" colSpan=\"2\" onClick={this.onInsertMember.bind(this)}>\r\n                                <span>회원 가입</span>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                    {/* alert 창 */}\r\n                    <Dialog\r\n                        open={this.state.alertOpen}\r\n                        onClose={()=>{\r\n                            this.setState({\r\n                                alertOpen: false\r\n                            })\r\n                        }}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\" style={{textAlign: 'center'}}><b>즐거운 제주도 여행되세요.</b></DialogTitle>\r\n                        <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            <img src={welcomeImg} alt=\"\" style={{width: '100%'}}/>\r\n                            \r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                        {/* <Button onClick={this.alertClose.bind(this)} color=\"primary\">\r\n                            NO\r\n                        </Button> */}\r\n                        <Button onClick={\r\n                            ()=>{\r\n                                this.setState({\r\n                                    alertOpen: false\r\n                                })\r\n                                this.props.history.push(\"/login\");\r\n                            }\r\n                        } color=\"primary\" autoFocus>\r\n                            YES\r\n                        </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nSignupPageComp.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default SignupPageComp;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\theme.js",[],"C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\WaveBorder.js",["538","539","540","541"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport jeju1 from \"../../../image/jeju1.jpg\";\r\nimport jeju2 from \"../../../image/jeju2.jpg\";\r\nimport jeju3 from \"../../../image/jeju3.jpeg\";\r\nimport udo1 from \"../../../image/udo1.jpg\";\r\nimport Logo2 from \"../../../image/logo2.png\";\r\n\r\nconst styles = {\r\n    waves: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        marginBottom: -7,\r\n        height: \"7vw\",\r\n        minHeight: \"7vw\",\r\n        // \"z-index\": \"-5\",\r\n        // bottom: \"-1000\",\r\n    },\r\n    \"@keyframes moveForever\": {\r\n        from: {transform: \"translate3d(-90px, 0, 0)\"},\r\n        to: {transform: \"translate3d(85px, 0, 0)\"}\r\n    },\r\n    parallax: {\r\n        \"& > use\": {\r\n            animation: \"$moveForever 4s cubic-bezier(0.62, 0.5, 0.38, 0.5) infinite\",\r\n            animationDelay: props => `-${props.animationNegativeDelay}s`\r\n        }\r\n    },\r\n    content: {\r\n        textAlign: \"center\",\r\n        backgroundColor: \"#2d55aa\",\r\n        // minHeight: \"75vh\",\r\n        // margin: \"-.1em 0 0 0\",\r\n        color: \"#ffdd55\",\r\n        fontSize: \"2em\",\r\n        fontWeight: \"300\",\r\n        userSelect: \"none\",\r\n        cursor: \"default\",\r\n        outline: \"none\",\r\n    },\r\n};\r\n\r\nfunction WaveBorder(props) {\r\n    const id = String(Math.random());\r\n    const {\r\n        className,\r\n        lowerColor,\r\n        upperColor,\r\n        classes,\r\n        animationNegativeDelay,\r\n        ...rest\r\n    } = props;\r\n    return (\r\n        <div className={className} style={{background: upperColor}} {...rest}>\r\n            {/* <img className=\"mainPhotoComp_img1\" src={jeju1}/> */}\r\n            <svg\r\n                className={classes.waves}\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                xlink=\"http://www.w3.org/1999/xlink\"\r\n                viewBox=\"0 24 150 28\"\r\n                preserveAspectRatio=\"none\"\r\n                shapeRendering=\"auto\">\r\n                <defs>\r\n                    <path\r\n                        id={id}\r\n                        d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\"\r\n                    />\r\n                </defs>\r\n                <g className={classes.parallax}>\r\n                    <use href={`#${id}`} x=\"48\" y=\"6\" fill={lowerColor}/>\r\n                </g>\r\n            </svg>\r\n            {/*<div className=\"footerComp\">*/}\r\n            <div>\r\n                {/* <hr/> */}\r\n                <div className=\"content\">\r\n                    <br/>\r\n                    <img src={Logo2}\r\n                         style={{width: \"150px\"}}\r\n                         alt=\"logo2\"/>\r\n                    <br/>\r\n                    (주)멘도롱소랑 | 경기도 서초구 강남대로 459 (서초동 1300-34)<br/>\r\n                    사업자 번호 147-14-12345 | 전화번호:02-123-1234 | 팩스 02-1234-1234 | 이메일 help@naver.com\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nWaveBorder.propTypes = {\r\n    lowerColor: PropTypes.string.isRequired,\r\n    upperColor: PropTypes.string.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    animationNegativeDelay: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(WaveBorder);\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\NoticeMiniComp.js",["542","543","544","545"],"import React, {Component} from \"react\";\r\nimport PlusImg from \"../../../image/plus.png\";\r\n\r\nclass NoticeMiniComp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br/>\r\n                <h5>공지사항</h5>\r\n                <button>\r\n                    <img src={PlusImg}\r\n                         style={{width: \"50px\"}}\r\n                    />\r\n                </button>\r\n                <table className=\"noticeList\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>제목</th>\r\n                        <th>작성일</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.props.list.map(function (e, i) {\r\n                        // console.log(i, e);\r\n                        if (i < 5) {\r\n                            return (\r\n                                <tr key={i}>\r\n                                    <td>\r\n                                        <a href=\"#\">\r\n                                            <span>{e.subject}</span>\r\n                                        </a>\r\n                                    </td>\r\n                                    <td>{e.writeday}</td>\r\n                                </tr>\r\n                            );\r\n                        } else {\r\n\r\n                        }\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default NoticeMiniComp;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\SearchComp.js",["546","547","548","549","550","551","552"],"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {actionType, URL} from \"../../../redux/config\";\r\nimport axios from \"axios\";\r\nimport store from \"../../../redux/store\";\r\nimport './MyPlanComp.css';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        // margin: theme.spacing(1),\r\n        // minWidth: 120,\r\n        width: \"150px\",\r\n        // height:\"40px\"\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            // margin: theme.spacing(1),\r\n            width: '300px',\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nexport default function SearchComp(props) {\r\n\r\n    const classes = useStyles();\r\n    const [category, setCategory] = React.useState(\"all\");\r\n    const [searchVal, setSearchVal] = React.useState(\"\");\r\n    const [searchDataList, setSearchDataList] = React.useState(null);\r\n    // console.log(\"SearchComp props\", props);\r\n\r\n    const setCategoryHandler = (e) => {\r\n        // console.log(e.target.value);\r\n        setCategory(e.target.value);\r\n    };\r\n\r\n    const setSearchValHandler = (e) => {\r\n        // console.log(e.target.value);\r\n        setSearchVal(e.target.value);\r\n\r\n    }\r\n\r\n    //input 내용에 따라 버튼 색깔 변화\r\n    const updateButtonType = () => {\r\n        const searchButton = document.querySelector(\".searchButton\");\r\n\r\n        if (searchButton == null) {   //초반에 null일경우 스킵.\r\n            return;\r\n        }\r\n\r\n        if (searchVal == \"\") {\r\n            searchButton.classList.remove(\"MuiButton-containedPrimary\");\r\n        } else {\r\n            if (!searchButton.classList.contains(\"MuiButton-containedPrimary\")) {\r\n                searchButton.classList.add(\"MuiButton-containedPrimary\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const doSearchHandler = () => {\r\n        console.log(category, searchVal);\r\n\r\n        store.dispatch({\r\n            type: actionType.setSearchResultDataList,\r\n            category: category,\r\n            searchVal: searchVal,\r\n            searchResultDataList: [],\r\n        });\r\n\r\n        ///search/:category?/:keyword?\r\n        props.history.push(`/search/${category}/${searchVal}/1`);\r\n\r\n        /*\r\n        //search action.\r\n        let perPage = 10;\r\n        let url = URL + \"/spot/searchlist\" +\r\n            \"?start=0\" +\r\n            \"&perPage=\" + perPage +\r\n            \"&category=\" + category +\r\n            \"&search=\" + searchVal;\r\n\r\n        console.log(url);\r\n\r\n        axios.get(url\r\n        ).then(res => {\r\n            console.log(\"doSearchHandler() res:\", res.data, searchDataList);\r\n            setSearchDataList(res.data);\r\n\r\n            //dispatch\r\n            store.dispatch({\r\n                type: actionType.setSearchResultDataList,\r\n                category: category,\r\n                searchVal: searchVal,\r\n                searchResultDataList: res.data,\r\n            });\r\n\r\n            ///search/:category?/:keyword?\r\n            props.history.push(`/search/${category}/${searchVal}/1`);\r\n        }).catch(err => {\r\n            console.log(\"doSearchHandler() err:\", err);\r\n        });\r\n\r\n        */\r\n    }\r\n\r\n    return (\r\n        // <div className=\"searchComp\"\r\n        //      style={{height: \"500px\", padding: \"20px\"}}\r\n        // >\r\n        <div className=\"searchComp\"\r\n        >\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">Category</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    value={category}\r\n                    onChange={setCategoryHandler}\r\n                    label=\"Category\"\r\n                >\r\n                    <MenuItem value=\"all\">\r\n                        <em>All</em>\r\n                    </MenuItem>\r\n                    <MenuItem value=\"area\">Area</MenuItem>\r\n                    <MenuItem value=\"spot\">Spot</MenuItem>\r\n                    <MenuItem value=\"tag\">Tag</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            <br/><br/>\r\n            <TextField id=\"outlined-basic\" label=\"Input For Search.\" variant=\"outlined\"\r\n                       autoComplete=\"off\" className={classes.root}\r\n                       value={searchVal}\r\n                       onChange={setSearchValHandler}\r\n                       onKeyDown={(e)=>{\r\n                           if(e.code == \"Enter\"){\r\n                               doSearchHandler();\r\n                           }\r\n                       }}\r\n            />\r\n            <br/><br/>\r\n            <Button variant=\"contained\" color=\"primary\" className=\"searchButton\"\r\n                    onClick={doSearchHandler}\r\n            > Search </Button>\r\n            {updateButtonType()}\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n//활성화\r\n//<button class=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary\" tabindex=\"0\" type=\"button\">\r\n// <span class=\"MuiButton-label\">Search</span>\r\n// <span class=\"MuiTouchRipple-root\"></span>\r\n// </button>\r\n\r\n\r\n\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\HotPlaceComp.js",["553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589"],"import React, {Component, useEffect, useLayoutEffect, useState} from \"react\";\r\nimport {NavLink, Route} from \"react-router-dom\";\r\nimport store from \"../../../redux/store\";\r\nimport {actionType, arrJejuLoc_en, arrJejuLoc_ko, mainViewType} from \"../../../redux/config\";\r\nimport TourList from '../../header/menus/TourList';\r\nimport TourPageComp from '../tour/TourPageComp';\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport BoardSample from \"./BoardSample\";\r\nimport \"../tour/TourCss.css\"\r\nimport gsap from \"gsap\";\r\n\r\nimport img_s_jeju from \"../../../image/land_s/jeju_s.png\";\r\nimport img_s_jocheon from \"../../../image/land_s/jocheon_s.png\";\r\nimport img_s_gujwa from \"../../../image/land_s/gujwa_s.png\";\r\nimport img_s_sungsan from \"../../../image/land_s/sungsan_s.png\";\r\nimport img_s_pyoseon from \"../../../image/land_s/pyoseon_s.png\";\r\nimport img_s_namwon from \"../../../image/land_s/namwon_s.png\";\r\nimport img_s_seogwipo from \"../../../image/land_s/seogwipo_s.png\";\r\nimport img_s_andeok from \"../../../image/land_s/andeok_s.png\";\r\nimport img_s_daejung from \"../../../image/land_s/daejung_s.png\";\r\nimport img_s_hangyeong from \"../../../image/land_s/hangyeong_s.png\";\r\nimport img_s_hanrim from \"../../../image/land_s/hanrim_s.png\";\r\nimport img_s_aewol from \"../../../image/land_s/aewol_s.png\";\r\nimport img_s_udo from \"../../../image/land_s/udo_s.png\";\r\nimport img_wholeMap from \"../../../image/land/jejuisland_d.png\";\r\n\r\n// function TabPanel(props) {\r\n//     const {children, value, index, ...other} = props;\r\n//\r\n//     // photos, setPhotos 비구조화 할당\r\n//     let [photos, setPhotos] = useState([]);\r\n//\r\n//     // 통신 메서드\r\n//     function searchApi() {\r\n//         const url = URL + '/spot/list';\r\n//\r\n//         axios.get(url\r\n//         ).then(function (response) {\r\n//             setPhotos(response.data);\r\n//             console.log(\"/spot/list\", response);\r\n//         }).catch(function (error) {\r\n//             console.log(\"/spot/list\", error);\r\n//         })\r\n//     }\r\n//\r\n//     return (\r\n//         <div\r\n//             role=\"tabpanel\"\r\n//             hidden={value !== index}\r\n//             id={`simple-tabpanel-${index}`}\r\n//             aria-labelledby={`simple-tab-${index}`}\r\n//             {...other}\r\n//         >\r\n//             {value === index && (\r\n//                 <Box p={3}>\r\n//                     <Typography>{children}</Typography>\r\n//                 </Box>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// TabPanel.propTypes = {\r\n//     children: PropTypes.node,\r\n//     index: PropTypes.any.isRequired,\r\n//     value: PropTypes.any.isRequired,\r\n// };\r\n//\r\n// function a11yProps(index) {\r\n//     return {\r\n//         id: `simple-tab-${index}`,\r\n//         'aria-controls': `simple-tabpanel-${index}`,\r\n//     };\r\n// }\r\n\r\nexport default function HotPlaceComp(props) {\r\n    const [value, setValue] = React.useState(2);\r\n    const [selectedLocationIdx, setSelectedLocationIdx] = React.useState(0);\r\n    const [isLocationOn, setIsLocationOn] = React.useState(false);\r\n    const [scrollYVal, setScrollYVal] = React.useState(0);\r\n\r\n    window.addEventListener(\"scroll\", () => {\r\n        setScrollYVal(window.scrollY);\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        setActionLocationEvent();\r\n    }, [scrollYVal])\r\n\r\n    const handleChange = (event, newValue) => {\r\n        // console.log(event, newValue);\r\n        setValue(newValue);\r\n    };\r\n\r\n    const setMainView = (mainView) => {\r\n        // console.log(\"HotPlaceComp setMainView()\");\r\n        store.dispatch({\r\n            type: actionType.setMainView,\r\n            mainView: mainView\r\n        });\r\n    }\r\n\r\n    const clickLocation = (e) => {\r\n        e.preventDefault();\r\n        setSelectedLocationIdx(e.target.dataset.idx);\r\n\r\n    }\r\n\r\n    // window.onmousewheel = function (e) {\r\n    //     // console.log(window.scrollY);\r\n    //     setActionLocationEvent(window.scrollY);\r\n    // }.bind(this);\r\n    //\r\n    // window.onscroll = function (e) {\r\n    //     // console.log(window.scrollY);\r\n    //     setActionLocationEvent(window.scrollY);\r\n    // }.bind(this);\r\n\r\n    const setActionLocationEvent = () => {\r\n        let scrollVal = window.scrollY;\r\n        // console.log(isLocationOn);\r\n        if (scrollVal > 550) {\r\n            if (!isLocationOn) {\r\n                setIsLocationOn(true);\r\n                let timeStack = 0;\r\n                let timeSnap = 0.1;\r\n\r\n                //land part img on\r\n                for (let i = 2; i <= 14; i++) {\r\n                    let _tempStr = `div.btn_go img:nth-child(${i})`;\r\n                    gsap.killTweensOf(_tempStr);\r\n\r\n                    // console.log(_tempStr, document.querySelector(_tempStr));\r\n                    document.querySelector(_tempStr).style.visibility = \"visible\";\r\n                    document.querySelector(_tempStr).style.opacity = 0;\r\n                    gsap.fromTo(_tempStr, {\r\n                        y: 50,\r\n                    }, {\r\n                        y: 0,\r\n                        opacity: 1,\r\n                        duration: 1,\r\n                        delay: (timeSnap * (i - 1)),\r\n                    });\r\n                }\r\n\r\n                timeStack = timeSnap * 13 + 0.5;\r\n\r\n                //img_wholeMap on\r\n                gsap.killTweensOf(\"div.btn_go img.img_wholeMap\");\r\n                gsap.to(\"div.btn_go img.img_wholeMap\", {\r\n                    opacity: 1,\r\n                    duration: 1,\r\n                    delay: timeStack,\r\n                });\r\n\r\n                timeStack += 0.5;\r\n                //land part img off\r\n                for (let i = 2; i <= 14; i++) {\r\n                    let _tempStr = `div.btn_go img:nth-child(${i})`;\r\n                    // console.log(_tempStr, document.querySelector(_tempStr));\r\n                    gsap.to(_tempStr, {\r\n                        opacity: 0,\r\n                        duration: 1,\r\n                        delay: timeStack,\r\n                    });\r\n                }\r\n\r\n                //land caption div on\r\n                gsap.killTweensOf(\"div.hotPlace_location div.btn_go div\");\r\n                gsap.to(\"div.hotPlace_location div.btn_go div\", {\r\n                    opacity: 1,\r\n                    duration: 1,\r\n                    delay: timeStack,\r\n                });\r\n            }\r\n        } else {\r\n            setIsLocationOn(false);\r\n            // console.log(\"setIsLocationOn(false);\");\r\n\r\n            //land part img off\r\n            for (let i = 2; i <= 14; i++) {\r\n                let _tempStr = `div.btn_go img:nth-child(${i})`;\r\n                gsap.killTweensOf(_tempStr);\r\n                // console.log(_tempStr, document.querySelector(_tempStr));\r\n                document.querySelector(_tempStr).style.visibility = \"visible\";\r\n                document.querySelector(_tempStr).style.opacity = 0;\r\n            }\r\n\r\n            //img_wholeMap off\r\n            gsap.killTweensOf(\"div.btn_go img.img_wholeMap\");\r\n            document.querySelector(\"div.btn_go img.img_wholeMap\").style.opacity = 0;\r\n\r\n            //land caption div off\r\n            gsap.killTweensOf(\"div.hotPlace_location div.btn_go div\");\r\n            // console.log(document.querySelectorAll(\"div.hotPlace_location div.btn_go div\"));\r\n            document.querySelectorAll(\"div.hotPlace_location div.btn_go div\")\r\n                .forEach((e, i, all) => {\r\n                    e.style.opacity = 0;\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    const mouseOverEventJejuMap = (e) => {\r\n        // console.log(\"mouseOverEventJejuMap\", e.target.dataset);\r\n\r\n        // let selectedLoc = document.getElementById(\"btn_go_\" + e.target.dataset.location_en);\r\n        // console.log(selectedLoc);\r\n        // selectedLoc.style.visibility = \"visible\";\r\n        gsap.to(\"#btn_go_\" + e.target.dataset.location_en, {\r\n            opacity: 1,\r\n            duration: 0.3,\r\n        });\r\n    }\r\n\r\n    const mouseLeaveEventJejuMap = (e) => {\r\n        // console.log(\"mouseLeaveEventJejuMap\", e.target.dataset);\r\n\r\n        // let selectedLoc = document.getElementById(\"btn_go_\" + e.target.dataset.location_en);\r\n        // console.log(selectedLoc);\r\n        // selectedLoc.style.visibility = \"hidden\";\r\n        gsap.to(\"#btn_go_\" + e.target.dataset.location_en, {\r\n            opacity: 0,\r\n            duration: 0.3,\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"hotPlaceComp\">\r\n            <div className=\"hotPlace_location\">\r\n                <div className=\"btn_go\">\r\n                    <img className=\"img_wholeMap\" src={img_wholeMap}/>\r\n                    <img id=\"btn_go_jeju\"       src={img_s_jeju}        />\r\n                    <img id=\"btn_go_jocheon\"    src={img_s_jocheon}     />\r\n                    <img id=\"btn_go_gujwa\"      src={img_s_gujwa}       />\r\n                    <img id=\"btn_go_sungsan\"    src={img_s_sungsan}     />\r\n                    <img id=\"btn_go_pyoseon\"    src={img_s_pyoseon}     />\r\n                    <img id=\"btn_go_namwon\"     src={img_s_namwon}      />\r\n                    <img id=\"btn_go_seogwipo\"   src={img_s_seogwipo}    />\r\n                    <img id=\"btn_go_andeok\"     src={img_s_andeok}      />\r\n                    <img id=\"btn_go_daejung\"    src={img_s_daejung}     />\r\n                    <img id=\"btn_go_hangyeong\"  src={img_s_hangyeong}   />\r\n                    <img id=\"btn_go_hanrim\"     src={img_s_hanrim}      />\r\n                    <img id=\"btn_go_aewol\"      src={img_s_aewol}       />\r\n                    <img id=\"btn_go_udo\"        src={img_s_udo}         />\r\n\r\n                    {\r\n                        arrJejuLoc_en.map((e, i) => (\r\n                            <div className={e} key={i}>\r\n                                <a href=\"#\"\r\n                                   onMouseLeave={mouseLeaveEventJejuMap}\r\n                                   onMouseOver={mouseOverEventJejuMap}\r\n                                   onClick={clickLocation.bind(this)}\r\n                                   data-location_en={e}\r\n                                   data-location_kr={arrJejuLoc_ko[i]}\r\n                                   data-idx={i}\r\n                                >{arrJejuLoc_ko[i]}\r\n                                </a>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"hotPlace_sample\">\r\n                <BoardSample idx={selectedLocationIdx}\r\n                             history={props.history}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n/*\r\n<img id=\"btn_go_jeju\"       src={img_s_jeju}        />\r\n<img id=\"btn_go_jocheon\"    src={img_s_jocheon}     />\r\n<img id=\"btn_go_gujwa\"      src={img_s_gujwa}       />\r\n<img id=\"btn_go_sungsan\"    src={img_s_sungsan}     />\r\n<img id=\"btn_go_pyoseon\"    src={img_s_pyoseon}     />\r\n<img id=\"btn_go_namwon\"     src={img_s_namwon}      />\r\n<img id=\"btn_go_andeok\"     src={img_s_andeok}      />\r\n<img id=\"btn_go_daejung\"    src={img_s_daejung}     />\r\n<img id=\"btn_go_hangyeong\"  src={img_s_hangyeong}   />\r\n<img id=\"btn_go_hanrim\"     src={img_s_hanrim}      />\r\n<img id=\"btn_go_aewol\"      src={img_s_aewol}       />\r\n<img id=\"btn_go_udo\"        src={img_s_udo}         />\r\n<img id=\"btn_go_seogwipo\"   src={img_s_seogwipo}    />\r\n*/\r\n/*\r\n                    <div className=\"jeju\">     <a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"jeju     \"  data-location_kr=\"제주\"  >제주   </a> </div>   <img id=\"btn_go_jeju\"       src={img_s_jeju       }/>\r\n                    <div className=\"jocheon\">  <a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"jocheon  \"  data-location_kr=\"조천\"  >조천   </a> </div>   <img id=\"btn_go_jocheon\"    src={img_s_jocheon    }/>\r\n                    <div className=\"gujwa\">    <a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"gujwa    \"  data-location_kr=\"구좌\"  >구좌   </a> </div>   <img id=\"btn_go_gujwa\"      src={img_s_gujwa      }/>\r\n                    <div className=\"sungsan\">  <a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"sungsan  \"  data-location_kr=\"성산\"  >성산   </a> </div>   <img id=\"btn_go_sungsan\"    src={img_s_sungsan    }/>\r\n                    <div className=\"pyoseon\">  <a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"pyoseon  \"  data-location_kr=\"표선\"  >표선   </a> </div>   <img id=\"btn_go_pyoseon\"    src={img_s_pyoseon    }/>\r\n                    <div className=\"namwon\">   <a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"namwon   \"  data-location_kr=\"남원\"  >남원   </a> </div>   <img id=\"btn_go_namwon\"     src={img_s_namwon     }/>\r\n                    <div className=\"andeok\">   <a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"andeok   \"  data-location_kr=\"안덕\"  >안덕   </a> </div>   <img id=\"btn_go_andeok\"     src={img_s_andeok     }/>\r\n                    <div className=\"daejung\">  <a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"daejung  \"  data-location_kr=\"대정\"  >대정   </a> </div>   <img id=\"btn_go_daejung\"    src={img_s_daejung    }/>\r\n                    <div className=\"hangyeong\"><a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"hangyeong\"  data-location_kr=\"한경\"  >한경   </a> </div>   <img id=\"btn_go_hangyeong\"  src={img_s_hangyeong  }/>\r\n                    <div className=\"hanrim\">   <a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"hanrim   \"  data-location_kr=\"한림\"  >한림   </a> </div>   <img id=\"btn_go_hanrim\"     src={img_s_hanrim     }/>\r\n                    <div className=\"aewol\">    <a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"aewol    \"  data-location_kr=\"애월\"  >애월   </a> </div>   <img id=\"btn_go_aewol\"      src={img_s_aewol      }/>\r\n                    <div className=\"udo\">      <a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"udo      \"  data-location_kr=\"우도\"  >우도   </a> </div>   <img id=\"btn_go_udo\"        src={img_s_udo        }/>\r\n                    <div className=\"seogwipo\"> <a href=\"#\"  onMouseLeave={mouseLeaveEventJejuMap}  onMouseOver={mouseOverEventJejuMap}   onClick={clickLocation.bind(this)} data-location_en=\"seogwipo \"  data-location_kr=\"서귀포\" >서귀포  </a> </div>  <img id=\"btn_go_seogwipo\"   src={img_s_seogwipo   }/>\r\n\r\n */\r\n\r\n/*\r\nimport img_s_jeju       from \"../../../image/land_s/jeju_s.png\";\r\nimport img_s_jocheon    from \"../../../image/land_s/jocheon_s.png\";\r\nimport img_s_gujwa      from \"../../../image/land_s/gujwa_s.png\";\r\nimport img_s_sungsan    from \"../../../image/land_s/sungsan_s.png\";\r\nimport img_s_pyoseon    from \"../../../image/land_s/pyoseon_s.png\";\r\nimport img_s_namwon     from \"../../../image/land_s/namwon_s.png\";\r\nimport img_s_seogwipo   from \"../../../image/land_s/seogwipo_s.png\";\r\nimport img_s_andeok     from \"../../../image/land_s/andeok_s.png\";\r\nimport img_s_daejung    from \"../../../image/land_s/daejung_s.png\";\r\nimport img_s_hangyeong  from \"../../../image/land_s/hangyeong_s.png\";\r\nimport img_s_hanrim     from \"../../../image/land_s/hanrim_s.png\";\r\nimport img_s_aewol      from \"../../../image/land_s/aewol_s.png\";\r\nimport img_s_udo        from \"../../../image/land_s/udo_s.png\";\r\n\r\nimport img_jeju         from \"../../../image/land/jeju.png\";\r\nimport img_jocheon      from \"../../../image/land/jocheon.png\";\r\nimport img_gujwa        from \"../../../image/land/gujwa.png\";\r\nimport img_sungsan      from \"../../../image/land/sungsan.png\";\r\nimport img_pyoseon      from \"../../../image/land/pyoseon.png\";\r\nimport img_namwon       from \"../../../image/land/namwon.png\";\r\nimport img_seogwipo     from \"../../../image/land/seogwipo.png\";\r\nimport img_andeok       from \"../../../image/land/andeok.png\";\r\nimport img_daejung      from \"../../../image/land/daejung.png\";\r\nimport img_hangyeong    from \"../../../image/land/hangyeong.png\";\r\nimport img_hanrim       from \"../../../image/land/hanrim.png\";\r\nimport img_aewol        from \"../../../image/land/aewol.png\";\r\nimport img_udo          from \"../../../image/land/udo.png\";\r\n */\r\n\r\n/*\r\n<div className=\"btn_go\">\r\n    <div className=\"jeju\">          <a href=\"#\">제주</a>      </div>  <img id=\"btn_go_jeju\"       src={img_jeju     }  />\r\n    <div className=\"jocheon\">       <a href=\"#\">조천</a>      </div>  <img id=\"btn_go_jocheon\"    src={img_jocheon  }  />\r\n    <div className=\"gujwa\">         <a href=\"#\">구좌</a>      </div>  <img id=\"btn_go_gujwa\"      src={img_gujwa    }  />\r\n    <div className=\"sungsan\">       <a href=\"#\">성산</a>      </div>  <img id=\"btn_go_sungsan\"    src={img_sungsan  }  />\r\n    <div className=\"pyoseon\">       <a href=\"#\">표선</a>      </div>  <img id=\"btn_go_pyoseon\"    src={img_pyoseon  }  />\r\n    <div className=\"namwon\">        <a href=\"#\">남원</a>      </div>  <img id=\"btn_go_namwon\"     src={img_namwon   }  />\r\n    <div className=\"seogwipo\">      <a href=\"#\">서귀</a>      </div>  <img id=\"btn_go_seogwipo\"   src={img_seogwipo }  />\r\n    <div className=\"andeok\">        <a href=\"#\">안덕</a>      </div>  <img id=\"btn_go_andeok\"     src={img_andeok   }  />\r\n    <div className=\"daejung\">       <a href=\"#\">대정</a>      </div>  <img id=\"btn_go_daejung\"    src={img_daejung  }  />\r\n    <div className=\"hangyeong\">     <a href=\"#\">한경</a>      </div>  <img id=\"btn_go_hangyeong\"  src={img_hangyeong}  />\r\n    <div className=\"hanrim\">        <a href=\"#\">한림</a>      </div>  <img id=\"btn_go_hanrim\"     src={img_hanrim   }  />\r\n    <div className=\"aewol\">         <a href=\"#\">애월</a>      </div>  <img id=\"btn_go_aewol\"      src={img_aewol    }  />\r\n    <div className=\"udo\">           <a href=\"#\">우도</a>      </div>  <img id=\"btn_go_udo\"        src={img_udo      }  />\r\n</div>\r\n */\r\n\r\n/*\r\n    <a href=\"#\" data-location=\"제주\" onClick={clickLocation.bind(this)}>제주</a>\r\n    <a href=\"#\" data-location=\"조천\" onClick={clickLocation.bind(this)}>조천</a>\r\n    <a href=\"#\" data-location=\"구좌\" onClick={clickLocation.bind(this)}>구좌</a>\r\n    <a href=\"#\" data-location=\"성산\" onClick={clickLocation.bind(this)}>성산</a>\r\n    <a href=\"#\" data-location=\"표선\" onClick={clickLocation.bind(this)}>표선</a>\r\n    <a href=\"#\" data-location=\"남원\" onClick={clickLocation.bind(this)}>남원</a>\r\n    <a href=\"#\" data-location=\"서귀\" onClick={clickLocation.bind(this)}>서귀</a>\r\n    <a href=\"#\" data-location=\"안덕\" onClick={clickLocation.bind(this)}>안덕</a>\r\n    <a href=\"#\" data-location=\"대정\" onClick={clickLocation.bind(this)}>대정</a>\r\n    <a href=\"#\" data-location=\"한경\" onClick={clickLocation.bind(this)}>한경</a>\r\n    <a href=\"#\" data-location=\"한림\" onClick={clickLocation.bind(this)}>한림</a>\r\n    <a href=\"#\" data-location=\"애월\" onClick={clickLocation.bind(this)}>애월</a>\r\n    <a href=\"#\" data-location=\"우도\" onClick={clickLocation.bind(this)}>우도</a>\r\n */\r\n\r\n/*\r\n<Paper square>\r\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n                    <Tab label=\"Jeju\" {...a11yProps(0)} />\r\n                    <Tab label=\"Jocheon\" {...a11yProps(1)} />\r\n                    <Tab label=\"Gujwa\" {...a11yProps(2)} />\r\n                    <Tab label=\"Sungsan\" {...a11yProps(3)} />\r\n                    <Tab label=\"Pyoseon\" {...a11yProps(4)} />\r\n                    <Tab label=\"Namwon\" {...a11yProps(5)} />\r\n                    <Tab label=\"Seogwipo\" {...a11yProps(6)} />\r\n                    <Tab label=\"Andeok\" {...a11yProps(7)} />\r\n                    <Tab label=\"Daejung\" {...a11yProps(8)} />\r\n                    <Tab label=\"Hangyeong\" {...a11yProps(9)} />\r\n                    <Tab label=\"Hanrim\" {...a11yProps(10)} />\r\n                    <Tab label=\"Aewol\" {...a11yProps(11)} />\r\n                    <Tab label=\"Udo\" {...a11yProps(12)} />\r\n                </Tabs>\r\n                <TabPanel value={value} index={0}>\r\n                    <BoardSample/>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={3}>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={4}>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={5}>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={6}>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={7}>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={8}>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={9}>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={10}>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={11}>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={12}>\r\n                </TabPanel>\r\n            </Paper>\r\n */\r\n\r\n\r\n/*\r\n<a href=\"/tourlist/jeju     \">제주</a>\r\n<a href=\"/TourList/jocheon  \">조천</a>\r\n<a href=\"/TourList/gujwa    \">구좌</a>\r\n<a href=\"/TourList/sungsan  \">성산</a>\r\n<a href=\"/TourList/pyoseon  \">표선</a>\r\n\r\n<a href=\"/TourList/namwon   \">남원</a>\r\n<a href=\"/TourList/seogwipo \">서귀</a><br/>\r\n<a href=\"/TourList/andeok   \">안덕</a>\r\n<a href=\"/TourList/daejung  \">대정</a>\r\n<a href=\"/TourList/hangyeong\">한경</a>\r\n\r\n<a href=\"/TourList/hanrim   \">한림</a>\r\n<a href=\"/TourList/aewol    \">애월</a>\r\n<a href=\"/TourList/udo      \">우도</a><br/><br/>\r\n*/\r\n\r\n\r\n{/* <NavLink exact to=\"/tourlist/jeju\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>제주</NavLink> */\r\n}\r\n{/* <NavLink exact to=\"/tourlist/jocheon\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>조천</NavLink>\r\n<NavLink exact to=\"/tourlist/gujwa\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>구좌</NavLink>\r\n<NavLink exact to=\"/tourlist/sungsan\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>성산</NavLink>\r\n<NavLink exact to=\"/tourlist/pyoseon\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>표선</NavLink>\r\n<NavLink exact to=\"/tourlist/namwon\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>남원</NavLink>\r\n<NavLink exact to=\"/tourlist/seogwipo\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>서귀포</NavLink>\r\n<br/>\r\n<NavLink exact to=\"/tourlist/andeok\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>안덕</NavLink>\r\n<NavLink exact to=\"/tourlist/daejung\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>대정</NavLink>\r\n<NavLink exact to=\"/tourlist/hangyeong\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>한경</NavLink>\r\n<NavLink exact to=\"/tourlist/hanrim\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>한림</NavLink>\r\n<NavLink exact to=\"/tourlist/aewol\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>애월</NavLink>\r\n<NavLink exact to=\"/tourlist/udo\"\r\n         onClick={() => {\r\n             console.log(\"TourList NavLink onClick\");\r\n             this.setMainView(mainViewType.TourList);\r\n         }}\r\n>우도</NavLink> */\r\n}\r\n\r\n\r\n// <Route path=\"/TourList/:name?\" component={TourList}></Route>\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\ShareBoardMiniComp.js",["590","591","592","593"],"import React, {Component} from \"react\";\r\nimport PlusImg from \"../../../image/plus.png\";\r\n\r\nclass ShareBoardMiniComp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br/>\r\n                <h5>공유게시판</h5>\r\n                <button>\r\n                    <img src={PlusImg}\r\n                         style={{width: \"50px\"}}\r\n                    />\r\n                </button>\r\n                <table className=\"shareBoardList\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>제목</th>\r\n                        <th>작성일</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.props.list.map(function (e, i) {\r\n                        // console.log(i, e);\r\n                        if (i < 5) {\r\n                            return (\r\n                                <tr key={i}>\r\n                                    <td>\r\n                                        <a href=\"#\">\r\n                                            <span>{e.subject}</span>\r\n                                        </a>\r\n                                    </td>\r\n                                    <td>{e.writeday}</td>\r\n                                </tr>\r\n                            );\r\n                        } else {\r\n\r\n                        }\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ShareBoardMiniComp;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\MainPhotoComp.js",["594","595","596","597","598"],"import React, {Component} from 'react';\r\nimport jeju1 from \"../../../image/jeju1.jpg\";\r\nimport jeju2 from \"../../../image/jeju2.jpg\";\r\nimport jeju3 from \"../../../image/jeju3.jpeg\";\r\nimport udo1 from \"../../../image/udo1.jpg\";\r\nimport gsap from \"gsap\";\r\n// import WaveBorder from \"./WaveBorder\";\r\n// import {createMuiTheme, MuiThemeProvider, WithStyles} from \"@material-ui/core\";\r\n// import {ThemeProvider} from 'styled-components';\r\n// import theme from \"./theme\";\r\n// import PropTypes from \"prop-types\";\r\n// import styledComponents from \"styled-components\";\r\n\r\nclass MainPhotoComp extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n    }\r\n\r\n    setImageScroll = (photoNum, preNum = 4) => {\r\n        const duration = 3;\r\n        const imgCnt = 4;\r\n        let arrImg = [];\r\n\r\n        //over index setting\r\n        if (photoNum > imgCnt) {\r\n            photoNum = 1;\r\n        }\r\n\r\n        //img element array setting.\r\n        for (let i = 1; i <= imgCnt; i++) {\r\n            let tempImgIdx = (photoNum - 1) + i;\r\n            tempImgIdx = tempImgIdx > imgCnt ? tempImgIdx - imgCnt : tempImgIdx;\r\n            arrImg.push(document.querySelector(`img.mainPhotoComp_img${tempImgIdx}`));\r\n        }\r\n\r\n\r\n        if (arrImg[0] != null) {\r\n            //zIndex setting.\r\n            for (let i = 0; i < imgCnt; i++) {\r\n                arrImg[i].style.zIndex = imgCnt - i;\r\n            }\r\n\r\n            //tween action.\r\n            gsap.fromTo(`.mainPhotoComp_img${photoNum}`\r\n                , {\r\n                    opacity: 0,\r\n                }, {\r\n                    opacity: 1,\r\n                    duration: duration,\r\n                });\r\n            gsap.fromTo(`.mainPhotoComp_img${preNum}`\r\n                , {\r\n                    // opacity: 1,\r\n                }, {\r\n                    opacity: 0,\r\n                    duration: duration,\r\n                });\r\n\r\n            //next action preparing.\r\n            setTimeout(this.setImageScroll.bind(this, photoNum + 1, photoNum), (duration + 2) * 1000);\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        for (let i = 0; i < 4; i++) {\r\n            gsap.killTweensOf(`.mainPhotoComp_img${i + 1}`);\r\n        }\r\n        // this.setImageScroll(1, 4);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mainPhotoComp\">\r\n                    <img className=\"mainPhotoComp_img1\" src={jeju1}/>\r\n                {/*<div>*/}\r\n                {/*    <img className=\"mainPhotoComp_img2\" src={jeju2}/>*/}\r\n                {/*</div>*/}\r\n                {/*<div>*/}\r\n                {/*    <img className=\"mainPhotoComp_img3\" src={jeju3}/>*/}\r\n                {/*</div>*/}\r\n                {/*<div>*/}\r\n                {/*    <img className=\"mainPhotoComp_img4\" src={udo1}/>*/}\r\n                {/*</div>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainPhotoComp\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\MyPlanComp.js",["599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619"],"import React, {Component} from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\r\nimport FlightLandIcon from '@material-ui/icons/FlightLand';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport store from '../../../redux/store';\r\nimport './MyPlanComp.css';\r\nimport axios from 'axios';\r\nimport {URL} from '../../../redux/config';\r\nimport MyPlanRightItem from './MyPlanRightItem';\r\nimport MyPlanLeftItem from './MyPlanLeftItem';\r\nimport Weather from \"./Weather\";\r\n\r\nclass MyPlanComp extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            count: 0,\r\n            todayList: [], // 오늘 전부 plan\r\n            todayAfterList: [], // 오늘 현재 시간 이후 plan\r\n            nextList: [], // 오늘 이후 plan\r\n            spotList: [],\r\n            hotspotList: []\r\n        }\r\n\r\n        let date = new Date();\r\n        this.today = date.getFullYear() + \"-\" + Number(date.getMonth()+1) + \"-\" + date.getDate();\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.getPlanList();\r\n    }\r\n\r\n    // todayList, todayAfterList 가져오기\r\n    getPlanList = () => {\r\n        let url = URL + \"/wish/planlist?memId=\" + store.getState().loginId + \"&day=\" + this.today + \"&category=today\";\r\n        \r\n        // let url = URL + \"/wish/planlist?memId=sanghee&day=\" + this.today + \"&category=today&perPage=5\";\r\n        \r\n        // let url = URL + \"/wish/planlist?memId=sanghee&day=2020-12-15&category=today&perPage=5\";\r\n        \r\n        axios.get(url)\r\n            .then(res=>{\r\n                let date = new Date();\r\n                let now = date.getHours() < 10 ? \"0\" + date.getHours() + \":\" + date.getMinutes():date.getHours() + \":\" + date.getMinutes();\r\n                // console.log(now);\r\n                this.setState({\r\n                    todayList: res.data,\r\n                    todayAfterList: res.data.filter(item => item.wishtime > now)\r\n                })\r\n\r\n                if(this.state.todayList == '')\r\n                    this.getNextDayPlan();\r\n                else\r\n                    this.getSpotList(\"today\");\r\n            }).catch(err=>{\r\n                console.log(\"myplan getPlanList 오류 : \" + err);\r\n            })\r\n    }\r\n\r\n    // 오늘 일정 없을 시, 오늘 이후 plan 가져오기\r\n    getNextDayPlan = () => {\r\n        let url = URL + \"/wish/planlist?memId=\" + store.getState().loginId + \"&day=\" + this.today + \"&category=nextDay\";\r\n        \r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    nextList: res.data\r\n                })\r\n\r\n                if(this.state.nextList != '')\r\n                    this.getSpotList(\"nextDay\");\r\n                else\r\n                    this.getHotspotList();\r\n                    \r\n            }).catch(err=>{\r\n                console.log(\"myplan getNextDayPlan 오류 : \" + err);\r\n            })\r\n    }\r\n\r\n    // 카테고리별 spotlsit 가져오기\r\n    getSpotList = (category) => {\r\n        let url = URL + \"/wish/spotlist?memId=\" + store.getState().loginId + \"&day=\" + this.today + \"&category=\" + category;\r\n        \r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    spotList: res.data\r\n                })  \r\n            }).catch(err=>{\r\n                console.log(\"myplan getSpotList 오류 : \" + err);\r\n            })\r\n    }\r\n\r\n    // 아예 뒷 일정이 없을 경우\r\n    getHotspotList=()=>{\r\n        let url = URL + \"/spot/hotspotlist\";\r\n        \r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    hotspotList: res.data\r\n                })  \r\n            }).catch(err=>{\r\n                console.log(\"myplan getHotspotList 오류 : \" + err);\r\n            })\r\n    }\r\n\r\n    render(){\r\n        // login시에만 왼쪽 블럭 출력\r\n        const leftTag = store.getState().logged==true?\r\n            // <Box p={1} className=\"myPlanLeft\" style={{borderRight: '1px solid black'}}>\r\n                \r\n            // </Box>\r\n            <div className=\"myPlanLeft\" style={{borderRight: '1px solid #aaa'}}>\r\n                {this.state.todayList!=''?<span style={{color: '#bbb'}}>MyPlan on {this.today}</span>:<span>MyPlan</span>}\r\n                        <br/>\r\n                        {this.state.todayList!=''?<span>TODAY</span>:\"\"}\r\n                        <List style={{width: '100%', overflow: 'scroll'}}>\r\n                            {this.state.todayList!=''?this.state.todayList.map((row)=>(\r\n                                <MyPlanLeftItem row={row}/>\r\n                            )):this.state.nextList!=''?this.state.nextList.map((row)=>(\r\n                                <MyPlanLeftItem row={row}/>\r\n                            )):\r\n                            <ListItem>등록하신 일정이 없습니다.<br/>새로운 일정을 계획해보아요.</ListItem>}\r\n                        </List>        \r\n            </div>\r\n                :\"\";\r\n\r\n        // 오른쪽 블럭 : 오늘 spot 출력 / 없을 시, 오늘 이후 spot 출력 / 없을 시, 추천 spot 보여주기\r\n        const list = this.state.spotList!=''?\r\n            <div className=\"myPlanpagesRoot\">\r\n                {this.state.spotList.map((row)=>(\r\n                    <MyPlanRightItem row={row}/>\r\n                ))}\r\n            </div>\r\n        :<div className=\"myPlanpagesRoot\">\r\n            {this.state.hotspotList.map((row)=>(\r\n                <MyPlanRightItem row={row}/>\r\n            ))}\r\n        </div>;\r\n\r\n        // 로그인 시, plan list 출력 / 없을 시, 뭐넣지\r\n        const rightTag = store.getState().logged==true?\r\n            // <Box p={1} className=\"myPlanRight\" style={{borderRight: '1px solid black'}}>\r\n                \r\n            // </Box>\r\n            <div className=\"myPlanRight\">\r\n                {this.state.todayList!=''?<span>오늘의 Spot</span>:this.state.nextList!=''?<span>다가오는 Spot</span>:<span>오늘의 TOP5</span>}\r\n                {list}\r\n            </div>\r\n            :<h2><Weather/></h2>\r\n\r\n        return (\r\n            <div className=\"myPlanComp myPlanParent\">\r\n                {leftTag}\r\n                {rightTag}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyPlanComp;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\EtcBoardComp.js",["620","621","622","623","624","625","626","627","628"],"import React, {Component, useEffect} from 'react';\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport BoardSample from \"./BoardSample\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from \"prop-types\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport NoticeItemComp from \"./NoticeItemComp\";\r\nimport axios from \"axios\";\r\nimport {URL} from \"../../../redux/config\";\r\n// import ShareRestaurantItemComp from \"./ShareRestaurantItemComp\";\r\nimport ShareBoardRowItem from \"../shareboard/ShareBoardRowItem\";\r\n\r\nfunction TabPanel(props) {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        // maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    paperRoot: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        \"& > *\": {\r\n            margin: \"10px\",\r\n            padding: \"10px\",\r\n            width: \"300px\",\r\n            height: \"400px\",\r\n            overflow: \"hidden\",\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function EtcBoardComp(props) {\r\n    const classes = useStyles();\r\n    const [selectedTabValue, setSelectedTabValue] = React.useState(1);\r\n    const [noticeList, setNoticeList] = React.useState([]);\r\n    const [shareRestaurant, setShareRestaurant] = React.useState([]);\r\n    const [shareMyPlan, setShareMyPlan] = React.useState([]);\r\n\r\n    useEffect(() => {\r\n        if (selectedTabValue == 0) {\r\n            getNoticeList();\r\n        } else if (selectedTabValue == 1) {\r\n            getShareRestaurantList();\r\n        } else if (selectedTabValue == 2) {\r\n\r\n        }\r\n    }, [selectedTabValue]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        console.log(event, newValue);\r\n        setSelectedTabValue(newValue);\r\n    };\r\n\r\n    const getNoticeList = () => {\r\n        let url = URL + \"/notice/list\";\r\n        console.log(url);\r\n\r\n        axios.get(url\r\n        ).then(res => {\r\n            console.log(res);\r\n            setNoticeList(res.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const getShareRestaurantList = () => {\r\n        let url = URL + \"/share/list?start=0&perPage=10\";\r\n        console.log(url);\r\n\r\n        axios.get(url\r\n        ).then(res => {\r\n            console.log(res);\r\n            setShareRestaurant(res.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n     * Notice | ShareRestaurant | ShareMyPlan\r\n     */\r\n    return (\r\n        <div className=\"etcBoardComp\">\r\n            <Tabs value={selectedTabValue} onChange={handleChange} aria-label=\"simple tabs example\">\r\n                <Tab label=\"Notice\" {...a11yProps(0)} />\r\n                <Tab label=\"Share Restaurant\" {...a11yProps(1)} />\r\n                <Tab label=\"Share MyPlan\" {...a11yProps(2)} />\r\n            </Tabs>\r\n            <TabPanel value={selectedTabValue} index={0}>\r\n                <div style={{\r\n                    display: \"flex\",\r\n                    overflow: \"auto\",\r\n                    // flexWrap: \"wrap\"\r\n                }}>\r\n                    {\r\n                        noticeList.map((e, i) => {\r\n                            return (\r\n                                <NoticeItemComp key={i} row={e}/>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </TabPanel>\r\n            <TabPanel value={selectedTabValue} index={1}>\r\n                <div style={{\r\n                    display: \"flex\",\r\n                    overflow: \"auto\",\r\n                    // flexWrap: \"wrap\"\r\n\r\n                }}>\r\n                    {\r\n                        shareRestaurant.map((e, i) => {\r\n                            return (\r\n                                <ShareBoardRowItem key={i} row={e}\r\n                                                   history={props.history}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </TabPanel>\r\n            <TabPanel value={selectedTabValue} index={2}>\r\n            </TabPanel>\r\n\r\n        </div>\r\n    );\r\n}\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\tour\\Tourintro.js",["629"],"import React,{Component} from 'react';\r\nimport './TourCss.css';\r\nimport udo from '../../../image/Tour_udo.jpg';\r\nimport seogwipo from '../../../image/Tour_seogwipo.jpg';\r\nimport aewol from '../../../image/Tour_aewol.jpg';\r\nimport andeok from '../../../image/Tour_andeok.jpg';\r\nimport daejung from '../../../image/Tour_daejung.jpg';\r\nimport gujwa from '../../../image/Tour_Gujwa.jpg';\r\nimport hangyeong from '../../../image/Tour_hangyeong.jpg';\r\nimport hanrim from '../../../image/Tour_hanrim.jpg';\r\nimport jeju from '../../../image/Tour_jeju.jpg';\r\nimport jocheon from '../../../image/Tour_jocheon.jpg';\r\nimport namwon from '../../../image/Tour_namwon.jpg';\r\nimport pyoseon from '../../../image/Tour_pyoseon.jpg';\r\nimport sungsan from '../../../image/Tour_sungsan.jpg';\r\n\r\nclass Tourintro extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.area = this.props.area;\r\n        this.type = null;\r\n\r\n        if(this.props.type){\r\n            this.type = this.props.type;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let img = this.area===\"jeju\"?<img id=\"jejuImg\" src={jeju} alt=\"\"/>:(this.area===\"jocheon\"?<img id=\"jocheonImg\" src={jocheon} alt=\"\"/>:\r\n            (this.area===\"aewol\"?<img id=\"aewolImg\" src={aewol} alt=\"\"/>:(this.area===\"andeok\"?<img id=\"andeokImg\" src={andeok} alt=\"\"/>:\r\n            (this.area===\"daejung\"?<img id=\"daejungImg\" src={daejung} alt=\"\"/>:(this.area===\"gujwa\"?<img id=\"gujwaImg\" src={gujwa} alt=\"\"/>:\r\n            (this.area===\"hangyeong\"?<img id=\"hangyeongImg\" src={hangyeong} alt=\"\"/>:(this.area===\"hanrim\"?<img id=\"hanrimImg\" src={hanrim} alt=\"\"/>:\r\n            (this.area===\"namwon\"?<img id=\"namwonImg\" src={namwon} alt=\"\"/>:(this.area===\"pyoseon\"?<img id=\"pyoseonImg\" src={pyoseon} alt=\"\"/>:\r\n            (this.area===\"seogwipo\"?<img id=\"seogwipoImg\" src={seogwipo} alt=\"\"/>:(this.area===\"sungsan\"?<img id=\"sungsanImg\" src={sungsan} alt=\"\"/>:\r\n            (this.area===\"udo\"?<img id=\"udoImg\" src={udo} alt=\"\"/>:\"\"))))))))))));\r\n\r\n        let intro = this.area===\"jeju\"?\"제주시\":(this.area===\"jocheon\"?\"조천읍\":(this.area===\"aewol\"?\"애월읍\":(this.area===\"andeok\"?\"안덕면\":\r\n            (this.area===\"daejung\"?\"대정읍\":(this.area===\"gujwa\"?\"구좌읍\":(this.area===\"hangyeong\"?\"한경면\":(this.area===\"hanrim\"?\"한림읍\":\r\n            (this.area===\"namwon\"?\"남원읍\":(this.area===\"pyoseon\"?\"표선면\":(this.area===\"seogwipo\"?\"서귀포시\":(this.area===\"sungsan\"?\"성산읍\":\r\n            (this.area===\"udo\"?\"우도\":\"\"))))))))))));\r\n\r\n        let content = this.area===\"jeju\"?<span>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;제주시는 한반도와 마주 대하는 한라산 북사면의 중앙부에 위치한 관계로 예부터 연륙교통의 중심지로 발달하였을 뿐만 아니라, 모든 도로가 제주시를 중심으로 환상(環狀) 또는 방사상(放射狀)으로 뻗어 있고, 항공과 해운을 연결하는 지역으로, 제주관광의 관문역할을 하고 있다.\r\n            <br/>&nbsp;&nbsp;&nbsp;&nbsp;한라산국립공원을 비롯하여 봉개휴양림관광지·오라관광지구·삼양유원지·무수천유원지·산천단유원지·제주관광타워·사라봉공원·용담도시근린공원·남조봉공원 등 많은 관광자원이 있다. 최근 제주국제공항·제주항 등의 확장공사가 계속 추진되고 있어 국제관광도시로 발돋움하고 있다. 특히 2000년부터 관광객에 대한 무비자 입국이 옛 소련권 국가로까지 확대되어 제주관광산업 활성화 여건을 조성하고 있으며, 특성 있는 관광산업을 육성하고 동북아시아 중심축의 관광·휴양 거점도시로 개발하고 있다.\r\n            </span>\r\n            :(this.area===\"jocheon\"?<span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;동쪽은 구좌읍, 서쪽은 제주시, 남쪽은 서귀포시 남원읍·표선면(表善面)에 접하며, 북부는 제주해협에 면한다. 남쪽으로는 한라산 동쪽 연봉인 사라악(沙羅岳:1,300m)·성널오름[城板岳:1,215m]·괴평이오름(784m)·거문오름(718m) 등 비교적 높은 산이 있으나, 중산간지대(200∼500m)에는 넓은 초지가 발달하여 옛날부터 방목지대로 이용되었다. 교래리(橋來里) 일대에는 제동목장 등 기업목장이 있다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;해안저지대에는 넓은 평지가 발달하여 밭농사를 주로 하며, 주요 농산물로는 고구마·보리·유채·콩 등을 생산한다. 감귤 및 채소 등의 원예작물 재배도 활발하다. 중산간지대까지 버스가 왕래하여 제주시와 동일한 생활권을 형성하고 있다.\r\n                </span>\r\n            :(this.area===\"aewol\"?<span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;동쪽은 제주시, 서쪽은 한림읍, 남쪽은 한라산의 연봉인 붉은오름[赤岳:1,060m]·노로오름[老路岳:1,070m] 등을 사이에 두고 서귀포시·안덕면(安德面)과 접하고, 북쪽은 제주해협에 면한다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;북쪽 저지대에는 넓은 평지가 펼쳐져 있으며, 동귀리(東貴里)·귀일리(貴日里)·구엄리(舊嚴里) 등의 해안 저지대에는 논도 발달하였다. 주요농산물로는 쌀·보리를 비롯하여 고구마·콩·유채·채소 등을 생산하고 있으며, 감귤재배가 활발하다. 넓은 산간지역을 이용한 축산업도 활발하여 시온목장 등 기업목장이 이루어지고 소·돼지·말 등을 사육한다. 애월항은 제주항의 보조항구로서의 구실을 맡고 있으며, 제주시와 동일생활권을 이루고 있다. 교통은 제주시의 시내버스가 운행되고 있어 편리하다.\r\n                </span>\r\n            :(this.area===\"andeok\"?<span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;동쪽은 서귀포시, 서쪽은 대정읍, 북쪽은 돌오름(861m)·왕이매(620m)·당오름(440m) 등을 사이에 두고 제주시 애월읍·한림읍과 경계를 이루며, 남쪽은 바다에 면한다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;광평리(廣坪里)가 500m, 상천리(上川里)가 380m, 동광리(東廣里)가 280m 이상의 고지대에 발달해 있다. 경지면적은 2,653ha로 대부분이 밭농사를 짓고 있으며, 고구마·보리·유채·감자·잡곡 등의 생산이 많고, 감귤 재배도 많이 한다. 해안일주도로, 중문고속화도로, 여러 지방도가 면을 지나서 교통은 편리하다. 화순리(和順里)의 화순항(港)은 천연의 양항이며 화순화력발전소가 있다. 산방산(山房山:395m) 및 부근 용머리의 해안절경, 안덕계곡, 화순해수욕장 등은 관광지로서도 유명하다.\r\n                </span>\r\n            :(this.area===\"daejung\"?<span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;13개 리 및 2개의 부속도서인 가파도(加波島)와 마라도(馬羅島)로 이루어져 있다. 동쪽은 안덕면(安德面), 북쪽은 제주시 한경면(翰京面)과 접하고 서·남쪽은 바다에 면한다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;한라산 정상부에서 멀리 떨어진 남서쪽 사면에 위치하기 때문에 높은 산이 별로 없고, 다른 읍·면과는 달리 전역이 해발고도 200m 이하의 저지대로 이루어져 있다. 모슬봉(慕瑟峰:187m)·가시악(加時岳:123m)·농남봉(農南峰:100m)·송악산(松岳山:84m)·단산(簞山:160m) 등 기생화산이 있다. 농업은 밭농사를 중심으로 고구마·보리·콩·잡곡 등의 생산이 많고, 감귤재배가 성하다. 모슬포항을 중심으로 연근해 어업이 발달하여 통조림공장이 있다. 또한 10여 개의 녹말공장이 있으며, 소규모의 농가별 목장도 있다. 읍소재지인 모슬포는 가파도와 마라도를 연결하는 선박의 기착지로, 본도 서부의 교통요지를 이루고 있으며, 해군·공군 부대가 주둔하고 있다.\r\n                </span>\r\n            :(this.area===\"gujwa\"?<span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;서쪽은 조천읍(朝天邑), 남쪽은 서귀포시 성산읍·표선면(表善面)과 접하고, 동쪽과 북쪽은 남해에 면한다. 1980년 12월 읍으로 승격하였다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;한라산 북동 사면에 위치하여 비교적 낮은 분석구(噴石丘) 등이 분포하며, 하천의 발달은 미약하다. 주요 농산물은 고구마·보리·콩 등이 비교적 많고, 일부지역에서 감귤재배가 이루어지고 있다. 낮은 산간지대에는 넓은 목야지가 발달하여 예로부터 좋은 목장지대가 되고 있다. 동·북부가 바다에 면하고 있는데도 어로·수산양식업은 미미한 편이다.\r\n                </span>\r\n            :(this.area===\"hangyeong\"?<span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;원래는 한림면(翰林面)의 일부였으나, 1956년 한림읍으로 승격되면서 서부 일부가 분리되어 한경면이 되었다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;한라산의 북서사면 가장자리에 위치한 관계로 해발고도 200m 이하의 저지대를 이루어 해안 일주 도로변과 중산간지대(中山間地帶)에 취락이 골고루 발달하였다. 고구마·보리·맥주맥·유채 등을 생산하며, 최근 감귤 수확도 많아졌다. 중산간지대에 많은 초지를 가지고 있어 2개의 공동목장 등 대규모 기업목장이 있다. 신창리(新昌里)와 본도의 가장 서부에 위치한 고산리(高山里)를 중심으로 중산간지대에 버스가 왕래한다. 고산리의 당산봉(唐山峰:148m) 및 차귀도(遮歸島), 황새 도래지 등의 관광지가 있다.\r\n                </span>\r\n            :(this.area===\"hanrim\"?<span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;제주특별자치도 제주시의 서부 지역에 있는 읍이다. 동쪽은 애월읍, 서쪽은 한경면, 남쪽은 서귀포시 안덕면, 북쪽은 바다와 접하고 있다. 남쪽 중산간 지대에는 금오름, 문도지오름 등이 분포해 있고 이시돌목장과 같은 목장이 들어서 있다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;읍사무소는 한림리에 있다. 고려 시대에는 '명월현(明月縣)'이라 했다. 조선 시대에는 제주목 소속의 우면(右面)이었는데, 18세기 후반 신우면과 구우면으로 분리되면서 '구우면(舊右面)'이 되었다. 1915년에는 제주도(濟州島) 구우면이라 했고, 1935년에는 한림면(翰林面)으로 개칭했다. 1956년에 한림면을 폐지하고 한림읍과 한경면으로 분리했다. 읍 소재지인 한림리를 비롯한 15개의 법정리를 관할하고 있다.\r\n                </span>\r\n            :(this.area===\"namwon\"?<span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;서귀포시에서 두번째로 인구가 많은(약 18,000명) 것 치고는 생활환경이 여러모로 부족해 보이는 경우가 있는데, 서귀포시가 바로 옆이고 남조로를 통해서 제주시도 빠르게 갈 수 있기 때문에 읍내에 편의시설등의 발전이 늦었다. 같은 서귀포시 동부권인 표선이나 성산에 비해 관광지가 부족한것도 원인중 하나. 그리고 넓이빨도 많이 작용한다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;1118번 지방도(남조로)를 통해 제주시로 갈 수 있으며, 이외의 서귀포 지역과는 제주일주도로로 연결된다. 한남리에 국가태풍센터가 있다. 남원큰엉, 코코몽에코파크, 신영영화박물관 등의 주요 관광지가 있으며, 남제주체육관이나 구 남제주보건소(현 서귀포 동부보건소) 등 남제주군의 중심으로 육성하려 했던 흔적이 보이나 시군통합으로 물거품. 실제로 시군통합에 가장 많이 반대한 지역이기도 하다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;농업으로는 제주도에서 탑클래스이며, 그래서인지 감귤농사 리즈시절엔 부자가 많았던 지역이다. 서귀포시 지역 내에서도 남원지역, 특히 위미의 감귤은 맛있기로 유명하다. 또한 제주도민의 특성인 무뚝뚝함, 외지인에 대한 경계가 상대적으로 덜해 오히려 선입견을 가졌던 관광객이 어색함을 느낄 정도이다.\r\n                </span>\r\n            :(this.area===\"pyoseon\"?<span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;동부는 천미천(川尾川)을 경계로 성산읍, 서부는 송천(松川)을 경계로 남원읍, 북부는 거문오름(718m)·가문이오름(306m)·백약이오름(311m) 등을 경계로 제주시 조천읍·구좌읍과 접하며, 남부는 남해(南海)에 면해 있다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;해발고도 200∼500m의 중산간지대(中山間地帶)에는 넓은 초지가 발달하여 예로부터 방목지대가 되었고, 지금도 대규모 목장이 있다. 고구마·보리·유채 등의 농작물을 생산하고, 최근 감귤 수확이 늘었다. 정의현(旌義縣)의 치소(治所)였던 성읍리(城邑里)는 민속촌으로 지정되어 관광지가 되었다. 표선리(表善里)를 기점으로 중산간지대에 버스가 왕래한다. 동부산업도로의 포장으로 제주시와의 거리가 1시간대로 단축되어 교통이 편리해졌다.\r\n                </span>\r\n            :(this.area===\"seogwipo\"?<span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;북부에는 한라산과 그 자화산인 기생화산이 솟아 있다. 한라산(1,950m)은 정상 부근에서는 종상화산(鐘狀火山)의 산형(山形)을 형성하여 급한 경사를 이루고, 산록면은 완경사를 이루나, 북사면보다는 약간 경사도가 큰 편이다. 해안저지대는 평지를 이루나, 북사면보다 다소 좁다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;하천은 도내에서는 비교적 잘 발달하여 효돈천·정술내·에이리내·연외천·악근천(岳近川)·큰내·창고천(倉庫川) 등이 남류한다. 이들 하천은 유년기곡(幼年期谷)의 깊은 골짜기를 형성하면서 일부 하천은 하류에서 폭포를 이루고 있는데, 천지연(天地淵)·정방(正房)·천제연(天帝淵) 폭포 등이 유명하다. 특히 정방폭포는 직접 해면으로 낙하하는 것으로 유명하다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;해안은 대부분 조면암질 안산암 및 현무암의 단애가 수직으로 주상절리(柱狀節理)를 이루어 절경을 형성하고, 또 서귀포 앞바다에는 숲섬[森島]·문섬[蚊島]·새섬[茅島]·범섬[虎島] 등 4개의 섬이 해안과 어우러져서 절경을 이룬다. 남쪽 해상에는 한국 최남단의 마라도와 가파도가 자리잡고 있다.\r\n                </span>\r\n            :(this.area===\"sungsan\"?<span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;바다에 면하고, 서쪽으로 천미천(川尾川)을 사이에 두고 표선면(表善面), 북쪽으로 제주시 구좌읍과 접한다.경사가 완만한 한라산 남동쪽 산록에 위치하기 때문에 대부분이 해발고도 200m 이하의 저지를 이루며, 두산봉(斗山峰:146m)·대수산봉(大水山峰:137m)·대왕산(大王山:157m)·일출봉(日出峰:182m)·독자봉(獨子峰:159m)·모구리오름(232m)·궁대악(弓帶岳) 등 산들도 해발고도 200m를 넘는 것이 거의 없다. 농경지는 대부분이 밭으로, 고구마·보리·콩·유채·잡곡 등의 생산이 많다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;성산포항을 중심으로 연근해어업이 발달되어 수산물 냉동이나 해조류 가공 등의 수산가공업이 성하며, 다른 지역과 마찬가지로 10여 개의 소규모 녹말공장이 있다. 남서부에 있는 대정읍과 마찬가지로 대규모 기업목장은 없고 영세목장이 있을 뿐이다. 특히 관광명소인 일출봉의 해돋이는 일대 장관이며, 산기슭에는 일광사(日光寺)가 있고, 해안에는 해적과 왜적을 막기 위해 쌓은 성산성이 있다.\r\n                </span>\r\n            :(this.area===\"udo\"?<span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;우도는 성산 일출봉 남쪽 바다 앞에 떠 있는 섬이다. 성산포에서 3.8km, 여객선으로 10분이면 닿는 거리에 있다. 성산포 일출봉에 갔다가 찾게 되는 곳이 우도다. 면적 6.18km2, 해안선 길이 17km로 제주도의 63개 부속도서 가운데 가장 큰 섬이다. 우도의 경지 면적은 우도 전체 면적의 약 71%로 마늘, 땅콩 등을 재배하고 있다. 또한 해녀들에 의한 해산물 채취가 많이 이루어지고 있다. 우도의 해녀들은 일찍부터 가정 경제를 책임지는 가장으로서 물질을 하기 위해 우리나라 서남 · 동해안뿐만 아니라 중국과 일본 해안까지 진출하기도 했다 한다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;우도는 소가 머리를 내민 모양(牛頭形) 또는 누워 있는 모양(臥牛形)이라 해서 ‘소섬’ 즉 우도로 명명된 곳이나 1900년에는 향교 훈장 오유학이 물에 뜬 두둑이라는 뜻의 ‘연평도’로 개명하여 현재까지 연평리로 불리고 있다. 1986년 4월 1일에 우도면으로 승격되었다. 현재는 4개 행정리에 12개 자연 부락으로 나누어져 있다. 4개 행정리는 천진리, 서광리, 오봉리, 조일리 등이다. 면사무소, 숙박 시설, 종교 시설, 등대박물관, 연평초중학교, 보건소 등의 시설이 있다. 반농반어(半農半漁)의 전형적인 농어촌 마을이다.\r\n                <br/>&nbsp;&nbsp;&nbsp;&nbsp;남쪽 해안과 북동쪽 탁진포를 제외한 모든 해안에는 해식애가 발달했고, 한라산의 기생화산인 쇠머리오름이 있을 뿐 섬 전체가 하나의 용암대지이며, 고도 30m 이내의 넓고 비옥한 평지이다. 주요 농산물은 고구마 · 보리 · 마늘 등이며, 가축 사육도 활발하다. 부근 해역에서는 고등어 · 갈치 · 전복 등이 많이 잡힌다.\r\n                </span>:\"\"))))))))))));\r\n\r\n        return (\r\n            <div>\r\n                {/* <h4>Tourintro {this.props.area}</h4> */}\r\n                <div id=\"mainImg\">\r\n                    {img}\r\n                    <br/>\r\n                </div>\r\n                {\r\n                    (this.type && this.type == \"search\")\r\n                    ? (\r\n                        \"\"\r\n                    )\r\n                    : (\r\n                        <div>\r\n                            <div className=\"tourIntroTitle\">\r\n                                <span className=\"tourIntroTitleContent\" style={{backgroundColor: 'white', color: '#036E38'}}>\r\n                                    &nbsp;&nbsp;&nbsp;{intro}&nbsp;&nbsp;&nbsp;\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"tourIntroContent\">\r\n                                {content}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tourintro;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\tour\\PageComp.js",["630","631","632","633","634","635","636","637","638","639","640","641","642","643","644"],"import React, {Component} from 'react';\r\nimport './TourCss.css';\r\n\r\nclass PageComp extends Component {\r\n\r\n    render() {\r\n        const {area, startPage, endPage, currentPage, totalPage, paginate, category, search, type} = this.props;\r\n        // href={`/tourlist/${area}/${startPage - 1}`}\r\n        // href={`/tourlist/${area}/${endPage + 1}`}\r\n        let prev = startPage > 1 ?\r\n            <li className=\"page-item\">\r\n                <a className=\"page-link\" style={{color: 'black'}}\r\n                   href={(type == \"tour\")\r\n                       ? `/tourlist/${area}/${startPage - 1}`\r\n                       : (type == \"search\")\r\n                           ? `/search/${category}/${search}/${startPage - 1}`\r\n                           : (type == \"share_restaurant\")\r\n                               ? `/share/${startPage - 1}`\r\n                               : \"\"}\r\n                >◀</a>\r\n            </li> : \"\";\r\n\r\n        let next = endPage < totalPage ?\r\n            <li className=\"page-item\">\r\n                <a className=\"page-link\" style={{color: 'black'}}\r\n                   href={(type == \"tour\")\r\n                       ? `/tourlist/${area}/${endPage + 1}`\r\n                       : (type == \"search\")\r\n                           ? `/search/${category}/${search}/${endPage + 1}`\r\n                           : (type == \"share_restaurant\")\r\n                               ? `/share/${endPage + 1}`\r\n                               : \"\"}\r\n                >▶</a>\r\n            </li> : \"\";\r\n\r\n        let page = [];\r\n\r\n        for (let i = startPage; i <= endPage; i++) {\r\n            page.push(i);\r\n        }\r\n\r\n        let pages = page.map(function (num, idx) {\r\n            return (\r\n                <li className=\"page-item\" key={idx}>\r\n                    <a className=\"page-link\"\r\n                       style={{\r\n                           color: num == currentPage ? \"#D1CC38\" : \"black\",\r\n                           fontWeight: num == currentPage ? \"700\" : \"\"\r\n                       }}\r\n                       href={(type == \"tour\")\r\n                           ? `/tourlist/${area}/${num}`\r\n                           : (type == \"search\")\r\n                               ? `/search/${category}/${search}/${num}`\r\n                               : (type == \"share_restaurant\")\r\n                                   ? `/share/${num}`\r\n                                   : \"\"}\r\n                    >{num}</a>\r\n                </li>\r\n            )\r\n        });\r\n\r\n        let pagination = '';\r\n        if (matchMedia(\"screen and (max-width:770px)\").matches) {\r\n            pagination =\r\n                <ul className='pagination pagination-sm' style={{justifyContent: 'center', marginBottom: '100px'}}>\r\n                    {prev}\r\n                    {pages}\r\n                    {next}\r\n                </ul>;\r\n        } else {\r\n            pagination =\r\n                <ul className='pagination' style={{justifyContent: 'center', marginBottom: '100px'}}>\r\n                    {prev}\r\n                    {pages}\r\n                    {next}\r\n                </ul>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {pagination}\r\n                {/* <ul className='pagination' style={{justifyContent: 'center', marginBottom: '100px'}}>\r\n                    {prev}\r\n                    {pages}\r\n                    {next}\r\n\t\t\t    </ul> */}\r\n                {/* <Pagination id=\"tourListPage\" color=\"primary\" count={totalPage} page={currentPage} onChange={this.handleChange.bind(this)}/> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PageComp;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\tour\\ItemComp.js",["645","646"],"import React,{Component} from 'react';\r\nimport './TourCss.css';\r\nimport Box from '@material-ui/core/Box';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport axios from 'axios';\r\nimport {URL} from '../../../redux/config';\r\n\r\nclass ItemComp extends Component {\r\n\r\n    updateLikes = () =>{\r\n        let url = URL + \"/spot/updatelikes?contentsid=\" + this.props.row.contentsid;\r\n\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.props.getList();\r\n            }).catch(err=>{\r\n                console.log(\"tourlist likes 업데이트 오류 : \" + err);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const {row}=this.props;\r\n        const addr = row.roadaddr!=null?row.roadaddr.split(\" \"):row.addr!=null?row.addr.split(\" \"):\"\";\r\n        \r\n        return (\r\n\r\n            <Box m={1} id=\"itemBox\">\r\n                <div style={{cursor: 'pointer'}} onClick={\r\n                    ()=>{\r\n                        this.props.history.push(\"/tour/\" + row.contentsid);\r\n                    }\r\n                }>\r\n                    <img id=\"itemImg\" src={row.thumbnail} alt=\"\"></img><br/>\r\n                    <div id=\"itemTitle\" style={{whiteSpace:'nowrap', textOverflow:'ellipsis', overflow:'hidden'}}>\r\n                        <b style={{color:'#888'}}>{row.title}</b><br/>  \r\n                    </div>\r\n                    <div id=\"itemContentDiv\">\r\n                        <p id=\"itemContent\" style={{fontWeight:'500', color:'#888', overflow:'hidden'}}>{row.introduction}</p>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div id=\"itemLikes\" style={{backgroundColor:'#FaFaFa', color:'#aaa'}}>\r\n                    <ThumbUpAltIcon id=\"tourThumbIcon\" style={{cursor: 'pointer'}} onClick={this.updateLikes.bind(this)}/>&nbsp;&nbsp;{row.likes}\r\n                    {/* <span id=\"itemAddr\" style={{float:'right', overflow:'hidden', whiteSpace:'nowrap', textOverflow:'ellipsis'}}>\r\n                        <LocationOnIcon id=\"tourLocationIcon\"/>&nbsp;{addr[addr.length-2]}&nbsp;{addr[addr.length-1]}\r\n                    </span> */}\r\n                    <span style={{float:'right'}}><span class=\"fas fa-star\" style={{color: \"#F0CD58\"}}></span>&nbsp;{row.star}</span>\r\n                </div>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemComp;","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\tour\\ReviewListComp.js",[],"C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\tour\\MapComp.js",["647","648","649","650","651","652","653","654","655","656","657","658","659"],"/*global kakao */\r\nimport React, { useEffect, useState} from \"react\";\r\nimport './kakaomap.css';\r\nimport Box from '@material-ui/core/Box';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\r\nimport LocalCafeIcon from '@material-ui/icons/LocalCafe';\r\nimport HotelIcon from '@material-ui/icons/Hotel';\r\nimport AroundModal from \"./AroundModal\";\r\nimport UseModal from './UseModal';\r\n\r\nconst MapComp=(props)=> {\r\n\r\n    let longitude = useState(0);\r\n    let latitude = useState(0);\r\n    let title = useState(\"\");\r\n    const [category, setCategory] = useState(\"\");\r\n    const [wishTitle, setWishTitle] = useState(\"\");\r\n    const [wishContent, setWishContent] = useState(\"\");\r\n    \r\n    const [value, setValue] = React.useState(0);\r\n\r\n    console.log(\"longitude : \" + props.longitude);\r\n    useEffect(() => {\r\n        \r\n        longitude = props.longitude;\r\n        latitude = props.latitude;\r\n        title = props.title;\r\n\r\n        mapscript();\r\n    });\r\n\r\n  const mapscript = () => {\r\n    \r\n    //let markers = [];\r\n    let placeOverlay = new kakao.maps.CustomOverlay({zIndex:1}), \r\n        contentNode = document.createElement('div'), // 커스텀 오버레이의 컨텐츠 엘리먼트 입니다 \r\n        markers = [], // 마커를 담을 배열입니다\r\n        currCategory = '';\r\n\r\n\r\n    let mapContainer = document.getElementById(\"map\"), mapOption = {\r\n        center: new kakao.maps.LatLng(latitude, longitude), // 지도의 중심좌표\r\n        level: 3 // 지도의 확대 레벨\r\n    };\r\n\r\n    const map = new kakao.maps.Map(mapContainer, mapOption);\r\n    let ps = new kakao.maps.services.Places(map);\r\n    \r\n    //마커가 표시 될 위치\r\n    let markerPosition = new kakao.maps.LatLng(\r\n        latitude,\r\n        longitude\r\n    );\r\n\r\n    // 마커를 생성\r\n    let marker = new kakao.maps.Marker({\r\n        map:map,\r\n      position: markerPosition,\r\n      title: title\r\n    });\r\n\r\n    let content = '<div className=\"wrap\"><div className=\"info\"><div className=\"mtitle\">' + title\r\n            + '<div className=\"close\" onClick={this.closeOverlay.bind(this)} title=\"닫기\"></div></div></div></div>';\r\n\r\n    //마커 위에 커스텀오버레이를 표시합니다\r\n    //마커를 중심으로 커스텀 오버레이를 표시하기위해 CSS를 이용해 위치를 설정했습니다\r\n    let overlay = new kakao.maps.CustomOverlay({\r\n        content: content,\r\n        map: map,\r\n        position: marker.getPosition()       \r\n    });\r\n    //마커를 클릭했을 때 커스텀 오버레이를 표시합니다\r\n    kakao.maps.event.addListener(marker, 'click', function() {\r\n        overlay.setMap(map);\r\n    });\r\n    // 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\r\n    let infowindow = new kakao.maps.InfoWindow({zIndex:1});\r\n\r\n    //커스텀 오버레이를 닫기 위해 호출되는 함수입니다 \r\n    function closeOverlay() {\r\n        overlay.setMap(null);     \r\n    }\r\n    // 지도에 idle 이벤트를 등록합니다\r\n    kakao.maps.event.addListener(map, 'idle', searchPlaces);\r\n    // 커스텀 오버레이의 컨텐츠 노드에 css class를 추가합니다 \r\n    contentNode.className = 'placeinfo_wrap';\r\n    // 커스텀 오버레이의 컨텐츠 노드에 mousedown, touchstart 이벤트가 발생했을때\r\n    // 지도 객체에 이벤트가 전달되지 않도록 이벤트 핸들러로 kakao.maps.event.preventMap 메소드를 등록합니다 \r\n    addEventHandle(contentNode, 'mousedown', kakao.maps.event.preventMap);\r\n    addEventHandle(contentNode, 'touchstart', kakao.maps.event.preventMap);\r\n    // 커스텀 오버레이 컨텐츠를 설정합니다\r\n    placeOverlay.setContent(contentNode);  \r\n    // 각 카테고리에 클릭 이벤트를 등록합니다\r\n    addCategoryClickEvent();   \r\n    \r\n    //searchPlaces();\r\n\r\n    function addEventHandle(target, type, callback) {\r\n        if (target.addEventListener) {\r\n            target.addEventListener(type, callback);\r\n        } else {\r\n            target.attachEvent('on' + type, callback);\r\n        }\r\n    }\r\n    // 키워드 검색을 요청하는 함수입니다\r\n    function searchPlaces() {\r\n        if (!currCategory) {\r\n            return;\r\n        }\r\n        \r\n        // 커스텀 오버레이를 숨깁니다 \r\n        placeOverlay.setMap(null);\r\n        // 지도에 표시되고 있는 마커를 제거합니다\r\n        removeMarker();\r\n        \r\n        ps.categorySearch(currCategory, placesSearchCB, {useMapBounds:true});\r\n        \r\n    }\r\n    // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\r\nfunction placesSearchCB(data, status, pagination) {\r\n\r\n    if (status === kakao.maps.services.Status.OK) {\r\n         // 정상적으로 검색이 완료됐으면 지도에 마커를 표출합니다\r\n\r\n         displayPlaces(data);\r\n         \r\n      // 페이지 번호를 표출합니다\r\n         displayPagination(pagination);\r\n     } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\r\n         // 검색결과가 없는경우 해야할 처리가 있다면 이곳에 작성해 주세요\r\n         displayPlaces(null);\r\n     } else if (status === kakao.maps.services.Status.ERROR) {\r\n         // 에러로 인해 검색결과가 나오지 않은 경우 해야할 처리가 있다면 이곳에 작성해 주세요\r\n         \r\n     }\r\n }\r\n // 검색 결과 목록과 마커를 표출하는 함수입니다\r\n function displayPlaces(places) {\r\n    // 몇번째 카테고리가 선택되어 있는지 얻어옵니다\r\n     // 이 순서는 스프라이트 이미지에서의 위치를 계산하는데 사용됩니다\r\n     var order = document.getElementById(currCategory).getAttribute('data-order');\r\n     var listEl = document.getElementById('placesList'), \r\n     menuEl = document.getElementById('menu_wrap'),\r\n     fragment = document.createDocumentFragment(), \r\n     bounds = new kakao.maps.LatLngBounds(), \r\n     listStr = '';\r\n  // 검색 결과 목록에 추가된 항목들을 제거합니다\r\n     removeAllChildNods(listEl);\r\n     // 지도에 표시되고 있는 마커를 제거합니다\r\n     removeMarker();\r\n     \r\n     if(places == null){\r\n        itemEl = getListItem(-1, null);\r\n        fragment.appendChild(itemEl);\r\n     }\r\n    else{\r\n        for ( var i=0; i<places.length; i++ ) {\r\n            // 마커를 생성하고 지도에 표시합니다\r\n            var placePosition = new kakao.maps.LatLng(places[i].y, places[i].x),\r\n                marker = addMarker(placePosition, i), \r\n                itemEl = getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다\r\n            // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n            // LatLngBounds 객체에 좌표를 추가합니다\r\n            bounds.extend(placePosition);\r\n            // 마커와 검색결과 항목에 mouseover 했을때\r\n            // 해당 장소에 인포윈도우에 장소명을 표시합니다\r\n            // mouseout 했을 때는 인포윈도우를 닫습니다\r\n            (function(marker, place) {\r\n                kakao.maps.event.addListener(marker, 'click', function() {\r\n                    displayPlaceInfo(place);\r\n                });\r\n            })(marker, places[i]);\r\n            fragment.appendChild(itemEl);\r\n        }\r\n    }\r\n    \r\n     // 검색결과 항목들을 검색결과 목록 Elemnet에 추가합니다\r\n     listEl.appendChild(fragment);\r\n    // menuEl.scrollTop = 0;\r\n     // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n     //map.setBounds(bounds);\r\n }\r\n // 검색결과 항목을 Element로 반환하는 함수입니다\r\n function getListItem(index, places) {\r\n     \r\n     if(index == -1){\r\n        var el = document.createElement('li'),\r\n        itemStr = \"<div><br/>검색 결과가 존재하지 않습니다.</div>\";\r\n        el.innerHTML = itemStr;\r\n        el.className = 'item';\r\n    \r\n        return el;\r\n     }\r\n    else{\r\n        // setting(places);\r\n        var el = document.createElement('li'),\r\n        itemStr = '<table className=\"table table-bordered\" id=\"placeListTable\"><tr>' +\r\n                    '<td style={{width:\"20%\"}}><span class=\"markerbg marker_' + (index+1) + '\"></span></td>' +\r\n                    '<td style={{width:\"60%\"}}><a class=\"info\" href=\"' + places.place_url + '\" target=\"_blank\" title=\"' + places.place_name + '\">' +\r\n                    '<p>' + places.place_name + '</p>';\r\n        itemStr += '<span class=\"gray\">' +  places.address_name  + '</span>';      \r\n        itemStr += '<span class=\"tel\">' + places.phone  + '</span>' + \r\n                    '</a></td>' +\r\n                    '<td style={{width:\"20%\"}}><div class=\"addWishBtn\">일정추가</div></td></tr></table>';\r\n        el.innerHTML = itemStr;\r\n        el.onclick=function(){\r\n            setWishTitle(places.place_name);\r\n            setWishContent(places.address_name);\r\n            toggle();\r\n        }\r\n        el.className = 'item';\r\n                \r\n        return el;\r\n\r\n        // return <div dangerouslySetInnerHTML={{ __html : itemStr}}></div>;\r\n    }    \r\n }\r\n \r\n \r\n \r\n // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\r\n function addMarker(position, idx, title) {\r\n     var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png', // 마커 이미지 url, 스프라이트 이미지를 씁니다\r\n         imageSize = new kakao.maps.Size(36, 37),  // 마커 이미지의 크기\r\n         imgOptions =  {\r\n             spriteSize : new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기\r\n             spriteOrigin : new kakao.maps.Point(0, (idx*46)+10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\r\n             offset: new kakao.maps.Point(13, 37) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\r\n         },\r\n         markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\r\n             marker = new kakao.maps.Marker({\r\n             position: position, // 마커의 위치\r\n             image: markerImage \r\n         });\r\n     marker.setMap(map); // 지도 위에 마커를 표출합니다\r\n     markers.push(marker);  // 배열에 생성된 마커를 추가합니다\r\n     return marker;\r\n }\r\n // 지도 위에 표시되고 있는 마커를 모두 제거합니다\r\n function removeMarker() {\r\n     for ( var i = 0; i < markers.length; i++ ) {\r\n         markers[i].setMap(null);\r\n     }   \r\n     markers = [];\r\n }\r\n // 검색결과 목록 하단에 페이지번호를 표시는 함수입니다\r\n function displayPagination(pagination) {\r\n     var paginationEl = document.getElementById('pagination'),\r\n         fragment = document.createDocumentFragment(),\r\n         i; \r\n     // 기존에 추가된 페이지번호를 삭제합니다\r\n     while (paginationEl.hasChildNodes()) {\r\n         paginationEl.removeChild (paginationEl.lastChild);\r\n     }\r\n     for (i=1; i<=pagination.last; i++) {\r\n         var el = document.createElement('a');\r\n         el.href = \"#\";\r\n         el.innerHTML = i;\r\n         if (i===pagination.current) {\r\n             el.className = 'on';\r\n         } else {\r\n             el.onclick = (function(i) {\r\n                 return function() {\r\n                     pagination.gotoPage(i);\r\n                 }\r\n             })(i);\r\n         }\r\n         fragment.appendChild(el);\r\n     }\r\n     paginationEl.appendChild(fragment);\r\n }\r\n\r\n    // 클릭한 마커에 대한 장소 상세정보를 커스텀 오버레이로 표시하는 함수입니다\r\n    function displayPlaceInfo (place) {\r\n        var content = '<div class=\"placeinfo\">' +\r\n                        '   <a class=\"title\" href=\"' + place.place_url + '\" target=\"_blank\" title=\"' + place.place_name + '\">' + place.place_name + '</a>';   \r\n\r\n        if (place.road_address_name) {\r\n            content += '    <span title=\"' + place.road_address_name + '\">' + place.road_address_name + '</span>' +\r\n                        '  <span class=\"jibun\" title=\"' + place.address_name + '\">(지번 : ' + place.address_name + ')</span>';\r\n        }  else {\r\n            content += '    <span title=\"' + place.address_name + '\">' + place.address_name + '</span>';\r\n        }                \r\n    \r\n        content += '    <span class=\"tel\">' + place.phone + '</span>' + \r\n                    '</div>' + \r\n                    '<div class=\"after\"></div>';\r\n\r\n        contentNode.innerHTML = content;\r\n        placeOverlay.setPosition(new kakao.maps.LatLng(place.y, place.x));\r\n        placeOverlay.setMap(map);  \r\n    }\r\n\r\n    // 검색결과 목록의 자식 Element를 제거하는 함수입니다\r\n    function removeAllChildNods(el) {   \r\n        while (el.hasChildNodes()) {\r\n            el.removeChild (el.lastChild);\r\n        }\r\n    }\r\n  \r\n    //각 카테고리에 클릭 이벤트를 등록합니다\r\n    function addCategoryClickEvent() {\r\n        var category = document.getElementById('category'),\r\n            children = category.children;\r\n        for (var i=0; i<children.length; i++) {\r\n            children[i].onclick = onClickCategory;\r\n        }\r\n    }\r\n\r\n    //카테고리를 클릭했을 때 호출되는 함수입니다\r\n    function onClickCategory() {\r\n        var id = this.id, className = this.className;\r\n\r\n        placeOverlay.setMap(null);\r\n        if (className === 'on') {\r\n            currCategory = '';\r\n            // changeCategoryClass();\r\n            removeMarker();\r\n        } else {\r\n            currCategory = id;\r\n            setCategory(currCategory);\r\n            // changeCategoryClass(this);\r\n            searchPlaces();\r\n        }\r\n    }\r\n\r\n    //클릭된 카테고리에만 클릭된 스타일을 적용하는 함수입니다\r\n    // function changeCategoryClass(el) {\r\n    //     var category = document.getElementById('category'),\r\n    //         children = category.children,\r\n    //         i;\r\n    //     for ( i=0; i<children.length; i++ ) {\r\n    //         children[i].className = '';\r\n    //     }\r\n    //     if (el) {\r\n    //         el.className = 'on';\r\n    //     } \r\n    // } \r\n    // 마커를 지도 위에 표시\r\n    marker.setMap(map);\r\n  };\r\n\r\n\r\n    const {isShowing, toggle} = UseModal();\r\n  return (\r\n      <div>\r\n          {/* <div id=\"map\" style={{ width: \"500px\", height: \"500px\" }}></div> */}\r\n          \r\n          {/* <button className=\"button-default\" onClick={toggle}>Show Modal</button> */}\r\n          {/* 모달 */}\r\n          <AroundModal\r\n                isShowing={isShowing}\r\n                hide={toggle}\r\n                wishTitle = {wishTitle}\r\n                wishContent = {wishContent}\r\n                category = {category}\r\n            />\r\n\r\n          <Box className=\"map_wrap\" style={{textAlign: 'center'}}\r\n                        display=\"flex\"\r\n                        flexWrap=\"wrap\"\r\n                        p={1}\r\n                        m={1}\r\n                        bgcolor=\"background.paper\"\r\n                        justifyContent=\"center\"\r\n                        css={{ maxWidth: '100%' }}\r\n                    >\r\n                        \r\n                        <Box m={1} id=\"map\" style={{position:'relative', overflow:'hidden'}}>\r\n                            <input type=\"hidden\" value={title} id=\"keyword\" size=\"15\"></input>\r\n                        </Box>\r\n\r\n                        <br/><br/>\r\n                        \r\n                        <Box m={1} id=\"placeListBox\">\r\n                            <BottomNavigation\r\n                                    id=\"category\"\r\n                                    value={value}\r\n                                    onChange={(event, newValue) => {\r\n                                        setValue(newValue);\r\n                                    }}\r\n                                    showLabels\r\n                                    >\r\n                                    <BottomNavigationAction id=\"FD6\" data-order=\"0\" label=\"Food\" icon={<RestaurantIcon />} \r\n                                        style={{borderLeft: '1px solid #ddd', borderTop: '1px solid #ddd', borderBottom: '1px solid #ddd'}} />\r\n                                    <BottomNavigationAction id=\"CE7\" data-order=\"1\" label=\"Cafe\" icon={<LocalCafeIcon />} style={{border: '1px solid #ddd'}} />\r\n                                    <BottomNavigationAction id=\"AD5\" data-order=\"2\" label=\"Rooms\" icon={<HotelIcon />}\r\n                                        style={{borderRight: '1px solid #ddd', borderTop: '1px solid #ddd', borderBottom: '1px solid #ddd'}}/>\r\n                                    </BottomNavigation>\r\n                            <div id=\"menu_wrap\" class=\"bg_white\">\r\n                                <ul id=\"placesList\">\r\n                                    <li style={{marginTop: '30px'}}>원하시는 카테고리를 선택해주세요.</li>\r\n                                </ul>\r\n                                <div id=\"pagination\"></div>\r\n                            </div>\r\n                        </Box>\r\n                        \r\n                    </Box>\r\n\r\n                    {/* 일정 추가 모달 */}\r\n                    {/* <Modal\r\n                        aria-labelledby=\"transition-modal-title\"\r\n                        aria-describedby=\"transition-modal-description\"\r\n                        className=\"aroundmodal\"\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        closeAfterTransition\r\n                        BackdropComponent={Backdrop}\r\n                        BackdropProps={{\r\n                        timeout: 500,\r\n                        }}\r\n                    >\r\n                        <Fade in={open}>\r\n                        <div className=\"aroundpaper\">\r\n                            <span className=\"aroundmodalTitle\">일정 추가</span><br/> */}\r\n                            {/* 🏰&nbsp;&nbsp;{this.state.spotdata.title}<br/> */}\r\n                            {/* 🗺&nbsp;&nbsp;{this.state.spotdata.roadaddr}<br/> */}\r\n                            {/* 🗓&nbsp;&nbsp;여행 날짜\r\n                            <input type=\"date\" class=\"form-control form-control-sm\" ref=\"wishday\"></input>\r\n                            ⏰&nbsp;&nbsp;예정 시간\r\n                            <input type=\"time\" class=\"form-control form-control-sm\" ref=\"wishtime\"></input><br/>\r\n                            <div style={{textAlign: 'center'}}>\r\n                                <button type=\"button\" class=\"btn btn-warning aroundmodalBtn\"><b>추가</b></button>\r\n                            </div>\r\n\r\n                        </div>\r\n                        </Fade>\r\n                    </Modal> */}\r\n\r\n                    \r\n      </div>   \r\n  );\r\n}\r\n\r\nexport default MapComp;","C:\\finalproject\\jeju\\finalproject\\src\\component\\header\\menus\\index.js",[],"C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\Weather.js",[],"C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\tour\\DetailReviewComp.js",["660"],"import React,{Component} from 'react';\r\nimport axios from 'axios';\r\nimport {URL} from '../../../redux/config';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\r\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\r\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\r\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport './TourDetailCss.css';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport store from '../../../redux/store';\r\n\r\nconst customIcons = {\r\n    1: {\r\n      icon: <SentimentVeryDissatisfiedIcon />,\r\n      label: 'Very Dissatisfied',\r\n    },\r\n    2: {\r\n      icon: <SentimentDissatisfiedIcon />,\r\n      label: 'Dissatisfied',\r\n    },\r\n    3: {\r\n      icon: <SentimentSatisfiedIcon />,\r\n      label: 'Neutral',\r\n    },\r\n    4: {\r\n      icon: <SentimentSatisfiedAltIcon />,\r\n      label: 'Satisfied',\r\n    },\r\n    5: {\r\n      icon: <SentimentVerySatisfiedIcon />,\r\n      label: 'Very Satisfied',\r\n    },\r\n  };\r\n\r\n  function IconContainer(props) {\r\n    const { value, ...other } = props;\r\n    return <span {...other}>{customIcons[value].icon}</span>;\r\n  }\r\n  \r\n  IconContainer.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n\r\nclass DetailReviewComp extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            content:'',\r\n            upload:'',\r\n            star: '1'\r\n        }\r\n\r\n        this.contentsid = this.props.contentsid;\r\n\r\n    }\r\n\r\n    changeHandler=(e)=>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    insertReview=()=>{\r\n        if(!store.getState().logged){\r\n            alert(\"로그인이 필요한 서비스입니다.\")\r\n        }\r\n        else{\r\n            let memNum = store.getState().loginId; // 나중에 로그인상태의 아이디 집어넣기\r\n            let star = this.state.star;\r\n            let content = this.state.content;\r\n            let contentsid = this.contentsid;\r\n\r\n            // let url = \"http://localhost:9002/sreview/insert\";\r\n            let url = URL + \"/sreview/insert\";\r\n\r\n            axios.post(url, {contentsid, memNum, star, content})\r\n                .then(res=>{\r\n                    this.setState({\r\n                        content : \"\",\r\n                        upload: ''\r\n                    })\r\n                    //window.location.reload();\r\n                    this.props.getList();\r\n                }).catch(err=>{\r\n                    console.log(\"DetailReviewComp insert 오류 : \" + err);\r\n                })\r\n\r\n        }\r\n    }\r\n\r\n    uploadImage=(e)=>{\r\n        const uploadFile=e.target.files[0];\r\n        const imageFile=new FormData();\r\n        imageFile.append(\"uploadFile\",uploadFile);\r\n\r\n        let url = URL + \"/sreview/upload\";\r\n        \r\n        axios({\r\n            method:'post',\r\n            url:url,\r\n            data:imageFile,\r\n            headers:{'Content-Type':'multipart/form-data'}\r\n        }).then(res=>{\r\n            this.setState({\r\n                upload:res.data.photoname\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    handleDelete = () => {\r\n        let url = URL + \"/sreview/delupload\";\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    upload:''\r\n                })\r\n            })\r\n    };\r\n\r\n    render() {\r\n\r\n        const chip = this.state.upload==''?\"\":<Chip\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                label={this.state.upload}\r\n                                                onDelete={this.handleDelete.bind(this)}\r\n                                            />;\r\n        return (\r\n            <div>\r\n                <Box\r\n                        display=\"flex\"\r\n                        flexWrap=\"wrap\"\r\n                        p={1}\r\n                        m={1}\r\n                        bgcolor=\"background.paper\"\r\n                        justifyContent=\"center\"\r\n                        css={{ maxWidth: '100%' }}\r\n                    >\r\n                        <Box m={1} id=\"detailReField\">\r\n                           \r\n                            <label htmlFor=\"srContent\" style={{verticalAlign: 'middle', height: '45px'}}>\r\n                            <Box component=\"fieldset\" borderColor=\"transparent\">\r\n                            &nbsp;&nbsp;\r\n                                <Rating\r\n                                    name=\"customized-icons\"\r\n                                    defaultValue={1}\r\n                                    getLabelText={(value) => customIcons[value].label}\r\n                                    IconContainerComponent={IconContainer}\r\n                                    onChange={\r\n                                        (e)=>{\r\n                                            this.setState({\r\n                                                star : e.target.value\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                    />\r\n                                    \r\n                                    {/* &nbsp;&nbsp;<MoreVertIcon style={{marginBottom: '10px', color: \"#ddd\"}}/>&nbsp; */}\r\n                                    \r\n                            </Box> \r\n                            \r\n                            <textarea name=\"content\" id=\"srContent\" style={{resize: 'none'}} value={this.state.content} \r\n                                    className=\"form-control\" onChange={this.changeHandler.bind(this)}></textarea>\r\n                            <input style={{display:'none'}} id=\"review-icon-button-file\" type=\"file\" onChange={this.uploadImage.bind(this)}/>\r\n                                    <label htmlFor=\"review-icon-button-file\">\r\n                                        \r\n                                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" style={{marginBottom: '10px'}}>\r\n                                            <PhotoCamera />\r\n                                        </IconButton>  \r\n                                        {/* <span style={{display:'inline-block', paddingBottom: '20px'}}>{this.state.upload}</span> */}\r\n                                    </label>\r\n                                    {chip}\r\n                            </label>\r\n                                    \r\n                        </Box>\r\n                        <Box m={1} id=\"btnInsertBox\">\r\n                            <button type=\"button\" className=\"btn btn-warning\" id=\"btnInsertReview\"\r\n                                    onClick={this.insertReview.bind(this)}><b>작&nbsp;성</b></button>\r\n                        </Box>\r\n                </Box>\r\n                                   \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DetailReviewComp;","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\tour\\UseModal.js",[],"C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\tour\\AroundModal.js",["661"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './kakaomap.css';\r\nimport {URL} from '../../../redux/config';\r\nimport AroundModalDetail from './AroundModalDetail';\r\n\r\nconst AroundModal = ({ isShowing, hide, wishTitle, wishContent, category }) => isShowing ? ReactDOM.createPortal(\r\n\r\n  <React.Fragment>\r\n    <div className=\"aroundmodal-overlay\"/>\r\n    <div className=\"aroundmodal-wrapper\" aria-modal aria-hidden tabIndex={-1} role=\"dialog\">\r\n      <div className=\"aroundmodal\">\r\n        <div className=\"aroundmodal-header\">\r\n          <button type=\"button\" className=\"aroundmodal-close-button\" data-dismiss=\"aroundmodal\" aria-label=\"Close\" onClick={hide}>\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n          <AroundModalDetail wishTitle={wishTitle} wishContent={wishContent} category={category}/>\r\n          \r\n      </div>\r\n    </div>\r\n  </React.Fragment>, document.body\r\n) : null;\r\n\r\nexport default AroundModal;","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\shareboard\\ShareBoardRowItem.js",["662","663","664","665","666","667","668","669"],"import React, {Component, useState} from \"react\";\r\nimport {Route, Link} from \"react-router-dom\";\r\nimport ShareBoardUpdateForm from \"./ShareBoardUpdateForm\";\r\nimport Modal from './Modal';\r\nimport axios from \"axios\";\r\nimport {actionType, URL} from '../../../redux/config';\r\nimport ShareReview from './ShareReview';\r\nimport store from \"../../../redux/store\";\r\nimport Box from '@material-ui/core/Box';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {MDBBtn} from \"mdbreact\";\r\nimport './Share.css';\r\n\r\n/*\r\nrow:\r\n    addr: \"제주시 제주동 제주읍 제주리 제주제주\"\r\n    content: \"맛있습니다. 맛있습니다. 맛있습니다. 맛있습니다.↵맛있습니다. 맛있습니다. 맛있습니다. 맛있습니다↵맛있습니다. 맛있습니다. 맛있습니다. 맛있습니다\"\r\n    id: \"hee0134\"\r\n    likes: 0\r\n    num: \"422\"\r\n    photo: \"jeju20210122102347.png\"\r\n    regroup: 422\r\n    relevel: 0\r\n    restep: 0\r\n    star: \"4\"\r\n    subject: \"제주도 맛집맛집\"\r\n    writeday: \"2021-01-22\"\r\n */\r\n\r\nconst StyledRating = withStyles({\r\n    iconFilled: {\r\n        color: '#ff6d75',\r\n    },\r\n    iconHover: {\r\n        color: '#ff3d47',\r\n    },\r\n})(Rating);\r\n\r\n\r\nclass ShareBoardRowItem extends Component {\r\n\r\n    state = {\r\n        modalOpen: false\r\n\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"constructor\", this.props);\r\n        //스크롤\r\n        this.myRef = React.createRef()\r\n        this.state = {scrollTop: 0}\r\n    }\r\n\r\n\r\n    //스크롤\r\n    onScroll = () => {\r\n        const scrollY = window.scrollY //Don't get confused by what's scrolling - It's not the window\r\n        const scrollTop = this.myRef.current.scrollTop\r\n        // console.log(`onScroll, window.scrollY: ${scrollY} myRef.scrollTop: ${scrollTop}`);\r\n        this.setState({\r\n            scrollTop: scrollTop\r\n        })\r\n    }\r\n\r\n\r\n    //삭제하는 함수 이벤트\r\n    onDeleteData = (e) => {\r\n        e.preventDefault();\r\n        let num = this.props.row.num;\r\n        let regroup = this.props.row.regroup;\r\n        let url = URL + \"/share/delete\";\r\n        let data = {\r\n            num: num,\r\n            regroup: regroup,\r\n        }\r\n\r\n        // console.log(\"onDeleteData\", url, data);\r\n\r\n        if (window.confirm(\"삭제하시겠습니까?\")) {\r\n            axios.post(url, data\r\n            ).then(res => {\r\n                // console.log(\"onDeleteData() res\", res);\r\n                store.dispatch({\r\n                    type: actionType.shareBoardUpdate,\r\n                });\r\n                this.props.history.push(\"/share\");\r\n            }).catch(err => {\r\n                console.log(\"onDeleteData() err\", err);\r\n            });\r\n        }\r\n    }\r\n\r\n    onInsertAnswer = () => {\r\n        // 원본 리뷰글의 댓글\r\n        // regroup 현재꺼 / relevel 1 / restep 현재꺼 /\r\n        let num = this.props.row.num;\r\n        let regroup = this.props.row.regroup;\r\n        let relevel = this.props.row.relevel;\r\n        let restep = this.props.row.restep;\r\n        let content = this.refs.content.value;\r\n        let star = 0;\r\n        let url = URL + \"/share/insert\" +\r\n            \"?\" +\r\n            \"relevel=\" + relevel +\r\n            \"&restep=\" + restep +\r\n            \"&regroup=\" + regroup;\r\n        let data = {\r\n            num: num,\r\n            // regroup: regroup,\r\n            // relevel: relevel,\r\n            // restep: restep,\r\n            content: content,\r\n            star: star,\r\n        }\r\n\r\n        console.log(url, data);\r\n\r\n        axios.post(url, data\r\n        ).then(res => {\r\n            console.log(\"onInsertAnswer res\", res);\r\n            store.dispatch({\r\n                type: actionType.shareBoardUpdate,\r\n            });\r\n        }).catch(err => {\r\n            console.log(\"onInsertAnswer err\", err);\r\n        })\r\n\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({modalOpen: true})\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({modalOpen: false})\r\n    }\r\n\r\n    // componentDidUpdate() {\r\n    //     console.log(\"state변경\");\r\n    // }\r\n\r\n\r\n    render() {\r\n        const {row} = this.props;\r\n        //스크롤\r\n        const {\r\n            scrollTop\r\n        } = this.state\r\n\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Box m={1} id=\"ShareListBox\">\r\n                    <div>\r\n                        {/* onClick={this.openModal.bind(this)}  */}\r\n                        <div id=\"ShareImg\"\r\n                             onClick={this.openModal.bind(this)}\r\n                             style={{\r\n                                 overflow:\"hidden\"\r\n                             }}\r\n                        >\r\n                            {/*{row.photo}*/}\r\n                            <img src={URL + \"/\" + row.photo}\r\n                                 style={{\r\n                                     width:\"100%\"\r\n                                 }}\r\n                            />\r\n                        </div>\r\n                        <div id=\"ShareListSubject\" onClick={this.openModal.bind(this)}>\r\n                            {row.subject}\r\n                        </div>\r\n                        <div id=\"ShareContentDiv\">\r\n                            <Box>\r\n                                <Rating style={{marginTop: '13px'}}\r\n                                        defaultValue={row.star}\r\n                                        emptyIcon={<StarBorderIcon fontSize=\"inherit\"/>}\r\n                                />\r\n                            </Box>\r\n                            <div style={{marginTop: '10px'}}>주소:{row.addr}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div style={{width: '400px', height: '55px', backgroundColor: '#FaFaFa'}}>\r\n                                {/* 좋아요 버튼 */}\r\n                                <ThumbUpAltIcon id=\"ShareThumbIcon\"/>\r\n\r\n                                {/* 삭제 버튼 */}\r\n                                <DeleteForeverIcon\r\n                                    id=\"DeleteButton\"\r\n                                    onClick={this.onDeleteData.bind(this)}\r\n                                />\r\n\r\n                                <Link to={`/share/update/${this.props.row.num}`}>\r\n                                    <BuildIcon id=\"UpdateButton\"/>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Box>\r\n\r\n                {/*/////////////////////////////////////Modal/////////////////////////////////////////////////////*/}\r\n                {/* //header 부분에 텍스트를 입력한다. */}\r\n                <Modal open={this.state.modalOpen} close={this.closeModal.bind(this)} title=\"share\">\r\n\r\n                    {/* // Modal.js <main> { props.children } </main>에 내용이 입력된다.  */}\r\n                    <div id=\"ShareModalAll\" ref={this.myRef} onScroll={this.onScroll}>\r\n\r\n                        <div style={{width: \"1150px\", height: \"140px\"}}>\r\n                            <div style={{float: 'left'}}>\r\n                                {/* 좋아요 버튼 */}\r\n                                <ThumbUpAltIcon id=\"ShareModalThumbIcon\"/>\r\n                                <p style={{marginTop: \"10px\", marginBottom: '45px'}}>(작성자) 님이 공유하신 맛집입니다.</p>\r\n                                <b style={{fontSize: '15px'}}>{row.subject}</b>\r\n                            </div>\r\n\r\n                            {/* 찜하기 버튼 */}\r\n                            <div id=\"ShareHeart\" className=\"heart\"></div>\r\n                        </div>\r\n\r\n                        <div id=\"ShareModalMidBox\">\r\n                            <div id=\"ShareModalImg\"\r\n                                 style={{\r\n                                     overflow:\"hidden\"\r\n                                 }}\r\n                            >\r\n                                {/*{row.photo}*/}\r\n                                <img src={URL + \"/\" + row.photo}\r\n                                     style={{\r\n                                         width:\"100%\"\r\n                                     }}\r\n                                />\r\n                            </div>\r\n                            <div id=\"ShareModalContent\">\r\n                                <div id=\"ShareModalContent1\">\r\n                                    <Box>\r\n                                        <Rating\r\n                                            defaultValue={row.star}\r\n                                            emptyIcon={<StarBorderIcon fontSize=\"inherit\"/>}\r\n                                        />\r\n                                    </Box>\r\n                                </div>\r\n                                <div id=\"ShareModalContent2\">주소:{row.addr}</div>\r\n                                <div id=\"ShareModalContent3\">리뷰:{row.content}</div>\r\n                                <div id=\"ShareModalContent4\">작성일:{row.writeday}</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div id=\"ShareReviewWrite\">\r\n                            <div>\r\n                                <div style={{float: 'left'}}>ID</div>\r\n\r\n                                {/* 댓글 이미지 추가 아이콘 */}\r\n                                <AddAPhotoIcon id=\"ShareReviewPhotoIcon\"/>\r\n                            </div>\r\n                            <div>\r\n                                <div>\r\n                                        <textarea\r\n                                            placeholder=\"댓글을 입력하세요\"\r\n                                            className=\"form-control\"\r\n                                            style={{width: '900px', height: '100px', float: 'left'}}\r\n                                            ref=\"content\"\r\n                                        ></textarea>\r\n                                </div>\r\n                                <div>\r\n                                    <MDBBtn color=\"deep-orange\" id=\"ShareReviewSave\"\r\n                                            onClick={this.onInsertAnswer.bind(this)}\r\n                                    ><b style={{fontSize: '17px'}}>작&nbsp;성</b>\r\n                                    </MDBBtn>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <ShareReview\r\n                                regroup={row.regroup}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                {/*//////////////////////////////////////////////////////////////////////////////////////////*/}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ShareBoardRowItem\r\n\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\tour\\ReviewItemComp.js",["670","671","672","673","674","675","676"],"import React,{Component} from 'react';\r\nimport axios from 'axios';\r\nimport {URL} from '../../../redux/config';\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\r\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\r\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\r\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport PropTypes from 'prop-types';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport store from '../../../redux/store';\r\n\r\nconst reviewcustomIcons = {\r\n    1: {\r\n      icon: <SentimentVeryDissatisfiedIcon />,\r\n      label: 'Very Dissatisfied',\r\n    },\r\n    2: {\r\n      icon: <SentimentDissatisfiedIcon />,\r\n      label: 'Dissatisfied',\r\n    },\r\n    3: {\r\n      icon: <SentimentSatisfiedIcon />,\r\n      label: 'Neutral',\r\n    },\r\n    4: {\r\n      icon: <SentimentSatisfiedAltIcon />,\r\n      label: 'Satisfied',\r\n    },\r\n    5: {\r\n      icon: <SentimentVerySatisfiedIcon />,\r\n      label: 'Very Satisfied',\r\n    },\r\n  };\r\n\r\n  function reviewIconContainer(props) {\r\n    const { value, ...other } = props;\r\n    return <span {...other}>{reviewcustomIcons[value].icon}</span>;\r\n  }\r\n  \r\n  reviewIconContainer.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n\r\nclass ReviewItemComp extends Component {\r\n\r\n    state={\r\n        update: false,\r\n        upload: 'no',\r\n        content:'',\r\n        star: '1'\r\n    }\r\n\r\n    changeHandler=(e)=>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    uploadImage=(e)=>{\r\n        console.log(\"upload\");\r\n        const uploadFile=e.target.files[0];\r\n        const imageFile=new FormData();\r\n        imageFile.append(\"uploadFile\",uploadFile);\r\n\r\n        let url = URL + \"/sreview/upload\";\r\n        \r\n        axios({\r\n            method:'post',\r\n            url:url,\r\n            data:imageFile,\r\n            headers:{'Content-Type':'multipart/form-data'}\r\n        }).then(res=>{\r\n            console.log(res.data.photoname);\r\n            this.setState({\r\n                upload: res.data.photoname\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    updateClick=()=>{\r\n        this.setState({\r\n            update: true\r\n        })\r\n\r\n        let url = URL + \"/sreview/select?num=\" + this.props.row.num;\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    content: res.data.content,\r\n                    upload: res.data.photo\r\n                })\r\n            }).catch(err=>{\r\n                console.log(\"update spotreview 오류 : \" + err);\r\n            })\r\n\r\n    }\r\n\r\n    handleDelete = () => {\r\n        let url = URL + \"/sreview/updatenoupload\";\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    upload:'이미지 없음'\r\n                })\r\n            })\r\n    };\r\n\r\n    update=()=>{\r\n        let url = URL + \"/sreview/update\";\r\n        let num = this.props.row.num;\r\n        let star = this.state.star;\r\n        let content = this.state.content;\r\n\r\n        console.log(star + \", \" + content);\r\n\r\n        axios.post(url, {num, star, content})\r\n            .then(res=>{\r\n                this.setState({\r\n                    update: false\r\n                })\r\n                this.props.list();\r\n            }).catch(err=>{\r\n                console.log(\"spotreview update 오류 : \" + err);\r\n            })\r\n    }\r\n\r\n    delete=()=>{\r\n        let url = URL + \"/sreview/delete?num=\" + this.props.row.num;\r\n\r\n        if(window.confirm(\"삭제하시겠습니까?\")){\r\n            axios.get(url)\r\n                .then(res=>{\r\n                    this.setState({\r\n                        update: false\r\n                    })\r\n                    this.props.list();\r\n                }).catch(err=>{\r\n                    console.log(\"spotreview delete 오류 : \" + err);\r\n                })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {row}=this.props;\r\n        const url = URL + \"/\";\r\n        // const url = \"http://localhost:9002/photo/\";\r\n        const photo = this.state.update==false?(row.photo===\"no\"?\"\":<td style={{width:'15%'}}>\r\n                            <img src={url + row.photo} alt=\"이미지 없음\" style={{width:'100px', height:'100px'}}/>\r\n                            {/* <div className=\"tourReImg\" style={{display:'inline-block', border: '1px solid gray'}}></div> */}\r\n                        </td>):\"\";\r\n        const w = row.photo===\"no\"?\"2\":\"0\";\r\n        const star = row.star==1?<SentimentVeryDissatisfiedIcon/>:row.star==2?<SentimentDissatisfiedIcon/>\r\n        :row.star==3?<SentimentSatisfiedIcon/>:row.star==4?<SentimentSatisfiedAltIcon/>:<SentimentVerySatisfiedIcon/>\r\n\r\n        const chip = row.photo===\"no\"?(this.state.upload=='no'?\"\":<Chip\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                label={this.state.upload}\r\n                                                onDelete={this.handleDelete.bind(this)}\r\n                                            />):<Chip\r\n                                            variant=\"outlined\"\r\n                                            size=\"small\"\r\n                                            label={this.state.upload}\r\n                                            onDelete={this.handleDelete.bind(this)}\r\n                                        />;\r\n        // 로그인 아이디가 맞으면 출력\r\n        const edit = store.getState().loginId===row.memNum ? <div style={{position: 'absolute', top: '10px', right: '10px', cursor: 'pointer'}} class=\"fas fa-tools\" onClick={this.updateClick.bind(this)}></div>\r\n                :   \"\";\r\n\r\n        const tag = this.state.update==false?\r\n            <td style={{width:'75%', padding: '10px', position: 'relative'}} align=\"left\" colSpan={w}>\r\n                &nbsp;&nbsp;    \r\n                <span style={{color: '#F0CD58'}}>{star}</span>\r\n                &nbsp; &nbsp;<b>{row.memNum}</b><span style={{color: '#999'}}>님이 작성하신 후기입니다.</span>\r\n                <br/><br/>\r\n                <p>{row.content}</p>\r\n                {edit}\r\n                \r\n                <div style={{float: 'right', color: '#aaa'}}>\r\n                    {row.writeday}\r\n                </div>\r\n            </td>\r\n            :<td style={{width:'100%', padding: '10px', position: 'relative'}} align=\"left\" colSpan={2}>\r\n                <Rating\r\n                                    name=\"reviewcustomized-icons\"\r\n                                    defaultValue={row.star}\r\n                                    getLabelText={(value) => reviewcustomIcons[value].label}\r\n                                    IconContainerComponent={reviewIconContainer}\r\n                                    onChange={\r\n                                        (e)=>{\r\n                                            this.setState({\r\n                                                star : e.target.value\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                    />\r\n                <div style={{position: 'absolute', top:'5px', right:'5px', cursor: 'pointer'}} onClick={\r\n                    ()=>{\r\n                        this.setState({\r\n                            update: false\r\n                        })\r\n                    }\r\n                }>x</div>\r\n                <textarea name=\"content\" style={{resize: 'none', width: '100%'}} value={this.state.content} \r\n                                    className=\"form-control\" onChange={this.changeHandler.bind(this)}></textarea>\r\n                \r\n                <input style={{display:'none'}} id=\"upreview-icon-button-file\" type=\"file\" onChange={this.uploadImage.bind(this)}/>\r\n                <label htmlFor=\"upreview-icon-button-file\">\r\n                    <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" style={{marginBottom: '10px'}}>\r\n                        <PhotoCamera />\r\n                    </IconButton> \r\n                </label>\r\n                {chip}\r\n                <div style={{float:'right', marginTop: '10px'}}>\r\n                    <button type=\"button\" class=\"btn btn-warning\" onClick={this.update.bind(this)}>수정</button>\r\n                    <button type=\"button\" class=\"btn btn-warning\" onClick={this.delete.bind(this)}>삭제</button>\r\n                </div>\r\n            </td>;\r\n        return (\r\n            <tr>\r\n                {photo}\r\n                {tag}\r\n            </tr> \r\n        );\r\n    }\r\n}\r\n\r\nexport default ReviewItemComp;","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\NoticeItemComp.js",["677","678"],"import React, {Component} from \"react\";\r\nimport {Box} from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport '../tour/TourCss.css';\r\n\r\nclass NoticeItemComp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // this.paperRoot = {\r\n        //     display: \"flex\",\r\n        //     flexWrap: \"wrap\",\r\n        //     \"& > *\": {\r\n        //         margin: \"10px\",\r\n        //         padding: \"10px\",\r\n        //         width: \"300px\",\r\n        //         height: \"400px\",\r\n        //         overflow: \"hidden\",\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    showDetailNotice = ()=>{\r\n\r\n    }\r\n\r\n    /*\r\n    * content: \"글 올립니다 올려요\"\r\n    num: \"32\"\r\n    readcount: 22\r\n    star: \"0\"\r\n    subject: \"글 테스트용 올려요\"\r\n    writeday: \"2020-12-09 02:06\"\r\n    * */\r\n    render() {\r\n        const {row} = this.props;\r\n        console.log(row);\r\n        return (\r\n            <Box m={1} id=\"itemBox\">\r\n                <div style={{\r\n                    cursor: 'pointer',\r\n\r\n                }}\r\n                     onClick=\"\"\r\n                >\r\n                    <div id=\"itemTitle\"\r\n                         style={{whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: 'hidden'}}\r\n                    >\r\n                        <b style={{color: '#888'}}\r\n                        >{row.subject}\r\n                        </b><br/>\r\n                    </div>\r\n                    <div id=\"itemContentDiv\">\r\n                        <p id=\"itemContent\"\r\n                           style={{fontWeight: '500', color: '#888', overflow: 'hidden'}}\r\n                        >{row.content}\r\n                        </p>\r\n                    </div>\r\n                    <div id=\"itemContentDiv\">\r\n                        <p id=\"itemContent\"\r\n                           style={{fontWeight: '500', color: '#888', overflow: 'hidden'}}\r\n                        >{row.writeday}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoticeItemComp;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\BoardSample.js",["679","680","681","682","683","684","685","686","687","688","689","690","691","692","693"],"import React, {useState, useEffect} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport axios from 'axios';\r\nimport {arrJejuLoc_en, arrJejuLoc_ko, URL} from \"../../../redux/config\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {red} from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\n\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport BoardSampleItem from './BoardSampleItem';\r\nimport ItemComp from \"../tour/ItemComp\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // maxWidth: 345\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: \"56.25%\" // 16:9\r\n    },\r\n    expand: {\r\n        transform: \"rotate(0deg)\",\r\n        marginLeft: \"auto\",\r\n        transition: theme.transitions.create(\"transform\", {\r\n            duration: theme.transitions.duration.shortest\r\n        })\r\n    },\r\n    expandOpen: {\r\n        transform: \"rotate(180deg)\"\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500]\r\n    },\r\n    paperRoot: {\r\n        display: \"flex\",\r\n        // flexWrap: \"wrap\",\r\n        overflow: \"auto\",\r\n        \"& > *\": {\r\n            // flexShrink: \"0\",\r\n            // margin: \"10px\",\r\n            // padding: \"10px\",\r\n            // width: \"300px\",\r\n            // height: \"300px\",\r\n            // overflow: \"hidden\",\r\n            // textAlign: \"center\",\r\n            // objectFit: \"cover\"\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function BoardSample(props) {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [spotList, setSpotList] = useState([]);\r\n    const idx = props.idx;\r\n\r\n    useEffect(() => {\r\n        getList();\r\n\r\n        return () => {\r\n            let divTemp = document.querySelector(\".hotPlace_sample div div\");\r\n            if (divTemp) {\r\n                divTemp.scrollTo(0, 0);\r\n            }\r\n        }\r\n    }, [idx]);\r\n\r\n\r\n    // 통신 메서드\r\n    function getList() {\r\n        const url = URL + '/spot/list' +\r\n            '?start=0' +\r\n            '&perPage=5' +\r\n            '&label2=' + arrJejuLoc_en[idx];\r\n        axios.get(url)\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n                setSpotList(response.data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(\"실패\", error);\r\n            });\r\n    }\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>&nbsp;&nbsp;&nbsp;&nbsp;{arrJejuLoc_ko[idx]}</h1>\r\n            <hr/>\r\n            <div className={classes.paperRoot}>\r\n                {spotList.map((row, i) => {\r\n                    // console.log(i, row, props.history);\r\n                    return (\r\n                        <ItemComp row={row} key={i}\r\n                                  history={props.history}\r\n                                  getList={getList.bind(this)}\r\n                        ></ItemComp>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n/*\r\n<Card className={classes.root}>\r\n                    <CardHeader\r\n                        avatar={\r\n                            <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                YK\r\n                            </Avatar>\r\n                        }\r\n                        action={\r\n                            <IconButton aria-label=\"settings\">\r\n                                <MoreVertIcon/>\r\n                            </IconButton>\r\n                        }\r\n                        title=\"Shrimp and Chorizo Paella\"\r\n                        subheader=\"September 14, 2016\"\r\n                    />\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image=\"/static/images/cards/paella.jpg\"\r\n                        title=\"Paella dish\"\r\n                    />\r\n                    <CardContent>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            This impressive paella is a perfect party dish and a fun meal to cook\r\n                            together with your guests. Add 1 cup of frozen peas along with the\r\n                            mussels, if you like.\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions disableSpacing>\r\n                        <IconButton aria-label=\"add to favorites\">\r\n                            <FavoriteIcon/>\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"share\">\r\n                            <ShareIcon/>\r\n                        </IconButton>\r\n                    </CardActions>\r\n                </Card>\r\n */\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\MyPlanLeftItem.js",["694","695","696","697","698","699","700"],"import React, {Component} from 'react';\r\nimport './MyPlanComp.css';\r\nimport axios from 'axios';\r\nimport {URL} from '../../../redux/config';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nclass MyPlanLeftItem extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            title:''\r\n        }\r\n\r\n        let date = new Date();\r\n        this.today = date.getFullYear() + \"-\" + Number(date.getMonth()+1) + \"-\" + date.getDate();\r\n    }\r\n\r\n    getSpotTitle = () => {\r\n        let url = URL + \"/wish/spottitle?contentsid=\" + this.props.row.spotId;\r\n\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    title: res.data\r\n                })\r\n            }).catch(err=>{\r\n                console.log(\"myplan getSpotTitle 오류 : \" + err);\r\n            })\r\n    }\r\n\r\n    getShareSubject = () => {\r\n        let url = URL + \"/wish/sharesubject?num=\" + this.props.row.shareNum;\r\n\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.setState({\r\n                    title: res.data\r\n                })\r\n            }).catch(err=>{\r\n                console.log(\"myplan getShareSubject 오류 : \" + err);\r\n            })\r\n    }\r\n\r\n    componentWillMount(){\r\n        if(this.props.row.spotId != null)\r\n            this.getSpotTitle();\r\n        else if(this.props.row.shareNum != null)\r\n            this.getShareSubject();\r\n    }\r\n\r\n    render(){\r\n        \r\n        const {row} = this.props;\r\n        const title = row.spotId!=null?this.state.title:row.shareNum!=null?this.state.title:row.aroundId!=null?row.aroundId:row.content;\r\n        const icon = row.spotId!=null?\"🛕\":row.shareNum!=null?\"👨‍🍳\":row.content!=null&row.aroundId==null?\"📅\"\r\n            :row.aroundId!=null&row.content.split(\",\")[0]==\"음식점\"?\"🍔\":row.aroundId!=null&row.content.split(\",\")[0]==\"카페\"?\"☕\":\"🛌\";\r\n\r\n        var betweenDay = parseInt((new Date(row.wishday) - new Date(this.today))/ (24*60*60*1000));\r\n        var isToday = Number(this.today.split(\"-\")[0]) == Number(row.wishday.split(\"-\")[0]) ?\r\n                     Number(this.today.split(\"-\")[1]) == Number(row.wishday.split(\"-\")[1]) ? \r\n                     Number(this.today.split(\"-\")[2]) == Number(row.wishday.split(\"-\")[2]) ? true: false: false: false;\r\n        return (\r\n            <div>\r\n                <ListItem className=\"myplanLeftList\">\r\n                    <ListItemAvatar>\r\n                        <Avatar>\r\n                            {/* <ImageIcon/> */}\r\n                            {icon}\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={title} secondary={isToday==true?`예정시간 ${row.wishtime}`:`D-${betweenDay}`}/>\r\n                </ListItem>\r\n                <Divider variant=\"inset\" component=\"li\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyPlanLeftItem;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\MyPlanRightItem.js",["701","702","703","704"],"import React, {Component} from 'react';\r\nimport './MyPlanComp.css';\r\nimport axios from 'axios';\r\nimport {URL} from '../../../redux/config';\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nclass MyPlanRightItem extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n    }\r\n\r\n    render(){\r\n        \r\n        const {row} = this.props;\r\n\r\n        return (\r\n            <div style={{position: 'relative'}} className=\"myplanRightItemBox\">\r\n                <div><img src={row.thumbnail} alt=\"\" class=\"myplanRightItemImg\"/></div>\r\n                <div class=\"myplanRightTitle\" style={{position: 'absolute', bottom: '5%', left: '30%', color: 'white', textAlign: 'center'}}>\r\n                    {row.title}\r\n                </div>\r\n            </div>\r\n            // <Paper elevation={3}>\r\n            //     <br/>\r\n            //     <div id=\"myplanRightThumb\"></div>\r\n            // </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyPlanRightItem;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\header\\menus\\Join.js",[],"C:\\finalproject\\jeju\\finalproject\\src\\component\\header\\menus\\Admin.js",["705"],"import React, {Component} from \"react\";\r\n\r\nclass Admin extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*<b>Admin</b>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Admin;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\tour\\AroundModalDetail.js",["706","707","708","709","710","711","712","713","714"],"import React, { useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport {URL} from '../../../redux/config';\r\nimport './kakaomap.css';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport UseModal from './UseModal';\r\nimport {Route, Link} from \"react-router-dom\";\r\nimport store from '../../../redux/store';\r\n\r\nconst AroundModalDetail=(props)=> {\r\n\r\n  const [alertOpen, setAlertOpen] = useState(false);\r\n  const [alertSetOpen, setAlertSetOpen] = useState(false);\r\n  const [aroundwishday, setWishday] = useState('');\r\n  const [aroundwishtime, setWishtime] = useState('');\r\n\r\n    const {isShowing, toggle} = UseModal();\r\n\r\n    const insertAround=()=>{\r\n        let url = URL + \"/wish/insertaround\";\r\n        let memId = store.getState().loginId;\r\n        let category = props.category=='FD6'?'음식점':props.category=='CE7'?'카페':'숙박';\r\n        let aroundId = props.wishTitle;\r\n        let content = category + \",\" + props.wishContent;\r\n        let wishday = aroundwishday;\r\n        let wishtime = aroundwishtime;\r\n\r\n        // console.log(wishday);\r\n        if(wishday == '' || wishtime == '')\r\n            alert(\"날짜와 시간을 모두 선택해주세요.\");\r\n        else{\r\n            axios.post(url, {memId, aroundId, content, wishday, wishtime})\r\n            .then(res=>{\r\n              toggle();\r\n              handleAlertOpen();\r\n            }).catch(err=>{\r\n                console.log(\"aroundwish insert 오류 : \" + err);\r\n            })\r\n        }\r\n    }\r\n\r\n     // alert 함수\r\n     const handleAlertOpen = () => {\r\n      setAlertOpen(true);\r\n    };\r\n\r\n     const handleAlertClose = () => {\r\n      setAlertOpen(false);\r\n    };\r\n\r\n    const wishdayChange=(e)=>{\r\n        setWishday(e.target.value);\r\n    }\r\n\r\n    const wishtimeChange=(e)=>{\r\n      setWishtime(e.target.value);\r\n  }\r\n\r\n    return (\r\n      <div>\r\n          <div className=\"aroundpaper\">\r\n            <span className=\"aroundmodalTitle\">일정 추가</span><br/>\r\n              🏰&nbsp;&nbsp;{props.wishTitle}<br/>\r\n              🗺&nbsp;&nbsp;{props.wishContent}<br/>\r\n              🗓&nbsp;&nbsp;여행 날짜\r\n              <input type=\"date\" class=\"form-control form-control-sm\" value={aroundwishday} onChange={wishdayChange}></input>\r\n              ⏰&nbsp;&nbsp;예정 시간\r\n              <input type=\"time\" class=\"form-control form-control-sm\" value={aroundwishtime} onChange={wishtimeChange}></input><br/>\r\n              <div style={{textAlign: 'center'}}>\r\n                <button type=\"button\" class=\"btn btn-warning aroundmodalBtn\" onClick={insertAround}><b>추가</b></button>\r\n            </div>\r\n          </div>\r\n\r\n        \r\n                    <Dialog\r\n                      open={alertOpen}\r\n                      onClose={handleAlertClose}\r\n                      aria-labelledby=\"alert-dialog-title\"\r\n                      aria-describedby=\"alert-dialog-description\"\r\n                  >\r\n                      <DialogTitle id=\"alert-dialog-title\">{\"일정 추가 완료\"}</DialogTitle>\r\n                      <DialogContent>\r\n                      <DialogContentText id=\"alert-dialog-description\">\r\n                          Mypage로 이동하여 확인하시겠습니까?\r\n                      </DialogContentText>\r\n                      </DialogContent>\r\n                      <DialogActions>\r\n                      <Button onClick={handleAlertClose} color=\"primary\">\r\n                          NO\r\n                      </Button>\r\n                      <Link to=\"/mypage\" style={{marginRight: '10px'}} color=\"primary\">\r\n                        YES\r\n                      </Link>\r\n                      </DialogActions>\r\n                  </Dialog>\r\n      \r\n        </div>\r\n      \r\n      );\r\n}\r\n\r\nexport default AroundModalDetail;","C:\\finalproject\\jeju\\finalproject\\src\\component\\header\\menus\\MyPage.js",["715"],"import React, {Component} from \"react\";\r\n\r\nclass MyPage extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*<b>MyPage</b>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyPage;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\header\\menus\\Login.js",["716"],"import React, {Component} from \"react\";\r\n\r\nclass Login extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*<b>Login</b>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\header\\menus\\ShareBoard.js",["717"],"import React, {Component} from 'react';\r\n\r\nclass ShareBoard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*<b>맛집공유게시판</b>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShareBoard;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\shareboard\\Modal.js",["718"],"import React, { Component,useState } from 'react';\r\nimport './Modal.css'\r\n\r\nclass Modal extends Component {\r\n    render() {\r\n        // 열기, 닫기, 모달 헤더 텍스트를 부모로부터 받아옴\r\n        const { open, close, header } = this.props;\r\n\r\n        return (\r\n            <div className={ open ? 'openModal modal': 'modal' }>\r\n                { open ? (\r\n                    <section>\r\n                        <header>\r\n                            { header }\r\n                            <button className=\"close\" onClick={close} > &times; </button>\r\n                        </header>\r\n                        <main>\r\n                            {this.props.children}\r\n                        </main>\r\n                        {/* <footer>\r\n                            <button className=\"close\" onClick={close}> 댓글목록 </button>\r\n                        </footer> */}\r\n                    </section>\r\n                ) : null }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\header\\menus\\Tour.js",["719"],"import React, {Component} from \"react\";\r\n\r\nclass Tour extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tour;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\shareboard\\ShareReview.js",["720","721"],"import React, {Component, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {URL} from '../../../redux/config';\r\nimport ReviewItem from './ReviewItem';\r\nimport store from \"../../../redux/store\";\r\n\r\nclass ShareReview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            listData: []\r\n        }\r\n        this.regroup = this.props.regroup;\r\n\r\n        //글 추가가 되면 자동 호출되게끔 subscribe 등록.\r\n        store.subscribe(this.getAnswerList.bind(this));\r\n    }\r\n\r\n    getAnswerList = () => {\r\n        //댓글 출력하는 함수.\r\n        let url = URL + \"/share/answer\" + \"?regroup=\" + this.regroup;\r\n        console.log(url);\r\n\r\n        axios.get(url\r\n        ).then(res => {\r\n            console.log(res);\r\n            this.setState({\r\n                listData: res.data\r\n            });\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAnswerList();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.listData.map((row, idx) => {\r\n                        return (\r\n                            <ReviewItem row={row} key={idx}\r\n                                        history={this.props.history}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShareReview;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\header\\menus\\TourList.js",["722"],"import React, {Component} from \"react\";\r\n\r\nclass TourList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TourList;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\header\\menus\\Home.js",["723","724","725"],"import React, {Component} from \"react\";\r\n// import BigText from '../component/BigText';\r\n// import Header from \"../component/Header\";\r\nimport store from \"../../../redux/store\";\r\nimport {actionType, mainViewType} from \"../../../redux/config\";\r\n\r\n// page init\r\n// constructor -> componentWillMount -> render\r\n\r\n// 다른메뉴 -> Home menu click\r\n// constructor -> componentWillMount -> render -> componentDidMount\r\n\r\n// Home menu 에서 -> 다른메뉴로 갈때.\r\n// componentWillUnmount\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"Home constructor\", this.props, this.state, store.getState());\r\n    }\r\n\r\n    componentWillMount() {\r\n        console.log(\"Home componentWillMount()\");\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState, nextContext) {\r\n        console.log(\"Home componentWillUpdate()\");\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        console.log(\"Home componentWillUnmount()\");\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(\"Home render()\");\r\n        return (\r\n            <div>\r\n                {/*<Header />*/}\r\n                {/*<BigText>홈</BigText>*/}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"Home componentDidMount()\");\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(\"Home componentDidUpdate()\");\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log(\"Home componentWillUnmount()\");\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\header\\menus\\Reservation.js",["726"],"import React, {Component} from \"react\";\r\n\r\n\r\nclass Reservation extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*<b>비행기 렌터카 예약</b>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reservation;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\header\\menus\\Notice.js",["727"],"import React, {Component} from \"react\";\r\n\r\nclass Notice extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*<b>공지사항</b>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notice;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mainpage\\BoardSampleItem.js",["728","729","730","731"],"import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\nimport {Route, Link} from \"react-router-dom\";\r\nimport {URL} from \"../../../redux/config\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nclass BoardSampleItem extends Component {\r\n\r\n    render() {\r\n        const {row} = this.props;\r\n        return (\r\n            <Paper elevation={3}>\r\n                {row.title}\r\n                <img src={row.thumbnail} alt=\"profile\"/>\r\n            </Paper>            \r\n        )        \r\n    }\r\n}\r\n\r\nexport default BoardSampleItem;\r\n\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\shareboard\\ReviewItem.js",["732","733","734","735","736"],"import React, {Component, useState} from 'react';\r\nimport {actionType, URL} from \"../../../redux/config\";\r\nimport axios from \"axios\";\r\nimport store from \"../../../redux/store\";\r\nimport { MDBBtn } from \"mdbreact\";\r\n\r\nclass ReviewItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n            saveType: \"\",\r\n        }\r\n\r\n    }\r\n\r\n    onTriggerInput = (type = null) => {\r\n\r\n        const {row} = this.props;\r\n        var className = `.input_answer_${row.regroup}_${row.relevel}_${row.restep}`;\r\n        console.log(className);\r\n\r\n        let divInput = document.querySelector(className);\r\n\r\n        if (this.state.saveType == type || type == null) {\r\n            if (this.state.isOpen) {\r\n                divInput.style.display = \"none\";\r\n                this.setState({\r\n                    isOpen: false,\r\n                });\r\n            } else {\r\n                divInput.style.display = \"block\";\r\n                this.setState({\r\n                    isOpen: true,\r\n                    saveType: type,\r\n                });\r\n            }\r\n        } else {\r\n            divInput.style.display = \"block\";\r\n            this.setState({\r\n                isOpen: true,\r\n                saveType: type,\r\n            });\r\n        }\r\n    }\r\n\r\n    onSaveButton = () => {\r\n        console.log(this.state.saveType);\r\n        if (this.state.saveType == \"insert\") {\r\n            this.onInsertSubAnswer();\r\n        } else if (this.state.saveType == \"update\") {\r\n            this.onUpdateSubAnswer();\r\n        }\r\n    }\r\n\r\n    onInsertSubAnswer = () => {\r\n        // 리뷰 대댓글 추가.\r\n        let num = this.props.row.num;\r\n        let regroup = this.props.row.regroup;\r\n        let relevel = this.props.row.relevel;\r\n        let restep = this.props.row.restep;\r\n        let content = this.refs.content.value;\r\n        let star = 0;\r\n        let url = URL + \"/share/insert\" +\r\n            \"?\" +\r\n            \"relevel=\" + relevel +\r\n            \"&restep=\" + restep +\r\n            \"&regroup=\" + regroup;\r\n        let data = {\r\n            num: num,\r\n            // regroup: regroup,\r\n            // relevel: relevel,\r\n            // restep: restep,\r\n            content: content,\r\n            star: star,\r\n        }\r\n\r\n        console.log(url, data);\r\n\r\n        axios.post(url, data\r\n        ).then(res => {\r\n            console.log(\"onInsertAnswer res\", res);\r\n            store.dispatch({\r\n                type: actionType.shareBoardUpdate,\r\n            });\r\n            this.onTriggerInput();\r\n            this.refs.content.value = \"\";\r\n        }).catch(err => {\r\n            console.log(\"onInsertAnswer err\", err);\r\n        })\r\n    }\r\n\r\n    onDeleteSubAnswer = () => {\r\n        let num = this.props.row.num;\r\n        let regroup = this.props.row.regroup;\r\n        let url = URL + \"/share/deleteanswer\" +\r\n            \"?num=\" + num;\r\n\r\n        console.log(\"onDeleteData\", url);\r\n\r\n        if (window.confirm(\"삭제하시겠습니까?\")) {\r\n            axios.post(url\r\n            ).then(res => {\r\n                console.log(\"onDeleteData() res\", res);\r\n                store.dispatch({\r\n                    type: actionType.shareBoardUpdate,\r\n                });\r\n                // this.props.history.push(\"/share\");\r\n            }).catch(err => {\r\n                console.log(\"onDeleteData() err\", err);\r\n            });\r\n        }\r\n    }\r\n\r\n    onUpdateSubAnswer = () => {\r\n        let num = this.props.row.num;\r\n        let content = this.refs.content.value;\r\n        let url = URL + \"/share/updateanswer\" +\r\n            \"?num=\" + num +\r\n            \"&content=\" + content;\r\n        console.log(\"onUpdateSubAnswer\", url);\r\n\r\n        if (window.confirm(\"수정하시겠습니까?\")) {\r\n            axios.post(url\r\n            ).then(res => {\r\n                console.log(\"onUpdateSubAnswer() res\", res);\r\n                store.dispatch({\r\n                    type: actionType.shareBoardUpdate,\r\n                });\r\n                // this.props.history.push(\"/share\");\r\n                this.refs.content.value = \"\";\r\n                this.onTriggerInput();\r\n            }).catch(err => {\r\n                console.log(\"onUpdateSubAnswer() err\", err);\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {row} = this.props;\r\n\r\n        return (\r\n            <div style={{marginLeft: `calc(30px*${row.relevel})`}}>\r\n                {row.num} / {row.photo} / {row.regroup} / {row.relevel} / {row.restep} / 내용 :\r\n                <div style={{border: \"1px solid\", margin: \"5px\"}}>\r\n                    {row.content}\r\n                </div>\r\n                <MDBBtn size=\"sm\" color=\"deep-orange\" \r\n                        onClick={this.onTriggerInput.bind(this, \"insert\")}\r\n                        disabled={row.content.includes(\"삭제된 글입니다.\") ? true : false}\r\n                ><b style={{fontSize:'12px'}}>댓글 쓰기</b>\r\n                </MDBBtn>\r\n                &nbsp;\r\n                <MDBBtn size=\"sm\" color=\"deep-orange\" \r\n                        onClick={this.onTriggerInput.bind(this, \"update\")}\r\n                        disabled={row.content.includes(\"삭제된 글입니다.\") ? true : false}\r\n                ><b style={{fontSize:'12px'}}>댓글 수정</b>\r\n                </MDBBtn>\r\n                &nbsp;\r\n                <MDBBtn size=\"sm\" color=\"deep-orange\" \r\n                        onClick={this.onDeleteSubAnswer.bind(this)}\r\n                        disabled={row.content.includes(\"삭제된 글입니다.\") ? true : false}\r\n                ><b style={{fontSize:'12px'}}>댓글 삭제</b>\r\n                </MDBBtn>\r\n\r\n                {/*댓글 입력창 on/off*/}\r\n                <div className={`input_answer_${row.regroup}_${row.relevel}_${row.restep}`}>\r\n                    <textarea placeholder=\"댓글을 입력하세요\" className=\"form-control\"\r\n                              style={{width: '800px', height: '100px',float:'left'}}\r\n                              ref=\"content\"\r\n                    />\r\n                    <MDBBtn  size=\"sm\" color=\"deep-orange\" style={{width:'160px',height:'90px',marginLeft:'13px'}}\r\n                            onClick={this.onSaveButton.bind(this)}\r\n                    ><b style={{fontSize:'18px'}}>저 장</b>\r\n                    </MDBBtn>\r\n                </div>\r\n                <hr/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReviewItem;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\auth\\MakeLoginBtn.js",["737","738","739","740","741"],"import React,{Component} from 'react';\r\nimport { createMuiTheme, withStyles, makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { orange } from '@material-ui/core/colors';\r\n\r\nconst BootstrapButton = withStyles({\r\n    root: {\r\n      boxShadow: 'none',\r\n      textTransform: 'none',\r\n      fontSize: 16,\r\n      padding: '6px 12px',\r\n      border: '1px solid',\r\n      lineHeight: 1.5,\r\n      backgroundColor: '#0063cc',\r\n      borderColor: '#0063cc',\r\n      fontFamily: [\r\n        '-apple-system',\r\n        'BlinkMacSystemFont',\r\n        '\"Segoe UI\"',\r\n        'Roboto',\r\n        '\"Helvetica Neue\"',\r\n        'Arial',\r\n        'sans-serif',\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(','),\r\n      '&:hover': {\r\n        backgroundColor: '#0069d9',\r\n        borderColor: '#0062cc',\r\n        boxShadow: 'none',\r\n      },\r\n      '&:active': {\r\n        boxShadow: 'none',\r\n        backgroundColor: '#0062cc',\r\n        borderColor: '#005cbf',\r\n      },\r\n      '&:focus': {\r\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\r\n      },\r\n    },\r\n  })(Button);\r\n  \r\n  const ColorButton = withStyles((theme) => ({\r\n    root: {\r\n      color: theme.palette.getContrastText(orange[500]),\r\n      backgroundColor: orange[500],\r\n      '&:hover': {\r\n        backgroundColor: orange[700],\r\n      },\r\n    },\r\n  }))(Button);\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    outline: {\r\n      outline: 'none!important',\r\n    },\r\n  }));\r\n  \r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: orange,\r\n    },\r\n  });\r\n  \r\n  export default function CustomizedButtons(props) {\r\n    const classes = useStyles();\r\n    console.log(props);\r\n  \r\n    const parentOnLoginHandler = props.parentOnLoginHandler;\r\n    \r\n    return (\r\n      <div>\r\n        <Button variant=\"outlined\" color=\"primary\" type=\"button\" className={classes.outline}\r\n        onClick={parentOnLoginHandler}>\r\n                    Sign in\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\auth\\KakaoLoginBtnComp.js",[],"C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\auth\\FaceBookLoginBtnComp.js",["742"],"import FacebookLogin from \"react-facebook-login\";\r\nimport React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nclass FaceBookLoginBtnComp extends Component {\r\n\r\n    state = {\r\n        isLoggedIn: false,\r\n        id: '',\r\n        name: '',\r\n        email: '',\r\n    }\r\n\r\n    responseFacebook = response => {\r\n        console.log(response);\r\n\r\n        this.setState({\r\n            isLoggedIn:true,\r\n            id: response.id,\r\n            name: response.name,\r\n            email: response.email,\r\n        });\r\n    };\r\n\r\n    componentClicked = () => console.log('clicked');\r\n\r\n    render() {\r\n\r\n        let fbContent;\r\n\r\n        if(this.state.isLoggedIn) {\r\n            fbContent = (\r\n                <div>\r\n                    <h2>{this.state.name}</h2>\r\n                    Email : {this.state.email}\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            fbContent = (\r\n                <FacebookLogin\r\n                    appId=\"513629929622627\"\r\n                    autoLoad={false} // 실행과 동시에 자동으로 로그인 팝업창이 뜸\r\n                    fields=\"name,email.picture\" // 어떤정보를 받아올지 입력하는 필드\r\n                    scope=\"public_profile,user_friends\"\r\n                    onClick={this.componentClicked} // this.바인딩 추가\r\n                    callback={this.responseFacebook} // this.바인딩 추가\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {fbContent}\r\n            </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default FaceBookLoginBtnComp;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\auth\\NaverLoginBtnComp.js",["743","744","745","746","747","748","749"],"import { getSuggestedQuery } from '@testing-library/react';\r\nimport React , { Component, useEffect, useState } from 'react';\r\nimport reactDOM from 'react-dom';\r\nimport { refreshTokenSetup } from \"./refreshToken\";\r\nimport { URL } from \"../../../redux/config\";\r\nimport axios from 'axios';\r\n\r\n//window에 있는 naver 비구조화 할당하여 선언한다.\r\n//window객체에서 뽑아야 하는 naver 파라미터는 global로\r\n//선언해주지않으면사용이불가한다.\r\nconst { naver } = window;\r\n\r\nexport default function NaverLoginBtnComp () {\r\n    \r\n    const [userData, setUserData] = useState({});\r\n    \r\n    const Login = () => {\r\n        Naver();\r\n        UserProfile();\r\n    }\r\n\r\n    useEffect(Login, []);\r\n\r\n    //client_id 와 redirect_uri 등록\r\n    //JavaScript용 라이브러리 동작에 필요한 기본정보를 설정하는 코드\r\n\r\n    //사용 가능한 Option\r\n    //color: 버튼 색상. white, green\r\n    //type: 버튼 타입. 1(버튼형), 2(작은 배너), 3(큰 배너)\r\n    //height: 배너 및 버튼 높이 (사용자 지정값 px)\r\n    const Naver = () => {\r\n        \r\n        let naverLogin = new naver.LoginWithNaverId({\r\n            clientId: 'dPXRHN5aH3Xl6lXxm7bn',\r\n            callbackUrl: \"http://localhost:3000/login?naver=true\",\r\n            isPopup: false, // 팝업을 통한 연동처리 여부\r\n            loginButton: {color: \"green\", type: 3, height: 60},\r\n            callbackHandle: true\r\n            // callback 페이지가 분리되었을 경우에 callback 페이지에서는 callback처리를 해줄수 있도록 설정합니다\r\n        });\r\n        \r\n        // 설정정보를 초기화하고 연동을 준비\r\n        naverLogin.init();\r\n        console.log(naverLogin.getLoginStatus());\r\n\r\n        naverLogin.getLoginStatus((status) => {\r\n            if (status) {\r\n                console.log(status);\r\n                const email = naverLogin.user.getEmail();\r\n                const name = naverLogin.user.getNickName();\r\n                const profileImage = naverLogin.user.getProfileImage();\r\n                const id = naverLogin.user.getId();\r\n                const hp = naverLogin.user.getMobile();\r\n                console.log(\"네이버로그인상태 : \" + email, name, profileImage, id, hp);\r\n                \r\n            } else {\r\n                console.log('AccessToken이 올바르지 않습니다.');\r\n            }\r\n        });\r\n\r\n        window.addEventListener('load', function() {\r\n            naverLogin.getLoginStatus(function (status) {\r\n                if (status && naver) {\r\n                    // 필수적으로 받아야하는 프로필 정보가 있다면 callback처리 시점에 체크\r\n                    var email = naverLogin.user.getEmail();\r\n                    var name = naverLogin.user.getNickName();\r\n                    var profileImage = naverLogin.user.getProfileImage();\r\n                    var id = naverLogin.user.getId();\r\n                    var hp = naverLogin.user.getMobile();\r\n                    \r\n                    let url = URL + \"/member/insertsosial\";\r\n\r\n                    axios.post(url, {id:email, name:name, provider:id, \r\n                        photo:profileImage, email:email.split(\"@\")[0], email2:'naver.com'})\r\n                            .then(result=>{\r\n\r\n                            }).catch(err=>{\r\n                                console.log(\"naver db 저장 실패 : \" + err);\r\n                            })\r\n                    if( email == undefined || email == null ) {\r\n                        alert(\"이메일은 필수정보입니다. 정보제공을 동의해주세요.\");\r\n                        // 사용자 정보 재동의를 위하여 다시 네아로 동의페이지로 이동함\r\n                        naverLogin.reprompt();\r\n                        return;\r\n                    }\r\n                    // 처리후 되돌아갈 곳\r\n                    // window.location.replace(\"http://localhost:3000/login?naver=true\");\r\n                    \r\n                } else {\r\n                    console.log(\"callback 처리에 실패하였습니다.\");\r\n                    console.log(status);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const UserProfile = () => {\r\n        window.location.href.includes('access_token') && GetUser();\r\n        function GetUser() {\r\n            console.log(\"window.location.href : \" + window.location.href);\r\n            const location = window.location.href.split('=')[1];\r\n            console.log(\"로케이션 : \" + location);\r\n            console.log(\"로케이션 0번째 : \" + window.location.href.split(\"=\")[0]);\r\n            console.log(\"로케이션 길이 : \" + window.location.href.split(\"=\").length);\r\n            for (var i=0; i < window.location.href.split(\"=\").length; i = i + 1)\r\n            {\r\n                console.log(window.location.href.split(\"=\")[i]);\r\n            }\r\n            var sharpPos = window.location.href.indexOf('#', 0);\r\n            console.log(\"# 위치 : \" + sharpPos);\r\n            \r\n            var sharpSplit = window.location.href.split(\"#\")[1];\r\n            var idxEq = sharpSplit.indexOf(\"=\");\r\n            var startPos = idxEq + 1;\r\n            var tokenEnd = sharpSplit.indexOf(\"&\");\r\n\r\n            const token = sharpSplit.substring(startPos, tokenEnd);\r\n            \r\n            console.log(\"token : \" + token);\r\n            fetch(`${URL}/account/sign-in`, {\r\n                method: \"GET\",\r\n                headers : {\r\n                    \"Content-type\" : \"application/json\",\r\n                    \"Authorization\" : token\r\n                },\r\n            })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                localStorage.setItem(\"access_token\", response.token);\r\n                localStorage.setItem(\"nickname\", response.nickname);\r\n                localStorage.setItem(\"image\",response.image);\r\n                setUserData({\r\n                    nickname : response.nickname,\r\n                    image : response.image\r\n                })\r\n            })\r\n            .catch(err => console.log(\"err : \", err));\r\n        }\r\n    };\r\n\r\n    return (\r\n        //네이버 아이디로 로그인 버튼 생성\r\n        //자바스크립트용 라이브러리는 네이버 아이디로 로그인 버튼을\r\n        //자동으로 생성해주는 스크립트 기능이 포함되어있습니다.\r\n        //사용 가능한 로그인 버튼은 크기별 3가지 색상별 2가지씩\r\n        //총 6가지가 제공되며 \r\n        //각각 스크립트 내에 loginButton option을 통하여 세팅\r\n        <>\r\n        <div id=\"naverIdLogin\" onClick={Login}>\r\n            네이버로그인\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\n// class NaverLoginBtnComp extends Component\r\n// {\r\n//     // 백엔드에 정보를 저장하기 위해 state에 id, name, provider를 저장함\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             id: '',\r\n//             name: '',\r\n//             provider: '',\r\n//             accessToken: ''\r\n//         }\r\n//     }\r\n\r\n//     render() {\r\n        \r\n        \r\n        \r\n//         return (\r\n//             <>\r\n//             <br />\r\n//             <br />\r\n            \r\n//             </>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default NaverLoginBtnComp;","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\auth\\GoogleLogoutBtnComp.js",["750","751","752","753"],"import React , { Component } from 'react';\r\nimport reactDOM from 'react-dom';\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport store from \"../../../redux/store\";\r\nimport { URL, actionType, mainViewType } from \"../../../redux/config\";\r\n\r\nclass GoogleLogoutBtnComp extends Component\r\n{\r\n    \r\n    setGoogleOut = () => {\r\n        console.log(\"구글로 로그아웃했습니다\");\r\n        store.dispatch({\r\n            type: actionType.googleLogout,\r\n            googleOn: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const responseGoogle = (response) => {\r\n            console.log(response);\r\n        }\r\n\r\n        const onSuccess = (res) => {\r\n            alert('Logout 되었습니다');\r\n            this.setGoogleOut();\r\n            alert(\"setGoogleOut() 후 스토어에 저장된 구글로그인 상태 : \" + store.getState().googleOn);\r\n            \r\n            // window.location.href(\"/\");\r\n        }\r\n\r\n        return (\r\n            <>\r\n            <br />\r\n            <br />\r\n            <GoogleLogout\r\n                clientId=\"256166181377-83u2uuteqgosooa3um2i3o36ho1325md.apps.googleusercontent.com\"\r\n                buttonText=\"Logout\"\r\n                onLogoutSuccess={onSuccess}\r\n            />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GoogleLogoutBtnComp;","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\auth\\GoogleLoginBtnComp.js",["754","755"],"import React , { Component } from 'react';\r\nimport reactDOM from 'react-dom';\r\nimport GoogleLogin from 'react-google-login';\r\nimport { refreshTokenSetup } from \"./refreshToken\";\r\nimport store from \"../../../redux/store\";\r\nimport { URL, actionType, mainViewType } from \"../../../redux/config\";\r\nimport axios from 'axios';\r\n\r\nclass GoogleLoginBtnComp extends Component\r\n{\r\n    // 백엔드에 정보를 저장하기 위해 state에 id, name, provider를 저장함\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            provider: '',\r\n            accessToken: '',\r\n            email: '',\r\n            email2: '',\r\n            photo: '',\r\n        }\r\n    }\r\n\r\n    setLoginId = (loginId) => {\r\n        console.log(\"LoginPage setLoginId()\");\r\n        store.dispatch({\r\n            type: actionType.LOG_IN,\r\n            // mainView: mainViewType.MainPage\r\n            loginId: loginId\r\n        });\r\n    }\r\n\r\n    setGoogleOn = () => {\r\n        console.log(\"구글로 로그인했습니다\");\r\n        store.dispatch({\r\n            type: actionType.googleLogin,\r\n            googleOn: true\r\n        });\r\n    }\r\n    \r\n    // 로그인에 실패한 경우에는 에러를 넘겨줌 => onFailure함수에서 error 출력\r\n    onFailure = (res) => {\r\n        console.log('[Login failed] res:', res);\r\n    };\r\n\r\n    responseGoogle = (response) => {\r\n        console.log(response);\r\n    }\r\n    \r\n    // 로그인에 성공하면 json을 반환해줌 => onSuccess함수에서 state에 id, name을 저장\r\n    onSuccess = (res) => {\r\n        console.log('[Login Success] 로그인한 사용자:', res);\r\n        // console.log('로그인한 사용자 id : ' +  res.googleId);\r\n\r\n        this.setState({\r\n            id: res.googleId,\r\n            name: res.profileObj.name,\r\n            email: res.profileObj.email,\r\n            email2: 'gmail.com',\r\n            photo: res.profileObj.imageUrl,\r\n        });\r\n        let url = URL + \"/member/insertsosial\";\r\n\r\n        axios.post(url, {id:this.state.email, name:this.state.name, provider:this.state.id, \r\n            photo:this.state.photo, email:this.state.email.split(\"@\")[0], email2:this.state.email2})\r\n                .then(result=>{\r\n\r\n                }).catch(err=>{\r\n                    console.log(\"google db 저장 실패 : \" + err);\r\n                })\r\n        this.setGoogleOn();\r\n\r\n        alert(\"스토어에 저장된 구글로그인 상태 : \" + store.getState().googleOn);\r\n\r\n        // initializing the setup\r\n        refreshTokenSetup(res);\r\n        };\r\n\r\n        // 로그인에 실패한 경우에는 에러를 넘겨줌 => onFailure함수에서 error 출력\r\n        onFailure = (res) => {\r\n            console.log('[Login failed] res:', res);\r\n        };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <br />\r\n            <br />\r\n            <GoogleLogin\r\n                clientId=\"256166181377-83u2uuteqgosooa3um2i3o36ho1325md.apps.googleusercontent.com\"\r\n                buttonText=\"Login\"\r\n                onSuccess={this.onSuccess.bind(this)}\r\n                onFailure={this.onFailure.bind(this)}\r\n                cookiePolicy={'single_host_origin'}\r\n                isSignedIn={true}\r\n            />\r\n            </>\r\n        );\r\n    };\r\n\r\n}\r\n\r\nexport default GoogleLoginBtnComp;","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\auth\\KakaoLoginBtnComp3.js",["756"],"import React, { Component } from \"react\";\r\n\r\nconst { Kakao } = window;\r\n\r\nclass KakaoLoginBtnComp3 extends Component {\r\n    // componentDidMount() {\r\n    //     Kakao.init('5b1bc09ea2391d811062370fac0b13dd');\r\n    //     console.log(\"Kakao.isInitialized() : \" + Kakao.isInitialized());\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default KakaoLoginBtnComp3;","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\PassCheck.js",[],"C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\MyWishlist.js",["757","758","759"],"import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\n\r\nclass MyWishlist extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // console.log(\"MyWishlist constructor\", props);\r\n\r\n    }\r\n    render() {\r\n        // console.log(\"MyWishlist render()\", this.props);\r\n\r\n        return (\r\n            <div>\r\n                나의 예약\r\n            </div>\r\n         )\r\n     }\r\n}\r\nexport default MyWishlist;","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\MySchedule.js",[],"C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\MyReview.js",["760"],"import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport ReviewList from './ReviewList';\r\nimport './style/MyReviewCss.css';\r\nimport ReviewPage from './ReviewPage';\r\nimport store from '../../../redux/store';\r\n\r\nclass MyReview extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            pageNum: 1,\r\n            reviewList: []\r\n        }\r\n\r\n        this.currentPage = this.state.pageNum;\r\n        this.totalCount = 0;\r\n        this.perPage = 5; // 한페이지당 보여질 글의 갯수\r\n        this.perBlock = 5; // 한블럭당 출력할 페이지의 갯수\r\n        this.totalPage = 0; // 총 페이지의 갯수\r\n        this.startPage = 0; // 각 블럭당 시작 페이지 번호\r\n        this.endPage = 0; // 각 블럭당 끝페이지 번호\r\n        this.start = 0; // 각 블럭당 불러올 글의 시작번호\r\n        this.end = 0; // 각 블럭당 글의 끝번호\r\n        this.no = 0; // 각 페이지에서 출력할 시작번호\r\n    }\r\n    \r\n    paginate = (num) =>{\r\n        \r\n        this.currentPage = num;\r\n        this.getMyReview();\r\n    }\r\n\r\n    getTotalCount = () => {\r\n\r\n        let url = URL + \"/wish/count?memNum=\" + store.getState().loginId;\r\n\r\n        axios.get(url)\r\n            .then(res => {\r\n                this.totalCount = res.data;\r\n                this.getMyReview();\r\n            }).catch(err => {\r\n            console.log(\"mypage review getTotalCount 오류 : \" + err);\r\n        })\r\n    }\r\n\r\n    getMyReview = () => {\r\n        // 나머지가 있을 경우에는 1페이지 더 추가 (예 : 총글수가 9이고 한페이지당 2개씩 볼 경우)\r\n        this.totalPage = Math.floor(this.totalCount / this.perPage) + (this.totalCount % this.perPage > 0 ? 1 : 0);\r\n\r\n        // 시작페이지와 끝페이지 구하기\r\n        this.startPage = Math.floor((this.currentPage - 1) / this.perBlock) * this.perBlock + 1;\r\n        this.endPage = this.startPage + this.perBlock - 1;\r\n        // 마지막 블럭은 endPage를 totalPage로 해놔야 한다.\r\n        if (this.endPage > this.totalPage)\r\n            this.endPage = this.totalPage;\r\n\r\n        // mysql은 첫 글이 0번이므로 +1 안해도됨 (오라클은 1번)\r\n        this.start = (this.currentPage - 1) * this.perPage;\r\n\r\n        this.no = this.totalCount - (this.currentPage - 1) * this.perPage;\r\n        \r\n        let url = URL + '/wish/myreview?start=' + this.start + '&end=' + this.perPage + '&memNum=' + store.getState().loginId;\r\n        axios.get(url)\r\n            .then(response => {\r\n                // console.log(response.data);\r\n                this.setState({\r\n                    reviewList: response.data\r\n                })\r\n            }).catch(err => {\r\n            console.log(\"목록 오류:\" + err);\r\n        })\r\n  \r\n    }\r\n    componentDidMount() {\r\n        this.getTotalCount();\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"MyReview render()\", this.props);\r\n        let photoCol = '';\r\n        if (matchMedia(\"screen and (min-width:400px)\").matches) {\r\n            photoCol = <TableCell align=\"center\" className=\"mypageReCol\">photo</TableCell>;\r\n        }\r\n        const tag = this.state.reviewList==''?<div style={{textAlign: 'center', margin: '10px'}}><b className=\"mypageReCol\">등록된 review가 없습니다.</b></div>:\"\"; \r\n\r\n        return (\r\n            <div>\r\n                <div className=\"detailTitle\">\r\n                    <span className=\"detailTitleContent\" style={{backgroundColor:'white', color: '#036E38'}}>\r\n                        &nbsp;&nbsp;&nbsp;나의 리뷰&nbsp;&nbsp;&nbsp;\r\n                    </span>\r\n                </div>\r\n                <br/>\r\n                <div className=\"detailIntro\" style={{color: \"#888\", textAlign: 'center', marginBottom: '0px'}}>\r\n                    회원님이 작성하신 Review 목록입니다.\r\n                </div>\r\n                <Paper id=\"mypageReview\">\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\" className=\"mypageReCol\">#</TableCell>\r\n                                {photoCol}\r\n                                <TableCell align=\"center\" className=\"mypageReCol\">review</TableCell>\r\n                                <TableCell align=\"center\" className=\"mypageReCol\">star</TableCell>\r\n                                <TableCell align=\"center\" className=\"mypageReCol\">date</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.reviewList.map((row, idx)=>(\r\n                                <ReviewList row={row} idx={(this.currentPage-1)*this.perPage + idx+1}/>\r\n                            ))}\r\n                            {/* {this.state.reviewList ? this.state.reviewList.map(r, idx => {\r\n                            return <ReviewList key={r.num} num={r.num} photo={r.photo} content={r.content} memNum={r.memNum} idx={idx} \r\n                            star={r.star} likes={r.likes} contentsid={r.contentsid} writeday={r.writeday} history={this.props.history}/>\r\n                            }) : ''} */}\r\n                        </TableBody>\r\n                    </Table>\r\n                {tag}\r\n                </Paper>\r\n                <ReviewPage paginate={this.paginate.bind(this)} startPage={this.startPage} endPage={this.endPage} \r\n                    currentPage={this.currentPage} totalPage={this.totalPage}/>\r\n            </div>              \r\n        );\r\n    }\r\n}\r\n        \r\nexport default MyReview;","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\admin\\RowItem.js",[],"C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\notice\\BoardForm.js",[],"C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\notice\\BoardItem.js",["761","762"],"import React,{Component} from 'react';\r\nimport {Route, Link} from \"react-router-dom\";\r\n\r\nclass BoardItem extends Component\r\n{\r\n    render(){\r\n        const {row, idx, history}=this.props;\r\n        return(\r\n            \r\n            <tr>\r\n\r\n                <td align='center'>{idx+1}</td>\r\n                \r\n                    <td align='center'>\r\n                        {row.subject}\r\n                        <Link to={`/notice/content/${row.num}`}>content</Link>\r\n                        </td>\r\n                \r\n                \r\n                \r\n                <td align='center'>{row.writeday.toLocaleString('ko-KR')}</td>\r\n                <td align='left'>별</td>\r\n\r\n            </tr>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default BoardItem;","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\auth\\refreshToken.js",[],"C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\Header.js",["763","764","765","766","767","768","769","770"],"import React, { Component } from 'react';\r\nimport {FcPrevious,FcNext,FcList} from 'react-icons/fc';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport './style/RCA.css';\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ScheduleAdd  from './ScheduleAdd';\r\nimport ScheduleList from './ScheduleList';\r\nimport store from '../../../redux/store';\r\nimport moment from 'moment';\r\n\r\n class Header extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            open : false,\r\n            setOpen : false,\r\n            clist:[],\r\n            listopen:false,\r\n            setlistOpen:false\r\n        }\r\n        \r\n    }\r\n\r\n//     getList=()=>{\r\n//         let url = URL + \"/wish/daylist?memId=\"+store.getState().loginId + \"&day=\" + this.props.row.wishday ;\r\n        \r\n//         axios.get(url)\r\n//         .then(res=>{\r\n//           console.log(\"출력:\"+res.data);\r\n//           this.setState({\r\n//               clist:res.data\r\n//           });\r\n//       }).catch(err=>{\r\n//         console.log(\"목록 오류:\"+err);\r\n//       })\r\n// }\r\n\r\n\r\n// getData=()=>{\r\n\r\n//     let url = URL + \"/wish/list?memId=\"+store.getState().loginId;\r\n\r\n//     axios.get(url)\r\n//     .then(response=>{\r\n//       //console.log(\"캘린더 출력 : \" + response.data); \r\n//       this.setState({\r\n//         list: response.data\r\n\r\n//       });\r\n//     }).catch(err=>{\r\n//       console.log(\"캘린더 목록 오류:\"+err);\r\n//     })\r\n// }\r\n\r\n// componentDidMount(){\r\n//     this.getData();\r\n// }\r\n\r\n  \r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            open: false,\r\n            listopen:false\r\n        })\r\n      };\r\n    render() {\r\n        // const [getMoment, setMoment]=useState(moment());     \r\n        // const today = getMoment;   \r\n        const {clist}=this.props;\r\n        //console.log(clist);\r\n        // var wishday=row.wishday;\r\n\r\n       //var wishday=row.wishday;\r\n       \r\n\r\n        return (\r\n            <div className=\"RCA-header-container\">\r\n                <h2 className=\"RCA-header-calendarYM RCA-header-middle\">\r\n                    {this.props.calendarYM}\r\n                    <div className=\"RCA-header-list\">\r\n                        \r\n                        <FcList onClick={\r\n                            ()=>{\r\n                                this.setState({\r\n                                     listopen:true   \r\n                                })\r\n                            }\r\n                        }/>\r\n                               \r\n                          \r\n                        \r\n                        <Button variant=\"outlined\"  className=\"add-list\" onClick={\r\n                            ()=>{\r\n                                this.setState({\r\n                                    open:true\r\n                                })\r\n                                \r\n                            }\r\n                        }>\r\n                        일정추가\r\n                        </Button>\r\n                        \r\n                       \r\n                    </div>\r\n\r\n                </h2>\r\n                <h3 className=\"RCA-header-today RCA-header-middle\" style={{marginRight:30}}>\r\n                    {this.props.today}\r\n                </h3>\r\n                <ul className=\"RCA-header-buttons RCA-header-middle\">\r\n                    <li>\r\n                    <i className=\"move-button left icon\" onClick={()=>{this.props.moveMonth(-1)}}>\r\n                        <FcPrevious/>   \r\n                    </i>\r\n                    </li>\r\n                    <li className=\"move\" style={{fontSize:28}}>\r\n                        이동\r\n                    </li>\r\n                    <li>\r\n                    <i className=\"move-button right icon\" onClick={()=>{this.props.moveMonth(1)}}>\r\n                        <FcNext/>\r\n                    </i>\r\n                    </li>\r\n                </ul>\r\n                        \r\n\r\n                <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className=\"calModal\"\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose.bind(this)}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                    timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={this.state.open}>\r\n                    <div className=\"addlistpaper\">\r\n                        <ScheduleAdd></ScheduleAdd>\r\n                        \r\n                        \r\n                    </div>\r\n                    \r\n                    </Fade>\r\n                   \r\n                </Modal>\r\n\r\n                <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className=\"calModal\"\r\n                open={this.state.listopen}\r\n                onClose={this.handleClose.bind(this)}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                timeout: 500,\r\n                }}\r\n                >\r\n                <Fade in={this.state.listopen}>\r\n                  \r\n                <div className=\"addlistmodal\">\r\n                    <h2 style={{textAlign:'center'}}>일정목록</h2><hr/>\r\n                    {this.props.clist.map((row)=>(\r\n                        <ScheduleList row={row} ></ScheduleList>\r\n                    ))}\r\n                    \r\n                    \r\n                    \r\n                    \r\n                    \r\n                </div>\r\n                 \r\n\r\n                </Fade>\r\n\r\n                </Modal>\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  \r\n  \r\n    \r\n\r\n\r\nexport default Header;\r\n\r\n\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\Calendar.js",["771","772","773","774","775","776"],"import React, { Component } from 'react'\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\nimport DayItem from './DayItem';\r\nimport Header from './Header';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport './style/RCA.css';\r\nimport { TiTimes } from \"react-icons/ti\";\r\nimport ClistItem from './ClistItem';\r\nimport store from '../../../redux/store';\r\n\r\nclass DateHeader extends Component {\r\n\r\n  dateToArray = (dates) => {\r\n    if (Array.isArray(dates)) {\r\n      return dates\r\n    } else if (typeof dates === \"string\") {\r\n      return dates.split(',')\r\n    } else {\r\n      return [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"]\r\n    }\r\n  }\r\n\r\n  mapArrayToDate = (dateArray) => {\r\n    try {\r\n      if (dateArray.length !== 7) {\r\n        console.log(new Error(\"dates props must be had 7 date\"))\r\n        dateArray = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"]\r\n      }\r\n\r\n      return dateArray.map((date, index) => {\r\n        const className = () => {\r\n          let className = \"RCA-calendar-date-component\";\r\n          if (index === 0) {\r\n            return className + \" date-sun\"\r\n          } else if (index === 6) {\r\n            return className + \" date-sat\"\r\n          } else {\r\n            return className + \" date-weekday\"\r\n          }\r\n        }\r\n        return (\r\n          <div className={className()} key={\"RCA-header-\" + date}>\r\n            {date}\r\n            \r\n          </div>\r\n        )\r\n      })\r\n    } catch{\r\n      throw new Error(\"date must be string or component\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"RCA-calendar-date-header\">\r\n        {this.mapArrayToDate(this.dateToArray(this.props.dates))}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Week extends Component {\r\n    constructor(props){\r\n      super(props);\r\n\r\n      this.ym = this.props.ymOfThisCalendar;\r\n      this.state={\r\n        list:[],\r\n        clist:[],\r\n        open: false,\r\n        setOpen: false      \r\n      };\r\n\r\n      \r\n    }\r\n\r\n    handleClose = () => {\r\n      this.setState({\r\n          open: false\r\n      })\r\n    };\r\n\r\n\r\n      getData=()=>{\r\n\r\n            let url = URL + \"/wish/list?memId=\"+store.getState().loginId;\r\n\r\n            axios.get(url)\r\n            .then(response=>{\r\n              //console.log(\"캘린더 출력 : \" + response.data); \r\n              this.setState({\r\n                list: response.data\r\n\r\n              });\r\n            }).catch(err=>{\r\n              console.log(\"캘린더 목록 오류:\"+err);\r\n            })\r\n      }\r\n\r\n      getList=(day)=>{\r\n            let url = URL + \"/wish/daylist?memId=\"+store.getState().loginId + \"&day=\" + day ;\r\n            \r\n            axios.get(url)\r\n            .then(res=>{\r\n              console.log(\"출력:\"+res.data);\r\n              this.setState({\r\n                  clist:res.data\r\n              });\r\n          }).catch(err=>{\r\n            console.log(\"목록 오류:\"+err);\r\n          })\r\n    }\r\n    \r\n    \r\n   \r\n\r\n  // componentWillMount(){\r\n  //   this.onDelete();\r\n  // }\r\n\r\n\r\n  componentDidMount(){\r\n    this.getData();\r\n    \r\n    \r\n  }\r\n\r\n  Days = (firstDayFormat,weekIndex) => {\r\n      const _days = [];\r\n      \r\n\r\n      for (let i = 0; i < 7; i++) {\r\n\r\n        const Day = moment(firstDayFormat).add(i,'d');\r\n        _days.push({\r\n          yearMonthDayFormat: Day.format(\"YYYY-MM-DD\"),\r\n          getYear: Day.format('Y'),\r\n          getMonth: Day.format('M'),\r\n          getDay: Day.format('D'),\r\n          isHolyDay: false,\r\n          weekIndex\r\n        });\r\n      }\r\n\r\n      return _days;\r\n  }\r\n\r\n  mapDaysToComponents = (Days,calendarMonthYear ,selectedDayFormat ,fn = () => { }) => {\r\n\r\n    const thisMonth = moment(calendarMonthYear);\r\n\r\n    return Days.map((dayInfo, i) => {\r\n\r\n      let className = \"date-weekday-label\";\r\n\r\n      if (!thisMonth.isSame(dayInfo.yearMonthDayFormat,'month')) {\r\n        className = \"date-notThisMonth\";\r\n      } else if (i === 0) {\r\n        className = \"date-sun\"\r\n      }else if(i===6){\r\n        className =\"date-sat\"\r\n      }\r\n\r\n      if(moment(dayInfo.yearMonthDayFormat).isSame(selectedDayFormat,'day')){\r\n        className = \"selected\"\r\n        \r\n      }\r\n   \r\n      // const category=this.state.memId;\r\n      // const num=this.state.list.num;\r\n      // const day=this.props.ymOfThisCalendar+\"-\"+dayInfo.getDay;\r\n      // const wishday=this.state.wishday;\r\n      \r\n        var date = new Date(); \r\n        var year = date.getFullYear(); \r\n        var month = new String(date.getMonth()); \r\n        var days = new String(date.getDate());\r\n        var today = new Date(year, month, days);\r\n        var selectDay = new Date(dayInfo.getYear, dayInfo.getMonth-1, dayInfo.getDay);\r\n        var betweenDay = selectDay.getTime() - today.getTime();\r\n      \r\n       return(\r\n          <div className={\"RCA-calendar-day \" + className} key={`RCA-${dayInfo.weekIndex}-${i}-day`}\r\n            onClick={() => {\r\n              fn(dayInfo.yearMonthDayFormat);\r\n              this.setState({\r\n                open: true\r\n              })\r\n              this.getList(dayInfo.yearMonthDayFormat);\r\n              \r\n            }}>\r\n              <label className=\"RCA-calendar-day-label\">\r\n                {dayInfo.getDay}\r\n               \r\n              \r\n              </label>\r\n              {this.state.list.map((row,idx)=>(\r\n                  <DayItem row={row} key={idx} className={className} dayInfo={dayInfo} i={i} fn={fn}></DayItem>\r\n                  \r\n              ))}\r\n              \r\n\r\n          </div>\r\n          \r\n       )      \r\n      })         \r\n    }\r\n\r\n    \r\n\r\n  render() {\r\n\r\n    var content=this.state.clist.content;\r\n\r\n    return (\r\n      <div className=\"RCA-calendar-week\">\r\n        \r\n        {this.mapDaysToComponents(this.Days(this.props.firstDayOfThisWeekformat,this.props.weekIndex),\r\n        this.props.ymOfThisCalendar,\r\n        this.props.selected,\r\n        this.props.fn\r\n        )}\r\n\r\n                <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className=\"calModal\"\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose.bind(this)}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                    timeout: 500,\r\n                    }}\r\n                  >\r\n                    <Fade in={this.state.open}>\r\n                    <div className=\"calPaper\">\r\n                        {/* <h2 id=\"transition-modal-title\">일정 목록</h2>\r\n                        <p id=\"transition-modal-description\"></p> */}\r\n                        \r\n\r\n                        <h2 id=\"transition-modal-title\">{this.props.selected}</h2>\r\n                        \r\n                        <br/>\r\n                        {this.state.clist.map((row)=>(\r\n                            <ClistItem row={row}/>\r\n                        ))}\r\n                        {/* {this.state.list.map((row1)=>(\r\n                          <ClistItem row1={row1}></ClistItem>\r\n                        ))} */}\r\n                        \r\n                    </div>\r\n                    </Fade>\r\n                    \r\n                </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Calendar extends Component {\r\n\r\n  Weeks = (monthYear,selected,clickFn) => {\r\n    const firstDayOfMonth = moment(monthYear).startOf('month');\r\n    const firstDateOfMonth = firstDayOfMonth.get('d');\r\n\r\n    const firstDayOfWeek = firstDayOfMonth.clone().add(-firstDateOfMonth,'d');\r\n\r\n    const _Weeks = [];\r\n\r\n    for (let i = 0; i < 6; i++) {\r\n      _Weeks.push((\r\n        <Week key={`RCA-calendar-week-${i}`}\r\n        weekIndex={i}\r\n        ymOfThisCalendar={firstDayOfMonth.format(\"YYYY-MM\")}\r\n        firstDayOfThisWeekformat={firstDayOfWeek.clone().add(i * 7,'d').format(\"YYYY-MM-DD\")}\r\n        selected={selected}\r\n        fn={clickFn}\r\n        />\r\n      ))\r\n    }\r\n    return _Weeks\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"RCA-calendar-container\">\r\n        <DateHeader dates={\"Sun, Mon, Tue, Wed, Thu, Fri, Sat\"} />\r\n        {this.Weeks(this.props.YM,this.props.selected,this.props.changeSelected)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Calendar;","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\ReviewPage.js",["777","778","779","780","781"],"import React, {Component} from 'react';\r\n\r\nclass ReviewPage extends Component {\r\n\r\n    render() {\r\n        const {startPage, endPage, currentPage, totalPage, paginate} = this.props;\r\n        let prev = startPage > 1 ?\r\n            <li className=\"page-item\" ><a class=\"page-link\" onClick={(e)=>{\r\n                e.preventDefault();\r\n                this.props.paginate(startPage - 1);\r\n            }}>◀</a></li> : \"\";\r\n\r\n        let next = endPage < totalPage ?\r\n            <li className=\"page-item\"><a class=\"page-link\" onClick={(e)=>{\r\n                e.preventDefault();\r\n                this.props.paginate(endPage + 1);\r\n            }}>▶</a></li> : \"\";\r\n\r\n        let page = [];\r\n\r\n        for (let i = startPage; i <= endPage; i++) {\r\n            page.push(i);\r\n        }\r\n\r\n        let pages = page.map(function (num, idx) {\r\n            return (\r\n                <li className=\"page-item\" key={idx}>\r\n                    <a class=\"page-link\"\r\n                       style={{\r\n                           color: num == currentPage ? \"#D1CC38\" : \"black\",\r\n                           fontWeight: num == currentPage ? \"700\" : \"\"\r\n                       }} onClick={(e)=>{\r\n                            e.preventDefault();\r\n                            paginate(num);\r\n                        }}>{num}</a></li>\r\n            )\r\n        });\r\n\r\n        let pagination = '';\r\n        if (matchMedia(\"screen and (max-width:770px)\").matches) {\r\n            pagination =\r\n                <ul className='pagination pagination-sm' style={{justifyContent: 'center', marginBottom: '100px'}}>\r\n                    {prev}\r\n                    {pages}\r\n                    {next}\r\n                </ul>;\r\n        } else {\r\n            pagination =\r\n                <ul className='pagination' style={{justifyContent: 'center', marginBottom: '100px'}}>\r\n                    {prev}\r\n                    {pages}\r\n                    {next}\r\n                </ul>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {pagination}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ReviewPage;\r\n","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\ReviewList.js",["782","783","784","785","786","787"],"import React, {Component} from \"react\";\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport axios from 'axios';\r\nimport {URL} from '../../../redux/config';\r\nimport {Route, Link} from \"react-router-dom\";\r\nimport './style/MyReviewCss.css';\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\r\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\r\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\r\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\r\n\r\nclass ReviewList extends Component {\r\n\r\n\r\n    updateLikes = () =>{\r\n        let url = URL + \"/spot/updatelikes?contentsid=\" + this.props.row.contentsid;\r\n\r\n        axios.get(url)\r\n            .then(res=>{\r\n                this.props.getList();\r\n            }).catch(err=>{\r\n                console.log(\"tourlist likes 업데이트 오류 : \" + err);\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        const {row}=this.props;\r\n        const date = row.writeday.split(\" \")[0];\r\n        const photo = row.photo==\"no\"?\"x\":<img src={row.photo} alt=\"profile\"/>;\r\n        const star = row.star==1?<SentimentVeryDissatisfiedIcon/>:row.star==2?<SentimentDissatisfiedIcon/>:row.star==3?<SentimentSatisfiedIcon/>\r\n            :row.star==4?<SentimentSatisfiedAltIcon/>:<SentimentVerySatisfiedIcon/>;\r\n\r\n        let photoCol = '';\r\n        if (matchMedia(\"screen and (min-width:400px)\").matches) {\r\n            photoCol = <TableCell align=\"center\" className=\"mypageReCol\">{photo}</TableCell>;\r\n        }\r\n\r\n        return (\r\n           \r\n                <TableRow> \r\n                \r\n                    <TableCell align=\"center\" className=\"mypageReCol\">{this.props.idx}</TableCell>\r\n                    {photoCol}\r\n                    <TableCell className=\"mypageReCol\"> \r\n                        <Link to={`/tour/${row.contentsid}`} id=\"mypageReviewLink\">\r\n                            <div id=\"mypageReContent\" style={{whiteSpace:'nowrap', textOverflow:'ellipsis', overflow:'hidden'}}>{row.content}</div>\r\n                        </Link>   \r\n                    </TableCell>\r\n                    <TableCell align=\"center\" className=\"mypageReCol\" style={{color: '#F0CD58'}}>{star}</TableCell>\r\n                    <TableCell align=\"center\" width=\"20%\" className=\"mypageReCol\">{date}</TableCell>\r\n                \r\n                </TableRow>\r\n           \r\n        );\r\n    }\r\n}\r\nexport default ReviewList;","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\ScheduleList.js",["788","789","790","791"],"C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\DayItem.js",["792","793","794","795","796"],"import React,{Component} from 'react';\r\nimport './style/RCA.css';\r\nimport DayDetail from './DayDetail';\r\nimport Header from './Header';\r\n\r\nclass DayItem extends Component {\r\n    \r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        // this.state={\r\n        //     // sharelist:[],\r\n        //     // spotlist:[],\r\n            \r\n        // };\r\n\r\n    }\r\n    // rendervalue=()=>{\r\n    //     return this.props.row.shareNum===null?0:'';\r\n    // }\r\n\r\n    // getShare=()=>{\r\n    //     let url=URL+\"/wish/sharesubject?num=\"+(this.props.row.shareNum!==null?'':0);\r\n    //     axios.get(url)\r\n    //     .then(res=>{\r\n    //         this.setState({\r\n    //             sharelist:res.data\r\n    //         });\r\n    //     }).catch(err=>{\r\n    //         console.log(\"목록 오류:\"+err);\r\n    //     })\r\n    // }\r\n\r\n    // componentDidMount(){\r\n    //     this.getShare();\r\n    // }\r\n\r\n    // componentWillUnmount(){\r\n    //     console.log(\"Day Item willmount\");\r\n    // }\r\n\r\n    // spot(){\r\n    //     let url = URL + \"/spot/select?contentsid=\" + this.props.row.spotId;\r\n    // }\r\n\r\n    render() {\r\n        \r\n        const {row} = this.props;\r\n        \r\n        var dayInfo = this.props.dayInfo;\r\n        var selectDay = new Date(dayInfo.getYear, dayInfo.getMonth-1, dayInfo.getDay);\r\n        var wishday=\"\"+row.wishday;\r\n        var y = wishday.substr(0,4);\r\n        var m = wishday.substr(5,2);\r\n        var d = wishday.substr(8,2);\r\n\r\n        var aroundId=row.aroundId;\r\n        var category=row.content;\r\n        var today = new Date(y, m-1, d);\r\n        var betweenDay = selectDay.getTime() - today.getTime();  // 이게 0이여야 해당하는 날짜랑 wishday랑 맞는거에요!\r\n        var tag = betweenDay==0?<DayDetail row={this.props.row}/>:\"\";\r\n        \r\n        return (\r\n            <div>\r\n                {tag}\r\n               \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DayItem;","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\ScheduleAdd.js",["797","798","799","800","801","802","803"],"import React, { Component } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport store from '../../../redux/store';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nclass ScheduleAdd extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n    }\r\n\r\n    insertContent=()=>{\r\n        let url=URL+\"/wish/insertcontent\";\r\n        let memId=store.getState().loginId;\r\n        let content=this.refs.content.value;\r\n        let wishday=this.refs.wishday.value;\r\n        let wishtime=this.refs.wishtime.value;\r\n\r\n        if(wishday=='' || wishtime=='')\r\n            alert(\"날짜와 시간을 모두 선택해주세요.\");\r\n        else{\r\n            axios.post(url,{memId,content,wishday,wishtime})\r\n            .then(res=>{\r\n                this.refs.content.value='';\r\n                this.refs.wishday.value='';\r\n                this.refs.wishtime.value='';\r\n            }).catch(err=>{\r\n                console.log(\"schedulewish insert 오류 : \" + err);\r\n            })   \r\n        }    \r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        const {row}=this.props;\r\n        const {key}=this.props;\r\n        return(\r\n            <div>\r\n                <h2 id=\"transition-modal-title\">일정 추가</h2><br/>\r\n                        <p id=\"transition-modal-description\">\r\n                            \r\n                                    <span id=\"addtitle\" >일정</span>\r\n                                    <span id=\"addcontent\">\r\n                                    &nbsp;&nbsp;<input type=\"text\" className=\"form-control\" style={{width: '200px', height: '50px'}} ref=\"content\"></input><br/><br/></span>\r\n\r\n                                  \r\n                                \r\n                                    <span id=\"addschedule\" >날짜</span>\r\n                                    <span id=\"addwish\">\r\n                                    &nbsp;&nbsp;<input type=\"date\" ref=\"wishday\"></input><br/><br/>\r\n                                    </span>\r\n                            \r\n                                \r\n                                    <span id=\"addschedule\">시간</span>\r\n                                    <span id=\"addwish\">\r\n                                    &nbsp;&nbsp; <input type=\"time\" ref=\"wishtime\"></input></span></p><br/><br/>\r\n                        <div style={{textAlign:'center'}}>\r\n                        <Button variant=\"warning\" onClick={this.insertContent.bind(this)}><b>추가</b></Button>\r\n                        </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ScheduleAdd;","C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\ClistItem.js",["804","805","806","807","808","809"],"C:\\finalproject\\jeju\\finalproject\\src\\component\\main\\mypage\\DayDetail.js",["810","811","812","813"],"import React,{Component} from 'react';\r\nimport axios from 'axios';\r\nimport './style/RCA.css';\r\nimport {URL} from \"../../../redux/config\";\r\nimport Header from './Header';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\n\r\n//import Subject from './Subject';\r\n\r\nclass DayDetail extends Component {\r\n    \r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n           list:'',\r\n        //    open : false,\r\n        //    setOpen : false\r\n            \r\n        };\r\n\r\n    }\r\n\r\n    // handleClose = () => {\r\n    //     this.setState({\r\n    //         open: false\r\n    //     })\r\n    //   };\r\n    // rendervalue=()=>{\r\n    //     return this.props.row.shareNum===null?0:'';\r\n    // }\r\n\r\n    getShare=()=>{\r\n        let url=URL+\"/wish/sharesubject?num=\"+ this.props.row.shareNum;\r\n        axios.get(url)\r\n        .then(res=>{\r\n            this.setState({\r\n                list:res.data\r\n            });\r\n        }).catch(err=>{\r\n            console.log(\"목록 오류:\"+err);\r\n        })\r\n    }\r\n\r\n    getSpot=()=>{\r\n        let url=URL+\"/wish/spottitle?contentsid=\"+ this.props.row.spotId;\r\n        axios.get(url)\r\n        .then(res=>{\r\n            // console.log(res.data);\r\n            this.setState({\r\n                list:res.data\r\n            });\r\n        }).catch(err=>{\r\n            console.log(\"목록 오류:\"+err);\r\n        })\r\n    }    \r\n\r\n    componentDidMount(){\r\n        if(this.props.row.shareNum!==null){\r\n            this.getShare();\r\n            // this.setState({\r\n            //     sharelist:this.state.list\r\n            // })\r\n        }\r\n        else if(this.props.row.spotId!==null){\r\n            this.getSpot();\r\n            // this.setState({\r\n            //     spotlist:this.state.list\r\n            // })\r\n        }\r\n        \r\n            \r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        const {row} = this.props;\r\n        \r\n        var aroundId=row.aroundId;\r\n        var content=row.content;\r\n        var shareNum=row.shareNum;\r\n        var spotId=row.spotId;\r\n        \r\n        \r\n      \r\n        var around = aroundId!==null?content.split(\",\")[0]===\"음식점\"\r\n            ?<div>🍽{aroundId}</div>:content.split(\",\")[0]===\"숙박\"?<div>🏟{aroundId}</div>:<div>☕{aroundId}</div>\r\n            :'';\r\n        var share = shareNum!=null?<div>✔{this.state.list}</div>:'';\r\n        var spot = spotId!=null?<div>🗼{this.state.list}</div>:'';\r\n        var myTodo = (aroundId==null&&shareNum==null&&spotId==null)?<div>🌳{content}</div>:'';\r\n        var tag = aroundId!==null?around:shareNum!==null?share:spotId!==null?spot:myTodo;\r\n        \r\n        return (\r\n            <div>\r\n\r\n                {tag}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DayDetail;",{"ruleId":"814","replacedBy":"815"},{"ruleId":"816","replacedBy":"817"},{"ruleId":"818","severity":1,"message":"819","line":2,"column":18,"nodeType":"820","messageId":"821","endLine":2,"endColumn":23},{"ruleId":"818","severity":1,"message":"822","line":3,"column":9,"nodeType":"820","messageId":"821","endLine":3,"endColumn":13},{"ruleId":"818","severity":1,"message":"823","line":3,"column":15,"nodeType":"820","messageId":"821","endLine":3,"endColumn":20},{"ruleId":"818","severity":1,"message":"824","line":3,"column":22,"nodeType":"820","messageId":"821","endLine":3,"endColumn":32},{"ruleId":"818","severity":1,"message":"825","line":3,"column":34,"nodeType":"820","messageId":"821","endLine":3,"endColumn":40},{"ruleId":"818","severity":1,"message":"826","line":3,"column":42,"nodeType":"820","messageId":"821","endLine":3,"endColumn":48},{"ruleId":"818","severity":1,"message":"827","line":3,"column":50,"nodeType":"820","messageId":"821","endLine":3,"endColumn":61},{"ruleId":"818","severity":1,"message":"828","line":3,"column":63,"nodeType":"820","messageId":"821","endLine":3,"endColumn":68},{"ruleId":"818","severity":1,"message":"829","line":3,"column":70,"nodeType":"820","messageId":"821","endLine":3,"endColumn":78},{"ruleId":"818","severity":1,"message":"830","line":3,"column":80,"nodeType":"820","messageId":"821","endLine":3,"endColumn":84},{"ruleId":"818","severity":1,"message":"831","line":10,"column":8,"nodeType":"820","messageId":"821","endLine":10,"endColumn":20},{"ruleId":"832","severity":1,"message":"833","line":177,"column":21,"nodeType":"834","endLine":177,"endColumn":50},{"ruleId":"832","severity":1,"message":"833","line":206,"column":21,"nodeType":"834","endLine":206,"endColumn":50},{"ruleId":"832","severity":1,"message":"833","line":213,"column":21,"nodeType":"834","endLine":213,"endColumn":50},{"ruleId":"832","severity":1,"message":"833","line":236,"column":25,"nodeType":"834","endLine":236,"endColumn":54},{"ruleId":"835","severity":1,"message":"836","line":322,"column":17,"nodeType":"837","messageId":"838","endLine":322,"endColumn":52},{"ruleId":"835","severity":1,"message":"836","line":324,"column":17,"nodeType":"837","messageId":"838","endLine":324,"endColumn":47},{"ruleId":"835","severity":1,"message":"836","line":325,"column":21,"nodeType":"837","messageId":"838","endLine":325,"endColumn":40},{"ruleId":"835","severity":1,"message":"836","line":326,"column":17,"nodeType":"837","messageId":"838","endLine":326,"endColumn":33},{"ruleId":"835","severity":1,"message":"836","line":327,"column":17,"nodeType":"837","messageId":"838","endLine":327,"endColumn":65},{"ruleId":"835","severity":1,"message":"836","line":328,"column":21,"nodeType":"837","messageId":"838","endLine":328,"endColumn":54},{"ruleId":"835","severity":1,"message":"836","line":329,"column":17,"nodeType":"837","messageId":"838","endLine":329,"endColumn":33},{"ruleId":"835","severity":1,"message":"836","line":330,"column":18,"nodeType":"837","messageId":"838","endLine":330,"endColumn":61},{"ruleId":"835","severity":1,"message":"836","line":331,"column":21,"nodeType":"837","messageId":"838","endLine":331,"endColumn":44},{"ruleId":"835","severity":1,"message":"836","line":332,"column":17,"nodeType":"837","messageId":"838","endLine":332,"endColumn":33},{"ruleId":"835","severity":1,"message":"836","line":334,"column":17,"nodeType":"837","messageId":"838","endLine":334,"endColumn":91},{"ruleId":"835","severity":1,"message":"836","line":335,"column":17,"nodeType":"837","messageId":"838","endLine":335,"endColumn":95},{"ruleId":"835","severity":1,"message":"836","line":336,"column":17,"nodeType":"837","messageId":"838","endLine":336,"endColumn":83},{"ruleId":"835","severity":1,"message":"836","line":338,"column":17,"nodeType":"837","messageId":"838","endLine":338,"endColumn":64},{"ruleId":"835","severity":1,"message":"836","line":339,"column":21,"nodeType":"837","messageId":"838","endLine":339,"endColumn":52},{"ruleId":"835","severity":1,"message":"836","line":340,"column":17,"nodeType":"837","messageId":"838","endLine":340,"endColumn":33},{"ruleId":"835","severity":1,"message":"836","line":341,"column":17,"nodeType":"837","messageId":"838","endLine":341,"endColumn":79},{"ruleId":"835","severity":1,"message":"836","line":342,"column":21,"nodeType":"837","messageId":"838","endLine":342,"endColumn":44},{"ruleId":"835","severity":1,"message":"836","line":343,"column":17,"nodeType":"837","messageId":"838","endLine":344,"endColumn":55},{"ruleId":"835","severity":1,"message":"836","line":345,"column":21,"nodeType":"837","messageId":"838","endLine":345,"endColumn":42},{"ruleId":"835","severity":1,"message":"836","line":346,"column":17,"nodeType":"837","messageId":"838","endLine":347,"endColumn":54},{"ruleId":"835","severity":1,"message":"836","line":348,"column":21,"nodeType":"837","messageId":"838","endLine":348,"endColumn":42},{"ruleId":"835","severity":1,"message":"836","line":349,"column":17,"nodeType":"837","messageId":"838","endLine":349,"endColumn":33},{"ruleId":"818","severity":1,"message":"839","line":2,"column":8,"nodeType":"820","messageId":"821","endLine":2,"endColumn":13},{"ruleId":"818","severity":1,"message":"840","line":4,"column":9,"nodeType":"820","messageId":"821","endLine":4,"endColumn":23},{"ruleId":"818","severity":1,"message":"841","line":4,"column":25,"nodeType":"820","messageId":"821","endLine":4,"endColumn":41},{"ruleId":"818","severity":1,"message":"842","line":4,"column":43,"nodeType":"820","messageId":"821","endLine":4,"endColumn":53},{"ruleId":"818","severity":1,"message":"843","line":5,"column":9,"nodeType":"820","messageId":"821","endLine":5,"endColumn":22},{"ruleId":"818","severity":1,"message":"844","line":6,"column":8,"nodeType":"820","messageId":"821","endLine":6,"endColumn":13},{"ruleId":"818","severity":1,"message":"845","line":7,"column":8,"nodeType":"820","messageId":"821","endLine":7,"endColumn":17},{"ruleId":"818","severity":1,"message":"846","line":8,"column":8,"nodeType":"820","messageId":"821","endLine":8,"endColumn":24},{"ruleId":"847","severity":1,"message":"848","line":12,"column":5,"nodeType":"849","messageId":"850","endLine":15,"endColumn":6},{"ruleId":"818","severity":1,"message":"851","line":4,"column":8,"nodeType":"820","messageId":"821","endLine":4,"endColumn":22},{"ruleId":"818","severity":1,"message":"852","line":5,"column":8,"nodeType":"820","messageId":"821","endLine":5,"endColumn":26},{"ruleId":"818","severity":1,"message":"853","line":3,"column":9,"nodeType":"820","messageId":"821","endLine":3,"endColumn":19},{"ruleId":"818","severity":1,"message":"854","line":3,"column":21,"nodeType":"820","messageId":"821","endLine":3,"endColumn":33},{"ruleId":"818","severity":1,"message":"855","line":8,"column":8,"nodeType":"820","messageId":"821","endLine":8,"endColumn":21},{"ruleId":"818","severity":1,"message":"856","line":37,"column":16,"nodeType":"820","messageId":"821","endLine":37,"endColumn":22},{"ruleId":"857","severity":1,"message":"858","line":51,"column":21,"nodeType":"834","endLine":53,"endColumn":23},{"ruleId":"818","severity":1,"message":"819","line":2,"column":9,"nodeType":"820","messageId":"821","endLine":2,"endColumn":14},{"ruleId":"818","severity":1,"message":"859","line":2,"column":16,"nodeType":"820","messageId":"821","endLine":2,"endColumn":20},{"ruleId":"818","severity":1,"message":"860","line":3,"column":8,"nodeType":"820","messageId":"821","endLine":3,"endColumn":26},{"ruleId":"818","severity":1,"message":"861","line":11,"column":10,"nodeType":"820","messageId":"821","endLine":11,"endColumn":20},{"ruleId":"818","severity":1,"message":"819","line":2,"column":9,"nodeType":"820","messageId":"821","endLine":2,"endColumn":14},{"ruleId":"818","severity":1,"message":"860","line":3,"column":8,"nodeType":"820","messageId":"821","endLine":3,"endColumn":26},{"ruleId":"818","severity":1,"message":"862","line":16,"column":7,"nodeType":"820","messageId":"821","endLine":16,"endColumn":19},{"ruleId":"818","severity":1,"message":"863","line":3,"column":8,"nodeType":"820","messageId":"821","endLine":3,"endColumn":15},{"ruleId":"818","severity":1,"message":"854","line":5,"column":27,"nodeType":"820","messageId":"821","endLine":5,"endColumn":39},{"ruleId":"818","severity":1,"message":"864","line":5,"column":8,"nodeType":"820","messageId":"821","endLine":5,"endColumn":14},{"ruleId":"865","severity":1,"message":"866","line":74,"column":14,"nodeType":"867","messageId":"868","endLine":74,"endColumn":16},{"ruleId":"865","severity":1,"message":"866","line":81,"column":52,"nodeType":"867","messageId":"868","endLine":81,"endColumn":54},{"ruleId":"865","severity":1,"message":"866","line":83,"column":44,"nodeType":"867","messageId":"868","endLine":83,"endColumn":46},{"ruleId":"865","severity":1,"message":"866","line":73,"column":33,"nodeType":"867","messageId":"868","endLine":73,"endColumn":35},{"ruleId":"865","severity":1,"message":"866","line":173,"column":31,"nodeType":"867","messageId":"868","endLine":173,"endColumn":33},{"ruleId":"865","severity":1,"message":"866","line":189,"column":31,"nodeType":"867","messageId":"868","endLine":189,"endColumn":33},{"ruleId":"865","severity":1,"message":"866","line":121,"column":20,"nodeType":"867","messageId":"868","endLine":121,"endColumn":22},{"ruleId":"865","severity":1,"message":"866","line":121,"column":38,"nodeType":"867","messageId":"868","endLine":121,"endColumn":40},{"ruleId":"865","severity":1,"message":"866","line":138,"column":44,"nodeType":"867","messageId":"868","endLine":138,"endColumn":46},{"ruleId":"865","severity":1,"message":"866","line":141,"column":38,"nodeType":"867","messageId":"868","endLine":141,"endColumn":40},{"ruleId":"865","severity":1,"message":"866","line":144,"column":38,"nodeType":"867","messageId":"868","endLine":144,"endColumn":40},{"ruleId":"865","severity":1,"message":"866","line":147,"column":38,"nodeType":"867","messageId":"868","endLine":147,"endColumn":40},{"ruleId":"865","severity":1,"message":"866","line":150,"column":38,"nodeType":"867","messageId":"868","endLine":150,"endColumn":40},{"ruleId":"818","severity":1,"message":"869","line":1,"column":9,"nodeType":"820","messageId":"821","endLine":1,"endColumn":20},{"ruleId":"818","severity":1,"message":"870","line":1,"column":22,"nodeType":"820","messageId":"821","endLine":1,"endColumn":33},{"ruleId":"818","severity":1,"message":"871","line":2,"column":8,"nodeType":"820","messageId":"821","endLine":2,"endColumn":13},{"ruleId":"818","severity":1,"message":"872","line":3,"column":8,"nodeType":"820","messageId":"821","endLine":3,"endColumn":13},{"ruleId":"818","severity":1,"message":"873","line":3,"column":16,"nodeType":"820","messageId":"821","endLine":3,"endColumn":25},{"ruleId":"818","severity":1,"message":"874","line":1,"column":26,"nodeType":"820","messageId":"821","endLine":1,"endColumn":34},{"ruleId":"818","severity":1,"message":"875","line":24,"column":8,"nodeType":"820","messageId":"821","endLine":24,"endColumn":21},{"ruleId":"857","severity":1,"message":"858","line":178,"column":33,"nodeType":"834","endLine":178,"endColumn":49},{"ruleId":"857","severity":1,"message":"858","line":216,"column":33,"nodeType":"834","endLine":216,"endColumn":49},{"ruleId":"818","severity":1,"message":"876","line":1,"column":27,"nodeType":"820","messageId":"821","endLine":1,"endColumn":35},{"ruleId":"818","severity":1,"message":"819","line":2,"column":9,"nodeType":"820","messageId":"821","endLine":2,"endColumn":14},{"ruleId":"818","severity":1,"message":"877","line":3,"column":8,"nodeType":"820","messageId":"821","endLine":3,"endColumn":26},{"ruleId":"865","severity":1,"message":"866","line":195,"column":43,"nodeType":"867","messageId":"868","endLine":195,"endColumn":45},{"ruleId":"818","severity":1,"message":"854","line":6,"column":27,"nodeType":"820","messageId":"821","endLine":6,"endColumn":39},{"ruleId":"818","severity":1,"message":"878","line":8,"column":8,"nodeType":"820","messageId":"821","endLine":8,"endColumn":28},{"ruleId":"818","severity":1,"message":"879","line":9,"column":8,"nodeType":"820","messageId":"821","endLine":9,"endColumn":25},{"ruleId":"818","severity":1,"message":"880","line":10,"column":8,"nodeType":"820","messageId":"821","endLine":10,"endColumn":26},{"ruleId":"818","severity":1,"message":"881","line":12,"column":8,"nodeType":"820","messageId":"821","endLine":12,"endColumn":17},{"ruleId":"818","severity":1,"message":"882","line":14,"column":8,"nodeType":"820","messageId":"821","endLine":14,"endColumn":20},{"ruleId":"818","severity":1,"message":"883","line":15,"column":10,"nodeType":"820","messageId":"821","endLine":15,"endColumn":21},{"ruleId":"818","severity":1,"message":"819","line":16,"column":9,"nodeType":"820","messageId":"821","endLine":16,"endColumn":14},{"ruleId":"818","severity":1,"message":"884","line":101,"column":15,"nodeType":"820","messageId":"821","endLine":101,"endColumn":35},{"ruleId":"865","severity":1,"message":"866","line":179,"column":45,"nodeType":"867","messageId":"868","endLine":179,"endColumn":47},{"ruleId":"818","severity":1,"message":"885","line":4,"column":10,"nodeType":"820","messageId":"821","endLine":4,"endColumn":20},{"ruleId":"818","severity":1,"message":"886","line":4,"column":22,"nodeType":"820","messageId":"821","endLine":4,"endColumn":34},{"ruleId":"818","severity":1,"message":"842","line":4,"column":36,"nodeType":"820","messageId":"821","endLine":4,"endColumn":46},{"ruleId":"818","severity":1,"message":"861","line":4,"column":48,"nodeType":"820","messageId":"821","endLine":4,"endColumn":58},{"ruleId":"818","severity":1,"message":"887","line":121,"column":13,"nodeType":"820","messageId":"821","endLine":121,"endColumn":21},{"ruleId":"865","severity":1,"message":"866","line":173,"column":31,"nodeType":"867","messageId":"868","endLine":173,"endColumn":33},{"ruleId":"865","severity":1,"message":"866","line":189,"column":31,"nodeType":"867","messageId":"868","endLine":189,"endColumn":33},{"ruleId":"865","severity":1,"message":"866","line":318,"column":38,"nodeType":"867","messageId":"868","endLine":318,"endColumn":40},{"ruleId":"818","severity":1,"message":"888","line":4,"column":8,"nodeType":"820","messageId":"821","endLine":4,"endColumn":13},{"ruleId":"818","severity":1,"message":"889","line":5,"column":8,"nodeType":"820","messageId":"821","endLine":5,"endColumn":13},{"ruleId":"818","severity":1,"message":"890","line":6,"column":8,"nodeType":"820","messageId":"821","endLine":6,"endColumn":13},{"ruleId":"818","severity":1,"message":"891","line":7,"column":8,"nodeType":"820","messageId":"821","endLine":7,"endColumn":12},{"ruleId":"847","severity":1,"message":"848","line":5,"column":5,"nodeType":"849","messageId":"850","endLine":8,"endColumn":6},{"ruleId":"857","severity":1,"message":"858","line":16,"column":21,"nodeType":"834","endLine":18,"endColumn":23},{"ruleId":"892","severity":1,"message":"893","line":28,"column":42,"nodeType":"894","messageId":"895","endLine":28,"endColumn":51},{"ruleId":"832","severity":1,"message":"896","line":34,"column":41,"nodeType":"834","endLine":34,"endColumn":53},{"ruleId":"818","severity":1,"message":"897","line":5,"column":8,"nodeType":"820","messageId":"821","endLine":5,"endColumn":22},{"ruleId":"818","severity":1,"message":"898","line":10,"column":21,"nodeType":"820","messageId":"821","endLine":10,"endColumn":24},{"ruleId":"818","severity":1,"message":"871","line":11,"column":8,"nodeType":"820","messageId":"821","endLine":11,"endColumn":13},{"ruleId":"818","severity":1,"message":"899","line":40,"column":12,"nodeType":"820","messageId":"821","endLine":40,"endColumn":26},{"ruleId":"818","severity":1,"message":"900","line":40,"column":28,"nodeType":"820","messageId":"821","endLine":40,"endColumn":45},{"ruleId":"865","severity":1,"message":"866","line":62,"column":23,"nodeType":"867","messageId":"868","endLine":62,"endColumn":25},{"ruleId":"865","severity":1,"message":"866","line":146,"column":38,"nodeType":"867","messageId":"868","endLine":146,"endColumn":40},{"ruleId":"818","severity":1,"message":"901","line":1,"column":16,"nodeType":"820","messageId":"821","endLine":1,"endColumn":25},{"ruleId":"818","severity":1,"message":"902","line":1,"column":38,"nodeType":"820","messageId":"821","endLine":1,"endColumn":53},{"ruleId":"818","severity":1,"message":"874","line":1,"column":55,"nodeType":"820","messageId":"821","endLine":1,"endColumn":63},{"ruleId":"818","severity":1,"message":"903","line":2,"column":9,"nodeType":"820","messageId":"821","endLine":2,"endColumn":16},{"ruleId":"818","severity":1,"message":"819","line":2,"column":18,"nodeType":"820","messageId":"821","endLine":2,"endColumn":23},{"ruleId":"818","severity":1,"message":"854","line":4,"column":51,"nodeType":"820","messageId":"821","endLine":4,"endColumn":63},{"ruleId":"818","severity":1,"message":"829","line":5,"column":8,"nodeType":"820","messageId":"821","endLine":5,"endColumn":16},{"ruleId":"818","severity":1,"message":"904","line":6,"column":8,"nodeType":"820","messageId":"821","endLine":6,"endColumn":20},{"ruleId":"818","severity":1,"message":"871","line":7,"column":8,"nodeType":"820","messageId":"821","endLine":7,"endColumn":13},{"ruleId":"818","severity":1,"message":"898","line":8,"column":9,"nodeType":"820","messageId":"821","endLine":8,"endColumn":12},{"ruleId":"818","severity":1,"message":"845","line":10,"column":8,"nodeType":"820","messageId":"821","endLine":10,"endColumn":17},{"ruleId":"818","severity":1,"message":"905","line":11,"column":8,"nodeType":"820","messageId":"821","endLine":11,"endColumn":13},{"ruleId":"818","severity":1,"message":"906","line":12,"column":8,"nodeType":"820","messageId":"821","endLine":12,"endColumn":12},{"ruleId":"818","severity":1,"message":"907","line":13,"column":8,"nodeType":"820","messageId":"821","endLine":13,"endColumn":11},{"ruleId":"818","severity":1,"message":"908","line":14,"column":8,"nodeType":"820","messageId":"821","endLine":14,"endColumn":18},{"ruleId":"818","severity":1,"message":"909","line":15,"column":8,"nodeType":"820","messageId":"821","endLine":15,"endColumn":11},{"ruleId":"818","severity":1,"message":"910","line":85,"column":12,"nodeType":"820","messageId":"821","endLine":85,"endColumn":17},{"ruleId":"911","severity":1,"message":"912","line":97,"column":8,"nodeType":"913","endLine":97,"endColumn":20,"suggestions":"914"},{"ruleId":"818","severity":1,"message":"915","line":99,"column":11,"nodeType":"820","messageId":"821","endLine":99,"endColumn":23},{"ruleId":"818","severity":1,"message":"916","line":104,"column":11,"nodeType":"820","messageId":"821","endLine":104,"endColumn":22},{"ruleId":"857","severity":1,"message":"858","line":242,"column":21,"nodeType":"834","endLine":242,"endColumn":71},{"ruleId":"857","severity":1,"message":"858","line":243,"column":21,"nodeType":"834","endLine":243,"endColumn":75},{"ruleId":"857","severity":1,"message":"858","line":244,"column":21,"nodeType":"834","endLine":244,"endColumn":75},{"ruleId":"857","severity":1,"message":"858","line":245,"column":21,"nodeType":"834","endLine":245,"endColumn":75},{"ruleId":"857","severity":1,"message":"858","line":246,"column":21,"nodeType":"834","endLine":246,"endColumn":75},{"ruleId":"857","severity":1,"message":"858","line":247,"column":21,"nodeType":"834","endLine":247,"endColumn":75},{"ruleId":"857","severity":1,"message":"858","line":248,"column":21,"nodeType":"834","endLine":248,"endColumn":75},{"ruleId":"857","severity":1,"message":"858","line":249,"column":21,"nodeType":"834","endLine":249,"endColumn":75},{"ruleId":"857","severity":1,"message":"858","line":250,"column":21,"nodeType":"834","endLine":250,"endColumn":75},{"ruleId":"857","severity":1,"message":"858","line":251,"column":21,"nodeType":"834","endLine":251,"endColumn":75},{"ruleId":"857","severity":1,"message":"858","line":252,"column":21,"nodeType":"834","endLine":252,"endColumn":75},{"ruleId":"857","severity":1,"message":"858","line":253,"column":21,"nodeType":"834","endLine":253,"endColumn":75},{"ruleId":"857","severity":1,"message":"858","line":254,"column":21,"nodeType":"834","endLine":254,"endColumn":75},{"ruleId":"857","severity":1,"message":"858","line":255,"column":21,"nodeType":"834","endLine":255,"endColumn":75},{"ruleId":"832","severity":1,"message":"896","line":260,"column":33,"nodeType":"834","endLine":267,"endColumn":34},{"ruleId":"835","severity":1,"message":"836","line":445,"column":1,"nodeType":"837","messageId":"838","endLine":451,"endColumn":2},{"ruleId":"835","severity":1,"message":"836","line":452,"column":1,"nodeType":"837","messageId":"838","endLine":525,"endColumn":2},{"ruleId":"847","severity":1,"message":"848","line":5,"column":5,"nodeType":"849","messageId":"850","endLine":8,"endColumn":6},{"ruleId":"857","severity":1,"message":"858","line":16,"column":21,"nodeType":"834","endLine":18,"endColumn":23},{"ruleId":"892","severity":1,"message":"893","line":28,"column":42,"nodeType":"894","messageId":"895","endLine":28,"endColumn":51},{"ruleId":"832","severity":1,"message":"896","line":34,"column":41,"nodeType":"834","endLine":34,"endColumn":53},{"ruleId":"818","severity":1,"message":"889","line":3,"column":8,"nodeType":"820","messageId":"821","endLine":3,"endColumn":13},{"ruleId":"818","severity":1,"message":"890","line":4,"column":8,"nodeType":"820","messageId":"821","endLine":4,"endColumn":13},{"ruleId":"818","severity":1,"message":"891","line":5,"column":8,"nodeType":"820","messageId":"821","endLine":5,"endColumn":12},{"ruleId":"847","severity":1,"message":"848","line":17,"column":5,"nodeType":"849","messageId":"850","endLine":21,"endColumn":6},{"ruleId":"857","severity":1,"message":"858","line":79,"column":21,"nodeType":"834","endLine":79,"endColumn":70},{"ruleId":"818","severity":1,"message":"831","line":4,"column":8,"nodeType":"820","messageId":"821","endLine":4,"endColumn":20},{"ruleId":"818","severity":1,"message":"917","line":5,"column":8,"nodeType":"820","messageId":"821","endLine":5,"endColumn":22},{"ruleId":"818","severity":1,"message":"918","line":6,"column":8,"nodeType":"820","messageId":"821","endLine":6,"endColumn":14},{"ruleId":"818","severity":1,"message":"919","line":7,"column":8,"nodeType":"820","messageId":"821","endLine":7,"endColumn":17},{"ruleId":"818","severity":1,"message":"920","line":8,"column":8,"nodeType":"820","messageId":"821","endLine":8,"endColumn":16},{"ruleId":"818","severity":1,"message":"921","line":9,"column":8,"nodeType":"820","messageId":"821","endLine":9,"endColumn":23},{"ruleId":"818","severity":1,"message":"922","line":10,"column":8,"nodeType":"820","messageId":"821","endLine":10,"endColumn":26},{"ruleId":"818","severity":1,"message":"923","line":11,"column":8,"nodeType":"820","messageId":"821","endLine":11,"endColumn":22},{"ruleId":"818","severity":1,"message":"924","line":12,"column":8,"nodeType":"820","messageId":"821","endLine":12,"endColumn":15},{"ruleId":"818","severity":1,"message":"905","line":13,"column":8,"nodeType":"820","messageId":"821","endLine":13,"endColumn":13},{"ruleId":"865","severity":1,"message":"866","line":62,"column":41,"nodeType":"867","messageId":"868","endLine":62,"endColumn":43},{"ruleId":"865","severity":1,"message":"925","line":81,"column":40,"nodeType":"867","messageId":"868","endLine":81,"endColumn":42},{"ruleId":"865","severity":1,"message":"866","line":121,"column":48,"nodeType":"867","messageId":"868","endLine":121,"endColumn":50},{"ruleId":"865","severity":1,"message":"925","line":126,"column":38,"nodeType":"867","messageId":"868","endLine":126,"endColumn":40},{"ruleId":"865","severity":1,"message":"925","line":128,"column":46,"nodeType":"867","messageId":"868","endLine":128,"endColumn":48},{"ruleId":"865","severity":1,"message":"925","line":130,"column":50,"nodeType":"867","messageId":"868","endLine":130,"endColumn":52},{"ruleId":"865","severity":1,"message":"925","line":132,"column":51,"nodeType":"867","messageId":"868","endLine":132,"endColumn":53},{"ruleId":"865","severity":1,"message":"925","line":141,"column":41,"nodeType":"867","messageId":"868","endLine":141,"endColumn":43},{"ruleId":"865","severity":1,"message":"866","line":154,"column":49,"nodeType":"867","messageId":"868","endLine":154,"endColumn":51},{"ruleId":"865","severity":1,"message":"925","line":159,"column":38,"nodeType":"867","messageId":"868","endLine":159,"endColumn":40},{"ruleId":"865","severity":1,"message":"925","line":159,"column":84,"nodeType":"867","messageId":"868","endLine":159,"endColumn":86},{"ruleId":"818","severity":1,"message":"901","line":1,"column":16,"nodeType":"820","messageId":"821","endLine":1,"endColumn":25},{"ruleId":"818","severity":1,"message":"926","line":4,"column":8,"nodeType":"820","messageId":"821","endLine":4,"endColumn":19},{"ruleId":"818","severity":1,"message":"905","line":5,"column":8,"nodeType":"820","messageId":"821","endLine":5,"endColumn":13},{"ruleId":"818","severity":1,"message":"927","line":69,"column":11,"nodeType":"820","messageId":"821","endLine":69,"endColumn":18},{"ruleId":"818","severity":1,"message":"928","line":73,"column":12,"nodeType":"820","messageId":"821","endLine":73,"endColumn":23},{"ruleId":"818","severity":1,"message":"929","line":73,"column":25,"nodeType":"820","messageId":"821","endLine":73,"endColumn":39},{"ruleId":"865","severity":1,"message":"866","line":76,"column":30,"nodeType":"867","messageId":"868","endLine":76,"endColumn":32},{"ruleId":"865","severity":1,"message":"866","line":78,"column":37,"nodeType":"867","messageId":"868","endLine":78,"endColumn":39},{"ruleId":"865","severity":1,"message":"866","line":80,"column":37,"nodeType":"867","messageId":"868","endLine":80,"endColumn":39},{"ruleId":"865","severity":1,"message":"866","line":109,"column":45,"nodeType":"867","messageId":"868","endLine":109,"endColumn":47},{"ruleId":"818","severity":1,"message":"930","line":7,"column":66,"nodeType":"820","messageId":"821","endLine":7,"endColumn":74},{"ruleId":"832","severity":1,"message":"896","line":12,"column":17,"nodeType":"834","endLine":20,"endColumn":18},{"ruleId":"865","severity":1,"message":"866","line":13,"column":32,"nodeType":"867","messageId":"868","endLine":13,"endColumn":34},{"ruleId":"865","severity":1,"message":"866","line":15,"column":32,"nodeType":"867","messageId":"868","endLine":15,"endColumn":34},{"ruleId":"865","severity":1,"message":"866","line":17,"column":36,"nodeType":"867","messageId":"868","endLine":17,"endColumn":38},{"ruleId":"832","severity":1,"message":"896","line":25,"column":17,"nodeType":"834","endLine":33,"endColumn":18},{"ruleId":"865","severity":1,"message":"866","line":26,"column":32,"nodeType":"867","messageId":"868","endLine":26,"endColumn":34},{"ruleId":"865","severity":1,"message":"866","line":28,"column":32,"nodeType":"867","messageId":"868","endLine":28,"endColumn":34},{"ruleId":"865","severity":1,"message":"866","line":30,"column":36,"nodeType":"867","messageId":"868","endLine":30,"endColumn":38},{"ruleId":"832","severity":1,"message":"896","line":45,"column":21,"nodeType":"834","endLine":57,"endColumn":22},{"ruleId":"865","severity":1,"message":"866","line":47,"column":39,"nodeType":"867","messageId":"868","endLine":47,"endColumn":41},{"ruleId":"865","severity":1,"message":"866","line":48,"column":44,"nodeType":"867","messageId":"868","endLine":48,"endColumn":46},{"ruleId":"865","severity":1,"message":"866","line":50,"column":36,"nodeType":"867","messageId":"868","endLine":50,"endColumn":38},{"ruleId":"865","severity":1,"message":"866","line":52,"column":36,"nodeType":"867","messageId":"868","endLine":52,"endColumn":38},{"ruleId":"865","severity":1,"message":"866","line":54,"column":40,"nodeType":"867","messageId":"868","endLine":54,"endColumn":42},{"ruleId":"818","severity":1,"message":"931","line":5,"column":8,"nodeType":"820","messageId":"821","endLine":5,"endColumn":22},{"ruleId":"818","severity":1,"message":"932","line":24,"column":15,"nodeType":"820","messageId":"821","endLine":24,"endColumn":19},{"ruleId":"911","severity":1,"message":"933","line":27,"column":21,"nodeType":"934","endLine":27,"endColumn":36},{"ruleId":"911","severity":1,"message":"935","line":28,"column":20,"nodeType":"934","endLine":28,"endColumn":34},{"ruleId":"911","severity":1,"message":"936","line":29,"column":17,"nodeType":"934","endLine":29,"endColumn":28},{"ruleId":"818","severity":1,"message":"937","line":79,"column":9,"nodeType":"820","messageId":"821","endLine":79,"endColumn":19},{"ruleId":"818","severity":1,"message":"938","line":82,"column":14,"nodeType":"820","messageId":"821","endLine":82,"endColumn":26},{"ruleId":"818","severity":1,"message":"939","line":143,"column":10,"nodeType":"820","messageId":"821","endLine":143,"endColumn":15},{"ruleId":"818","severity":1,"message":"940","line":145,"column":6,"nodeType":"820","messageId":"821","endLine":145,"endColumn":12},{"ruleId":"818","severity":1,"message":"941","line":148,"column":6,"nodeType":"820","messageId":"821","endLine":148,"endColumn":13},{"ruleId":"942","severity":1,"message":"943","line":155,"column":9,"nodeType":"820","messageId":"944","endLine":155,"endColumn":15},{"ruleId":"942","severity":1,"message":"943","line":156,"column":30,"nodeType":"820","messageId":"944","endLine":156,"endColumn":36},{"ruleId":"865","severity":1,"message":"866","line":188,"column":15,"nodeType":"867","messageId":"868","endLine":188,"endColumn":17},{"ruleId":"945","severity":1,"message":"946","line":198,"column":13,"nodeType":"820","messageId":"947","endLine":198,"endColumn":15},{"ruleId":"945","severity":1,"message":"948","line":199,"column":9,"nodeType":"820","messageId":"947","endLine":199,"endColumn":16},{"ruleId":"865","severity":1,"message":"866","line":131,"column":39,"nodeType":"867","messageId":"868","endLine":131,"endColumn":41},{"ruleId":"818","severity":1,"message":"898","line":4,"column":9,"nodeType":"820","messageId":"821","endLine":4,"endColumn":12},{"ruleId":"818","severity":1,"message":"874","line":1,"column":27,"nodeType":"820","messageId":"821","endLine":1,"endColumn":35},{"ruleId":"818","severity":1,"message":"819","line":2,"column":9,"nodeType":"820","messageId":"821","endLine":2,"endColumn":14},{"ruleId":"818","severity":1,"message":"949","line":3,"column":8,"nodeType":"820","messageId":"821","endLine":3,"endColumn":28},{"ruleId":"818","severity":1,"message":"862","line":36,"column":7,"nodeType":"820","messageId":"821","endLine":36,"endColumn":19},{"ruleId":"818","severity":1,"message":"950","line":64,"column":15,"nodeType":"820","messageId":"821","endLine":64,"endColumn":22},{"ruleId":"818","severity":1,"message":"951","line":154,"column":13,"nodeType":"820","messageId":"821","endLine":154,"endColumn":22},{"ruleId":"857","severity":1,"message":"858","line":170,"column":29,"nodeType":"834","endLine":174,"endColumn":31},{"ruleId":"857","severity":1,"message":"858","line":233,"column":33,"nodeType":"834","endLine":237,"endColumn":35},{"ruleId":"865","severity":1,"message":"866","line":152,"column":40,"nodeType":"867","messageId":"868","endLine":152,"endColumn":42},{"ruleId":"865","severity":1,"message":"866","line":157,"column":30,"nodeType":"867","messageId":"868","endLine":157,"endColumn":32},{"ruleId":"865","severity":1,"message":"866","line":157,"column":75,"nodeType":"867","messageId":"868","endLine":157,"endColumn":77},{"ruleId":"865","severity":1,"message":"866","line":158,"column":18,"nodeType":"867","messageId":"868","endLine":158,"endColumn":20},{"ruleId":"865","severity":1,"message":"866","line":158,"column":56,"nodeType":"867","messageId":"868","endLine":158,"endColumn":58},{"ruleId":"865","severity":1,"message":"866","line":160,"column":57,"nodeType":"867","messageId":"868","endLine":160,"endColumn":59},{"ruleId":"865","severity":1,"message":"866","line":175,"column":38,"nodeType":"867","messageId":"868","endLine":175,"endColumn":40},{"ruleId":"818","severity":1,"message":"905","line":3,"column":8,"nodeType":"820","messageId":"821","endLine":3,"endColumn":13},{"ruleId":"847","severity":1,"message":"848","line":8,"column":5,"nodeType":"849","messageId":"850","endLine":22,"endColumn":6},{"ruleId":"818","severity":1,"message":"952","line":5,"column":8,"nodeType":"820","messageId":"821","endLine":5,"endColumn":12},{"ruleId":"818","severity":1,"message":"953","line":6,"column":8,"nodeType":"820","messageId":"821","endLine":6,"endColumn":18},{"ruleId":"818","severity":1,"message":"954","line":7,"column":8,"nodeType":"820","messageId":"821","endLine":7,"endColumn":17},{"ruleId":"818","severity":1,"message":"955","line":8,"column":8,"nodeType":"820","messageId":"821","endLine":8,"endColumn":19},{"ruleId":"818","severity":1,"message":"956","line":9,"column":8,"nodeType":"820","messageId":"821","endLine":9,"endColumn":19},{"ruleId":"818","severity":1,"message":"918","line":11,"column":8,"nodeType":"820","messageId":"821","endLine":11,"endColumn":14},{"ruleId":"818","severity":1,"message":"957","line":12,"column":8,"nodeType":"820","messageId":"821","endLine":12,"endColumn":18},{"ruleId":"818","severity":1,"message":"908","line":13,"column":8,"nodeType":"820","messageId":"821","endLine":13,"endColumn":18},{"ruleId":"818","severity":1,"message":"958","line":15,"column":8,"nodeType":"820","messageId":"821","endLine":15,"endColumn":20},{"ruleId":"818","severity":1,"message":"959","line":16,"column":8,"nodeType":"820","messageId":"821","endLine":16,"endColumn":17},{"ruleId":"818","severity":1,"message":"960","line":18,"column":8,"nodeType":"820","messageId":"821","endLine":18,"endColumn":20},{"ruleId":"818","severity":1,"message":"905","line":20,"column":8,"nodeType":"820","messageId":"821","endLine":20,"endColumn":13},{"ruleId":"818","severity":1,"message":"961","line":21,"column":8,"nodeType":"820","messageId":"821","endLine":21,"endColumn":23},{"ruleId":"911","severity":1,"message":"962","line":77,"column":8,"nodeType":"913","endLine":77,"endColumn":13,"suggestions":"963"},{"ruleId":"818","severity":1,"message":"964","line":96,"column":11,"nodeType":"820","messageId":"821","endLine":96,"endColumn":28},{"ruleId":"818","severity":1,"message":"919","line":9,"column":8,"nodeType":"820","messageId":"821","endLine":9,"endColumn":17},{"ruleId":"865","severity":1,"message":"866","line":63,"column":58,"nodeType":"867","messageId":"868","endLine":63,"endColumn":60},{"ruleId":"865","severity":1,"message":"866","line":63,"column":115,"nodeType":"867","messageId":"868","endLine":63,"endColumn":117},{"ruleId":"865","severity":1,"message":"866","line":66,"column":56,"nodeType":"867","messageId":"868","endLine":66,"endColumn":58},{"ruleId":"865","severity":1,"message":"866","line":67,"column":55,"nodeType":"867","messageId":"868","endLine":67,"endColumn":57},{"ruleId":"865","severity":1,"message":"866","line":68,"column":55,"nodeType":"867","messageId":"868","endLine":68,"endColumn":57},{"ruleId":"865","severity":1,"message":"866","line":78,"column":69,"nodeType":"867","messageId":"868","endLine":78,"endColumn":71},{"ruleId":"818","severity":1,"message":"871","line":3,"column":8,"nodeType":"820","messageId":"821","endLine":3,"endColumn":13},{"ruleId":"818","severity":1,"message":"898","line":4,"column":9,"nodeType":"820","messageId":"821","endLine":4,"endColumn":12},{"ruleId":"818","severity":1,"message":"905","line":5,"column":8,"nodeType":"820","messageId":"821","endLine":5,"endColumn":13},{"ruleId":"847","severity":1,"message":"848","line":9,"column":5,"nodeType":"849","messageId":"850","endLine":12,"endColumn":6},{"ruleId":"847","severity":1,"message":"848","line":4,"column":5,"nodeType":"849","messageId":"850","endLine":6,"endColumn":6},{"ruleId":"818","severity":1,"message":"873","line":1,"column":17,"nodeType":"820","messageId":"821","endLine":1,"endColumn":26},{"ruleId":"818","severity":1,"message":"819","line":12,"column":9,"nodeType":"820","messageId":"821","endLine":12,"endColumn":14},{"ruleId":"818","severity":1,"message":"965","line":18,"column":10,"nodeType":"820","messageId":"821","endLine":18,"endColumn":22},{"ruleId":"818","severity":1,"message":"966","line":18,"column":24,"nodeType":"820","messageId":"821","endLine":18,"endColumn":39},{"ruleId":"818","severity":1,"message":"967","line":22,"column":12,"nodeType":"820","messageId":"821","endLine":22,"endColumn":21},{"ruleId":"865","severity":1,"message":"866","line":27,"column":38,"nodeType":"867","messageId":"868","endLine":27,"endColumn":40},{"ruleId":"865","severity":1,"message":"866","line":27,"column":66,"nodeType":"867","messageId":"868","endLine":27,"endColumn":68},{"ruleId":"865","severity":1,"message":"866","line":34,"column":20,"nodeType":"867","messageId":"868","endLine":34,"endColumn":22},{"ruleId":"865","severity":1,"message":"866","line":34,"column":38,"nodeType":"867","messageId":"868","endLine":34,"endColumn":40},{"ruleId":"847","severity":1,"message":"848","line":4,"column":5,"nodeType":"849","messageId":"850","endLine":6,"endColumn":6},{"ruleId":"847","severity":1,"message":"848","line":4,"column":5,"nodeType":"849","messageId":"850","endLine":6,"endColumn":6},{"ruleId":"847","severity":1,"message":"848","line":4,"column":5,"nodeType":"849","messageId":"850","endLine":6,"endColumn":6},{"ruleId":"818","severity":1,"message":"874","line":1,"column":27,"nodeType":"820","messageId":"821","endLine":1,"endColumn":35},{"ruleId":"847","severity":1,"message":"848","line":5,"column":5,"nodeType":"849","messageId":"850","endLine":7,"endColumn":6},{"ruleId":"818","severity":1,"message":"874","line":1,"column":27,"nodeType":"820","messageId":"821","endLine":1,"endColumn":35},{"ruleId":"968","severity":1,"message":"969","line":22,"column":41,"nodeType":"867","messageId":"970","endLine":22,"endColumn":42},{"ruleId":"847","severity":1,"message":"848","line":5,"column":5,"nodeType":"849","messageId":"850","endLine":7,"endColumn":6},{"ruleId":"818","severity":1,"message":"853","line":5,"column":9,"nodeType":"820","messageId":"821","endLine":5,"endColumn":19},{"ruleId":"818","severity":1,"message":"854","line":5,"column":21,"nodeType":"820","messageId":"821","endLine":5,"endColumn":33},{"ruleId":"971","severity":1,"message":"972","line":55,"column":5,"nodeType":"849","messageId":"868","endLine":57,"endColumn":6},{"ruleId":"847","severity":1,"message":"848","line":5,"column":5,"nodeType":"849","messageId":"850","endLine":7,"endColumn":6},{"ruleId":"847","severity":1,"message":"848","line":4,"column":5,"nodeType":"849","messageId":"850","endLine":6,"endColumn":6},{"ruleId":"818","severity":1,"message":"871","line":2,"column":8,"nodeType":"820","messageId":"821","endLine":2,"endColumn":13},{"ruleId":"818","severity":1,"message":"819","line":3,"column":9,"nodeType":"820","messageId":"821","endLine":3,"endColumn":14},{"ruleId":"818","severity":1,"message":"859","line":3,"column":16,"nodeType":"820","messageId":"821","endLine":3,"endColumn":20},{"ruleId":"818","severity":1,"message":"898","line":4,"column":9,"nodeType":"820","messageId":"821","endLine":4,"endColumn":12},{"ruleId":"818","severity":1,"message":"874","line":1,"column":27,"nodeType":"820","messageId":"821","endLine":1,"endColumn":35},{"ruleId":"865","severity":1,"message":"866","line":26,"column":33,"nodeType":"867","messageId":"868","endLine":26,"endColumn":35},{"ruleId":"865","severity":1,"message":"866","line":50,"column":33,"nodeType":"867","messageId":"868","endLine":50,"endColumn":35},{"ruleId":"865","severity":1,"message":"866","line":52,"column":40,"nodeType":"867","messageId":"868","endLine":52,"endColumn":42},{"ruleId":"818","severity":1,"message":"973","line":96,"column":13,"nodeType":"820","messageId":"821","endLine":96,"endColumn":20},{"ruleId":"818","severity":1,"message":"901","line":1,"column":15,"nodeType":"820","messageId":"821","endLine":1,"endColumn":24},{"ruleId":"818","severity":1,"message":"843","line":2,"column":50,"nodeType":"820","messageId":"821","endLine":2,"endColumn":63},{"ruleId":"818","severity":1,"message":"974","line":6,"column":7,"nodeType":"820","messageId":"821","endLine":6,"endColumn":22},{"ruleId":"818","severity":1,"message":"975","line":44,"column":9,"nodeType":"820","messageId":"821","endLine":44,"endColumn":20},{"ruleId":"818","severity":1,"message":"976","line":63,"column":9,"nodeType":"820","messageId":"821","endLine":63,"endColumn":14},{"ruleId":"818","severity":1,"message":"977","line":3,"column":8,"nodeType":"820","messageId":"821","endLine":3,"endColumn":14},{"ruleId":"818","severity":1,"message":"978","line":1,"column":10,"nodeType":"820","messageId":"821","endLine":1,"endColumn":27},{"ruleId":"818","severity":1,"message":"901","line":2,"column":18,"nodeType":"820","messageId":"821","endLine":2,"endColumn":27},{"ruleId":"818","severity":1,"message":"979","line":3,"column":8,"nodeType":"820","messageId":"821","endLine":3,"endColumn":16},{"ruleId":"818","severity":1,"message":"980","line":4,"column":10,"nodeType":"820","messageId":"821","endLine":4,"endColumn":27},{"ruleId":"818","severity":1,"message":"981","line":15,"column":12,"nodeType":"820","messageId":"821","endLine":15,"endColumn":20},{"ruleId":"818","severity":1,"message":"982","line":69,"column":25,"nodeType":"820","messageId":"821","endLine":69,"endColumn":27},{"ruleId":"865","severity":1,"message":"866","line":80,"column":31,"nodeType":"867","messageId":"868","endLine":80,"endColumn":33},{"ruleId":"818","severity":1,"message":"979","line":2,"column":8,"nodeType":"820","messageId":"821","endLine":2,"endColumn":16},{"ruleId":"818","severity":1,"message":"898","line":5,"column":10,"nodeType":"820","messageId":"821","endLine":5,"endColumn":13},{"ruleId":"818","severity":1,"message":"854","line":5,"column":27,"nodeType":"820","messageId":"821","endLine":5,"endColumn":39},{"ruleId":"818","severity":1,"message":"983","line":19,"column":15,"nodeType":"820","messageId":"821","endLine":19,"endColumn":29},{"ruleId":"818","severity":1,"message":"979","line":2,"column":8,"nodeType":"820","messageId":"821","endLine":2,"endColumn":16},{"ruleId":"818","severity":1,"message":"854","line":6,"column":27,"nodeType":"820","messageId":"821","endLine":6,"endColumn":39},{"ruleId":"818","severity":1,"message":"984","line":3,"column":9,"nodeType":"820","messageId":"821","endLine":3,"endColumn":14},{"ruleId":"818","severity":1,"message":"871","line":2,"column":8,"nodeType":"820","messageId":"821","endLine":2,"endColumn":13},{"ruleId":"818","severity":1,"message":"898","line":3,"column":9,"nodeType":"820","messageId":"821","endLine":3,"endColumn":12},{"ruleId":"847","severity":1,"message":"848","line":7,"column":5,"nodeType":"849","messageId":"850","endLine":11,"endColumn":6},{"ruleId":"865","severity":1,"message":"866","line":94,"column":42,"nodeType":"867","messageId":"868","endLine":94,"endColumn":44},{"ruleId":"818","severity":1,"message":"819","line":2,"column":9,"nodeType":"820","messageId":"821","endLine":2,"endColumn":14},{"ruleId":"818","severity":1,"message":"985","line":7,"column":26,"nodeType":"820","messageId":"821","endLine":7,"endColumn":33},{"ruleId":"818","severity":1,"message":"901","line":1,"column":17,"nodeType":"820","messageId":"821","endLine":1,"endColumn":26},{"ruleId":"818","severity":1,"message":"885","line":3,"column":10,"nodeType":"820","messageId":"821","endLine":3,"endColumn":20},{"ruleId":"818","severity":1,"message":"871","line":8,"column":8,"nodeType":"820","messageId":"821","endLine":8,"endColumn":13},{"ruleId":"818","severity":1,"message":"898","line":9,"column":9,"nodeType":"820","messageId":"821","endLine":9,"endColumn":12},{"ruleId":"818","severity":1,"message":"881","line":11,"column":8,"nodeType":"820","messageId":"821","endLine":11,"endColumn":17},{"ruleId":"818","severity":1,"message":"986","line":14,"column":8,"nodeType":"820","messageId":"821","endLine":14,"endColumn":13},{"ruleId":"818","severity":1,"message":"987","line":15,"column":8,"nodeType":"820","messageId":"821","endLine":15,"endColumn":14},{"ruleId":"818","severity":1,"message":"988","line":77,"column":16,"nodeType":"820","messageId":"821","endLine":77,"endColumn":21},{"ruleId":"818","severity":1,"message":"989","line":6,"column":8,"nodeType":"820","messageId":"821","endLine":6,"endColumn":14},{"ruleId":"818","severity":1,"message":"990","line":11,"column":10,"nodeType":"820","messageId":"821","endLine":11,"endColumn":17},{"ruleId":"991","severity":1,"message":"992","line":181,"column":21,"nodeType":"993","messageId":"994","endLine":181,"endColumn":48},{"ruleId":"991","severity":1,"message":"992","line":182,"column":20,"nodeType":"993","messageId":"994","endLine":182,"endColumn":46},{"ruleId":"818","severity":1,"message":"995","line":185,"column":13,"nodeType":"820","messageId":"821","endLine":185,"endColumn":23},{"ruleId":"818","severity":1,"message":"996","line":218,"column":9,"nodeType":"820","messageId":"821","endLine":218,"endColumn":16},{"ruleId":"832","severity":1,"message":"833","line":8,"column":40,"nodeType":"834","endLine":11,"endColumn":16},{"ruleId":"832","severity":1,"message":"833","line":14,"column":39,"nodeType":"834","endLine":17,"endColumn":16},{"ruleId":"832","severity":1,"message":"833","line":28,"column":21,"nodeType":"834","endLine":35,"endColumn":28},{"ruleId":"865","severity":1,"message":"866","line":30,"column":39,"nodeType":"867","messageId":"868","endLine":30,"endColumn":41},{"ruleId":"865","severity":1,"message":"866","line":31,"column":44,"nodeType":"867","messageId":"868","endLine":31,"endColumn":46},{"ruleId":"818","severity":1,"message":"819","line":6,"column":9,"nodeType":"820","messageId":"821","endLine":6,"endColumn":14},{"ruleId":"865","severity":1,"message":"866","line":33,"column":32,"nodeType":"867","messageId":"868","endLine":33,"endColumn":34},{"ruleId":"865","severity":1,"message":"866","line":34,"column":30,"nodeType":"867","messageId":"868","endLine":34,"endColumn":32},{"ruleId":"865","severity":1,"message":"866","line":34,"column":75,"nodeType":"867","messageId":"868","endLine":34,"endColumn":77},{"ruleId":"865","severity":1,"message":"866","line":34,"column":116,"nodeType":"867","messageId":"868","endLine":34,"endColumn":118},{"ruleId":"865","severity":1,"message":"866","line":35,"column":22,"nodeType":"867","messageId":"868","endLine":35,"endColumn":24},{"ruleId":"818","severity":1,"message":"997","line":2,"column":8,"nodeType":"820","messageId":"821","endLine":2,"endColumn":13},{"ruleId":"818","severity":1,"message":"998","line":3,"column":8,"nodeType":"820","messageId":"821","endLine":3,"endColumn":16},{"ruleId":"818","severity":1,"message":"999","line":4,"column":8,"nodeType":"820","messageId":"821","endLine":4,"endColumn":12},{"ruleId":"847","severity":1,"message":"848","line":10,"column":5,"nodeType":"849","messageId":"850","endLine":15,"endColumn":6},{"ruleId":"818","severity":1,"message":"989","line":4,"column":8,"nodeType":"820","messageId":"821","endLine":4,"endColumn":14},{"ruleId":"847","severity":1,"message":"848","line":9,"column":5,"nodeType":"849","messageId":"850","endLine":18,"endColumn":6},{"ruleId":"818","severity":1,"message":"1000","line":58,"column":13,"nodeType":"820","messageId":"821","endLine":58,"endColumn":21},{"ruleId":"818","severity":1,"message":"1001","line":59,"column":13,"nodeType":"820","messageId":"821","endLine":59,"endColumn":21},{"ruleId":"865","severity":1,"message":"866","line":62,"column":29,"nodeType":"867","messageId":"868","endLine":62,"endColumn":31},{"ruleId":"818","severity":1,"message":"885","line":2,"column":10,"nodeType":"820","messageId":"821","endLine":2,"endColumn":20},{"ruleId":"818","severity":1,"message":"881","line":5,"column":8,"nodeType":"820","messageId":"821","endLine":5,"endColumn":17},{"ruleId":"847","severity":1,"message":"848","line":12,"column":5,"nodeType":"849","messageId":"850","endLine":15,"endColumn":6},{"ruleId":"865","severity":1,"message":"866","line":24,"column":19,"nodeType":"867","messageId":"868","endLine":24,"endColumn":21},{"ruleId":"865","severity":1,"message":"866","line":24,"column":35,"nodeType":"867","messageId":"868","endLine":24,"endColumn":37},{"ruleId":"818","severity":1,"message":"1002","line":41,"column":16,"nodeType":"820","messageId":"821","endLine":41,"endColumn":19},{"ruleId":"818","severity":1,"message":"1003","line":42,"column":16,"nodeType":"820","messageId":"821","endLine":42,"endColumn":19},{"ruleId":"818","severity":1,"message":"885","line":5,"column":10,"nodeType":"820","messageId":"821","endLine":5,"endColumn":20},{"ruleId":"818","severity":1,"message":"1004","line":9,"column":11,"nodeType":"820","messageId":"821","endLine":9,"endColumn":26},{"ruleId":"847","severity":1,"message":"848","line":14,"column":5,"nodeType":"849","messageId":"850","endLine":19,"endColumn":6},{"ruleId":"818","severity":1,"message":"1005","line":37,"column":16,"nodeType":"820","messageId":"821","endLine":37,"endColumn":19},{"ruleId":"818","severity":1,"message":"1006","line":38,"column":16,"nodeType":"820","messageId":"821","endLine":38,"endColumn":21},{"ruleId":"818","severity":1,"message":"1007","line":39,"column":16,"nodeType":"820","messageId":"821","endLine":39,"endColumn":21},{"ruleId":"818","severity":1,"message":"989","line":5,"column":8,"nodeType":"820","messageId":"821","endLine":5,"endColumn":14},{"ruleId":"818","severity":1,"message":"997","line":6,"column":8,"nodeType":"820","messageId":"821","endLine":6,"endColumn":13},{"ruleId":"818","severity":1,"message":"998","line":7,"column":8,"nodeType":"820","messageId":"821","endLine":7,"endColumn":16},{"ruleId":"818","severity":1,"message":"999","line":8,"column":8,"nodeType":"820","messageId":"821","endLine":8,"endColumn":12},"no-native-reassign",["1008"],"no-negated-in-lhs",["1009"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","'Login' is defined but never used.","'ShareBoard' is defined but never used.","'MyPage' is defined but never used.","'Notice' is defined but never used.","'Reservation' is defined but never used.","'Admin' is defined but never used.","'TourList' is defined but never used.","'Tour' is defined but never used.","'ListItemText' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Logo2' is defined but never used.","'createMuiTheme' is defined but never used.","'MuiThemeProvider' is defined but never used.","'WithStyles' is defined but never used.","'ThemeProvider' is defined but never used.","'theme' is defined but never used.","'PropTypes' is defined but never used.","'styledComponents' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'NoticeMiniComp' is defined but never used.","'ShareBoardMiniComp' is defined but never used.","'actionType' is defined but never used.","'mainViewType' is defined but never used.","'NoticeContent' is defined but never used.","'boards' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Link' is defined but never used.","'ShareBoardPageComp' is defined but never used.","'withStyles' is defined but never used.","'StyledRating' is assigned a value but never used.","'RowItem' is defined but never used.","'AppBar' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'axios' is defined but never used.","'React' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'ListSubheader' is defined but never used.","'Fragment' is defined but never used.","'ShareBoardFormComp' is defined but never used.","'FaceBookLoginBtnComp' is defined but never used.","'KakaoLoginBtnComp' is defined but never used.","'KakaoLoginBtnComp3' is defined but never used.","'TextField' is defined but never used.","'MakeLoginBtn' is defined but never used.","'FaThemeisle' is defined but never used.","'parentOnLoginHandler' is assigned a value but never used.","'makeStyles' is defined but never used.","'createStyles' is defined but never used.","'provider' is assigned a value but never used.","'jeju1' is defined but never used.","'jeju2' is defined but never used.","'jeju3' is defined but never used.","'udo1' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'FormHelperText' is defined but never used.","'URL' is defined but never used.","'searchDataList' is assigned a value but never used.","'setSearchDataList' is assigned a value but never used.","'Component' is defined but never used.","'useLayoutEffect' is defined but never used.","'NavLink' is defined but never used.","'TourPageComp' is defined but never used.","'Paper' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","'value' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setActionLocationEvent'. Either include it or remove the dependency array.","ArrayExpression",["1010"],"'handleChange' is assigned a value but never used.","'setMainView' is assigned a value but never used.","'ListItemAvatar' is defined but never used.","'Avatar' is defined but never used.","'ImageIcon' is defined but never used.","'WorkIcon' is defined but never used.","'BeachAccessIcon' is defined but never used.","'EventAvailableIcon' is defined but never used.","'FlightLandIcon' is defined but never used.","'Divider' is defined but never used.","Expected '!==' and instead saw '!='.","'BoardSample' is defined but never used.","'classes' is assigned a value but never used.","'shareMyPlan' is assigned a value but never used.","'setShareMyPlan' is assigned a value but never used.","'paginate' is assigned a value but never used.","'LocationOnIcon' is defined but never used.","'addr' is assigned a value but never used.","Assignments to the 'longitude' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'latitude' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'title' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'infowindow' is assigned a value but never used.","'closeOverlay' is defined but never used.","'order' is assigned a value but never used.","'menuEl' is assigned a value but never used.","'listStr' is assigned a value but never used.","no-use-before-define","'itemEl' was used before it was defined.","usedBeforeDefined","no-redeclare","'el' is already defined.","redeclared","'itemStr' is already defined.","'ShareBoardUpdateForm' is defined but never used.","'scrollY' is assigned a value but never used.","'scrollTop' is assigned a value but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.","'IconButton' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'BoardSampleItem' is defined but never used.","React Hook useEffect has a missing dependency: 'getList'. Either include it or remove the dependency array.",["1011"],"'handleExpandClick' is assigned a value but never used.","'alertSetOpen' is assigned a value but never used.","'setAlertSetOpen' is assigned a value but never used.","'isShowing' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-dupe-class-members","Duplicate name 'componentWillUnmount'.","'regroup' is assigned a value but never used.","'BootstrapButton' is assigned a value but never used.","'ColorButton' is assigned a value but never used.","'theme' is assigned a value but never used.","'styled' is defined but never used.","'getSuggestedQuery' is defined but never used.","'reactDOM' is defined but never used.","'refreshTokenSetup' is defined but never used.","'userData' is assigned a value but never used.","'hp' is assigned a value but never used.","'responseGoogle' is assigned a value but never used.","'Kakao' is assigned a value but never used.","'history' is assigned a value but never used.","'store' is defined but never used.","'moment' is defined but never used.","'clist' is assigned a value but never used.","'Header' is defined but never used.","'TiTimes' is defined but never used.","no-new-wrappers","Do not use String as a constructor.","NewExpression","noConstructor","'betweenDay' is assigned a value but never used.","'content' is assigned a value but never used.","'Modal' is defined but never used.","'Backdrop' is defined but never used.","'Fade' is defined but never used.","'aroundId' is assigned a value but never used.","'category' is assigned a value but never used.","'row' is assigned a value but never used.","'key' is assigned a value but never used.","'FcCollaboration' is defined but never used.","'url' is assigned a value but never used.","'memId' is assigned a value but never used.","'title' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1012","fix":"1013"},{"desc":"1014","fix":"1015"},"Update the dependencies array to be: [scrollYVal, setActionLocationEvent]",{"range":"1016","text":"1017"},"Update the dependencies array to be: [getList, idx]",{"range":"1018","text":"1019"},[3531,3543],"[scrollYVal, setActionLocationEvent]",[2397,2402],"[getList, idx]"]