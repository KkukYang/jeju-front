[{"/Users/yang-mac/jeju-front-react/finalproject/src/index.js":"1","/Users/yang-mac/jeju-front-react/finalproject/src/reportWebVitals.js":"2","/Users/yang-mac/jeju-front-react/finalproject/src/App.js":"3","/Users/yang-mac/jeju-front-react/finalproject/src/component/footer/FooterComp.js":"4","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/MainComp.js":"5","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/HeaderComp.js":"6","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/reservation/ReservationPageComp.js":"7","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/MainPageComp.js":"8","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/notice/NoticePageComp.js":"9","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/admin/MemberListPageComp.js":"10","/Users/yang-mac/jeju-front-react/finalproject/src/redux/store.js":"11","/Users/yang-mac/jeju-front-react/finalproject/src/redux/config.js":"12","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/TourPageComp.js":"13","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/MypagePageComp.js":"14","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/ShareBoardPageComp.js":"15","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/LoginPageComp.js":"16","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/SearchComp.js":"17","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/admin/RowItem.js":"18","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/ShareBoardMiniComp.js":"19","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/NoticeMiniComp.js":"20","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/GoogleLoginBtnComp.js":"21","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/GoogleLogoutBtnComp.js":"22","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/refreshToken.js":"23","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/Menu.js":"24","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/index.js":"25","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Notice.js":"26","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/ShareBoard.js":"27","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Reservation.js":"28","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Tour.js":"29","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/MyPage.js":"30","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Login.js":"31","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Home.js":"32","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Admin.js":"33","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Join.js":"34","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/ShareBoardFormComp.js":"35","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/join/SignupPageComp.js":"36","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/ShareBoardRowItem.js":"37","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/ItemComp.js":"38","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/PageComp.js":"39","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/DetailTourComp.js":"40","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/TourList.js":"41","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/MemberUpdateFormComp.js":"42","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/HotPlaceComp.js":"43","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/DetailReviewComp.js":"44","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/MapComp.js":"45","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/ReviewListComp.js":"46","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/ReviewItemComp.js":"47","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/EtcBoardComp.js":"48","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/MainPhotoComp.js":"49","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/MyPlanComp.js":"50","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/Tourintro.js":"51","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/ShareBoardUpdateForm.js":"52","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/theme.js":"53","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/WaveBorder.js":"54","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/NaverLoginBtnComp.js":"55","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/notice/BoardItem.js":"56","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/FaceBookLoginBtnComp.js":"57","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/Modal.js":"58","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/ShareReview.js":"59","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/ReviewItem.js":"60","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/BoardSample.js":"61","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/MySchedule.js":"62","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/Calendar.js":"63","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/DayItem.js":"64","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/AroundModal.js":"65","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/UseModal.js":"66","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/Header.js":"67","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/notice/BoardForm.js":"68","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/notice/NoticeContent.js":"69","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/AroundModalDetail.js":"70","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/SearchResultComp.js":"71","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/join/SubmitBtn.js":"72","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/join/SubmitBtn2.js":"73","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/MyReview.js":"74","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/MyWishlist.js":"75","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/ReviewList.js":"76"},{"size":517,"mtime":1611711108926,"results":"77","hashOfConfig":"78"},{"size":362,"mtime":1607874095804,"results":"79","hashOfConfig":"78"},{"size":6489,"mtime":1611736872048,"results":"80","hashOfConfig":"78"},{"size":1354,"mtime":1611641105003,"results":"81","hashOfConfig":"78"},{"size":3840,"mtime":1611291054008,"results":"82","hashOfConfig":"78"},{"size":755,"mtime":1611290228785,"results":"83","hashOfConfig":"78"},{"size":441,"mtime":1610602808575,"results":"84","hashOfConfig":"78"},{"size":2352,"mtime":1611728393830,"results":"85","hashOfConfig":"78"},{"size":3003,"mtime":1611732105611,"results":"86","hashOfConfig":"78"},{"size":2472,"mtime":1611271006445,"results":"87","hashOfConfig":"78"},{"size":4558,"mtime":1611735405353,"results":"88","hashOfConfig":"78"},{"size":1223,"mtime":1611736704066,"results":"89","hashOfConfig":"78"},{"size":5599,"mtime":1611726059212,"results":"90","hashOfConfig":"78"},{"size":4197,"mtime":1611736670139,"results":"91","hashOfConfig":"78"},{"size":3141,"mtime":1611646846466,"results":"92","hashOfConfig":"78"},{"size":3947,"mtime":1611736670137,"results":"93","hashOfConfig":"78"},{"size":4668,"mtime":1611735313297,"results":"94","hashOfConfig":"78"},{"size":546,"mtime":1611271006446,"results":"95","hashOfConfig":"78"},{"size":1581,"mtime":1611040052971,"results":"96","hashOfConfig":"78"},{"size":1566,"mtime":1611039128022,"results":"97","hashOfConfig":"78"},{"size":2521,"mtime":1611736670137,"results":"98","hashOfConfig":"78"},{"size":740,"mtime":1610931080015,"results":"99","hashOfConfig":"78"},{"size":696,"mtime":1610931080016,"results":"100","hashOfConfig":"78"},{"size":8299,"mtime":1611732415039,"results":"101","hashOfConfig":"78"},{"size":606,"mtime":1611190029673,"results":"102","hashOfConfig":"78"},{"size":280,"mtime":1610931073538,"results":"103","hashOfConfig":"78"},{"size":298,"mtime":1610931073539,"results":"104","hashOfConfig":"78"},{"size":305,"mtime":1610931073538,"results":"105","hashOfConfig":"78"},{"size":238,"mtime":1611420308453,"results":"106","hashOfConfig":"78"},{"size":274,"mtime":1610931073538,"results":"107","hashOfConfig":"78"},{"size":271,"mtime":1610931073538,"results":"108","hashOfConfig":"78"},{"size":1447,"mtime":1610931073537,"results":"109","hashOfConfig":"78"},{"size":271,"mtime":1610931073537,"results":"110","hashOfConfig":"78"},{"size":308,"mtime":1610932165874,"results":"111","hashOfConfig":"78"},{"size":4690,"mtime":1611641205026,"results":"112","hashOfConfig":"78"},{"size":16657,"mtime":1611736670138,"results":"113","hashOfConfig":"78"},{"size":8908,"mtime":1611726059208,"results":"114","hashOfConfig":"78"},{"size":2197,"mtime":1611532355379,"results":"115","hashOfConfig":"78"},{"size":2829,"mtime":1611726059211,"results":"116","hashOfConfig":"78"},{"size":10070,"mtime":1611726059209,"results":"117","hashOfConfig":"78"},{"size":246,"mtime":1611420308453,"results":"118","hashOfConfig":"78"},{"size":7000,"mtime":1611314663142,"results":"119","hashOfConfig":"78"},{"size":8870,"mtime":1611720084692,"results":"120","hashOfConfig":"78"},{"size":6976,"mtime":1611676544120,"results":"121","hashOfConfig":"78"},{"size":18511,"mtime":1611726059210,"results":"122","hashOfConfig":"78"},{"size":3932,"mtime":1611642315559,"results":"123","hashOfConfig":"78"},{"size":2084,"mtime":1611732105611,"results":"124","hashOfConfig":"78"},{"size":2085,"mtime":1611541151579,"results":"125","hashOfConfig":"78"},{"size":2783,"mtime":1611711108924,"results":"126","hashOfConfig":"78"},{"size":7094,"mtime":1611496053986,"results":"127","hashOfConfig":"78"},{"size":2094,"mtime":1611420308459,"results":"128","hashOfConfig":"78"},{"size":5326,"mtime":1611641205029,"results":"129","hashOfConfig":"78"},{"size":574,"mtime":1611641105006,"results":"130","hashOfConfig":"78"},{"size":3166,"mtime":1611672372173,"results":"131","hashOfConfig":"78"},{"size":7322,"mtime":1611420308454,"results":"132","hashOfConfig":"78"},{"size":718,"mtime":1611732105610,"results":"133","hashOfConfig":"78"},{"size":1555,"mtime":1611420308453,"results":"134","hashOfConfig":"78"},{"size":989,"mtime":1611446566311,"results":"135","hashOfConfig":"78"},{"size":1435,"mtime":1611641205030,"results":"136","hashOfConfig":"78"},{"size":5941,"mtime":1611678230221,"results":"137","hashOfConfig":"78"},{"size":3914,"mtime":1611720084701,"results":"138","hashOfConfig":"78"},{"size":1905,"mtime":1611711108926,"results":"139","hashOfConfig":"78"},{"size":5632,"mtime":1611711108925,"results":"140","hashOfConfig":"78"},{"size":1923,"mtime":1611726059206,"results":"141","hashOfConfig":"78"},{"size":959,"mtime":1611726059208,"results":"142","hashOfConfig":"78"},{"size":266,"mtime":1611676544124,"results":"143","hashOfConfig":"78"},{"size":1392,"mtime":1611711108925,"results":"144","hashOfConfig":"78"},{"size":2612,"mtime":1611716113845,"results":"145","hashOfConfig":"78"},{"size":2067,"mtime":1611732105610,"results":"146","hashOfConfig":"78"},{"size":3944,"mtime":1611726059209,"results":"147","hashOfConfig":"78"},{"size":873,"mtime":1611735313290,"results":"148","hashOfConfig":"78"},{"size":379,"mtime":1611732105608,"results":"149","hashOfConfig":"78"},{"size":599,"mtime":1611736670138,"results":"150","hashOfConfig":"78"},{"size":2295,"mtime":1611736670138,"results":"151","hashOfConfig":"78"},{"size":459,"mtime":1611736670139,"results":"152","hashOfConfig":"78"},{"size":1444,"mtime":1611736670140,"results":"153","hashOfConfig":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},"9tj91f",{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"156"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"167"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"156"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"156"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"156"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"156"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"156"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"156"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"156"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"156"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"156"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"156"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"156"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"156"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"156"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"156"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"156"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"156"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"156"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"156"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"156"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"156"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"156"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"156"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"156"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"156"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"156"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"156"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"156"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"156"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"156"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"156"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"156"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"156"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"156"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"156"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"156"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"156"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"156"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"156"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"156"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"156"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"156"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"156"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"156"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"156"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"156"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"156"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"357","messages":"358","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/yang-mac/jeju-front-react/finalproject/src/index.js",[],["359","360"],"/Users/yang-mac/jeju-front-react/finalproject/src/reportWebVitals.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/App.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/footer/FooterComp.js",["361"],"import React, {Component} from \"react\";\nimport Logo2 from \"../../image/logo2.png\";\n\nclass FooterComp extends Component {\n\n    constructor(props) {\n        super(props);\n        // console.log(\"FooterComp constructor\", props);\n    }\n\n    render() {\n        // console.log(\"FooterComp render()\", this.props);\n        return (\n            <div className=\"footerComp\">\n                <hr/>\n                <img src={Logo2}\n                     style={{width: \"150px\"}}\n                     alt=\"logo2\"/>\n                <br/>\n                <p>\n                    (주)멘도롱소랑 | 경기도 서초구 강남대로 459 (서초동 1300-34)<br/>\n                    사업자 번호 147-14-12345 | 전화번호:02-123-1234 | 팩스 02-1234-1234 | 이메일 help@naver.com\n                </p>\n            </div>\n        )\n    }\n}\n\nexport default FooterComp;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/MainComp.js",["362","363","364","365","366","367","368","369","370","371","372","373","374","375","376"],"import React, {Component} from \"react\";\nimport MainPageComp from \"./mainpage/MainPageComp\";\nimport ReservationPageComp from \"./reservation/ReservationPageComp\";\nimport NoticePageComp from \"./notice/NoticePageComp\";\nimport ShareBoardPageComp from \"./shareboard/ShareBoardPageComp\";\nimport LoginPageComp from \"./auth/LoginPageComp\";\nimport MemberListPageComp from \"./admin/MemberListPageComp\";\nimport MypagePageComp from \"./mypage/MypagePageComp\";\nimport TourPageComp from \"./tour/TourPageComp\";\nimport SignupPageComp from \"./join/SignupPageComp\";\nimport store from \"../../redux/store\";\nimport {mainViewType} from \"../../redux/config\";\nimport \"./MainComp.css\"\nimport DetailTourComp from \"./tour/DetailTourComp\";\nimport {MyPage, Tour, TourList} from \"../header/menus\";\nimport {Route} from \"react-router-dom\";\n\nclass MainComp extends Component {\n\n    constructor(props) {\n        super(props);\n        console.log(\"MainComp constructor\", props, store.getState().mainView);\n\n        store.subscribe(function () {\n            console.log(\"MainComp subscribe()\", store.getState().mainView);\n            this.setState({\n                mainView: store.getState().mainView,\n            });\n        }.bind(this));\n    }\n\n    setMainView = () => {\n        const _mainView = store.getState().mainView;\n        console.log(\"MainComp setMainView()\", _mainView, mainViewType.MainPage);\n\n        if (_mainView == mainViewType.MainPage) {\n            return (\n                // <MainPageComp/>\n                <Route exact path=\"/\" component={MainPageComp}/>\n            )\n        } else if (_mainView == mainViewType.Reservation) {\n            return (\n                // <ReservationPageComp/>\n                <Route path=\"/Reservation/:name?\" component={ReservationPageComp}/>\n            )\n        } else if (_mainView == mainViewType.Notice) {\n            return (\n                // <NoticePageComp/>\n                <Route path=\"/Notice/:name?\" component={NoticePageComp}/>\n            )\n        } else if (_mainView == mainViewType.Tour) {\n            return (\n                // <DetailTourComp/>\n                <Route path=\"/Tour/:name?\" component={DetailTourComp}/>\n            )\n        } else if (_mainView == mainViewType.TourList) {\n            return (\n                // <TourPageComp/>\n                <Route path=\"/TourList/:name?\" component={TourPageComp}></Route>\n            )\n        } else if (_mainView == mainViewType.ShareBoard) {\n            return (\n                // <ShareBoardPageComp/>\n                <Route path=\"/ShareBoard/:name?\" component={ShareBoardPageComp}/>\n            )\n        } else if (_mainView == mainViewType.MyPage) {\n            return (\n                // <MypagePageComp/>\n                <Route path=\"/MyPage/:name?\" component={MainPageComp}/>\n            )\n        } else if (_mainView == mainViewType.Login) {\n            return (\n                // <LoginPageComp/>\n                <Route path=\"/Login/:name?\" component={LoginPageComp}/>\n            )\n        } else if (_mainView == mainViewType.Admin) {\n            return (\n                // <MemberListPageComp/>\n                <Route path=\"/Admin:name?\" component={MemberListPageComp}/>\n            )\n        } else if (_mainView == mainViewType.JoinForm) {\n            return (\n                // <SignupPageComp/>\n                <Route path=\"/Join:name?\" component={SignupPageComp}/>\n            )\n        } else {\n            return (\n                <p>\n                    Not Found...\n                </p>\n            )\n        }\n\n    }\n\n    render() {\n        console.log(\"MainComp render()\", this.props);\n        var style_hr = {\n            margin: \"0px\"\n        }\n        return (\n            <div className=\"mainComp\">\n                {this.setMainView()}\n            </div>\n        )\n    }\n\n}\n\nexport default MainComp;\n",["377","378"],"/Users/yang-mac/jeju-front-react/finalproject/src/component/header/HeaderComp.js",["379"],"import React, {Component} from \"react\";\nimport {\n    BrowserRouter\n} from \"react-router-dom\";\nimport Menu from \"./Menu\";\n\nclass HeaderComp extends Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(\"HeaderComp constructor\", props);\n    }\n\n    render() {\n        const {logged, onLogout} = this.props;\n\n        // console.log(\"HeaderComp render\", this.props, this.state);\n\n        return (\n            <div className=\"headerComp\">\n                {/*<BrowserRouter>*/}\n                    <Menu logged={logged}\n                          onLogout={onLogout}\n                          type=\"normal\"\n                    />\n                {/*</BrowserRouter>*/}\n            </div>\n        )\n    }\n}\n\nexport default HeaderComp;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/reservation/ReservationPageComp.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/MainPageComp.js",["380","381"],"import React, {Component} from \"react\";\nimport SearchComp from \"./SearchComp\";\nimport HotPlaceComp from \"./HotPlaceComp\";\nimport NoticeMiniComp from \"./NoticeMiniComp\";\nimport ShareBoardMiniComp from \"./ShareBoardMiniComp\";\nimport axios from \"axios\";\nimport {URL} from \"../../../redux/config\";\nimport \"./MainPageComp.css\"\nimport MainPhotoComp from \"./MainPhotoComp\";\nimport MyPlanComp from \"./MyPlanComp\";\nimport EtcBoardComp from \"./EtcBoardComp\";\n\nclass MainPageComp extends Component {\n\n    /**\n     * props\n     * setMainView={this.props.setMainView}\n     */\n    constructor(props) {\n        super(props);\n        // console.log(\"MainPageComp constructor\", props);\n\n        this.state = {\n            shareBoardList: [],\n            noticeList: [],\n        }\n    }\n\n    componentWillMount() {\n        this.getNoticeList.bind(this)();\n        this.getShareBoardList.bind(this)();\n    }\n\n    getNoticeList = () => {\n        // console.log(\"getNoticeList()\");\n        var url = URL + \"/notice/list\";\n\n        axios.get(url\n        ).then((res) => {\n            // console.log(\"getNoticeList success : \", res);\n            this.setState({\n                noticeList: res.data\n            });\n        }).catch((error) => {\n            // console.log(\"getNoticeList error\", error);\n        });\n    }\n\n    getShareBoardList = () => {\n        // console.log(\"getShareBoardList()\");\n        var url = URL + \"/share/list?start=0&perPage=5\";\n\n        axios.get(url\n        ).then((res) => {\n            // console.log(\"getShareBoardList success : \", res);\n            this.setState({\n                shareBoardList: res.data\n            });\n        }).catch((error) => {\n            // console.log(\"getShareBoardList error\", error);\n        });\n    }\n\n\n    /**\n     * MainPhotoComp\n     * SearchComp | MyPlanComp\n     * HotPlaceComp\n     * EtcBoardComp\n     */\n    render() {\n        // console.log(\"MainPageComp render()\", this.props);\n        return (\n            <div className=\"mainPageComp\">\n                <MainPhotoComp/>\n                <div className=\"search-myplan\">\n                    <SearchComp history={this.props.history}/>\n                    <MyPlanComp/>\n                </div>\n                <HotPlaceComp history={this.props.history}/>\n                <EtcBoardComp/>\n            </div>\n        )\n    }\n\n}\n\nexport default MainPageComp;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/notice/NoticePageComp.js",["382","383"],"import React, {Component} from \"react\";\nimport PlusImg from \"../../../image/plus.png\";\nimport BoardItem from \"./BoardItem\";\nimport axios from 'axios';\nimport './NoticeCss.css';\nimport {URL} from '../../../redux/config';\nimport BoardForm from './BoardForm';\nimport NoticeContent from './NoticeContent';\n\nclass NoticePageComp extends Component {\n    state={\n        maxNo:7,\n        listData:[]\n        \n    }\n\n    list=()=>{\n        let url= URL + \"/notice/list\";\n        console.log(url);\n\n        axios.get(url)\n        .then(res=>{\n            this.setState({\n                listData:res.data\n            })\n        })\n    }\n\n    componentWillMount()\n    {\n        this.list();\n    }\n    render() {\n        const {boards}=this.state;\n\n        return (\n            <div>\n                {/*<a href=\"#NoticeMiniComp\">{this.props.name}</a>*/}\n                <BoardForm list={this.list.bind(this)}/>\n                <br/>\n                {this.props.name}<br/>\n                <button>\n                    <img src={PlusImg}\n                         style={{width: \"50px\"}}\n                    />\n                </button>\n                <table style={{width:'400px'}} id=\"noticeTable\">\n                    <caption><b>공지사항</b></caption>\n                    <thead>\n                    <tr style={{backgroundColor:'orange'}}>\n                        <th style={{width:'60px'}}>#</th>\n                        <th style={{width:'200px'}}>제목</th>\n                        <th style={{width:'50px'}}>작성일</th>\n                        <th style={{width:'50px'}}>⭐</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                      this.state.listData.map((row,idx)=>(\n                        <BoardItem row={row} key={idx} idx={idx}\n                        history={this.props.history}/>\n                        ))\n                    }\n                    {/* <tr>\n                        <td>\n                            <a href=\"#\">\n                                <span>1제목 입니다.</span>\n                            </a>\n                        </td>\n                        <td>1작성일 입니다.</td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <a href=\"#\">\n                                <span>2제목 입니다.</span>\n                            </a>\n                        </td>\n                        <td>2작성일 입니다.</td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <a href=\"#\">\n                                <span>3제목 입니다.</span>\n                            </a>\n                        </td>\n                        <td>3작성일 입니다.</td>\n                    </tr> */}\n                    </tbody>\n                </table>\n\n                    {/* <NoticeContent/> */}\n            </div>\n        )\n    }\n\n}\n\nexport default NoticePageComp;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/admin/MemberListPageComp.js",["384","385"],"import React, {Component} from \"react\";\nimport axios from 'axios';\nimport RowItem from \"./RowItem\";\nimport store from \"../../../redux/store\";\nimport { URL, actionType, mainViewType } from \"../../../redux/config\";\n\nclass MemberListPageComp extends Component {\n    constructor(props) {\n        super(props);\n        console.log(\"LoginPageComp constructor\", props);\n        \n        // this.state={\n        //     // id:'',  //아이디를 저장하고 있을 state\n        //     // password:'',\n        //     // pwCheck: \"\",//비밀번호 두개가 일치하는가\n        //     // name : \"\",\n        //     // birth_date: \"\",\n        //     // phone : \"\",\n        //     // email : \"\",\n        //     // address : \"\",\n        //     // idcanUse: false,//중복된 아이디찾기 true여야 로그인가능\n\n        //     memberData: []\n        // }\n    }\n\n    // 스프링에서 목록 가져오기\n    list = () => {\n        let url = URL + \"/member/list\";\n        axios.get(url)\n        .then(response=>{\n            this.setState({\n                memberData:response.data\n            })\n        }).catch(err=>{\n            console.log(\"목록 오류:\"+err);\n        })\n    }\n    \n    MEMBERLIST = () => {\n        console.log(\"회원목록 보기 dispatch\");\n        let url = URL + \"/member/list\";\n        axios.get(url)\n        .then(response=>{\n            this.setState({\n                memberData:response.data\n            })\n        }).catch(err=>{\n            console.log(\"목록 오류:\"+err);\n        })\n    }\n\n    componentDidMount() {\n        // this.list(); //처음 시작시 백엔드로부터 데이타 가졍괴\n        \n        store.dispatch({ type: actionType.MEMBER_LIST });\n        store.subscribe(this.MEMBERLIST);\n    }\n\n    \n\n    render() {\n        console.log(\"MemberListPageComp render()\", this.props);\n        return (\n            <div>\n                <div>\n                    <b>회원 목록</b>\n                    <div>\n                        번호&nbsp;아이디&nbsp;이메일&nbsp;이름&nbsp;이미지&nbsp;휴대폰\n                    </div>\n                    {/* <div>\n                        {\n                            this.props.store.memberData.map((row, idx) => (\n                                <RowItem row={row} key={idx} />\n                            ))\n                        }\n                    </div> */}\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default MemberListPageComp;\n","/Users/yang-mac/jeju-front-react/finalproject/src/redux/store.js",["386","387","388"],"import {applyMiddleware, compose, createStore} from \"redux\";\nimport {actionType, mainViewType} from \"./config\";\n\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst footerStyle = {\n    sizeIn: {\n        position: \"absolute\",\n        width: \"100%\",\n        bottom: \"2.5%\",\n    },\n    sizeOver: {\n        width: \"100%\",\n    }\n}\n\nconst setPositionFooter = () => {\n    let menuElement = document.querySelector(\".menu\");\n    let mainFrameElement = document.querySelector(\".mainFrame\");\n\n    let menuHeight = (menuElement) ? menuElement.offsetHeight : 0;\n    let mainFrameHeight = (mainFrameElement) ? mainFrameElement.offsetHeight : 0;\n    let footerComp = document.querySelector(\".footerComp\");\n    let topContentHeight = menuHeight + mainFrameHeight;\n    console.log(mainFrameHeight, menuHeight, topContentHeight, window.visualViewport.height);\n\n    if (footerComp) {\n        if (window.visualViewport.height > topContentHeight) {\n            footerComp.style.width = footerStyle.sizeIn.width;\n            footerComp.style.position = footerStyle.sizeIn.position;\n            footerComp.style.bottom = footerStyle.sizeIn.bottom;\n        } else {\n            footerComp.style.width = footerStyle.sizeOver.width;\n            footerComp.style.position = \"\";\n            footerComp.style.bottom = \"\";\n        }\n    } else{\n        window.setTimeout(setPositionFooter, 100);\n    }\n}\n\n\nexport default createStore(\n    function (state, action) {\n\n        //state 초기화.\n        if (state === undefined) {\n            return {\n                mainView: mainViewType.MainPage,\n                logged: false,\n                memberData: [], // 회원목록\n                pageNum: '1',\n                id: '',\n                loginId: '',\n                googleOn: false,\n                mainSearch: {\n                    category: \"all\",\n                    searchVal: \"\",\n                    searchResultDataList: [],\n                },\n\n            }\n        }\n\n        // state 불변성 유지해야함. immutability\n        // newState 새로 파서 기존꺼 + 변경할거 넣은다음 redux의 state 바꿔치기.\n        let newState = {};\n\n        //action.type 별로 로직처리 다르게 하기.\n        if (action.type === actionType.setMainView) {\n            window.setTimeout(setPositionFooter, 100);\n            newState = Object.assign({}, state, {\n                mainView: action.mainView,\n            });\n        } else if (action.type === actionType.SIGN_UP) {\n\n            newState = Object.assign({}, state, {\n                mainView: action.mainView,\n            });\n        } else if (action.type === actionType.LOG_IN) {\n            newState = Object.assign({}, state, {\n                loginId: action.loginId\n            });\n        } else if (action.type === actionType.LOGIN_REQUEST) {\n            newState = Object.assign({}, state, {});\n        } else if (action.type === actionType.LOGIN_SUCCESS) {\n            newState = Object.assign({}, state, {\n                logged: true,\n                id: action.type.id,\n            });\n        } else if (action.type === actionType.LOGIN_FAILURE) {\n            newState = Object.assign({}, state, {\n                logged: false,\n                id: \"\",\n            });\n        } else if (action.type === actionType.MEMBER_LIST) {\n            newState = Object.assign({}, state, {\n                memberData: action.payload\n            });\n        } else if (action.type === actionType.shareBoardUpdate) {\n            newState = Object.assign({}, state);\n        } else if (action.type === actionType.tourPage) {\n            newState = Object.assign({}, state, {\n                pageNum: action.pageNum\n            });\n        } else if (action.type === actionType.googleLogin) {\n            newState = Object.assign({}, state, {\n                googleOn: action.googleOn\n            })\n        } else if (action.type === actionType.setSearchResultDataList) {\n            newState = Object.assign({}, state, {\n                mainSearch: {\n                    category: action.category,\n                    searchVal: action.searchVal,\n                    searchResultDataList: action.searchResultDataList,\n                },\n            });\n        }\n\n        console.log(\"reducer()\", state, action, newState);\n        return newState;\n    }\n    // , composeEnhancers(applyMiddleware(thunk))\n    , window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\n","/Users/yang-mac/jeju-front-react/finalproject/src/redux/config.js",["389","390","391","392","393"],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/TourPageComp.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/MypagePageComp.js",["394"],"import React, {Component} from \"react\";\nimport MemberUpdateFormComp from \"./MemberUpdateFormComp\";\nimport axios from 'axios';\nimport {Route, Link} from \"react-router-dom\";\nimport {URL} from \"../../../redux/config\";\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport MySchedule from './MySchedule';\n\nclass MypagePageComp extends Component {\n    \n    constructor(props) {\n        super(props);\n        console.log(\"MypagePageComp constructor\", props);\n\n        this.state = {\n            memberData: [],\n            reviewList: [],\n            pageNum: '0',\n            value: 0\n        }\n    }\n    tabProps = (index) => {\n        return {\n          id: `simple-tab-${index}`,\n          'aria-controls': `simple-tabpanel-${index}`,\n        };\n      }\n      handleChange = (event, newValue) => {\n        this.setState({ value: newValue });\n      }\n    // 스프링에서 목록 가져오기\n    // member\n    getMyData = () => {\n        let url = URL + '/member/getdata?id=sanghee';\n        axios.get(url)\n            .then(response => {\n                this.setState({\n                    memberData: response.data\n                })\n            }).catch(err => {\n            console.log(\"목록 오류:\" + err);\n        })\n    }\n    getMyReview = () => {\n        let url = URL + '/reivew/getdata?id=sanghee';\n        axios.get(url)\n            .then(response => {\n                this.setState({\n                    reviewList: response.data\n                })\n            }).catch(err => {\n            console.log(\"목록 오류:\" + err);\n        })\n    }\n\n    // getWishlist = () => {\n    //     let url = URL + '/reivew/getdata?id=sanghee';\n    //     axios.get(url)\n    //     .then(response=>{\n    //         this.setState({\n    //             reviewList:response.data\n    //         })\n    //     }).catch(err=>{\n    //         console.log(\"목록 오류:\"+err);\n    //     })\n    // }\n\n    componentDidMount() {\n        this.getMyData(); //처음 시작시 백엔드로부터 데이타 가져오기\n        this.getMyReview();\n        //this.getWishlist();\n    }\n\n    render() {\n        console.log(\"MypagePageComp render()\", this.props);\n\n        return (\n            <div>\n                <h1><b>내 정보 관리</b></h1>\n                <table>\n                    <tr>\n                        <div>\n                            <Link to=\"./mypage/MemberUpdateFormComp\">\n                                <button type=\"button\">정보수정</button>\n                            </Link>\n                            <Route exact path=\"/mypage/MemberUpdateFormComp\" component={MemberUpdateFormComp}/>\n                        </div>\n                        <span class=\"glyphicon glyphicon-leaf\"></span>&nbsp;&nbsp;<b>I D &nbsp;:&nbsp;&nbsp; </b>\n                        {this.state.memberData.id}<br/>\n                        <span class=\"glyphicon glyphicon-user\"></span>&nbsp;&nbsp;<b>이름 &nbsp;:&nbsp;&nbsp; </b>\n                        {this.state.memberData.name}<br/>\n                        <span class=\"glyphicon glyphicon-phone\"></span>&nbsp;&nbsp;<b>H P &nbsp;:&nbsp;&nbsp; </b>\n                        {this.state.memberData.hp}<br/>\n                        <span class=\"glyphicon glyphicon-envelope\"></span>&nbsp;&nbsp;<b>Email &nbsp;:&nbsp;&nbsp; </b>\n                        {this.state.memberData.email}@{this.state.memberData.email2}<br/>\n                        <span class=\"glyphicon glyphicon-home\"></span>&nbsp;&nbsp;<b>주소 &nbsp;:&nbsp;&nbsp; </b>\n                        {this.state.memberData.address},&nbsp;{this.state.memberData.addrdetail}<br/>\n                    </tr>\n                </table>\n                {/* <MySchedule/> */}\n                <AppBar position=\"static\">\n                    <Tabs value={this.state.value} onChange={this.handleChange} aria-label=\"simple tabs example\">\n                        <Tab label=\"나의 일정\" {...this.tabProps(0)} />\n                        <Tab label=\"나의 후기\" {...this.tabProps(1)} />\n                        <Tab label=\"나의 예약\" {...this.tabProps(2)} />\n                    </Tabs>\n                </AppBar>\n                <TabPanel value={this.state.value} index={0}>\n                    <MySchedule/>\n                </TabPanel>\n                    <TabPanel value={this.state.value} index={1}>\n                    Item Two\n                </TabPanel>\n                    <TabPanel value={this.state.value} index={2}>\n                    나의 예약\n                </TabPanel>\n            </div>\n            \n        )\n        \n        \n    }\n}\nclass TabPanel extends Component {\n    render() {\n      return (\n        <Typography component=\"div\" hidden={this.props.value !== this.props.index}>\n          <Box p={3}>{this.props.children}</Box>\n        </Typography>\n      );\n    }\n  }\nexport default MypagePageComp;\n\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/ShareBoardPageComp.js",["395","396"],"import React, {Component} from \"react\";\nimport {Route, Link} from \"react-router-dom\";\nimport ShareBoardFormComp from \"./ShareBoardFormComp\";\nimport ShareBoardRowItem from \"./ShareBoardRowItem\";\nimport {URL, actionType} from '../../../redux/config';\nimport axios from \"axios\";\nimport store from \"../../../redux/store\";\n\n\nclass ShareBoardPageComp extends Component {\n\n    state = {\n        listData: []\n    }\n\n    constructor(props) {\n        super(props);\n        console.log(\"ShareBoardPageComp constructor\", this.props);\n\n        store.subscribe(this.getShareListByPaging.bind(this));\n        store.dispatch({\n            type: actionType.shareBoardUpdate,\n        });\n    }\n\n    getShareListByPaging = () => {\n        let url = URL + \"/share/list?start=0&perPage=3\";\n\n        console.log(url);\n        axios.get(url\n        ).then(res => {\n            console.log(\"getShareListByPaging() res\", res);\n            this.setState({\n                listData: res.data\n            })\n        }).catch(err => {\n            console.log(\"getShareListByPaging() err\", err);\n        });\n    }\n\n    searchShareList = () => {\n        let url = URL + \"/share/search\" +\n            \"?start=0\" +\n            \"&perPage=3\" +\n            \"&search=\" + this.refs.search.value;\n\n        console.log(url);\n\n        axios.get(url\n        ).then(res => {\n            console.log(\"searchShareList() res\", res);\n            this.setState({\n                listData: res.data\n            });\n        }).catch(err => {\n            console.log(\"searchShareList() err\", err);\n        });\n    }\n\n    componentWillMount() {\n        this.getShareListByPaging();\n    }\n\n    render() {\n        return (\n            <div>\n                {/* 제목 */}\n                <div>\n                    <b>맛집 공유게시판</b>\n                </div>\n\n                {/*/!* 공유버튼 *!/*/}\n                <div>\n                    <Link to=\"/share/insert\">\n                        <button type=\"button\">맛집공유</button>\n                    </Link>\n                    &nbsp;\n                    <button type=\"button\"\n                            onClick={this.getShareListByPaging.bind(this)}\n                    >전 체 글\n                    </button>\n                    &nbsp;\n                    <input type=\"text\" placeholder=\"검색할 단어를 입력하세요.\" ref=\"search\"/>\n                    &nbsp;\n                    <button type=\"button\"\n                            onClick={this.searchShareList.bind(this)}\n                    >검 색\n                    </button>\n                </div>\n\n                {/* 게시판 폼 */}\n                <div>\n                    {\n                        this.state.listData.map((row, idx) => (\n                            <ShareBoardRowItem row={row} key={idx}\n                                               list={this.getShareListByPaging.bind(this)}\n                                               history={this.props.history}\n                            />\n                        ))\n                    }\n                </div>\n\n\n            </div>\n        )\n    }\n\n}\n\nexport default ShareBoardPageComp;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/LoginPageComp.js",["397","398","399","400","401","402","403"],"import React, {Component} from \"react\";\nimport axios from 'axios';\nimport GoogleLoginBtnComp from \"./GoogleLoginBtnComp\";\nimport GoogleLogoutBtnComp from \"./GoogleLogoutBtnComp\";\nimport store from \"../../../redux/store\";\nimport { URL, actionType, mainViewType } from \"../../../redux/config\";\nimport NaverLoginBtnComp from \"./NaverLoginBtnComp\";\nimport FaceBookLoginBtnComp from \"./FaceBookLoginBtnComp\";\n\nclass LoginPageComp extends Component {\n\n    constructor(props) {\n        super(props);\n        console.log(\"LoginPageComp constructor\", props);\n        \n        this.state={\n            id:'',  //아이디를 저장하고 있을 state\n            pass:'',\n            pwCheck: \"\",//비밀번호 두개가 일치하는가\n            name : \"\",\n            birth_date: \"\",\n            phone : \"\",\n            email : \"\",\n            address : \"\",\n            idcanUse: false,//중복된 아이디찾기 true여야 로그인가능\n        }\n\n        //함수 선언\n        this.onIdChk=this.onIdChk.bind(this);\n    }\n\n\n\n    // 변수 선언시 state 영역에 추가했을 경우에만 나중에 값변경이 가능하다\n    // 값 변경시에는 setState 를 이용해야만 한다\n    // 이벤트\n    changeEvent=(e)=>{\n        \n        console.log(e.target.id+\":\"+e.target.value);\n        // 만약 엔터 누를때만 변경되도록 하고 싶으면\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    }\n\n    //방법2\n    onIdChk=(e)=>{\n        e.preventDefault();\n        console.log(this.state.id);\n        const data = {\n            id: this.state.id//현재 id state 값을 data.id에 넣는다\n        }\n        // ↓은 백엔드로 fetch해서 입력된 값을 POST\n        fetch( URL + \"/member/checkid\", \n                {//localhost 9002번 포트 checkid라우터를 찾는다\n                    method: \"POST\",\n                    headers: {\n                    \"Content-Type\" : \"application/json\"\n                    },\n                body: JSON.stringify(data),//json화 해버리기\n                })\n            .then(response => response.json())\n            .then(json=> {\n                console.log(\"확인입니다\");\n                if(json.idcanUse == true){  //uson을받아왔는데idcanUse값이true면사용가능\n                    alert(\"사용가능한 ID입니다\");\n                    this.setState({\n                        idcanUse: true\n                    })\n                }\n                else{\n                    alert(\"다른 ID를 입력해주세요\");\n                }\n            });\n    }\n\n    onLogin=()=>{\n        console.log(\"로그인할 아이디는 \" + this.state.id + \"비밀번호는 \" + this.state.pass);\n        const data = {\n            id: this.state.id,\n            pass: this.state.pass\n        }\n        let url = URL;\n\n    }\n\n    render() {\n        console.log(\"LoginPageComp render()\", this.props);\n        return (\n            <div>\n                <h4>로그인</h4>\n                <div>\n                    {this.state.id}\n                    <h4 className=\"showIdResult\">{this.state.showIdResult}</h4>\n                </div>\n                <br />\n                아이디 :\n                <input type=\"text\" name=\"id\"\n                onChange={this.changeEvent.bind(this)}\n                value={this.state.id}\n                />\n                <br />\n                비밀번호 : \n                <input type=\"password\" name=\"pass\"\n                onChange={this.changeEvent.bind(this)}\n                value={this.state.pass}\n                />\n                <br />\n                <button type=\"button\"\n                onClick={this.onLogin.bind(this)}>\n                    Sign in\n                </button>\n                <h5>\n                    내 아이디는 {this.state.id} 입니다\n                    내 비밀번호는 {this.state.pass} 입니다\n                </h5>\n                <GoogleLoginBtnComp />\n                <GoogleLogoutBtnComp />\n                <br />\n                <br />\n                <NaverLoginBtnComp />\n                <br />\n                <FaceBookLoginBtnComp />\n            </div>\n        )\n    }\n\n}\n\nexport default LoginPageComp;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/SearchComp.js",["404","405"],"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {actionType, URL} from \"../../../redux/config\";\nimport axios from \"axios\";\nimport store from \"../../../redux/store\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        // margin: theme.spacing(1),\n        // minWidth: 120,\n        width: \"150px\",\n        // height:\"40px\"\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    root: {\n        '& > *': {\n            // margin: theme.spacing(1),\n            width: '300px',\n        },\n    },\n}));\n\n\nexport default function SearchComp(props) {\n\n    const classes = useStyles();\n    const [category, setCategory] = React.useState(\"all\");\n    const [searchVal, setSearchVal] = React.useState(\"\");\n    const [searchDataList, setSearchDataList] = React.useState(null);\n    // console.log(\"SearchComp props\", props);\n\n    const setCategoryHandler = (e) => {\n        // console.log(e.target.value);\n        setCategory(e.target.value);\n    };\n\n    const setSearchValHandler = (e) => {\n        // console.log(e.target.value);\n        setSearchVal(e.target.value);\n\n    }\n\n    //input 내용에 따라 버튼 색깔 변화\n    const updateButtonType = () => {\n        const searchButton = document.querySelector(\".searchButton\");\n\n        if (searchButton == null) {   //초반에 null일경우 스킵.\n            return;\n        }\n\n        if (searchVal == \"\") {\n            searchButton.classList.remove(\"MuiButton-containedPrimary\");\n        } else {\n            if (!searchButton.classList.contains(\"MuiButton-containedPrimary\")) {\n                searchButton.classList.add(\"MuiButton-containedPrimary\");\n            }\n        }\n    }\n\n    const doSearchHandler = () => {\n        console.log(category, searchVal);\n\n        //search action.\n        let url = URL + \"/spot/searchlist\" +\n            \"?start=0\" +\n            \"&perPage=3\" +\n            \"&category=\" + category +\n            \"&search=\" + searchVal;\n\n        console.log(url);\n\n        axios.get(url\n        ).then(res => {\n            console.log(\"doSearchHandler() res:\", res.data, searchDataList);\n            setSearchDataList(res.data);\n\n            //dispatch\n            store.dispatch({\n                type: actionType.setSearchResultDataList,\n                category: category,\n                searchVal: searchVal,\n                searchResultDataList: res.data,\n            });\n\n            ///search/:category?/:keyword?\n            props.history.push(`/search/${category}/${searchVal}`);\n        }).catch(err => {\n            console.log(\"doSearchHandler() err:\", err);\n        });\n    }\n\n    return (\n        <div className=\"searchComp\" style={{height: \"500px\", padding: \"20px\"}}>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-outlined-label\">Category</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    value={category}\n                    onChange={setCategoryHandler}\n                    label=\"Category\"\n                >\n                    <MenuItem value=\"all\">\n                        <em>All</em>\n                    </MenuItem>\n                    <MenuItem value=\"area\">Area</MenuItem>\n                    <MenuItem value=\"spot\">Spot</MenuItem>\n                    <MenuItem value=\"tag\">Tag</MenuItem>\n                </Select>\n            </FormControl>\n            <br/><br/>\n            <TextField id=\"outlined-basic\" label=\"Input For Search.\" variant=\"outlined\"\n                       autoComplete=\"off\" className={classes.root}\n                       value={searchVal}\n                       onChange={setSearchValHandler}\n            />\n            <br/><br/>\n            <Button variant=\"contained\" color=\"primary\" className=\"searchButton\"\n                    onClick={doSearchHandler}\n            > Search </Button>\n            {updateButtonType()}\n        </div>\n\n    )\n\n}\n\n//활성화\n//<button class=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary\" tabindex=\"0\" type=\"button\">\n// <span class=\"MuiButton-label\">Search</span>\n// <span class=\"MuiTouchRipple-root\"></span>\n// </button>\n\n\n\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/admin/RowItem.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/ShareBoardMiniComp.js",["406","407","408","409","410"],"import React, {Component} from \"react\";\nimport PlusImg from \"../../../image/plus.png\";\n\nclass ShareBoardMiniComp extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return (\n            <div>\n                {/*<a href=\"#ShareBoardMiniComp\">{this.props.name}</a>*/}\n                <br/>\n                {this.props.name}<br/>\n                <h5>공유게시판</h5>\n                <button>\n                    <img src={PlusImg}\n                         style={{width: \"50px\"}}\n                    />\n                </button>\n                <table>\n                    <thead>\n                    <tr>\n                        <th>제목</th>\n                        <th>작성일</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td>\n                            <a href=\"#\">\n                                <span>1제목 입니다.</span>\n                            </a>\n                        </td>\n                        <td>1작성일 입니다.</td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <a href=\"#\">\n                                <span>2제목 입니다.</span>\n                            </a>\n                        </td>\n                        <td>2작성일 입니다.</td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <a href=\"#\">\n                                <span>3제목 입니다.</span>\n                            </a>\n                        </td>\n                        <td>3작성일 입니다.</td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n\n}\n\nexport default ShareBoardMiniComp;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/NoticeMiniComp.js",["411","412","413","414"],"import React, {Component} from \"react\";\nimport PlusImg from \"../../../image/plus.png\";\n\nclass NoticeMiniComp extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return (\n            <div>\n                <br/>\n                <h5>공지사항</h5>\n                <button>\n                    <img src={PlusImg}\n                         style={{width: \"50px\"}}\n                    />\n                </button>\n                <table className=\"noticeList\">\n                    <thead>\n                    <tr>\n                        <th>제목</th>\n                        <th>작성일</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.props.list.map(function (e, i) {\n                        // console.log(i, e);\n                        if (i < 5) {\n                            return (\n                                <tr key={i}>\n                                    <td>\n                                        <a href=\"#\">\n                                            <span>{e.subject}</span>\n                                        </a>\n                                    </td>\n                                    <td>{e.writeday}</td>\n                                </tr>\n                            );\n                        } else {\n                            return;\n                        }\n                    })}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n\n}\n\nexport default NoticeMiniComp;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/GoogleLoginBtnComp.js",["415","416"],"import React , { Component } from 'react';\nimport reactDOM from 'react-dom';\nimport GoogleLogin from 'react-google-login';\nimport { refreshTokenSetup } from \"./refreshToken\";\n\n\nclass GoogleLoginBtnComp extends Component\n{\n    // 백엔드에 정보를 저장하기 위해 state에 id, name, provider를 저장함\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: '',\n            name: '',\n            provider: '',\n        }\n    }\n\n    render() {\n        const responseGoogle = (response) => {\n            console.log(response);\n        }\n        \n        // 로그인에 성공하면 json을 반환해줌 => onSuccess함수에서 state에 id, name을 저장\n        const onSuccess = (res) => {\n            console.log('[Login Success] 로그인한 사용자:', res.profileObj);\n            console.log('로그인한 사용자 id : ' +  res.googleId);\n\n            this.setState({\n                id: res.googleId,\n                name: res.profileObj.name,\n                provider: 'google'\n            });\n\n            // initializing the setup\n            refreshTokenSetup(res);\n        };\n\n        // 로그인에 실패한 경우에는 에러를 넘겨줌 => onFailure함수에서 error 출력\n        const onFailure = (res) => {\n            console.log('[Login failed] res:', res);\n        };\n\n        return (\n            <>\n            <br />\n            <br />\n            <GoogleLogin\n                clientId=\"256166181377-83u2uuteqgosooa3um2i3o36ho1325md.apps.googleusercontent.com\"\n                buttonText=\"Login\"\n                onSuccess={onSuccess}\n                onFailure={onFailure}\n                cookiePolicy={'single_host_origin'}\n                isSignedIn={true}\n            />\n            </>\n        );\n    }\n}\n\nexport default GoogleLoginBtnComp;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/GoogleLogoutBtnComp.js",["417","418"],"import React , { Component } from 'react';\nimport reactDOM from 'react-dom';\nimport { GoogleLogout } from 'react-google-login';\n\n\nclass GoogleLogoutBtnComp extends Component\n{\n    render() {\n        const responseGoogle = (response) => {\n            console.log(response);\n        }\n\n        const onSuccess = (res) => {\n            alert('Logout 되었습니다');\n        };\n\n        return (\n            <>\n            <br />\n            <br />\n            <GoogleLogout\n                clientId=\"256166181377-83u2uuteqgosooa3um2i3o36ho1325md.apps.googleusercontent.com\"\n                buttonText=\"Logout\"\n                onLogoutSuccess={onSuccess}\n            />\n            </>\n        );\n    }\n}\n\nexport default GoogleLogoutBtnComp;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/refreshToken.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/header/Menu.js",["419","420","421","422","423","424","425","426","427","428","429","430","431"],"import React, {Component} from 'react';\nimport {NavLink, Route} from \"react-router-dom\";\nimport {Home, Login, ShareBoard, MyPage, Notice, Reservation, Admin, TourList, Tour} from './menus';\nimport store from \"../../redux/store\";\nimport {actionType, mainViewType} from \"../../redux/config\";\nimport \"./Menu.css\";\nimport Logo2 from \"../../image/logo2.png\";\nimport TourPageComp from '../main/tour/TourPageComp';\n\nclass Menu extends Component {\n\n    constructor(props) {\n        super(props);\n        // console.log(\"Menu constructor \", this.props)\n\n        this.state = {\n            type: this.props.type,\n            onLogin: this.props.onLogin,\n            onLogout: this.props.onLogout,\n        }\n    }\n\n    setMainView = (mainView) => {\n        console.log(\"Home setMainView()\");\n        store.dispatch({\n            type: actionType.setMainView,\n            // mainView: mainViewType.MainPage\n            mainView: mainView\n        });\n    }\n\n    render() {\n        // 부모컴포넌트(App->HeaderComp)에서 받아온 logged, onLogout을 통해 로그인 전에는 '로그인'을 로그인 후에는 '로그아웃'으로 글씨 변경\n        // 로그아웃일 경우 onLogout함수를 통해 logged를 다시 false로 바꿔준다.\n        // 부모컴포넌트가 HeaderComp->App이므로 props를 통해 value를 전달받을 수 있다. 그러나 Login컴포넌트의경우는 여러번 전달해야함.\n        // 따라서 전역적인 상태가 필요하다.\n\n\n        let {logged} = this.props;\n        // console.log(\"Menu render \", this.props);\n\n        var className_div_menu = `${this.state.type} menu`;\n\n        return (\n            <div className={className_div_menu}>\n                <ul className=\"menu\">\n                    <li className=\"logo\">\n                        <NavLink exact to=\"/\"\n                                 onClick={() => {\n                                     console.log(\"Home NavLink onClick\");\n                                     this.setMainView(mainViewType.MainPage);\n                                 }}\n                        >\n                            Home\n                        </NavLink>\n                    </li>\n\n                    <li>\n                        <NavLink exact to=\"/admin\"\n                                 onClick={() => {\n                                     console.log(\"Admin NavLink onClick\");\n                                     this.setMainView(mainViewType.Admin);\n                                 }}\n                        >Admin</NavLink>\n                    </li>\n                    <li>\n                        {logged ?\n                            <NavLink exact to=\"/\"\n                                     onClick={() => {\n                                         console.log(\"Logout NavLink onClick\");\n                                         this.setMainView(mainViewType.Logout);\n                                     }}>Logout</NavLink>\n                            :\n                            <NavLink exact to=\"/login\"\n                                     onClick={() => {\n                                         console.log(\"Login NavLink onClick\");\n                                         this.setMainView(mainViewType.Login);\n                                     }}\n                            >Login</NavLink>\n                        }\n                    </li>\n                    <li>\n                        <NavLink exact to=\"/join\"\n                                 onClick={() => {\n                                     console.log(\"Join NavLink onClick\");\n                                     this.setMainView(mainViewType.JoinForm);\n                                 }}\n                        >Join</NavLink>\n                    </li>\n                    <li>\n                        <NavLink exact to=\"/mypage\"\n                                 onClick={() => {\n                                     console.log(\"Mypage NavLink onClick\");\n                                     this.setMainView(mainViewType.MyPage);\n                                 }}\n                        >MyPage</NavLink>\n                    </li>\n                    <li>\n                        <NavLink exact to=\"/share\"\n                                 onClick={() => {\n                                     console.log(\"ShareBoard NavLink onClick\");\n                                     this.setMainView(mainViewType.ShareBoard);\n                                 }}\n                        >Share</NavLink>\n                    </li>\n                    {/*<li class=\"dropdown\">*/}\n                    <li className=\"dropdown\">\n                        <a>Tour</a>\n                            {/*<div class=\"dropdown-content\" >*/}\n                            <div className=\"dropdown-content\" >\n                                <a href=\"/tourlist/jeju/1\">제주</a>\n                                <a href=\"/TourList/jocheon/1\">조천</a>\n                                <a href=\"/TourList/gujwa/1\">구좌</a>\n                                <a href=\"/TourList/sungsan/1\">성산</a>\n                                <a href=\"/TourList/pyoseon/1\">표선</a>\n\n                                <a href=\"/TourList/namwon/1\">남원</a>\n                                <a href=\"/TourList/seogwipo/1\">서귀포</a>\n                                <a href=\"/TourList/andeok/1\">안덕</a>\n                                <a href=\"/TourList/daejung/1\">대정</a>\n                                <a href=\"/TourList/hangyeong/1\">한경</a>\n\n                                <a href=\"/TourList/hanrim/1\">한림</a>\n                                <a href=\"/TourList/aewol/1\">애월</a>\n                                <a href=\"/TourList/udo/1\">우도</a>\n                            </div>\n                            {/* <NavLink exact to=\"/tour\"\n                                    onClick={() => {\n                                        console.log(\"Tour NavLink onClick\");\n                                        this.setMainView(mainViewType.TourList);\n                                    }}\n                            >Tour</NavLink> */}\n\n\n                    </li>\n                    <li>\n                        <NavLink exact to=\"/notice\"\n                                 onClick={() => {\n                                     console.log(\"Notice NavLink onClick\");\n                                     this.setMainView(mainViewType.Notice);\n                                 }}\n                        >Notice</NavLink>\n                    </li>\n                    <li>\n                        <NavLink exact to=\"/reservation\"\n                                 onClick={() => {\n                                     console.log(\"Reservation NavLink onClick\");\n                                     this.setMainView(mainViewType.Reservation);\n                                 }}\n                        >Reservation</NavLink>\n                    </li>\n                </ul>\n\n\n                {/*<hr style={{clear: 'both'}}/>*/}\n\n                {/* <Route exact path=\"/\"> */}\n                    {/*<Home></Home>*/}\n                {/* </Route> */}\n                {/* <Route exact path=\"/Reservation/:name?\"> */}\n                    {/*<Reservation></Reservation>*/}\n                {/* </Route> */}\n                 {/* <Route exact path=\"/Notice/:name?\"> */}\n                    {/*<Notice></Notice>*/}\n                {/* </Route> */}\n\n                {/* <Route exact path=\"/TourList/:name?\" component={TourList}></Route> */}\n                {/* <Route exact path=\"/TourList/:name?\" component={TourPageComp}></Route> */}\n                {/* <Route exact path=\"/Tour/:name?\" component={Tour}></Route> */}\n\n                {/* <Route exact path=\"/ShareBoard/:name?\"> */}\n                    {/*<ShareBoard></ShareBoard>*/}\n                {/* </Route> */}\n                {/* <Route exact path=\"/MyPage/:name?\" component={MyPage}> */}\n                    {/*<MyPage></MyPage>*/}\n                {/* </Route>\n                <Route exact path=\"/Login/:name?\"> */}\n                    {/*<Login></Login>*/}\n                {/* </Route>\n                <Route exact path=\"/Admin:name?\"> */}\n                    {/*<Admin></Admin>*/}\n                {/* </Route> */}\n            </div>\n        )\n    }\n}\n\nexport default Menu;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/index.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Notice.js",["432"],"import React, {Component} from \"react\";\n\nclass Notice extends Component{\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                {/*<b>공지사항</b>*/}\n            </div>\n        )\n    }\n}\n\nexport default Notice;\n",["433","434"],"/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/ShareBoard.js",["435"],"import React, {Component} from 'react';\n\nclass ShareBoard extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                {/*<b>맛집공유게시판</b>*/}\n            </div>\n        )\n    }\n}\n\nexport default ShareBoard;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Reservation.js",["436"],"import React, {Component} from \"react\";\n\n\nclass Reservation extends Component{\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                {/*<b>비행기 렌터카 예약</b>*/}\n            </div>\n        )\n    }\n}\n\nexport default Reservation;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Tour.js",["437"],"import React, {Component} from \"react\";\n\nclass Tour extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n    \n    render(){\n        return(\n            <div>\n            </div>\n        )\n    }\n}\n\nexport default Tour;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/MyPage.js",["438"],"import React, {Component} from \"react\";\n\nclass MyPage extends Component{\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                {/*<b>MyPage</b>*/}\n            </div>\n        )\n    }\n}\n\nexport default MyPage;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Login.js",["439"],"import React, {Component} from \"react\";\n\nclass Login extends Component{\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                {/*<b>Login</b>*/}\n            </div>\n        )\n    }\n}\n\nexport default Login;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Home.js",["440","441","442"],"import React, {Component} from \"react\";\n// import BigText from '../component/BigText';\n// import Header from \"../component/Header\";\nimport store from \"../../../redux/store\";\nimport {actionType, mainViewType} from \"../../../redux/config\";\n\n// page init\n// constructor -> componentWillMount -> render\n\n// 다른메뉴 -> Home menu click\n// constructor -> componentWillMount -> render -> componentDidMount\n\n// Home menu 에서 -> 다른메뉴로 갈때.\n// componentWillUnmount\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n        console.log(\"Home constructor\", this.props, this.state, store.getState());\n    }\n\n    componentWillMount() {\n        console.log(\"Home componentWillMount()\");\n    }\n\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        console.log(\"Home componentWillUpdate()\");\n    }\n\n\n    componentWillUnmount() {\n        console.log(\"Home componentWillUnmount()\");\n    }\n\n\n    render() {\n        console.log(\"Home render()\");\n        return (\n            <div>\n                {/*<Header />*/}\n                {/*<BigText>홈</BigText>*/}\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        console.log(\"Home componentDidMount()\");\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        console.log(\"Home componentDidUpdate()\");\n    }\n\n    componentWillUnmount() {\n        console.log(\"Home componentWillUnmount()\");\n    }\n}\n\nexport default Home;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Admin.js",["443"],"import React, {Component} from \"react\";\n\nclass Admin extends Component{\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                {/*<b>Admin</b>*/}\n            </div>\n        )\n    }\n}\n\nexport default Admin;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/Join.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/ShareBoardFormComp.js",["444","445"],"import React, {Component} from \"react\";\nimport {Route, Link} from \"react-router-dom\";\nimport ShareBoardPageComp from \"./ShareBoardPageComp\";\nimport axios from \"axios\";\nimport {URL} from '../../../redux/config';\n\n\nclass ShareBoardFormComp extends Component {\n\n    state = {\n        photoname: ''\n    }\n\n    constructor(props) {\n        super(props);\n        console.log(\"ShareBoardFormComp constructor\", props);\n\n    }\n\n    //서버에 이미지 업로드하는 함수\n    uploadImage = (e) => {\n        const uploadFile = e.target.files[0];\n        const upload = new FormData();\n        upload.append(\"uploadFile\", uploadFile);\n\n        let url = URL + \"/share/upload\";\n\n        axios({\n            method: 'post',\n            url: url,\n            data: upload,\n            headers: {'Content-Type': 'multipart/form-data'}\n        }).then(res => {\n            this.setState({\n                photoname: res.data.photoname\n            })\n        }).catch(err => {\n            console.log(\"shareboard upload 오류 : \" + err);\n        })\n\n    }\n\n    onDataInsert = (resolve = null) => {\n        //입력값 state 변수에 저장하기\n        let subject = this.refs.subject.value;\n        let addr = this.refs.addr.value;\n        let content = this.refs.content.value;\n        let star = 0;\n\n        console.log(subject + \", \" + addr + \", \" + content);\n\n        //db 에 insert\n        let url = URL + \"/share/insert\";\n\n        axios.post(url, {subject, addr, content, star})\n            .then(res => {\n                //값 지우기\n                this.refs.subject.value = '';\n                this.refs.addr.value = '';\n                this.refs.content.value = '';\n\n\n                //이미지도 지우기\n                this.setState({\n                    photoname: ''\n                });\n\n                if (resolve != null) {\n                    resolve();\n                }\n            }).catch(err => {\n            console.log(\"shareboard insert 오류 : \" + err);\n        })\n\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let _promise = new Promise((resolve, reject) => {\n            this.onDataInsert(resolve);\n        });\n\n        _promise.then(() => {\n            alert('공유하였습니다. 목록확인하세요 ' + this.state.subject);\n        }).then(() => {\n            this.props.history.push(\"/share\");\n        });\n    }\n\n    render() {\n        //const url=\"http://localhost:9002/photo/\";\n        console.log(\"ShareBoardFormComp render()\", this.props);\n\n        return (\n            <div>\n                <b>맛집공유</b>\n\n                <table style={{width: '800px', border: '1px solid black'}}>\n                    <tr>\n                        <th><span>맛집이름</span></th>\n                        <td>\n                            <input type=\"text\" style={{width: '200px', height: '20px'}}\n                                   placeholder=\"맛집이름을 적어주세요\" ref=\"subject\"/>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <th><span>맛집주소</span></th>\n                        <td>\n                            <input type=\"text\" style={{width: '400px', height: '20px'}}\n                                   placeholder=\"맛집주소를 적어주세요\" ref=\"addr\"/>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <th><span>이미지</span></th>\n                        <td>\n                            <input type=\"file\" onChange={this.uploadImage.bind(this)}/>\n                            {/* <img src={url + this.state.photoname} alt=\"이미지없음\" style={{width:'200px',height:'300px'}}/> */}\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <th><span>리뷰</span></th>\n                        <td>\n                         <textarea maxLength=\"1200\"\n                                   style={{width: '400px', height: '120px', resize: 'none'}}\n                                   ref=\"content\">\n                         </textarea>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <th><span>평가</span></th>\n                        <td>\n                            <b>별점 이미지</b>\n                        </td>\n                    </tr>\n\n                </table>\n                <button type=\"button\"\n                        onClick={this.handleSubmit.bind(this)}\n                >공유하기\n                </button>\n\n                <Link to=\"/share\">\n                    <button type=\"button\">목록</button>\n                </Link>\n            </div>\n        )\n    }\n\n}\n\nexport default ShareBoardFormComp;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/join/SignupPageComp.js",["446","447","448","449","450","451","452","453","454","455"],"import React, { Component, useState } from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport axios from 'axios';\nimport {URL} from \"../../../redux/config\";\nimport { makeStyles, createStyles, WithStyles, withStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\nimport PropTypes from \"prop-types\";\n// import { withStyles } from \"@material-ui/styles\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { Upload } from \"@progress/kendo-react-upload\";\n\nimport Button from \"@material-ui/core/Button\";\nimport { green, grey, orange } from \"@material-ui/core/colors\";\n\nimport { createRipples } from \"react-ripples\";\n\nimport RippleBtn from \"./SubmitBtn\";\nimport RippleBtn2 from \"./SubmitBtn2\";\n\nconst styles = theme => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n});\n\nconst genders = [\n    '남성',\n    '여성',\n];\n\nconst fileStatuses = [\n    'UploadFailed',\n    'Initial',\n    'Selected',\n    'Uploading',\n    'Uploaded',\n    'RemoveFailed',\n    'Removing'\n];\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        color: theme.palette.getContrastText(orange[200]),\n        '&:hover': {\n            backgroundColor: grey[100],\n        },\n        outline: 'none !important',\n        \n    },\n}))(Button);\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: green,\n    },\n});\n\nconst MyRipples = createRipples({\n    color: 'orange',\n    during: 2200,\n})\n\nlet uploadFile = null;\n\nclass SignupPageComp extends Component {\n\n\n    constructor(props) {\n        super(props);\n\n        console.log(\"SignupPageComp constructor\", props);\n        \n        this.state={\n            id:'',  //아이디를 저장하고 있을 state\n            pass:'',\n            pwCheck: \"\",//비밀번호 두개가 일치하는가\n            name : '',\n            gender: '',\n            photo: null,\n            photoname: '',\n            address : '',\n            addrdetail: '',\n            email : '',\n            hp : \"\",\n            idcanUse: false,//중복된 아이디찾기 true여야 로그인가능\n            files: [],\n            events: [],\n            filePreviews: {},\n        };\n\n        //함수 선언\n        this.onIdChk=this.onIdChk.bind(this);\n    }\n\n    // 변수 선언시 state 영역에 추가했을 경우에만 나중에 값변경이 가능하다\n    // 값 변경시에는 setState 를 이용해야만 한다\n    // 이벤트\n    changeEvent=(e)=>{\n        \n        console.log(e.target.id+\":\"+e.target.value);\n        // 만약 엔터 누를때만 변경되도록 하고 싶으면\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    }\n\n    //방법2\n    onIdChk=(e)=>{\n        e.preventDefault();\n        console.log(this.state.id);\n        const data = {\n            id: this.state.id//현재 id state 값을 data.id에 넣는다\n        }\n        // ↓은 백엔드로 fetch해서 입력된 값을 POST\n        let url = URL + '/member/checkid?id=' + this.state.id;\n        axios.get(url)\n        .then(response=>{\n            alert(response.data.idcanUse + \"를 받았습니다\");\n            if(response.data.idcanUse === \"true\")\n            {\n                alert(\"사용가능한 아이디입니다\");\n                this.setState({\n                    idcanUse: true\n                })\n            }\n            else if(response.data.idcanUse === \"false\")\n            {\n                alert(\"다른 아이디를입력해주세요\");\n                this.setState({\n                    id: '',\n                })\n            }\n        }).catch(err => {\n            console.log(\"아이디체크시 오류남:\"+err);\n        })\n    }\n\n    onSubmitHandler = (e) => {\n        e.preventDefault();\n        this.onInsertMember();\n    };\n\n    //사진 업로드시 호출되는 함수\n    imageUpload=(e)=>{\n        const uploadFile = e.target.files[0];\n\n        //서버에 업로드\n        const memberFile = new FormData();\n        memberFile.append(\"uploadFile\",uploadFile);\n\n        axios({\n            method: 'post',\n            url: URL + '/member/upload',\n            data: memberFile,\n            headers: {'Content-Type':'multipart/form-data'}\n        }).then(response=>{\n            alert(response.data.photoname+\" 이미지명으로 저장합니다\");\n            //이미지명 변경\n            this.setState({\n                photoname: response.data.photoname\n            })\n        }).catch(err=>{\n            console.log(\"이미지 업로드시 오류남:\"+err);\n        })\n    }\n\n    //사진 업로드시 호출되는 함수\n    // imageUpload=(e)=>{\n    //     uploadFile = e.affectedFiles[0].name;\n    //     alert(\"업로드할 파일은 : \" + uploadFile);\n\n    //     //서버에 업로드\n    //     const memberFile = new FormData();\n    //     memberFile.append(\"uploadFile\",uploadFile);\n\n    //     axios({\n    //         method: 'post',\n    //         url: URL + '/member/upload',\n    //         data: memberFile,\n    //         headers: {'Content-Type':'multipart/form-data'}\n    //     }).then(response=>{\n    //         alert(response.data.photoname+\" 이미지명으로 저장합니다\");\n    //         //이미지명 변경\n    //         this.setState({\n    //             photoname: response.data.photoname\n    //         })\n    //     }).catch(err=>{\n    //         console.log(\"이미지 업로드시 오류남:\"+err);\n    //     })\n    // }\n\n    onInsertMember = () => {\n        let data = this.state;\n        let url = URL + \"/member/insert\";\n\n        axios.post(url, data)\n        .then(response => {\n            //성공시\n            //입력값 지우기\n            this.setState({\n                id:'',  //아이디를 저장하고 있을 state\n                pass:'',\n                pwCheck: \"\",//비밀번호 두개가 일치하는가\n                name : '',\n                gender: '',\n                photo: null,\n                photoname: '',\n                address : '',\n                addrdetail: '',\n                email : '',\n                hp : \"\",\n                idcanUse: false,//중복된 아이디찾기 true여야 로그인가능\n            })\n\n            // 예전 location.href 와 같은 코드\n            this.props.history.push(\"/login\");//저장 성공후 로그인으로 이동되도록 한다\n        }).catch(err=>{\n            console.log(\"회원가입시 오류남:\"+err);\n        })\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            gender: event.target.value,\n        });\n    };\n\n    onAdd = (event) => {\n        const afterStateChange = () => {\n            event.affectedFiles\n                .filter(file => !file.validationErrors)\n                .forEach(file => {\n                    const reader = new FileReader();\n\n                    reader.onloadend = (ev) => {\n                        this.setState({\n                            filePreviews: {\n                                ...this.state.filePreviews,\n                                [file.uid]: ev.target.result\n                            }\n                        });\n                    };\n\n                    reader.readAsDataURL(file.getRawFile());\n                });\n        };\n\n        this.setState({\n            files: event.newState,\n            events: [\n                ...this.state.events,\n                `선택된 파일: ${event.affectedFiles[0].name}`\n            ],\n        }, afterStateChange);\n\n        uploadFile = event.affectedFiles[0].name;\n    }\n\n    onRemove = (event) => {\n        const filePreviews = {\n            ...this.state.filePreviews\n        };\n\n        event.affectedFiles.forEach(file => {\n            delete filePreviews[file.uid];\n        });\n\n        this.setState({\n            files: event.newState,\n            events: [\n                ...this.state.events,\n                `파일 제거됨: ${event.affectedFiles[0].name}`\n            ],\n            filePreviews: filePreviews\n        });\n    }\n\n    onProgress = (event) => {\n        this.setState({\n            files: event.newState,\n            events: [\n                ...this.state.events,\n                `진행 정도: ${event.affectedFiles[0].progress} %`\n            ]\n        });\n    }\n\n    onStatusChange = (event) => {\n        const file = event.affectedFiles[0];\n\n        this.setState({\n            files: event.newState,\n            events: [\n                ...this.state.events,\n                `File '${file.name}' status changed to: ${fileStatuses[file.status]}`\n            ]\n        });\n    }\n    \n    render() {\n        const { classes } = this.props;\n        console.log(\"SingupPageComp render()\", this.props);\n        return (\n            <div>\n                <form\n                className={classes.root}\n                noValidate autoComplete=\"off\"\n                onSubmit = { this.onSubmitHandler.bind(this) }\n                >\n                <h1>회원가입</h1>\n                <div>\n                    {this.state.id}\n                    <h4 className=\"showIdResult\">{this.state.showIdResult}</h4>\n                </div>\n                <br />\n                <TextField id=\"standard-secondary\" label=\"이메일\" color=\"secondary\" \n                type=\"email\" name=\"email\" value={ this.state.email }\n                onChange = { this.changeEvent.bind(this) } />\n                \n                {/* <label>이메일</label>\n                <input type=\"email\" name = \"email\" value = { this.state.email } onChange={this.changeEvent.bind(this)} /> */}\n                <br />\n                \n                {/* <label>이름</label>\n                <input type=\"text\" name = \"name\" value = { this.state.name } onChange={this.changeEvent.bind(this)} /> */}\n                \n                <TextField id=\"standard-secondary\" label=\"이름\" color=\"secondary\" \n                type=\"text\" name=\"name\" value={ this.state.name }\n                onChange = { this.changeEvent.bind(this) } />\n\n                <br />\n                {/* 아이디 :\n                <input type=\"text\" name=\"id\"\n                onChange={this.changeEvent.bind(this)}\n                value={this.state.id}\n                /> */}\n                <TextField id=\"standard-secondary\" label=\"아이디\" color=\"secondary\" \n                type=\"text\" name=\"id\" value={ this.state.id }\n                onChange = { this.changeEvent.bind(this) } />\n\n                <button type=\"button\"\n                onClick={this.onIdChk.bind(this)}>\n                    아이디 확인\n                </button>\n                <br />\n                {/* <label>비밀번호</label>\n                <input type=\"password\" name=\"pass\"\n                onChange={this.changeEvent.bind(this)}\n                value={this.state.pass}\n                autoComplete=\"new-password\"\n                /> */}\n                <TextField id=\"standard-secondary\" label=\"비밀번호\" color=\"secondary\" \n                type=\"password\" name=\"pass\" value={ this.state.pass }\n                onChange = { this.changeEvent.bind(this) } />\n\n                <br />\n                {/* <label>비밀번호 확인</label>\n                <input\n                type = \"password\"\n                name = \"pwCheck\"\n                value = { this.state.pwCheck }\n                onChange = { this.changeEvent.bind(this) }\n                /> */}\n                <TextField id=\"standard-secondary\" label=\"비밀번호 확인\" color=\"secondary\" \n                type=\"password\" name=\"pwCheck\" value={ this.state.pwCheck }\n                onChange = { this.changeEvent.bind(this) } />\n\n                <br />\n                {/* <select name=\"gender\"\n                onChange = {this.changeEvent.bind(this)}\n                value = { this.state.gender }>\n                    <option value=\"\">성별선택</option>\n                    <option value=\"여성\">여성</option>\n                    <option value=\"남성\">남성</option>\n                </select> */}\n\n                <InputLabel id=\"demo-simple-select-label\">성별</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={this.state.gender}\n                    onChange={this.handleChange}\n                >\n                    {genders.map((gender) => (\n                        <MenuItem key={gender} value={gender}>\n                            {gender}\n                        </MenuItem>\n                    ))}\n                </Select>\n\n                <br />\n                사진 : &nbsp;\n                <input type=\"file\" name=\"photo\"\n                onChange={this.imageUpload.bind(this)}\n                ></input>\n\n                {/* <div>\n                    <InputLabel id=\"demo-simple-select-label\">사진</InputLabel>\n                    <br />\n                    <Upload \n                        batch={false}\n                        multiple={true}\n                        files={this.state.files}\n                        onAdd={this.onAdd}\n                        onRemove={this.onRemove}\n                        onProgress={this.onProgress}\n                        onStatusChange={this.onSatusChange}\n                        withCredentials={false}\n                        // saveUrl={URL + '/member/upload'}\n                        removeUrl={'https://demos.telerik.com/kendo-ui/service-v4/upload/remove'}\n                        onChange={this.imageUpload.bind(this)}\n                    />\n                    <div className={'example-config'} style={{ marginTop: 20 }}>\n                        <ul className={'event-log'}>\n                            {\n                                this.state.events.map(event => <li key={event}>{event}</li>)\n                            }\n                        </ul>\n                    </div>\n                    {\n                        this.state.files.length ? \n                        <div className={'img-preview example-config'}>\n                            <h3>선택된그림들 미리보기</h3>\n                            {\n                                Object.keys(this.state.filePreviews)\n                                    .map((fileKey, index) => (<img \n                                        src={this.state.filePreviews[fileKey]} \n                                        alt={index}\n                                        style={{ width: 200, margin: 10 }} \n                                    />))\n                            }\n                        </div> : undefined\n                    }\n                </div> */}\n\n\n                <br />\n                {/* 주소 : &nbsp;\n                <input type=\"text\" name=\"address\"\n                onChange={this.changeEvent.bind(this)}\n                value = { this.state.address }></input> */}\n\n                <TextField id=\"standard-secondary\" label=\"주소\" color=\"secondary\" \n                type=\"text\" name=\"address\" value={ this.state.address }\n                onChange = { this.changeEvent.bind(this) } />\n\n                {/* <input type=\"text\" name=\"addrdetail\"\n                onChange={this.changeEvent.bind(this)}\n                value = { this.state.addrdetail }></input> */}\n                \n                <TextField id=\"standard-secondary\" label=\"상세주소\" color=\"secondary\" \n                type=\"text\" name=\"addrdetail\" value={ this.state.addrdetail }\n                onChange = { this.changeEvent.bind(this) } />\n\n                <br />\n                {/* 휴대폰 : &nbsp;\n                <input type=\"text\" name=\"hp\"\n                onChange={this.changeEvent.bind(this)}\n                value = { this.state.hp }></input> */}\n\n                <TextField id=\"standard-secondary\" label=\"휴대폰\" color=\"secondary\" \n                type=\"text\" name=\"hp\" value={ this.state.hp }\n                onChange = { this.changeEvent.bind(this) } />\n\n                <br />\n                <b>\n                    내 아이디는 {this.state.id} 입니다\n                    내 비밀번호는 {this.state.pass} 입니다\n                    내 확인비밀번호는 { this.state.pwCheck } 입니다\n                    내 이메일은 { this.state.email } 입니다\n                    내 이름은 { this.state.name } 입니다\n                    내 성별은 { this.state.gender } 입니다\n                    내 사진은 { this.state.photo } 입니다\n                    내 주소1 { this.state.address} 입니다\n                    내 주소2 {this.state.addrdetail} 입니다\n                    내 휴대폰 { this.state.hp } 입니다\n                </b>\n                <br />\n                {/* <MyRipples>\n                <button type = \"submit\">회원 가입</button>\n                </MyRipples> */}\n                <RippleBtn2 />\n                </form>\n            </div>\n        );\n    }\n\n}\n\nSignupPageComp.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SignupPageComp);\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/ShareBoardRowItem.js",["456","457","458","459","460"],"import React, {Component, useState} from \"react\";\nimport {Route, Link} from \"react-router-dom\";\nimport ShareBoardUpdateForm from \"./ShareBoardUpdateForm\";\nimport Modal from './Modal';\nimport axios from \"axios\";\nimport {actionType, URL} from '../../../redux/config';\nimport ShareReview from './ShareReview';\nimport store from \"../../../redux/store\";\n\n/*\nrow:\n    addr: \"제주시 제주동 제주읍 제주리 제주제주\"\n    content: \"맛있습니다. 맛있습니다. 맛있습니다. 맛있습니다.↵맛있습니다. 맛있습니다. 맛있습니다. 맛있습니다↵맛있습니다. 맛있습니다. 맛있습니다. 맛있습니다\"\n    id: \"hee0134\"\n    likes: 0\n    num: \"422\"\n    photo: \"jeju20210122102347.png\"\n    regroup: 422\n    relevel: 0\n    restep: 0\n    star: \"4\"\n    subject: \"제주도 맛집맛집\"\n    writeday: \"2021-01-22\"\n */\nclass ShareBoardRowItem extends Component {\n\n    state = {\n        modalOpen: false\n\n    }\n\n    constructor(props) {\n        super(props);\n        console.log(\"constructor\", this.props);\n        //스크롤\n        this.myRef = React.createRef()\n        this.state = {scrollTop: 0}\n    }\n\n\n    //스크롤\n    onScroll = () => {\n        const scrollY = window.scrollY //Don't get confused by what's scrolling - It's not the window\n        const scrollTop = this.myRef.current.scrollTop\n        console.log(`onScroll, window.scrollY: ${scrollY} myRef.scrollTop: ${scrollTop}`);\n        this.setState({\n            scrollTop: scrollTop\n        })\n    }\n\n\n    //삭제하는 함수 이벤트\n    onDeleteData = (e) => {\n        e.preventDefault();\n        let num = this.props.row.num;\n        let regroup = this.props.row.regroup;\n        let url = URL + \"/share/delete\";\n        let data = {\n            num: num,\n            regroup: regroup,\n        }\n\n        // console.log(\"onDeleteData\", url, data);\n\n        if (window.confirm(\"삭제하시겠습니까?\")) {\n            axios.post(url, data\n            ).then(res => {\n                // console.log(\"onDeleteData() res\", res);\n                store.dispatch({\n                    type: actionType.shareBoardUpdate,\n                });\n                this.props.history.push(\"/share\");\n            }).catch(err => {\n                console.log(\"onDeleteData() err\", err);\n            });\n        }\n    }\n\n    onInsertData = () => {\n        let url = URL + \"/share/insert\";\n\n        axios.insert(url)\n            .then(res => {\n                this.insert = res.data;\n                this.getList();\n            })\n\n    }\n\n    openModal = () => {\n        this.setState({modalOpen: true})\n    }\n\n    closeModal = () => {\n        this.setState({modalOpen: false})\n    }\n\n    componentDidUpdate() {\n        console.log(\"state변경\");\n    }\n\n\n    render() {\n        const {row} = this.props;\n        //스크롤\n        const {\n            scrollTop\n        } = this.state\n\n        return (\n            <div>\n                <React.Fragment>\n                    <div style={{\n                        border: '1px solid black',\n                        width: '400px',\n                        height: '450px',\n                        margin: '80px',\n                        float: 'left',\n                        cursor: 'pointer'\n                    }}\n                        // onClick={this.openModal.bind(this)}\n                    >\n\n                        <div style={{borderBottom: '1px solid black', width: '400px', height: '250px'}}\n                             onClick={this.openModal.bind(this)}\n                        >{row.photo}</div>\n\n\n                        <div style={{\n                            borderBottom: '1px solid black',\n                            width: '400px',\n                            height: '50px',\n                            alignItems: 'center'\n                        }}\n                             onClick={this.openModal.bind(this)}\n                        >맛집이름:{row.subject}</div>\n                        <div style={{borderBottom: '1px solid black', width: '400px', height: '100px'}}>\n                            <div>평점:{row.star}</div>\n                            <div>주소:{row.addr}</div>\n                        </div>\n                        <div>\n                            <div style={{width: '400px', height: '50px'}}>\n                                <div style={{float: 'left'}}>조회수:{row.readcount}</div>\n                                <button type=\"button\" style={{float: 'right'}}\n                                        onClick={this.onDeleteData.bind(this)}\n                                >삭제\n                                </button>\n                                <Link to={`/share/update/${this.props.row.num}`}>\n                                    <button type=\"button\" style={{float: 'right'}}\n                                    >수정\n                                    </button>\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* //header 부분에 텍스트를 입력한다. */}\n                    <Modal open={this.state.modalOpen} close={this.closeModal.bind(this)} title=\"share\">\n\n                        {/* // Modal.js <main> { props.children } </main>에 내용이 입력된다.  */}\n                        <div style={{\n                            border: '1px solid black',\n                            width: '1150px',\n                            height: '700px',\n                            margin: 'auto',\n                            overflow: 'scroll'\n                        }}\n                             ref={this.myRef} onScroll={this.onScroll}>\n\n                            <div style={{borderBottom: '1px solid black', height: '50px'}}>\n                                <div style={{float: \"left\"}}><input type=\"button\" value=\"좋아요\"/></div>\n                                <div style={{float: \"left\"}}>(작성자) 님이 공유하신 맛집입니다.</div>\n                                <div style={{float: \"right\"}}>\n                                    <input type=\"button\" value=\"찜하기\"/>\n                                </div>\n                            </div>\n\n                            <div style={{borderBottom: '1px solid black', width: '1150px', height: '400px'}}>\n                                <div style={{\n                                    borderBottom: '1px solid black',\n                                    borderRight: '1px solid black',\n                                    width: '550px',\n                                    height: '400px',\n                                    float: 'left'\n                                }}>{row.photo}</div>\n\n\n                                <div style={{borderLeft: '1px solid black', width: '600x', float: 'right'}}>\n                                    <div style={{width: '550px', height: '50px'}}>평점:{row.star}</div>\n\n                                    <div style={{width: '550px', height: '50px'}}>주소:{row.addr}</div>\n\n                                    <div style={{\n                                        width: '550px',\n                                        height: '200px',\n                                        marginTop: '50px'\n                                    }}>리뷰:{row.content}</div>\n\n                                    <div style={{width: '550px', height: '50px'}}>작성일:{row.writeday}</div>\n                                </div>\n\n                            </div>\n\n\n                            <div style={{\n                                borderBottom: '1px solid black',\n                                width: '1150px',\n                                height: '130px',\n                                marginTop: '20px'\n                            }}>\n\n\n                                <div style={{marginLeft: \"20px\"}}>\n                                    <div style={{float: 'left'}}>id</div>\n\n                                    <div style={{float: 'left', marginRight: '100px'}}>\n                                        <input type=\"button\" className=\"glyphicon glyphicon-camera\" value=\"이미지\"/>\n                                    </div>\n                                </div>\n\n                                <div>\n                                    <div>\n                                        <textarea placeholder=\"댓글을 입력하세요\"\n                                                  style={{width: '800px', height: '100px', float: 'left'}}/>\n                                    </div>\n                                    <div style={{float: 'left', marginLeft: '50px'}}>\n                                        <button type=\"button\" onClick={this.onInsertData.bind(this)}>저장</button>\n                                    </div>\n                                </div>\n\n                            </div>\n\n                            <div>\n                                <ShareReview regroup={row.regroup}/>\n                            </div>\n\n\n                        </div>\n                    </Modal>\n\n                </React.Fragment>\n\n\n            </div>\n\n\n        )\n    }\n\n}\n\n\nexport default ShareBoardRowItem\n\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/ItemComp.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/PageComp.js",["461","462","463","464","465","466"],"import React,{Component} from 'react';\nimport Pagination from '@material-ui/lab/Pagination';\nimport './TourCss.css';\n\nclass PageComp extends Component {\n\n    // handleChange=(e, value)=>{\n    //     this.props.paginate(value);\n    // }\n    render() {\n        const{startPage, endPage, currentPage, totalPage, paginate} = this.props;\n\n        let prev = startPage>1?<li className=\"page-item\"><a className=\"page-link\" style={{color: 'black'}} onClick={(e)=>{\n            e.preventDefault();\n            this.props.paginate(startPage - 1);\n        }}>◀</a></li>:\"\";\n\n        let next = endPage < totalPage?<li className=\"page-item\"><a className=\"page-link\" style={{color: 'black'}} onClick={(e)=>{\n            e.preventDefault();\n            this.props.paginate(endPage + 1);\n        }}>▶</a></li>:\"\";\n\n        let page = [];\n        for(let i=startPage; i<=endPage; i++){\n            page.push(i);\n        }\n        let pages = page.map(function(num,idx){\n            return <li className=\"page-item\"><a className=\"page-link\" style={{color : num==currentPage?\"#D1CC38\":\"black\", fontWeight: num==currentPage?\"700\":\"\"}} \n            onClick={(e)=>{\n                e.preventDefault();\n                paginate(num);\n            }}>{num}</a></li>\n        });\n\n        let pagination='';\n        if (matchMedia(\"screen and (max-width:770px)\").matches) {\n            pagination = <ul className='pagination pagination-sm' style={{justifyContent: 'center', marginBottom: '100px'}}>\n                            {prev}\n                            {pages}\n                            {next}\n                        </ul>;\n          } else {\n            pagination = <ul className='pagination' style={{justifyContent: 'center', marginBottom: '100px'}}>\n                            {prev}\n                            {pages}\n                            {next}\n                        </ul>;\n          }\n\n        return (\n            <div>\n                {pagination}\n                {/* <ul className='pagination' style={{justifyContent: 'center', marginBottom: '100px'}}>\n                    {prev}\n                    {pages}\n                    {next}\n\t\t\t    </ul> */}\n                {/* <Pagination id=\"tourListPage\" color=\"primary\" count={totalPage} page={currentPage} onChange={this.handleChange.bind(this)}/> */}\n            </div>\n        );\n    }\n}\n\nexport default PageComp;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/DetailTourComp.js",["467","468","469","470","471","472","473"],"import React,{Component} from 'react';\nimport axios from 'axios';\nimport MapComp from './MapComp';\nimport ReviewListComp from './ReviewListComp';\nimport {URL} from '../../../redux/config';\nimport './TourDetailCss.css';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\nclass DetailTourComp extends Component {\n\n    constructor({match}, props) {\n        super(props);\n\n        this.state = {\n            spotdata:[],\n            contentsid: match.params.name,\n            open: false, \n            setOpen: false,\n            alertOpen: false,\n            alertSetOpen: false\n        }\n\n    }\n\n    componentDidUpdate() {\n        window.scrollTo(0,0);\n    }\n\n    getData=()=>{\n        const url = URL + \"/spot/select?contentsid=\" + this.state.contentsid;\n\n        axios.get(url)\n            .then(res=>{\n                this.setState({\n                    spotdata : res.data\n                })\n            }).catch(err=>{\n                console.log(\"DetailTourComp getData 오류 : \" + err);\n            })\n    }\n\n    componentWillMount(){\n        this.getData();\n    }\n\n    heartClick=(e)=>{\n        if(e.target.className == 'heart clickheart'){\n            e.target.className = 'heart';       \n        }\n        else{\n            // e.target.className = 'heart clickheart';\n            this.handleOpen();\n        }\n            \n    }\n\n    // modal 함수\n    handleOpen = () => {\n        this.setState({\n            open: true\n        })\n    };\n\n    handleClose = () => {\n        this.setState({\n            open: false\n        })\n    };\n\n    // alert 함수\n    alertOpen = () => {\n        this.setState({\n            alertOpen: true\n        })\n    };\n\n    alertClose = () => {\n        this.setState({\n            alertOpen: false\n        })\n        this.refs.thumbHeart.className=\"heart clickheart\";\n    };\n\n    insertWish=()=>{\n        // console.log(this.refs.wishday.value);\n\n        let url = URL + \"/wish/insertspot\";\n        let memId = 'sanghee'; // 나중에 로그인 아이디로 넣기\n        let spotId = this.state.contentsid;\n        let content = this.state.spotdata.roadaddr;\n        let wishday = this.refs.wishday.value;\n        let wishtime = this.refs.wishtime.value;\n\n        console.log(this.refs.wishday.value);\n        if(wishday == '' || wishtime == '')\n            alert(\"날짜와 시간을 모두 선택해주세요.\");\n        else{\n            axios.post(url, {memId, spotId, content, wishday, wishtime})\n            .then(res=>{\n                this.setState({\n                    open: false,\n                    alertOpen: true\n                })\n            }).catch(err=>{\n                console.log(\"spotwish insert 오류 : \" + err);\n            })\n        }\n        \n    }\n      \n\n    render() {\n        var star = this.state.spotdata.star==5?\n        <span id=\"thumbStar\" style={{color: \"#F0CD58\"}}><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span>\n                                                            <span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span></span>\n            :this.state.spotdata.star==4?\n            <span id=\"thumbStar\" style={{color: \"#F0CD58\"}}><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span>\n                                                            <span class=\"fas fa-star\"></span><span class=\"far fa-star\"></span></span>\n            :this.state.spotdata.star==3?\n            <span id=\"thumbStar\" style={{color: \"#F0CD58\"}}><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span>\n                                                            <span class=\"far fa-star\"></span><span class=\"far fa-star\"></span></span>\n            :this.state.spotdata.star==2?\n            <span id=\"thumbStar\" style={{color: \"#F0CD58\"}}><span class=\"fas fa-star\"></span><span class=\"fas fa-star\"></span><span class=\"far fa-star\"></span>\n                                                            <span class=\"far fa-star\"></span><span class=\"far fa-star\"></span></span>\n            :<span id=\"thumbStar\" style={{color: \"#F0CD58\"}}><span class=\"fas fa-star\"></span><span class=\"far fa-star\"></span><span class=\"far fa-star\"></span>\n                                                            <span class=\"far fa-star\"></span><span class=\"far fa-star\"></span></span>;\n        \n        return (\n            <div>\n                {/* 이미지, spot 정보 */}\n                <img src={this.state.spotdata.img} alt=\"이미지 없음\" style={{width: '100%'}}/>\n                <div style={{color: 'whitesmoke'}} class=\"thumbText\">\n                    <b id=\"thumbTitle\">{this.state.spotdata.title}</b><br/>\n                    <span id=\"thumbTag\" style={{color: '#bbb'}}>{this.state.spotdata.tag}</span><br/>\n                    <span id=\"thumbRoad\" style={{color: '#bbb'}}><span class=\"fa fa-map-marker\"></span>&nbsp;&nbsp;{this.state.spotdata.roadaddr}</span><br/>\n                    \n                    <span id=\"thumbHeart\" ref=\"thumbHeart\" className='heart' style={{position: 'absolute', cursor: 'pointer'}} onClick={this.heartClick.bind(this)}></span>\n                </div>\n                <br/><br/>\n\n                {/* 일정 추가 모달 */}\n                <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    className=\"spotmodal\"\n                    open={this.state.open}\n                    onClose={this.handleClose.bind(this)}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                    timeout: 500,\n                    }}\n                >\n                    <Fade in={this.state.open}>\n                    <div className=\"spotpaper\">\n                        <span className=\"spotmodalTitle\">일정 추가</span><br/>\n                        🏰&nbsp;&nbsp;{this.state.spotdata.title}<br/>\n                        🗺&nbsp;&nbsp;{this.state.spotdata.roadaddr}<br/>\n                        🗓&nbsp;&nbsp;여행 날짜\n                        <input type=\"date\" class=\"form-control form-control-sm\" ref=\"wishday\"></input>\n                        ⏰&nbsp;&nbsp;예정 시간\n                        <input type=\"time\" class=\"form-control form-control-sm\" ref=\"wishtime\"></input><br/>\n                        <div style={{textAlign: 'center'}}>\n                            <button type=\"button\" class=\"btn btn-warning spotmodalBtn\" onClick={this.insertWish.bind(this)}><b>추가</b></button>\n                        </div>\n                    </div>\n                    </Fade>\n                </Modal>\n\n                {/* 소개 */}\n                <div className=\"detailTitle\">\n                    <span className=\"detailTitleContent\" style={{backgroundColor:'white', color: '#3073BD'}}>\n                        &nbsp;&nbsp;&nbsp;소개&nbsp;&nbsp;&nbsp;\n                    </span>\n                </div>\n                <br/>\n                <div id=\"thumbIntro\">\n                    {star}<br/>\n                    {this.state.spotdata.introduction}\n                </div>\n                \n                {/* 주변 정보 */}\n                <div className=\"detailTitle\">\n                    <span className=\"detailTitleContent\" style={{backgroundColor:'white', color: '#3073BD'}}>\n                        &nbsp;&nbsp;주변 정보&nbsp;&nbsp;\n                    </span>\n                </div>\n                <br/>\n                \n                {/* 카카오 지도 */}\n                <MapComp longitude={this.state.spotdata.longitude} latitude={this.state.spotdata.latitude}\n                    title={this.state.spotdata.title}/>\n                <br/><br/>\n\n                <div className=\"detailTitle\">\n                    <span className=\"detailTitleContent\" style={{backgroundColor:'white', color: '#3073BD'}}>\n                        &nbsp;&nbsp;&nbsp;후기&nbsp;&nbsp;&nbsp;\n                    </span>\n                </div>\n                <br/>\n\n                {/* 후기 */}\n                <ReviewListComp contentsid={this.state.contentsid}/>\n\n                {/* alert 창 */}\n                <Dialog\n                    open={this.state.alertOpen}\n                    onClose={this.alertClose.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"일정 추가 완료\"}</DialogTitle>\n                    <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Mypage로 이동하여 확인하시겠습니까?\n                    </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                    <Button onClick={this.alertClose.bind(this)} color=\"primary\">\n                        NO\n                    </Button>\n                    <Button onClick={\n                        ()=>{\n                            this.setState({\n                                alertOpen: false\n                            })\n                            this.refs.thumbHeart.className=\"heart clickheart\";\n                            this.props.history.push(\"/mypage\");\n                        }\n                    } color=\"primary\" autoFocus>\n                        YES\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default DetailTourComp;","/Users/yang-mac/jeju-front-react/finalproject/src/component/header/menus/TourList.js",["474"],"import React, {Component} from \"react\";\n\nclass TourList extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n    \n    render(){\n        return(\n            <div>\n            </div>\n        )\n    }\n}\n\nexport default TourList;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/MemberUpdateFormComp.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/HotPlaceComp.js",["475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502"],"import React, {Component} from \"react\";\nimport {NavLink, Route} from \"react-router-dom\";\nimport store from \"../../../redux/store\";\nimport {actionType, mainViewType} from \"../../../redux/config\";\nimport TourList from '../../header/menus/TourList';\nimport TourPageComp from '../tour/TourPageComp';\n\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport BoardSample from \"./BoardSample\";\n\nfunction TabPanel(props) {\n    const {children, value, index, ...other} = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nexport default function HotPlaceComp() {\n    const [value, setValue] = React.useState(2);\n    const [selectedLocation, setSelectedLocation] = React.useState(\"제주\");\n\n    const handleChange = (event, newValue) => {\n        console.log(event, newValue);\n        setValue(newValue);\n    };\n\n    const setMainView = (mainView) => {\n        console.log(\"HotPlaceComp setMainView()\");\n        store.dispatch({\n            type: actionType.setMainView,\n            mainView: mainView\n        });\n    }\n\n    const clickLocation = (e) => {\n        e.preventDefault();\n        // console.log(selectedLocation, e.target.dataset.location);\n        setSelectedLocation(e.target.dataset.location);\n\n    }\n\n    return (\n        <div className=\"hotPlaceComp\">\n            <div className=\"hotPlace_location\">\n                <a href=\"#\" data-location=\"제주\" onClick={clickLocation.bind(this)}>제주</a>\n                <a href=\"#\" data-location=\"조천\" onClick={clickLocation.bind(this)}>조천</a>\n                <a href=\"#\" data-location=\"구좌\" onClick={clickLocation.bind(this)}>구좌</a>\n                <a href=\"#\" data-location=\"성산\" onClick={clickLocation.bind(this)}>성산</a>\n                <a href=\"#\" data-location=\"표선\" onClick={clickLocation.bind(this)}>표선</a>\n                <a href=\"#\" data-location=\"남원\" onClick={clickLocation.bind(this)}>남원</a>\n                <a href=\"#\" data-location=\"서귀\" onClick={clickLocation.bind(this)}>서귀</a>\n                <a href=\"#\" data-location=\"안덕\" onClick={clickLocation.bind(this)}>안덕</a>\n                <a href=\"#\" data-location=\"대정\" onClick={clickLocation.bind(this)}>대정</a>\n                <a href=\"#\" data-location=\"한경\" onClick={clickLocation.bind(this)}>한경</a>\n                <a href=\"#\" data-location=\"한림\" onClick={clickLocation.bind(this)}>한림</a>\n                <a href=\"#\" data-location=\"애월\" onClick={clickLocation.bind(this)}>애월</a>\n                <a href=\"#\" data-location=\"우도\" onClick={clickLocation.bind(this)}>우도</a>\n            </div>\n            <div className=\"hotPlace_sample\">\n                <BoardSample location={selectedLocation}/>\n            </div>\n\n        </div>\n    )\n}\n\n\n/*\n<Paper square>\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n                    <Tab label=\"Jeju\" {...a11yProps(0)} />\n                    <Tab label=\"Jocheon\" {...a11yProps(1)} />\n                    <Tab label=\"Gujwa\" {...a11yProps(2)} />\n                    <Tab label=\"Sungsan\" {...a11yProps(3)} />\n                    <Tab label=\"Pyoseon\" {...a11yProps(4)} />\n                    <Tab label=\"Namwon\" {...a11yProps(5)} />\n                    <Tab label=\"Seogwipo\" {...a11yProps(6)} />\n                    <Tab label=\"Andeok\" {...a11yProps(7)} />\n                    <Tab label=\"Daejung\" {...a11yProps(8)} />\n                    <Tab label=\"Hangyeong\" {...a11yProps(9)} />\n                    <Tab label=\"Hanrim\" {...a11yProps(10)} />\n                    <Tab label=\"Aewol\" {...a11yProps(11)} />\n                    <Tab label=\"Udo\" {...a11yProps(12)} />\n                </Tabs>\n                <TabPanel value={value} index={0}>\n                    <BoardSample/>\n                </TabPanel>\n                <TabPanel value={value} index={1}>\n                </TabPanel>\n                <TabPanel value={value} index={2}>\n                </TabPanel>\n                <TabPanel value={value} index={3}>\n                </TabPanel>\n                <TabPanel value={value} index={4}>\n                </TabPanel>\n                <TabPanel value={value} index={5}>\n                </TabPanel>\n                <TabPanel value={value} index={6}>\n                </TabPanel>\n                <TabPanel value={value} index={7}>\n                </TabPanel>\n                <TabPanel value={value} index={8}>\n                </TabPanel>\n                <TabPanel value={value} index={9}>\n                </TabPanel>\n                <TabPanel value={value} index={10}>\n                </TabPanel>\n                <TabPanel value={value} index={11}>\n                </TabPanel>\n                <TabPanel value={value} index={12}>\n                </TabPanel>\n            </Paper>\n */\n\n\n/*\n<a href=\"/tourlist/jeju     \">제주</a>\n<a href=\"/TourList/jocheon  \">조천</a>\n<a href=\"/TourList/gujwa    \">구좌</a>\n<a href=\"/TourList/sungsan  \">성산</a>\n<a href=\"/TourList/pyoseon  \">표선</a>\n\n<a href=\"/TourList/namwon   \">남원</a>\n<a href=\"/TourList/seogwipo \">서귀</a><br/>\n<a href=\"/TourList/andeok   \">안덕</a>\n<a href=\"/TourList/daejung  \">대정</a>\n<a href=\"/TourList/hangyeong\">한경</a>\n\n<a href=\"/TourList/hanrim   \">한림</a>\n<a href=\"/TourList/aewol    \">애월</a>\n<a href=\"/TourList/udo      \">우도</a><br/><br/>\n*/\n\n\n{/* <NavLink exact to=\"/tourlist/jeju\"\n         onClick={() => {\n             console.log(\"TourList NavLink onClick\");\n             this.setMainView(mainViewType.TourList);\n         }}\n>제주</NavLink> */\n}\n{/* <NavLink exact to=\"/tourlist/jocheon\"\n         onClick={() => {\n             console.log(\"TourList NavLink onClick\");\n             this.setMainView(mainViewType.TourList);\n         }}\n>조천</NavLink>\n<NavLink exact to=\"/tourlist/gujwa\"\n         onClick={() => {\n             console.log(\"TourList NavLink onClick\");\n             this.setMainView(mainViewType.TourList);\n         }}\n>구좌</NavLink>\n<NavLink exact to=\"/tourlist/sungsan\"\n         onClick={() => {\n             console.log(\"TourList NavLink onClick\");\n             this.setMainView(mainViewType.TourList);\n         }}\n>성산</NavLink>\n<NavLink exact to=\"/tourlist/pyoseon\"\n         onClick={() => {\n             console.log(\"TourList NavLink onClick\");\n             this.setMainView(mainViewType.TourList);\n         }}\n>표선</NavLink>\n<NavLink exact to=\"/tourlist/namwon\"\n         onClick={() => {\n             console.log(\"TourList NavLink onClick\");\n             this.setMainView(mainViewType.TourList);\n         }}\n>남원</NavLink>\n<NavLink exact to=\"/tourlist/seogwipo\"\n         onClick={() => {\n             console.log(\"TourList NavLink onClick\");\n             this.setMainView(mainViewType.TourList);\n         }}\n>서귀포</NavLink>\n<br/>\n<NavLink exact to=\"/tourlist/andeok\"\n         onClick={() => {\n             console.log(\"TourList NavLink onClick\");\n             this.setMainView(mainViewType.TourList);\n         }}\n>안덕</NavLink>\n<NavLink exact to=\"/tourlist/daejung\"\n         onClick={() => {\n             console.log(\"TourList NavLink onClick\");\n             this.setMainView(mainViewType.TourList);\n         }}\n>대정</NavLink>\n<NavLink exact to=\"/tourlist/hangyeong\"\n         onClick={() => {\n             console.log(\"TourList NavLink onClick\");\n             this.setMainView(mainViewType.TourList);\n         }}\n>한경</NavLink>\n<NavLink exact to=\"/tourlist/hanrim\"\n         onClick={() => {\n             console.log(\"TourList NavLink onClick\");\n             this.setMainView(mainViewType.TourList);\n         }}\n>한림</NavLink>\n<NavLink exact to=\"/tourlist/aewol\"\n         onClick={() => {\n             console.log(\"TourList NavLink onClick\");\n             this.setMainView(mainViewType.TourList);\n         }}\n>애월</NavLink>\n<NavLink exact to=\"/tourlist/udo\"\n         onClick={() => {\n             console.log(\"TourList NavLink onClick\");\n             this.setMainView(mainViewType.TourList);\n         }}\n>우도</NavLink> */\n}\n\n\n// <Route path=\"/TourList/:name?\" component={TourList}></Route>\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/DetailReviewComp.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/MapComp.js",["503","504","505","506","507","508","509","510","511","512","513","514","515"],"/*global kakao */\nimport React, { useEffect, useState } from \"react\";\nimport './kakaomap.css';\nimport Box from '@material-ui/core/Box';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\nimport LocalCafeIcon from '@material-ui/icons/LocalCafe';\nimport HotelIcon from '@material-ui/icons/Hotel';\n\nconst MapComp=(props)=> {\n\n    let longitude = useState(0);\n    let latitude = useState(0);\n    let title = useState(\"\");\n    const [value, setValue] = React.useState(0);\n\n    console.log(\"longitude : \" + props.longitude);\n    useEffect(() => {\n        \n        longitude = props.longitude;\n        latitude = props.latitude;\n        title = props.title;\n\n        mapscript();\n    });\n\n  const mapscript = () => {\n    \n    //let markers = [];\n    let placeOverlay = new kakao.maps.CustomOverlay({zIndex:1}), \n        contentNode = document.createElement('div'), // 커스텀 오버레이의 컨텐츠 엘리먼트 입니다 \n        markers = [], // 마커를 담을 배열입니다\n        currCategory = '';\n\n\n    let mapContainer = document.getElementById(\"map\"), mapOption = {\n        center: new kakao.maps.LatLng(latitude, longitude), // 지도의 중심좌표\n        level: 3 // 지도의 확대 레벨\n    };\n\n    const map = new kakao.maps.Map(mapContainer, mapOption);\n    let ps = new kakao.maps.services.Places(map);\n    \n    //마커가 표시 될 위치\n    let markerPosition = new kakao.maps.LatLng(\n        latitude,\n        longitude\n    );\n\n    // 마커를 생성\n    let marker = new kakao.maps.Marker({\n        map:map,\n      position: markerPosition,\n      title: title\n    });\n\n    let content = '<div className=\"wrap\"><div className=\"info\"><div className=\"mtitle\">' + title\n            + '<div className=\"close\" onClick={this.closeOverlay.bind(this)} title=\"닫기\"></div></div></div></div>';\n\n    //마커 위에 커스텀오버레이를 표시합니다\n    //마커를 중심으로 커스텀 오버레이를 표시하기위해 CSS를 이용해 위치를 설정했습니다\n    let overlay = new kakao.maps.CustomOverlay({\n        content: content,\n        map: map,\n        position: marker.getPosition()       \n    });\n    //마커를 클릭했을 때 커스텀 오버레이를 표시합니다\n    kakao.maps.event.addListener(marker, 'click', function() {\n        overlay.setMap(map);\n    });\n    // 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\n    let infowindow = new kakao.maps.InfoWindow({zIndex:1});\n\n    //커스텀 오버레이를 닫기 위해 호출되는 함수입니다 \n    function closeOverlay() {\n        overlay.setMap(null);     \n    }\n    // 지도에 idle 이벤트를 등록합니다\n    kakao.maps.event.addListener(map, 'idle', searchPlaces);\n    // 커스텀 오버레이의 컨텐츠 노드에 css class를 추가합니다 \n    contentNode.className = 'placeinfo_wrap';\n    // 커스텀 오버레이의 컨텐츠 노드에 mousedown, touchstart 이벤트가 발생했을때\n    // 지도 객체에 이벤트가 전달되지 않도록 이벤트 핸들러로 kakao.maps.event.preventMap 메소드를 등록합니다 \n    addEventHandle(contentNode, 'mousedown', kakao.maps.event.preventMap);\n    addEventHandle(contentNode, 'touchstart', kakao.maps.event.preventMap);\n    // 커스텀 오버레이 컨텐츠를 설정합니다\n    placeOverlay.setContent(contentNode);  \n    // 각 카테고리에 클릭 이벤트를 등록합니다\n    addCategoryClickEvent();   \n    \n    //searchPlaces();\n\n    function addEventHandle(target, type, callback) {\n        if (target.addEventListener) {\n            target.addEventListener(type, callback);\n        } else {\n            target.attachEvent('on' + type, callback);\n        }\n    }\n    // 키워드 검색을 요청하는 함수입니다\n    function searchPlaces() {\n        if (!currCategory) {\n            return;\n        }\n        \n        // 커스텀 오버레이를 숨깁니다 \n        placeOverlay.setMap(null);\n        // 지도에 표시되고 있는 마커를 제거합니다\n        removeMarker();\n        \n        ps.categorySearch(currCategory, placesSearchCB, {useMapBounds:true});\n        \n    }\n    // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\nfunction placesSearchCB(data, status, pagination) {\n\n    if (status === kakao.maps.services.Status.OK) {\n         // 정상적으로 검색이 완료됐으면 지도에 마커를 표출합니다\n\n         displayPlaces(data);\n         \n      // 페이지 번호를 표출합니다\n         displayPagination(pagination);\n     } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\n         // 검색결과가 없는경우 해야할 처리가 있다면 이곳에 작성해 주세요\n         displayPlaces(null);\n     } else if (status === kakao.maps.services.Status.ERROR) {\n         // 에러로 인해 검색결과가 나오지 않은 경우 해야할 처리가 있다면 이곳에 작성해 주세요\n         \n     }\n }\n // 검색 결과 목록과 마커를 표출하는 함수입니다\n function displayPlaces(places) {\n    // 몇번째 카테고리가 선택되어 있는지 얻어옵니다\n     // 이 순서는 스프라이트 이미지에서의 위치를 계산하는데 사용됩니다\n     var order = document.getElementById(currCategory).getAttribute('data-order');\n     var listEl = document.getElementById('placesList'), \n     menuEl = document.getElementById('menu_wrap'),\n     fragment = document.createDocumentFragment(), \n     bounds = new kakao.maps.LatLngBounds(), \n     listStr = '';\n  // 검색 결과 목록에 추가된 항목들을 제거합니다\n     removeAllChildNods(listEl);\n     // 지도에 표시되고 있는 마커를 제거합니다\n     removeMarker();\n     \n     if(places == null){\n        itemEl = getListItem(-1, null);\n        fragment.appendChild(itemEl);\n     }\n    else{\n        for ( var i=0; i<places.length; i++ ) {\n            // 마커를 생성하고 지도에 표시합니다\n            var placePosition = new kakao.maps.LatLng(places[i].y, places[i].x),\n                marker = addMarker(placePosition, i), \n                itemEl = getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다\n            // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\n            // LatLngBounds 객체에 좌표를 추가합니다\n            bounds.extend(placePosition);\n            // 마커와 검색결과 항목에 mouseover 했을때\n            // 해당 장소에 인포윈도우에 장소명을 표시합니다\n            // mouseout 했을 때는 인포윈도우를 닫습니다\n            (function(marker, place) {\n                kakao.maps.event.addListener(marker, 'click', function() {\n                    displayPlaceInfo(place);\n                });\n            })(marker, places[i]);\n            fragment.appendChild(itemEl);\n        }\n    }\n    \n     // 검색결과 항목들을 검색결과 목록 Elemnet에 추가합니다\n     listEl.appendChild(fragment);\n    // menuEl.scrollTop = 0;\n     // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\n     //map.setBounds(bounds);\n }\n // 검색결과 항목을 Element로 반환하는 함수입니다\n function getListItem(index, places) {\n     \n     if(index == -1){\n        var el = document.createElement('li'),\n        itemStr = \"<div><br/>검색 결과가 존재하지 않습니다.</div>\";\n        el.innerHTML = itemStr;\n        el.className = 'item';\n    \n        return el;\n     }\n    else{\n        var el = document.createElement('li'),\n        itemStr = '<table className=\"table table-bordered\" id=\"placeListTable\"><tr>' +\n                    '<td style={{width:\"20%\"}}><span class=\"markerbg marker_' + (index+1) + '\"></span></td>' +\n                    '<td style={{width:\"60%\"}}><a class=\"info\" href=\"' + places.place_url + '\" target=\"_blank\" title=\"' + places.place_name + '\">' +\n                    '<p>' + places.place_name + '</p>';\n        itemStr += '<span class=\"gray\">' +  places.address_name  + '</span>';      \n        itemStr += '<span class=\"tel\">' + places.phone  + '</span>' + \n                    '</a></td>' +\n                    '<td style={{width:\"20%\"}}>일정추가</td></tr></table>';\n                    el.innerHTML = itemStr;\n                    el.className = 'item';\n                \n                    return el;\n    }\n    \n     \n }\n // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\n function addMarker(position, idx, title) {\n     var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png', // 마커 이미지 url, 스프라이트 이미지를 씁니다\n         imageSize = new kakao.maps.Size(36, 37),  // 마커 이미지의 크기\n         imgOptions =  {\n             spriteSize : new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기\n             spriteOrigin : new kakao.maps.Point(0, (idx*46)+10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n             offset: new kakao.maps.Point(13, 37) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\n         },\n         markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\n             marker = new kakao.maps.Marker({\n             position: position, // 마커의 위치\n             image: markerImage \n         });\n     marker.setMap(map); // 지도 위에 마커를 표출합니다\n     markers.push(marker);  // 배열에 생성된 마커를 추가합니다\n     return marker;\n }\n // 지도 위에 표시되고 있는 마커를 모두 제거합니다\n function removeMarker() {\n     for ( var i = 0; i < markers.length; i++ ) {\n         markers[i].setMap(null);\n     }   \n     markers = [];\n }\n // 검색결과 목록 하단에 페이지번호를 표시는 함수입니다\n function displayPagination(pagination) {\n     var paginationEl = document.getElementById('pagination'),\n         fragment = document.createDocumentFragment(),\n         i; \n     // 기존에 추가된 페이지번호를 삭제합니다\n     while (paginationEl.hasChildNodes()) {\n         paginationEl.removeChild (paginationEl.lastChild);\n     }\n     for (i=1; i<=pagination.last; i++) {\n         var el = document.createElement('a');\n         el.href = \"#\";\n         el.innerHTML = i;\n         if (i===pagination.current) {\n             el.className = 'on';\n         } else {\n             el.onclick = (function(i) {\n                 return function() {\n                     pagination.gotoPage(i);\n                 }\n             })(i);\n         }\n         fragment.appendChild(el);\n     }\n     paginationEl.appendChild(fragment);\n }\n\n    // 클릭한 마커에 대한 장소 상세정보를 커스텀 오버레이로 표시하는 함수입니다\n    function displayPlaceInfo (place) {\n        var content = '<div class=\"placeinfo\">' +\n                        '   <a class=\"title\" href=\"' + place.place_url + '\" target=\"_blank\" title=\"' + place.place_name + '\">' + place.place_name + '</a>';   \n\n        if (place.road_address_name) {\n            content += '    <span title=\"' + place.road_address_name + '\">' + place.road_address_name + '</span>' +\n                        '  <span class=\"jibun\" title=\"' + place.address_name + '\">(지번 : ' + place.address_name + ')</span>';\n        }  else {\n            content += '    <span title=\"' + place.address_name + '\">' + place.address_name + '</span>';\n        }                \n    \n        content += '    <span class=\"tel\">' + place.phone + '</span>' + \n                    '</div>' + \n                    '<div class=\"after\"></div>';\n\n        contentNode.innerHTML = content;\n        placeOverlay.setPosition(new kakao.maps.LatLng(place.y, place.x));\n        placeOverlay.setMap(map);  \n    }\n\n    // 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\n    // 인포윈도우에 장소명을 표시합니다\n    // function displayInfowindow(marker, place) {\n    //     //var content = '<div style=\"padding:5px;z-index:1;\">' + title + '</div>';\n        \n    //     var content = '<div class=\"placeinfo\">' +\n    //                     '   <a className=\"title\" href=\"' + place.place_url + '\" target=\"_blank\" title=\"' + place.place_name + '\">' + place.place_name + '</a>';   \n                            \n    //     if (place.road_address_name) {\n    //         content += '    <span title=\"' + place.road_address_name + '\">' + place.road_address_name + '</span>' +\n    //                     '  <span className=\"jibun\" title=\"' + place.address_name + '\">(지번 : ' + place.address_name + ')</span>';\n    //     }  else {\n    //         content += '    <span title=\"' + place.address_name + '\">' + place.address_name + '</span>';\n    //     }                \n        \n    //     content += '    <span className=\"tel\">' + place.phone + '</span>' + \n    //                 '</div>' + \n    //                 '<div className=\"after\"></div>';\n                    \n    //     infowindow.setContent(content);\n    //     infowindow.open(map, marker);\n    // }\n    // 검색결과 목록의 자식 Element를 제거하는 함수입니다\n    function removeAllChildNods(el) {   \n        while (el.hasChildNodes()) {\n            el.removeChild (el.lastChild);\n        }\n    }\n  \n    //각 카테고리에 클릭 이벤트를 등록합니다\n    function addCategoryClickEvent() {\n        var category = document.getElementById('category'),\n            children = category.children;\n        for (var i=0; i<children.length; i++) {\n            children[i].onclick = onClickCategory;\n        }\n    }\n    //카테고리를 클릭했을 때 호출되는 함수입니다\n    function onClickCategory() {\n        var id = this.id, className = this.className;\n\n        placeOverlay.setMap(null);\n        if (className === 'on') {\n            currCategory = '';\n            // changeCategoryClass();\n            removeMarker();\n        } else {\n            currCategory = id;\n            // changeCategoryClass(this);\n            searchPlaces();\n        }\n    }\n    //클릭된 카테고리에만 클릭된 스타일을 적용하는 함수입니다\n    // function changeCategoryClass(el) {\n    //     var category = document.getElementById('category'),\n    //         children = category.children,\n    //         i;\n    //     for ( i=0; i<children.length; i++ ) {\n    //         children[i].className = '';\n    //     }\n    //     if (el) {\n    //         el.className = 'on';\n    //     } \n    // } \n    // 마커를 지도 위에 표시\n    marker.setMap(map);\n  };\n\n  return (\n      <div>\n          {/* <div id=\"map\" style={{ width: \"500px\", height: \"500px\" }}></div> */}\n          \n          <Box className=\"map_wrap\" style={{textAlign: 'center'}}\n                        display=\"flex\"\n                        flexWrap=\"wrap\"\n                        p={1}\n                        m={1}\n                        bgcolor=\"background.paper\"\n                        justifyContent=\"center\"\n                        css={{ maxWidth: '100%' }}\n                    >\n                        \n                        <Box m={1} id=\"map\" style={{position:'relative', overflow:'hidden'}}>\n                            <input type=\"hidden\" value={title} id=\"keyword\" size=\"15\"></input>\n                        </Box>\n\n                        <br/><br/>\n                        \n                        <Box m={1} id=\"placeListBox\">\n                            <BottomNavigation\n                                    id=\"category\"\n                                    value={value}\n                                    onChange={(event, newValue) => {\n                                        setValue(newValue);\n                                    }}\n                                    showLabels\n                                    >\n                                    <BottomNavigationAction id=\"FD6\" data-order=\"0\" label=\"Food\" icon={<RestaurantIcon />} \n                                        style={{borderLeft: '1px solid #ddd', borderTop: '1px solid #ddd', borderBottom: '1px solid #ddd'}} />\n                                    <BottomNavigationAction id=\"CE7\" data-order=\"1\" label=\"Cafe\" icon={<LocalCafeIcon />} style={{border: '1px solid #ddd'}} />\n                                    <BottomNavigationAction id=\"AD5\" data-order=\"2\" label=\"Rooms\" icon={<HotelIcon />}\n                                        style={{borderRight: '1px solid #ddd', borderTop: '1px solid #ddd', borderBottom: '1px solid #ddd'}}/>\n                                    </BottomNavigation>\n                            <div id=\"menu_wrap\" class=\"bg_white\">\n                                <ul id=\"placesList\">\n                                    <li style={{marginTop: '30px'}}>원하시는 카테고리를 선택해주세요.</li>\n                                </ul>\n                                <div id=\"pagination\"></div>\n                            </div>\n                        </Box>\n                        \n                    </Box>\n\n          \n          {/* <div style={{display:'flex', width:'100%'}}>\n                \n                <div className=\"map_wrap\" className=\"map_wrap\" style={{textAlign: 'center', display:'flex', flexShrink:'1', justifyContent:'center'}}>\n                    <div id=\"map\" style={{position:'relative', overflow:'hidden'}}>\n                    <ul id=\"category\">\n                        <li id=\"FD6\" data-order=\"0\"> \n                            <span className=\"category_bg restaurant\"></span>\n                            음식점\n                        </li>  \n                        <li id=\"CE7\" data-order=\"1\"> \n                            <span className=\"category_bg cafe\"></span>\n                            카페\n                        </li>\n                        <li id=\"AD5\" data-order=\"2\"> \n                            <span className=\"category_bg hotel\"></span>\n                            숙박\n                        </li>     \n                    </ul>   \n                    <input type=\"hidden\" value={title} id=\"keyword\" size=\"15\"></input>\n                    </div>\n                    \n                </div>\n                <br/><br/>\n                <div style={{display:'flex', flexShrink:'1', justifyContent:'center'}}>\n                    <ul id=\"placesList\"></ul>\n                    <div id=\"pagination\"></div>\n                </div>\n            </div> */}\n      </div>   \n  );\n}\n\nexport default MapComp;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/ReviewListComp.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/ReviewItemComp.js",["516"],"import React,{Component} from 'react';\nimport axios from 'axios';\n\nclass ReviewItemComp extends Component {\n\n\n    render() {\n        const {row}=this.props;\n        const photoname = row.photoname===\"no\"?\"\":row.photo;\n        return (\n            <tr>\n                <td style={{width:'15%'}}>\n                    <img src={photoname} alt=\"이미지 없음\" style={{width:'100px', height:'100px'}}/>\n                </td>\n                <td valign=\"top\" style={{width:'50%'}} align=\"left\">\n                    <span style={{color: '#F0CD58', fontSize: '18px'}}>★★★★★</span>\n                    <br/><br/>\n                    <p style={{fontSize: '12pt'}}>{row.content}</p>\n                </td>\n                <td valign=\"bottom\" style={{width:'15%'}}>\n                    <div style={{float: 'right'}}>\n                        <b>{row.memNum}</b> | {row.writeday}\n                    </div>\t\t\n                </td>\n            </tr> \n        );\n    }\n}\n\nexport default ReviewItemComp;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/EtcBoardComp.js",["517"],"import React, {Component} from 'react';\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport BoardSample from \"./BoardSample\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\n\nfunction TabPanel(props) {\n    const {children, value, index, ...other} = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nexport default function EtcBoardComp() {\n\n    const [value, setValue] = React.useState(2);\n\n    const handleChange = (event, newValue) => {\n        console.log(event, newValue);\n        setValue(newValue);\n    };\n\n    /**\n     * Notice | ShareRestaurant | ShareMyPlan\n     */\n    return (\n        <div className=\"etcBoardComp\">\n            <Paper square>\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n                    <Tab label=\"Notice\" {...a11yProps(0)} />\n                    <Tab label=\"Share Restaurant\" {...a11yProps(1)} />\n                    <Tab label=\"Share MyPlan\" {...a11yProps(2)} />\n                </Tabs>\n                <TabPanel value={value} index={0}>\n                    <BoardSample/>\n                </TabPanel>\n                <TabPanel value={value} index={1}>\n                </TabPanel>\n                <TabPanel value={value} index={2}>\n                </TabPanel>\n            </Paper>\n        </div>\n    );\n}\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/MainPhotoComp.js",["518","519","520","521","522","523"],"import React, {Component} from 'react';\nimport jeju1 from \"../../../image/jeju1.jpg\";\nimport jeju2 from \"../../../image/jeju2.jpg\";\nimport jeju3 from \"../../../image/jeju3.jpeg\";\nimport udo1 from \"../../../image/udo1.jpg\";\nimport gsap from \"gsap\";\n// import WaveBorder from \"./WaveBorder\";\n// import {createMuiTheme, MuiThemeProvider, WithStyles} from \"@material-ui/core\";\n// import {ThemeProvider} from 'styled-components';\n// import theme from \"./theme\";\n// import PropTypes from \"prop-types\";\n// import styledComponents from \"styled-components\";\n\nclass MainPhotoComp extends Component {\n\n\n    constructor(props) {\n        super(props);\n\n\n    }\n\n    setImageScroll = (photoNum, preNum = 4) => {\n        const duration = 3;\n        const imgCnt = 4;\n        let arrImg = new Array();\n\n        //over index setting\n        if (photoNum > imgCnt) {\n            photoNum = 1;\n        }\n\n        //img element array setting.\n        for (let i = 1; i <= imgCnt; i++) {\n            let tempImgIdx = (photoNum - 1) + i;\n            tempImgIdx = tempImgIdx > imgCnt ? tempImgIdx - imgCnt : tempImgIdx;\n            arrImg.push(document.querySelector(`img.mainPhotoComp_img${tempImgIdx}`));\n        }\n\n        if (arrImg[0] != null) {\n            //zIndex setting.\n            for (let i = 0; i < imgCnt; i++) {\n                arrImg[i].style.zIndex = imgCnt - i;\n            }\n\n            //tween action.\n            gsap.fromTo(`.mainPhotoComp_img${photoNum}`\n                , {\n                    opacity: 0,\n                }, {\n                    opacity: 1,\n                    duration: duration,\n                });\n            gsap.fromTo(`.mainPhotoComp_img${preNum}`\n                , {\n                    // opacity: 1,\n                }, {\n                    opacity: 0,\n                    duration: duration,\n                });\n\n            //next action preparing.\n            setTimeout(this.setImageScroll.bind(this, photoNum + 1, photoNum), (duration + 2) * 1000);\n        }\n    }\n\n    componentDidMount() {\n        for (let i = 0; i < 4; i++) {\n            gsap.killTweensOf(`.mainPhotoComp_img${i + 1}`);\n        }\n        this.setImageScroll(1, 4);\n    }\n\n    render() {\n        return (\n            <div className=\"mainPhotoComp\">\n                <div>\n                    <img className=\"mainPhotoComp_img1\" src={jeju1}/>\n                </div>\n                <div>\n                    <img className=\"mainPhotoComp_img2\" src={jeju2}/>\n                </div>\n                <div>\n                    <img className=\"mainPhotoComp_img3\" src={jeju3}/>\n                </div>\n                <div>\n                    <img className=\"mainPhotoComp_img4\" src={udo1}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MainPhotoComp\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/MyPlanComp.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/Tourintro.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/ShareBoardUpdateForm.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/theme.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/WaveBorder.js",["524","525","526","527"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core\";\nimport jeju1 from \"../../../image/jeju1.jpg\";\nimport jeju2 from \"../../../image/jeju2.jpg\";\nimport jeju3 from \"../../../image/jeju3.jpeg\";\nimport udo1 from \"../../../image/udo1.jpg\";\nimport Logo2 from \"../../../image/logo2.png\";\n\nconst styles = {\n    waves: {\n        position: \"absolute\",\n        width: \"100%\",\n        // marginBottom: -7,\n        height: \"7vw\",\n        minHeight: \"7vw\",\n        // \"z-index\": \"-5\",\n        // bottom: \"-1000\",\n    },\n    \"@keyframes moveForever\": {\n        from: {transform: \"translate3d(-90px, 0, 0)\"},\n        to: {transform: \"translate3d(85px, 0, 0)\"}\n    },\n    parallax: {\n        \"& > use\": {\n            animation: \"$moveForever 4s cubic-bezier(0.62, 0.5, 0.38, 0.5) infinite\",\n            animationDelay: props => `-${props.animationNegativeDelay}s`\n        }\n    },\n    content: {\n        textAlign: \"center\",\n        backgroundColor: \"#2d55aa\",\n        // minHeight: \"75vh\",\n        // margin: \"-.1em 0 0 0\",\n        color: \"#ffdd55\",\n        fontSize: \"2em\",\n        fontWeight: \"300\",\n        userSelect: \"none\",\n        cursor: \"default\",\n        outline: \"none\",\n    },\n};\n\nfunction WaveBorder(props) {\n    const id = String(Math.random());\n    const {\n        className,\n        lowerColor,\n        upperColor,\n        classes,\n        animationNegativeDelay,\n        ...rest\n    } = props;\n    return (\n        <div className={className} style={{background: upperColor}} {...rest}>\n            {/* <img className=\"mainPhotoComp_img1\" src={jeju1}/> */}\n            <svg\n                className={classes.waves}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                xlink=\"http://www.w3.org/1999/xlink\"\n                viewBox=\"0 24 150 28\"\n                preserveAspectRatio=\"none\"\n                shapeRendering=\"auto\">\n                <defs>\n                    <path\n                        id={id}\n                        d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\"\n                    />\n                </defs>\n                <g className={classes.parallax}>\n                    <use href={`#${id}`} x=\"48\" y=\"6\" fill={lowerColor}/>\n                </g>\n            </svg>\n            {/*<div className=\"footerComp\">*/}\n            <div>\n                {/* <hr/> */}\n                <div className=\"content\">\n                    <br/>\n                    <img src={Logo2}\n                         style={{width: \"150px\"}}\n                         alt=\"logo2\"/>\n                    <br/>\n                    (주)멘도롱소랑 | 경기도 서초구 강남대로 459 (서초동 1300-34)<br/>\n                    사업자 번호 147-14-12345 | 전화번호:02-123-1234 | 팩스 02-1234-1234 | 이메일 help@naver.com\n                </div>\n            </div>\n        </div>\n    );\n}\n\nWaveBorder.propTypes = {\n    lowerColor: PropTypes.string.isRequired,\n    upperColor: PropTypes.string.isRequired,\n    classes: PropTypes.object.isRequired,\n    animationNegativeDelay: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(WaveBorder);\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/NaverLoginBtnComp.js",["528","529","530","531","532","533","534"],"import { getSuggestedQuery } from '@testing-library/react';\nimport React , { Component, useEffect, useState } from 'react';\nimport reactDOM from 'react-dom';\nimport GoogleLogin from 'react-google-login';\nimport { refreshTokenSetup } from \"./refreshToken\";\nimport { URL } from \"../../../redux/config\";\n\n//window에 있는 naver 비구조화 할당하여 선언한다.\n//window객체에서 뽑아야 하는 naver 파라미터는 global로\n//선언해주지않으면사용이불가한다.\nconst { naver } = window;\n\n\n\nexport default function NaverLoginBtnComp () {\n    \n    const [userData, setUserData] = useState({});\n    \n    const Login = () => {\n        Naver();\n        UserProfile();\n    }\n\n    useEffect(Login, []);\n\n    //client_id 와 redirect_uri 등록\n    //JavaScript용 라이브러리 동작에 필요한 기본정보를 설정하는 코드\n\n    //사용 가능한 Option\n    //color: 버튼 색상. white, green\n    //type: 버튼 타입. 1(버튼형), 2(작은 배너), 3(큰 배너)\n    //height: 배너 및 버튼 높이 (사용자 지정값 px)\n    const Naver = () => {\n        \n        \n\n        let naverLogin = new naver.LoginWithNaverId({\n            clientId: 'dPXRHN5aH3Xl6lXxm7bn',\n            callbackUrl: \"http://localhost:3000/login?naver=true\",\n            isPopup: false, // 팝업을 통한 연동처리 여부\n            loginButton: {color: \"green\", type: 3, height: 60},\n            callbackHandle: true\n            // callback 페이지가 분리되었을 경우에 callback 페이지에서는 callback처리를 해줄수 있도록 설정합니다\n        });\n        \n\n        // 설정정보를 초기화하고 연동을 준비\n        naverLogin.init();\n        console.log(naverLogin.getLoginStatus());\n\n        \n\n        \n\n        naverLogin.getLoginStatus((status) => {\n            if (status) {\n                console.log(status);\n                const email = naverLogin.user.getEmail();\n                const name = naverLogin.user.getNickName();\n                const profileImage = naverLogin.user.getProfileImage();\n                const birthday = naverLogin.user.getBirthday();\n                const id = naverLogin.user.getId();\n                const age = naverLogin.user.getAge();\n                const hp = naverLogin.user.getMobile();\n                console.log(\"네이버로그인상태 : \" + email, name, profileImage, birthday, id, age, hp);\n                \n            } else {\n                console.log('AccessToken이 올바르지 않습니다.');\n            }\n        });\n\n        window.addEventListener('load', function() {\n            naverLogin.getLoginStatus(function (status) {\n                if (status && naver) {\n                    // 필수적으로 받아야하는 프로필 정보가 있다면 callback처리 시점에 체크\n                    var email = naverLogin.user.getEmail();\n                    var name = naverLogin.user.getNickName();\n                    var profileImage = naverLogin.user.getProfileImage();\n                    var birthday = naverLogin.user.getBirthday();\n                    var id = naverLogin.user.getId();\n                    var age = naverLogin.user.getAge();\n                    var hp = naverLogin.user.getMobile();\n                    \n                    if( email == undefined || email == null ) {\n                        alert(\"이메일은 필수정보입니다. 정보제공을 동의해주세요.\");\n                        // 사용자 정보 재동의를 위하여 다시 네아로 동의페이지로 이동함\n                        naverLogin.reprompt();\n                        return;\n                    }\n                    \n                    alert(email);\n                    alert(name);\n                    alert(profileImage);\n                    alert(birthday);\n                    alert(id);\n                    alert(hp);\n                    alert(age+ \"세\");\n                    // 처리후 되돌아갈 곳\n                    // window.location.replace(\"http://localhost:3000/login?naver=true\");\n                    \n                } else {\n                    console.log(\"callback 처리에 실패하였습니다.\");\n                    console.log(status);\n                }\n            });\n        });\n    }\n\n    const UserProfile = () => {\n        window.location.href.includes('access_token') && GetUser();\n        function GetUser() {\n            console.log(\"window.location.href : \" + window.location.href);\n            const location = window.location.href.split('=')[1];\n            console.log(\"로케이션 : \" + location);\n            console.log(\"로케이션 0번째 : \" + window.location.href.split(\"=\")[0]);\n            console.log(\"로케이션 길이 : \" + window.location.href.split(\"=\").length);\n            for (var i=0; i < window.location.href.split(\"=\").length; i = i + 1)\n            {\n                console.log(window.location.href.split(\"=\")[i]);\n            }\n            var sharpPos = window.location.href.indexOf('#', 0);\n            console.log(\"# 위치 : \" + sharpPos);\n            \n            var sharpSplit = window.location.href.split(\"#\")[1];\n            var idxEq = sharpSplit.indexOf(\"=\");\n            var startPos = idxEq + 1;\n            var tokenEnd = sharpSplit.indexOf(\"&\");\n\n            const token = sharpSplit.substring(startPos, tokenEnd);\n            \n            console.log(\"token : \" + token);\n            fetch(`${URL}/account/sign-in`, {\n                method: \"GET\",\n                headers : {\n                    \"Content-type\" : \"application/json\",\n                    \"Authorization\" : token\n                },\n            })\n            .then(response => response.json())\n            .then(response => {\n                localStorage.setItem(\"access_token\", response.token);\n                localStorage.setItem(\"nickname\", response.nickname);\n                localStorage.setItem(\"image\",response.image);\n                setUserData({\n                    nickname : response.nickname,\n                    image : response.image\n                })\n            })\n            .catch(err => console.log(\"err : \", err));\n        }\n    };\n\n    \n\n    return (\n        //네이버 아이디로 로그인 버튼 생성\n        //자바스크립트용 라이브러리는 네이버 아이디로 로그인 버튼을\n        //자동으로 생성해주는 스크립트 기능이 포함되어있습니다.\n        //사용 가능한 로그인 버튼은 크기별 3가지 색상별 2가지씩\n        //총 6가지가 제공되며 \n        //각각 스크립트 내에 loginButton option을 통하여 세팅\n        <>\n        <div id=\"naverIdLogin\" onClick={Login}>\n            네이버로그인\n        </div>\n        </>\n    );\n}\n\n// class NaverLoginBtnComp extends Component\n// {\n//     // 백엔드에 정보를 저장하기 위해 state에 id, name, provider를 저장함\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             id: '',\n//             name: '',\n//             provider: '',\n//             accessToken: ''\n//         }\n//     }\n\n//     render() {\n        \n        \n        \n//         return (\n//             <>\n//             <br />\n//             <br />\n            \n//             </>\n//         );\n//     }\n// }\n\n// export default NaverLoginBtnComp;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/notice/BoardItem.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/auth/FaceBookLoginBtnComp.js",["535"],"import FacebookLogin from \"react-facebook-login\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nclass FaceBookLoginBtnComp extends Component {\n\n    state = {\n        isLoggedIn: false,\n        id: '',\n        name: '',\n        email: '',\n    }\n\n    responseFacebook = response => {\n        console.log(response);\n\n        this.setState({\n            isLoggedIn:true,\n            id: response.id,\n            name: response.name,\n            email: response.email,\n        });\n    };\n\n    componentClicked = () => console.log('clicked');\n\n    render() {\n\n        let fbContent;\n\n        if(this.state.isLoggedIn) {\n            fbContent = (\n                <div>\n                    <h2>{this.state.name}</h2>\n                    Email : {this.state.email}\n                </div>\n            );\n        }\n        else {\n            fbContent = (\n                <FacebookLogin\n                    appId=\"513629929622627\"\n                    autoLoad={false} // 실행과 동시에 자동으로 로그인 팝업창이 뜸\n                    fields=\"name,email.picture\" // 어떤정보를 받아올지 입력하는 필드\n                    scope=\"public_profile,user_friends\"\n                    onClick={this.componentClicked} // this.바인딩 추가\n                    callback={this.responseFacebook} // this.바인딩 추가\n                />\n            );\n        }\n\n        return (\n            <div>\n                {fbContent}\n            </div>\n        );\n    }   \n}\n\nexport default FaceBookLoginBtnComp;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/Modal.js",["536"],"import React, { Component,useState } from 'react';\nimport './Modal.css'\n\nclass Modal extends Component {\n    render() {\n        // 열기, 닫기, 모달 헤더 텍스트를 부모로부터 받아옴\n        const { open, close, header } = this.props;\n\n        return (\n            <div className={ open ? 'openModal modal': 'modal' }>\n                { open ? (\n                    <section>\n                        <header>\n                            { header }\n                            <button className=\"close\" onClick={close} > &times; </button>\n                        </header>\n                        <main>\n                            {this.props.children}\n                        </main>\n                        {/* <footer>\n                            <button className=\"close\" onClick={close}> 댓글목록 </button>\n                        </footer> */}\n                    </section>\n                ) : null }\n            </div>\n        )\n    }\n}\n\nexport default Modal;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/ShareReview.js",["537","538"],"import React, { Component,useState } from 'react';\nimport axios from \"axios\";\nimport {URL} from '../../../redux/config';\nimport ReviewItem from './ReviewItem';\n\nclass ShareReview extends Component {\n    constructor(props){\n        super(props);\n\n        this.state={\n            listData:[]\n        }\n        this.regroup = this.props.regroup;\n    }\n\n     getList=()=>{\n        let url = URL + \"/share/list\";\n\n        axios.get(url)\n        .then(res=>{\n            this.setState({\n                listData: res.data\n            })\n          })\n\n     }\n\n    render() {\n        return (\n            <div>\n               {\n                    this.state.listData.map((row,idx)=>(\n                        <ReviewItem row={row} key={idx} list={this.getList.bind(this)}\n                            history={this.props.history}/>\n                    ))\n                 }\n            </div>\n        )\n    }\n}\n\nexport default ShareReview;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/shareboard/ReviewItem.js",["539","540","541","542","543"],"import React, {Component, useState} from 'react';\nimport {actionType, URL} from \"../../../redux/config\";\nimport axios from \"axios\";\nimport store from \"../../../redux/store\";\n\nclass ReviewItem extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            saveType: \"\",\n        }\n\n    }\n\n    onTriggerInput = (type = null) => {\n\n        const {row} = this.props;\n        var className = `.input_answer_${row.regroup}_${row.relevel}_${row.restep}`;\n        console.log(className);\n\n        let divInput = document.querySelector(className);\n\n        if (this.state.saveType == type || type == null) {\n            if (this.state.isOpen) {\n                divInput.style.display = \"none\";\n                this.setState({\n                    isOpen: false,\n                });\n            } else {\n                divInput.style.display = \"block\";\n                this.setState({\n                    isOpen: true,\n                    saveType: type,\n                });\n            }\n        } else {\n            divInput.style.display = \"block\";\n            this.setState({\n                isOpen: true,\n                saveType: type,\n            });\n        }\n    }\n\n    onSaveButton = () => {\n        console.log(this.state.saveType);\n        if (this.state.saveType == \"insert\") {\n            this.onInsertSubAnswer();\n        } else if (this.state.saveType == \"update\") {\n            this.onUpdateSubAnswer();\n        }\n    }\n\n    onInsertSubAnswer = () => {\n        // 리뷰 대댓글 추가.\n        let num = this.props.row.num;\n        let regroup = this.props.row.regroup;\n        let relevel = this.props.row.relevel;\n        let restep = this.props.row.restep;\n        let content = this.refs.content.value;\n        let star = 0;\n        let url = URL + \"/share/insert\" +\n            \"?\" +\n            \"relevel=\" + relevel +\n            \"&restep=\" + restep +\n            \"&regroup=\" + regroup;\n        let data = {\n            num: num,\n            // regroup: regroup,\n            // relevel: relevel,\n            // restep: restep,\n            content: content,\n            star: star,\n        }\n\n        console.log(url, data);\n\n        axios.post(url, data\n        ).then(res => {\n            console.log(\"onInsertAnswer res\", res);\n            store.dispatch({\n                type: actionType.shareBoardUpdate,\n            });\n            this.onTriggerInput();\n            this.refs.content.value = \"\";\n        }).catch(err => {\n            console.log(\"onInsertAnswer err\", err);\n        })\n    }\n\n    onDeleteSubAnswer = () => {\n        let num = this.props.row.num;\n        let regroup = this.props.row.regroup;\n        let url = URL + \"/share/deleteanswer\" +\n            \"?num=\" + num;\n\n        console.log(\"onDeleteData\", url);\n\n        if (window.confirm(\"삭제하시겠습니까?\")) {\n            axios.post(url\n            ).then(res => {\n                console.log(\"onDeleteData() res\", res);\n                store.dispatch({\n                    type: actionType.shareBoardUpdate,\n                });\n                // this.props.history.push(\"/share\");\n            }).catch(err => {\n                console.log(\"onDeleteData() err\", err);\n            });\n        }\n    }\n\n    onUpdateSubAnswer = () => {\n        let num = this.props.row.num;\n        let content = this.refs.content.value;\n        let url = URL + \"/share/updateanswer\" +\n            \"?num=\" + num +\n            \"&content=\" + content;\n        console.log(\"onUpdateSubAnswer\", url);\n\n        if (window.confirm(\"수정하시겠습니까?\")) {\n            axios.post(url\n            ).then(res => {\n                console.log(\"onUpdateSubAnswer() res\", res);\n                store.dispatch({\n                    type: actionType.shareBoardUpdate,\n                });\n                // this.props.history.push(\"/share\");\n                this.refs.content.value = \"\";\n                this.onTriggerInput();\n            }).catch(err => {\n                console.log(\"onUpdateSubAnswer() err\", err);\n            });\n        }\n    }\n\n    render() {\n        const {row} = this.props;\n\n        return (\n            <div style={{marginLeft: `calc(30px*${row.relevel})`}}>\n                {row.num} / {row.photo} / {row.regroup} / {row.relevel} / {row.restep} / 내용 :\n                <div style={{border: \"1px solid\", margin: \"5px\"}}>\n                    {row.content}\n                </div>\n                <button type=\"button\"\n                        onClick={this.onTriggerInput.bind(this, \"insert\")}\n                        disabled={row.content.includes(\"삭제된 글입니다.\") ? true : false}\n                >댓글 쓰기\n                </button>\n                &nbsp;\n                <button type=\"button\"\n                        onClick={this.onTriggerInput.bind(this, \"update\")}\n                        disabled={row.content.includes(\"삭제된 글입니다.\") ? true : false}\n                >댓글 수정\n                </button>\n                &nbsp;\n                <button type=\"button\"\n                        onClick={this.onDeleteSubAnswer.bind(this)}\n                        disabled={row.content.includes(\"삭제된 글입니다.\") ? true : false}\n                >댓글 삭제\n                </button>\n\n                {/*댓글 입력창 on/off*/}\n                <div style={{display: 'none'}} className={`input_answer_${row.regroup}_${row.relevel}_${row.restep}`}>\n                    <textarea placeholder=\"댓글을 입력하세요\"\n                              style={{width: '800px', height: '100px'}}\n                              ref=\"content\"\n                    />\n                    <button type=\"button\"\n                            onClick={this.onSaveButton.bind(this)}\n                    >저장\n                    </button>\n                </div>\n                <hr/>\n            </div>\n        )\n    }\n}\n\nexport default ReviewItem;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/BoardSample.js",["544","545","546","547","548","549","550","551","552","553","554","555"],"import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {red} from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\n\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // maxWidth: 345\n    },\n    media: {\n        height: 0,\n        paddingTop: \"56.25%\" // 16:9\n    },\n    expand: {\n        transform: \"rotate(0deg)\",\n        marginLeft: \"auto\",\n        transition: theme.transitions.create(\"transform\", {\n            duration: theme.transitions.duration.shortest\n        })\n    },\n    expandOpen: {\n        transform: \"rotate(180deg)\"\n    },\n    avatar: {\n        backgroundColor: red[500]\n    },\n    paperRoot: {\n        display: \"flex\",\n        // flexWrap: \"wrap\",\n        overflow:\"scroll\",\n        \"& > *\": {\n            flexShrink:\"0\",\n            margin: \"10px\",\n            padding: \"10px\",\n            width: \"400px\",\n            height: \"500px\",\n            overflow: \"hidden\",\n        }\n    }\n}));\n\nexport default function BoardSample(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n    // console.log(props);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    return (\n        <div>\n            <h1>{props.location}</h1>\n            <hr/>\n            <div className={classes.paperRoot}>\n                <Paper elevation={3}>\n                </Paper>\n                <Paper elevation={3}>\n                </Paper>\n                <Paper elevation={3}>\n                </Paper>\n                <Paper elevation={3}>\n                </Paper>\n            </div>\n        </div>\n\n    )\n}\n\n\n/*\n<Card className={classes.root}>\n                    <CardHeader\n                        avatar={\n                            <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                                YK\n                            </Avatar>\n                        }\n                        action={\n                            <IconButton aria-label=\"settings\">\n                                <MoreVertIcon/>\n                            </IconButton>\n                        }\n                        title=\"Shrimp and Chorizo Paella\"\n                        subheader=\"September 14, 2016\"\n                    />\n                    <CardMedia\n                        className={classes.media}\n                        image=\"/static/images/cards/paella.jpg\"\n                        title=\"Paella dish\"\n                    />\n                    <CardContent>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            This impressive paella is a perfect party dish and a fun meal to cook\n                            together with your guests. Add 1 cup of frozen peas along with the\n                            mussels, if you like.\n                        </Typography>\n                    </CardContent>\n                    <CardActions disableSpacing>\n                        <IconButton aria-label=\"add to favorites\">\n                            <FavoriteIcon/>\n                        </IconButton>\n                        <IconButton aria-label=\"share\">\n                            <ShareIcon/>\n                        </IconButton>\n                    </CardActions>\n                </Card>\n */\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/MySchedule.js",["556","557"],"import React, {Component} from 'react'\nimport './style/RCA.css';\nimport moment from 'moment';\n// import Header from './Header';\nimport Calendar from './Calendar';\nimport axios from 'axios';\nimport {URL} from \"../../../redux/config\";\n\n\nclass MySchedule extends Component {\n\n    constructor(props) {\n        super(props);\n        console.log(\"MySchedule constructor\", props);\n\n    }\n      state={\n        calendarYM : moment(),\n        today : moment(),\n        selected : moment().format(\"YYYY-MM-DD\"),\n        list:[]\n\n      }\n\n      static defaultProps = {\n        clickFn : ()=>{}\n    }\n\n    \n//   getData=()=>{\n//     //  let url='http://ec2-3-36-28-35.ap-northeast-2.compute.amazonaws.com:8080/FinalProjectSpringBoot8/wish/list?memId=regegw';\n//     let url = URL + \"/wish/list?memId=sanghee\";\n\n//     axios.get(url)\n//     .then(response=>{\n//       console.log(\"캘린더 출력 : \" + response.data); \n//       this.setState({\n//         list: response.data\n//         // memId:response.data.memId,\n//         // spotId:response.data.spotId,\n//         // shareNum:response.data.shareNum,\n//         // content:response.data.content,\n//         // wishday:response.data.wishday,\n//         // aroundId:response.data.aroundId,\n//         // title:response.data.title,\n//         // subject:response.data.subject\n//         // category:response.data.content.split(\",\")[0]\n\n//       });\n//     }).catch(err=>{\n//       console.log(\"캘린더 목록 오류:\"+err);\n//     })\n//   }\n\n//   componentDidMount(){\n//     this.getData();\n//   }\n\n\n    moveMonth = (month) => {\n        this.setState({\n            calendarYM : this.state.calendarYM.add(month,'M')\n        })\n    }\n\n    changeSelected = (clickedDate) =>{\n\n        if(moment(clickedDate).isSame(this.state.selected,'day')){\n            this.props.clickFn(clickedDate);\n            return;\n        }\n\n        this.setState({\n            selected : clickedDate\n        })\n\n        this.props.clickFn(clickedDate)\n        \n        if(moment(clickedDate).isBefore(this.state.calendarYM,'month')){\n            this.moveMonth(-1)\n        }else if(moment(clickedDate).isAfter(this.state.calendarYM,'month')){\n            this.moveMonth(1)\n        }\n    }\n    render(){\n        return(\n            <div className=\"test-layout\">\n               <div className=\"RCA-app-container\">\n{/*                \n                <Header calendarYM={this.state.calendarYM.format(\"YYYY년 MM월\")}\n                        today={this.state.today.format(\"현재: YYYY - MM - DD\")}\n                        \n                        moveMonth={this.moveMonth}/>\n                     */}\n                     \n                    <Calendar YM={this.state.calendarYM.format(\"YYYY-MM-DD\")}\n                        selected={this.state.selected}\n                        changeSelected={this.changeSelected}\n                    />\n                </div>\n        )\n    \n    </div>\n        )\n    }\n    \n\n}\n\nexport default MySchedule;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/Calendar.js",["558","559","560","561","562","563","564","565","566","567"],"import React, { Component } from 'react'\nimport moment from 'moment';\nimport {FaUtensils,FaMugHot,FaHotel,FaHamburger} from 'react-icons/fa';\nimport axios from 'axios';\nimport {URL} from \"../../../redux/config\";\nimport DayItem from './DayItem';\n\nclass DateHeader extends Component {\n\n  dateToArray = (dates) => {\n    if (Array.isArray(dates)) {\n      return dates\n    } else if (typeof dates === \"string\") {\n      return dates.split(',')\n    } else {\n      return [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"]\n    }\n  }\n\n  mapArrayToDate = (dateArray) => {\n    try {\n      if (dateArray.length !== 7) {\n        console.log(new Error(\"dates props must be had 7 date\"))\n        dateArray = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"]\n      }\n\n      return dateArray.map((date, index) => {\n        const className = () => {\n          let className = \"RCA-calendar-date-component\";\n          if (index === 0) {\n            return className + \" date-sun\"\n          } else if (index === 6) {\n            return className + \" date-sat\"\n          } else {\n            return className + \" date-weekday\"\n          }\n        }\n        return (\n          <div className={className()} key={\"RCA-header-\" + date}>\n            {date}\n            \n          </div>\n        )\n      })\n    } catch{\n      throw new Error(\"date must be string or component\")\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"RCA-calendar-date-header\">\n        {this.mapArrayToDate(this.dateToArray(this.props.dates))}\n        \n      </div>\n    )\n  }\n}\n\nclass Week extends Component {\n\n\n  constructor(props){\n    super(props);\n\n    this.ym = this.props.ymOfThisCalendar;\n    this.state={\n       list:[]\n    };\n  }\n\n  getData=()=>{\n\n    let url = URL + \"/wish/list?memId=sanghee\";\n\n    axios.get(url)\n    .then(response=>{\n      console.log(\"캘린더 출력 : \" + response.data); \n      this.setState({\n        list: response.data\n\n      });\n    }).catch(err=>{\n      console.log(\"캘린더 목록 오류:\"+err);\n    })\n  }\n\n  componentDidMount(){\n    this.getData();\n  }\n\n  Days = (firstDayFormat,weekIndex) => {\n    const _days = [];\n    \n\n    for (let i = 0; i < 7; i++) {\n\n      const Day = moment(firstDayFormat).add(i,'d');\n      _days.push({\n        yearMonthDayFormat: Day.format(\"YYYY-MM-DD\"),\n        getYear: Day.format('Y'),\n        getMonth: Day.format('M'),\n        getDay: Day.format('D'),\n        isHolyDay: false,\n        weekIndex\n      });\n    }\n\n    return _days;\n  }\n\n  mapDaysToComponents = (Days,calendarMonthYear ,selectedDayFormat ,fn = () => { }) => {\n\n    const thisMonth = moment(calendarMonthYear); \n\n    return Days.map((dayInfo, i) => {\n\n      let className = \"date-weekday-label\";\n\n      if (!thisMonth.isSame(dayInfo.yearMonthDayFormat,'month')) {\n        className = \"date-notThisMonth\";\n      } else if (i === 0) {\n        className = \"date-sun\"\n      }else if(i===6){\n        className =\"date-sat\"\n      }\n\n      if(moment(dayInfo.yearMonthDayFormat).isSame(selectedDayFormat,'day')){\n        className = \"selected\"\n      }\n\n      const category=this.state.memId;\n      const day=this.props.ymOfThisCalendar+\"-\"+dayInfo.getDay;\n      const wishday=this.statewishday;\n    //   console.log(category);\n\n        var date = new Date(); \n        var year = date.getFullYear(); \n        var month = new String(date.getMonth()); \n        var days = new String(date.getDate());\n        // var today = year + \"-\" + month + \"-\" + days;\n        var today = new Date(year, month, days);\n        var selectDay = new Date(dayInfo.getYear, dayInfo.getMonth-1, dayInfo.getDay);\n        var betweenDay = selectDay.getTime() - today.getTime();\n        // console.log(betweenDay);\n\n       return(\n          <div className={\"RCA-calendar-day \" + className} key={`RCA-${dayInfo.weekIndex}-${i}-day`}onClick={() => fn(dayInfo.yearMonthDayFormat)}>\n            <label className=\"RCA-calendar-day-label\">\n              {dayInfo.getDay}\n            \n            </label>\n            {this.state.list.map((row,idx)=>(\n                <DayItem row={row} key={idx} className={className} dayInfo={dayInfo} i={i} fn={fn}></DayItem>\n            ))}\n           \n            </div>\n       )\n      })    \n        \n    }\n\n\n\n  render() {\n    return (\n      <div className=\"RCA-calendar-week\">\n        \n        {this.mapDaysToComponents(this.Days(this.props.firstDayOfThisWeekformat,this.props.weekIndex),\n        this.props.ymOfThisCalendar,\n        this.props.selected,\n        this.props.fn\n        )}\n        \n      </div>\n    )\n  }\n}\n\nclass Calendar extends Component {\n\n  Weeks = (monthYear,selected,clickFn) => {\n    const firstDayOfMonth = moment(monthYear).startOf('month');\n    const firstDateOfMonth = firstDayOfMonth.get('d');\n\n    const firstDayOfWeek = firstDayOfMonth.clone().add(-firstDateOfMonth,'d');\n\n    const _Weeks = [];\n\n    for (let i = 0; i < 6; i++) {\n      _Weeks.push((\n        <Week key={`RCA-calendar-week-${i}`}\n        weekIndex={i}\n        ymOfThisCalendar={firstDayOfMonth.format(\"YYYY-MM\")}\n        firstDayOfThisWeekformat={firstDayOfWeek.clone().add(i * 7,'d').format(\"YYYY-MM-DD\")}\n        selected={selected}\n        fn={clickFn}\n        />\n      ))\n    }\n    return _Weeks\n  }\n\n\n  render() {\n    return (\n      <div className=\"RCA-calendar-container\">\n        <DateHeader dates={\"Sun, Mon, Tue, Wed, Thu, Fri, Sat\"} />\n        {this.Weeks(this.props.YM,this.props.selected,this.props.changeSelected)}\n      </div>\n    )\n  }\n}\n\nexport default Calendar;\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/DayItem.js",["568","569","570","571","572","573","574"],"import React,{Component} from 'react';\nimport {FaUtensils,FaMugHot,FaHotel,FaHamburger} from 'react-icons/fa';\nimport moment from 'moment';\nimport './style/RCA.css';\n//import Subject from './Subject';\n\nclass DayItem extends Component {\n\n    constructor(props){\n        super(props);\n\n    }\n\n    // componentWillUnmount(){\n    //     console.log(\"Day Item willmount\");\n    // }\n\n    spot(){\n        let url = URL + \"/spot/select?contentsid=\" + this.props.row.spotId;\n    }\n\n    render() {\n        \n        const {row} = this.props;\n        \n        var dayInfo = this.props.dayInfo;\n        var selectDay = new Date(dayInfo.getYear, dayInfo.getMonth-1, dayInfo.getDay);\n        var wishday=\"\"+row.wishday;\n        var y = wishday.substr(0,4);\n        var m = wishday.substr(5,2);\n        var d = wishday.substr(8,2);\n        var aroundId=row.aroundId;\n        var category=row.content;\n        \n       \n        var today = new Date(y, m-1, d);\n        var betweenDay = selectDay.getTime() - today.getTime();  // 이게 0이여야 해당하는 날짜랑 wishday랑 맞는거에요!\n        var tag = betweenDay==0?\n        <div>\n            {/* <div className=\"category\">{wishday===day &&category==='카페'?<FaMugHot></FaMugHot>:\n                    wishday===day &&category==='숙박'?<FaHotel></FaHotel>:wishday===day &&category==='음식점'?\n                <FaHamburger></FaHamburger>:''}</div> */}\n                {aroundId!==null?category.split(\",\")[0]===\"음식점\"\n                ?<FaHamburger></FaHamburger>:category.split(\",\")[0]===\"숙박\"?\n                <FaHotel></FaHotel>:<FaMugHot></FaMugHot>:''}{aroundId}\n               \n            <div className=\"title\">\n                \n                \n\n                \n                </div>\n                <br/>\n                 \n        </div>\n        :\"\";\n\n        return (\n            <div>\n                {tag}\n            </div>\n        );\n    }\n}\n\nexport default DayItem;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/AroundModal.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/UseModal.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/Header.js",["575","576","577"],"import React, { Component } from 'react'\nimport moment from 'moment';\nimport {IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\n\n\n class Header extends React.Component {\n    constructor(props){\n        super(props);\n        \n    }\n    render() {\n        // const [getMoment, setMoment]=useState(moment());     \n        // const today = getMoment;   \n        return (\n            <div className=\"RCA-header-container\">\n                <h2 className=\"RCA-header-calendarYM RCA-header-middle\">\n                    {this.props.calendarYM}\n                </h2>\n                <h3 className=\"RCA-header-today RCA-header-middle\">\n                    {this.props.today}\n                </h3>\n                <ul className=\"RCA-header-buttons RCA-header-middle\">\n                    <li>\n                    <i className=\"move-button left icon\" onClick={()=>{this.props.moveMonth(-1)}}>\n                        <IoIosArrowBack />   \n                    </i>\n                    </li>\n                    <li className=\"move\">\n                        이동\n                    </li>\n                    <li>\n                    <i className=\"move-button right icon\" onClick={()=>{this.props.moveMonth(1)}}>\n                        <IoIosArrowForward />\n                    </i>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n}\n\n\nexport default Header;\n\n\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/notice/BoardForm.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/notice/NoticeContent.js",["578"],"import axios from 'axios';\nimport React,{Component}  from 'react';\nimport {URL} from '../../../redux/config';\n\nclass NoticeContent extends Component\n{\n    constructor({match})\n    {\n        super();\n        this.subject=match.params.subject;\n        // this.state={selectData:''}\n        this.content=match.params.content;\n        this.state={selectData:''}\n    }\n    onSelectData=()=>{\n        let url= {URL} + \"/notice/list\";\n    axios.get(url)\n    .then(res=>{\n        this.setState({\n            selectData:res.data\n        })\n    })\n}\n\ncomponentWillMount() {\n    console.log(\"content willmount\");\n    this.onSelectData();\n}\n    render(){\n        let url=document.getElementById(\"url\").textContent\n        const {selectData}=this.state;\n\n\n        return (\n            <div>\n                <table className=\"table table-bordered\"\n                style={{width:'400px'}}>\n                    <caption><h3>{selectData.title}</h3></caption>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <b>작성자:{selectData.subject}</b>\n                                &nbsp;&nbsp;\n                               <pre>내용:{selectData.content}</pre>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colSpan=\"2\" align='center'>\n                                <button type=\"button\" className=\"btn\n                                btn-success btn-sm\"\n                                style={{marginLeft:'100px',width:'100px'}}\n                                onClick=\"\">수정</button>\n                                <button type=\"button\" className=\"btn\n                                btn-success btn-sm\"\n                                style={{marginLeft:'100px',width:'100px'}}\n                                onClick=\"\">삭제</button>\n\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n\n            </div>\n        )\n    }\n}\n\nexport default NoticeContent;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/tour/AroundModalDetail.js",["579","580","581","582","583","584","585","586","587"],"import React, { useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {URL} from '../../../redux/config';\nimport './kakaomap.css';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport UseModal from './UseModal';\nimport {Route, Link} from \"react-router-dom\";\n\nconst AroundModalDetail=(props)=> {\n\n  const [alertOpen, setAlertOpen] = useState(false);\n  const [alertSetOpen, setAlertSetOpen] = useState(false);\n  const [aroundwishday, setWishday] = useState('');\n  const [aroundwishtime, setWishtime] = useState('');\n\n    const {isShowing, toggle} = UseModal();\n\n    const insertAround=()=>{\n        let url = URL + \"/wish/insertaround\";\n        let memId = 'sanghee'; // 나중에 로그인 아이디로 넣기\n        let category = props.category=='FD6'?'음식점':props.category=='CE7'?'카페':'숙박';\n        let aroundId = props.wishTitle;\n        let content = category + \",\" + props.wishContent;\n        let wishday = aroundwishday;\n        let wishtime = aroundwishtime;\n\n        // console.log(wishday);\n        if(wishday == '' || wishtime == '')\n            alert(\"날짜와 시간을 모두 선택해주세요.\");\n        else{\n            axios.post(url, {memId, aroundId, content, wishday, wishtime})\n            .then(res=>{\n              toggle();\n              handleAlertOpen();\n            }).catch(err=>{\n                console.log(\"aroundwish insert 오류 : \" + err);\n            })\n        }\n    }\n\n     // alert 함수\n     const handleAlertOpen = () => {\n      setAlertOpen(true);\n    };\n\n     const handleAlertClose = () => {\n      setAlertOpen(false);\n    };\n\n    const wishdayChange=(e)=>{\n        setWishday(e.target.value);\n    }\n\n    const wishtimeChange=(e)=>{\n      setWishtime(e.target.value);\n  }\n\n    return (\n      <div>\n          <div className=\"aroundpaper\">\n            <span className=\"aroundmodalTitle\">일정 추가</span><br/>\n              🏰&nbsp;&nbsp;{props.wishTitle}<br/>\n              🗺&nbsp;&nbsp;{props.wishContent}<br/>\n              🗓&nbsp;&nbsp;여행 날짜\n              <input type=\"date\" class=\"form-control form-control-sm\" value={aroundwishday} onChange={wishdayChange}></input>\n              ⏰&nbsp;&nbsp;예정 시간\n              <input type=\"time\" class=\"form-control form-control-sm\" value={aroundwishtime} onChange={wishtimeChange}></input><br/>\n              <div style={{textAlign: 'center'}}>\n                <button type=\"button\" class=\"btn btn-warning aroundmodalBtn\" onClick={insertAround}><b>추가</b></button>\n            </div>\n          </div>\n\n        \n                    <Dialog\n                      open={alertOpen}\n                      onClose={handleAlertClose}\n                      aria-labelledby=\"alert-dialog-title\"\n                      aria-describedby=\"alert-dialog-description\"\n                  >\n                      <DialogTitle id=\"alert-dialog-title\">{\"일정 추가 완료\"}</DialogTitle>\n                      <DialogContent>\n                      <DialogContentText id=\"alert-dialog-description\">\n                          Mypage로 이동하여 확인하시겠습니까?\n                      </DialogContentText>\n                      </DialogContent>\n                      <DialogActions>\n                      <Button onClick={handleAlertClose} color=\"primary\">\n                          NO\n                      </Button>\n                      <Link to=\"/mypage\" style={{marginRight: '10px'}} color=\"primary\">\n                        YES\n                      </Link>\n                      </DialogActions>\n                  </Dialog>\n      \n        </div>\n      \n      );\n}\n\nexport default AroundModalDetail;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mainpage/SearchResultComp.js",["588","589","590"],"import React from \"react\";\nimport store from \"../../../redux/store\";\nimport {actionType, mainViewType, URL} from \"../../../redux/config\";\n\nexport default function SearchResultComp(props) {\n    console.log(\"SearchResultComp props\", props);\n    var mainSearch = store.getState().mainSearch;\n    var category = mainSearch.category;\n    var searchVal = mainSearch.searchVal;\n    var searchResultDataList = mainSearch.searchResultDataList;\n    // console.log(searchResultDataList)\n\n    const getSearchResultDataList = ()=>{\n        return searchResultDataList.map((value, index)=>{\n           return(\n               <div>\n                   {index} , {value.title}<br/>\n               </div>\n           )\n        });\n    }\n    return (\n        <div>\n            [{category}] {searchVal} 로 검색한 결과.<br/>\n            {getSearchResultDataList()}\n        </div>\n    );\n}\n","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/join/SubmitBtn.js",["591"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport useRipple from \"useripple\";\n\nimport './SubmitBtn.css'\n\nfunction SubmitBtn() {\n    const [addRipple, ripples] = useRipple({ background: \"orange\" })\n\n    return (\n        <div className=\"Example\" onClick={addRipple}>\n            회원가입\n            {ripples}\n        </div>\n    )\n}\n\nexport default SubmitBtn;","/Users/yang-mac/jeju-front-react/finalproject/src/component/main/join/SubmitBtn2.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/MyReview.js",[],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/MyWishlist.js",["592","593"],"/Users/yang-mac/jeju-front-react/finalproject/src/component/main/mypage/ReviewList.js",["594","595"],{"ruleId":"596","replacedBy":"597"},{"ruleId":"598","replacedBy":"599"},{"ruleId":"600","severity":1,"message":"601","line":6,"column":5,"nodeType":"602","messageId":"603","endLine":9,"endColumn":6},{"ruleId":"604","severity":1,"message":"605","line":10,"column":8,"nodeType":"606","messageId":"607","endLine":10,"endColumn":22},{"ruleId":"604","severity":1,"message":"608","line":15,"column":9,"nodeType":"606","messageId":"607","endLine":15,"endColumn":15},{"ruleId":"604","severity":1,"message":"609","line":15,"column":17,"nodeType":"606","messageId":"607","endLine":15,"endColumn":21},{"ruleId":"604","severity":1,"message":"610","line":15,"column":23,"nodeType":"606","messageId":"607","endLine":15,"endColumn":31},{"ruleId":"611","severity":1,"message":"612","line":36,"column":23,"nodeType":"613","messageId":"614","endLine":36,"endColumn":25},{"ruleId":"611","severity":1,"message":"612","line":41,"column":30,"nodeType":"613","messageId":"614","endLine":41,"endColumn":32},{"ruleId":"611","severity":1,"message":"612","line":46,"column":30,"nodeType":"613","messageId":"614","endLine":46,"endColumn":32},{"ruleId":"611","severity":1,"message":"612","line":51,"column":30,"nodeType":"613","messageId":"614","endLine":51,"endColumn":32},{"ruleId":"611","severity":1,"message":"612","line":56,"column":30,"nodeType":"613","messageId":"614","endLine":56,"endColumn":32},{"ruleId":"611","severity":1,"message":"612","line":61,"column":30,"nodeType":"613","messageId":"614","endLine":61,"endColumn":32},{"ruleId":"611","severity":1,"message":"612","line":66,"column":30,"nodeType":"613","messageId":"614","endLine":66,"endColumn":32},{"ruleId":"611","severity":1,"message":"612","line":71,"column":30,"nodeType":"613","messageId":"614","endLine":71,"endColumn":32},{"ruleId":"611","severity":1,"message":"612","line":76,"column":30,"nodeType":"613","messageId":"614","endLine":76,"endColumn":32},{"ruleId":"611","severity":1,"message":"612","line":81,"column":30,"nodeType":"613","messageId":"614","endLine":81,"endColumn":32},{"ruleId":"604","severity":1,"message":"615","line":98,"column":13,"nodeType":"606","messageId":"607","endLine":98,"endColumn":21},{"ruleId":"596","replacedBy":"616"},{"ruleId":"598","replacedBy":"617"},{"ruleId":"600","severity":1,"message":"601","line":8,"column":5,"nodeType":"602","messageId":"603","endLine":12,"endColumn":6},{"ruleId":"604","severity":1,"message":"618","line":4,"column":8,"nodeType":"606","messageId":"607","endLine":4,"endColumn":22},{"ruleId":"604","severity":1,"message":"619","line":5,"column":8,"nodeType":"606","messageId":"607","endLine":5,"endColumn":26},{"ruleId":"604","severity":1,"message":"620","line":47,"column":16,"nodeType":"606","messageId":"607","endLine":47,"endColumn":22},{"ruleId":"621","severity":1,"message":"622","line":57,"column":21,"nodeType":"623","endLine":59,"endColumn":23},{"ruleId":"604","severity":1,"message":"624","line":3,"column":8,"nodeType":"606","messageId":"607","endLine":3,"endColumn":15},{"ruleId":"604","severity":1,"message":"625","line":5,"column":27,"nodeType":"606","messageId":"607","endLine":5,"endColumn":39},{"ruleId":"604","severity":1,"message":"626","line":1,"column":9,"nodeType":"606","messageId":"607","endLine":1,"endColumn":24},{"ruleId":"604","severity":1,"message":"627","line":4,"column":8,"nodeType":"606","messageId":"607","endLine":4,"endColumn":13},{"ruleId":"604","severity":1,"message":"628","line":6,"column":7,"nodeType":"606","messageId":"607","endLine":6,"endColumn":23},{"ruleId":"604","severity":1,"message":"629","line":1,"column":9,"nodeType":"606","messageId":"607","endLine":1,"endColumn":20},{"ruleId":"604","severity":1,"message":"630","line":1,"column":22,"nodeType":"606","messageId":"607","endLine":1,"endColumn":33},{"ruleId":"604","severity":1,"message":"631","line":2,"column":8,"nodeType":"606","messageId":"607","endLine":2,"endColumn":13},{"ruleId":"604","severity":1,"message":"632","line":3,"column":8,"nodeType":"606","messageId":"607","endLine":3,"endColumn":13},{"ruleId":"604","severity":1,"message":"633","line":3,"column":16,"nodeType":"606","messageId":"607","endLine":3,"endColumn":25},{"ruleId":"604","severity":1,"message":"634","line":6,"column":8,"nodeType":"606","messageId":"607","endLine":6,"endColumn":17},{"ruleId":"604","severity":1,"message":"635","line":2,"column":9,"nodeType":"606","messageId":"607","endLine":2,"endColumn":14},{"ruleId":"604","severity":1,"message":"636","line":3,"column":8,"nodeType":"606","messageId":"607","endLine":3,"endColumn":26},{"ruleId":"604","severity":1,"message":"631","line":2,"column":8,"nodeType":"606","messageId":"607","endLine":2,"endColumn":13},{"ruleId":"604","severity":1,"message":"637","line":5,"column":8,"nodeType":"606","messageId":"607","endLine":5,"endColumn":13},{"ruleId":"604","severity":1,"message":"638","line":6,"column":15,"nodeType":"606","messageId":"607","endLine":6,"endColumn":25},{"ruleId":"604","severity":1,"message":"625","line":6,"column":27,"nodeType":"606","messageId":"607","endLine":6,"endColumn":39},{"ruleId":"611","severity":1,"message":"612","line":65,"column":34,"nodeType":"613","messageId":"614","endLine":65,"endColumn":36},{"ruleId":"604","severity":1,"message":"639","line":79,"column":15,"nodeType":"606","messageId":"607","endLine":79,"endColumn":19},{"ruleId":"604","severity":1,"message":"640","line":83,"column":13,"nodeType":"606","messageId":"607","endLine":83,"endColumn":16},{"ruleId":"604","severity":1,"message":"641","line":5,"column":8,"nodeType":"606","messageId":"607","endLine":5,"endColumn":22},{"ruleId":"611","severity":1,"message":"612","line":61,"column":23,"nodeType":"613","messageId":"614","endLine":61,"endColumn":25},{"ruleId":"600","severity":1,"message":"601","line":5,"column":5,"nodeType":"602","messageId":"603","endLine":8,"endColumn":6},{"ruleId":"621","severity":1,"message":"622","line":18,"column":21,"nodeType":"623","endLine":20,"endColumn":23},{"ruleId":"642","severity":1,"message":"643","line":32,"column":29,"nodeType":"623","endLine":32,"endColumn":41},{"ruleId":"642","severity":1,"message":"643","line":40,"column":29,"nodeType":"623","endLine":40,"endColumn":41},{"ruleId":"642","severity":1,"message":"643","line":48,"column":29,"nodeType":"623","endLine":48,"endColumn":41},{"ruleId":"600","severity":1,"message":"601","line":5,"column":5,"nodeType":"602","messageId":"603","endLine":8,"endColumn":6},{"ruleId":"621","severity":1,"message":"622","line":16,"column":21,"nodeType":"623","endLine":18,"endColumn":23},{"ruleId":"642","severity":1,"message":"643","line":34,"column":41,"nodeType":"623","endLine":34,"endColumn":53},{"ruleId":"644","severity":1,"message":"645","line":42,"column":29,"nodeType":"646","messageId":"647","endLine":42,"endColumn":36},{"ruleId":"604","severity":1,"message":"648","line":2,"column":8,"nodeType":"606","messageId":"607","endLine":2,"endColumn":16},{"ruleId":"604","severity":1,"message":"649","line":20,"column":15,"nodeType":"606","messageId":"607","endLine":20,"endColumn":29},{"ruleId":"604","severity":1,"message":"648","line":2,"column":8,"nodeType":"606","messageId":"607","endLine":2,"endColumn":16},{"ruleId":"604","severity":1,"message":"649","line":9,"column":15,"nodeType":"606","messageId":"607","endLine":9,"endColumn":29},{"ruleId":"604","severity":1,"message":"635","line":2,"column":18,"nodeType":"606","messageId":"607","endLine":2,"endColumn":23},{"ruleId":"604","severity":1,"message":"650","line":3,"column":9,"nodeType":"606","messageId":"607","endLine":3,"endColumn":13},{"ruleId":"604","severity":1,"message":"651","line":3,"column":15,"nodeType":"606","messageId":"607","endLine":3,"endColumn":20},{"ruleId":"604","severity":1,"message":"652","line":3,"column":22,"nodeType":"606","messageId":"607","endLine":3,"endColumn":32},{"ruleId":"604","severity":1,"message":"608","line":3,"column":34,"nodeType":"606","messageId":"607","endLine":3,"endColumn":40},{"ruleId":"604","severity":1,"message":"653","line":3,"column":42,"nodeType":"606","messageId":"607","endLine":3,"endColumn":48},{"ruleId":"604","severity":1,"message":"654","line":3,"column":50,"nodeType":"606","messageId":"607","endLine":3,"endColumn":61},{"ruleId":"604","severity":1,"message":"655","line":3,"column":63,"nodeType":"606","messageId":"607","endLine":3,"endColumn":68},{"ruleId":"604","severity":1,"message":"610","line":3,"column":70,"nodeType":"606","messageId":"607","endLine":3,"endColumn":78},{"ruleId":"604","severity":1,"message":"609","line":3,"column":80,"nodeType":"606","messageId":"607","endLine":3,"endColumn":84},{"ruleId":"604","severity":1,"message":"656","line":7,"column":8,"nodeType":"606","messageId":"607","endLine":7,"endColumn":13},{"ruleId":"604","severity":1,"message":"657","line":8,"column":8,"nodeType":"606","messageId":"607","endLine":8,"endColumn":20},{"ruleId":"642","severity":1,"message":"658","line":108,"column":25,"nodeType":"623","endLine":108,"endColumn":28},{"ruleId":"600","severity":1,"message":"601","line":4,"column":5,"nodeType":"602","messageId":"603","endLine":6,"endColumn":6},{"ruleId":"596","replacedBy":"659"},{"ruleId":"598","replacedBy":"660"},{"ruleId":"600","severity":1,"message":"601","line":4,"column":5,"nodeType":"602","messageId":"603","endLine":6,"endColumn":6},{"ruleId":"600","severity":1,"message":"601","line":5,"column":5,"nodeType":"602","messageId":"603","endLine":7,"endColumn":6},{"ruleId":"600","severity":1,"message":"601","line":5,"column":5,"nodeType":"602","messageId":"603","endLine":7,"endColumn":6},{"ruleId":"600","severity":1,"message":"601","line":4,"column":5,"nodeType":"602","messageId":"603","endLine":6,"endColumn":6},{"ruleId":"600","severity":1,"message":"601","line":4,"column":5,"nodeType":"602","messageId":"603","endLine":6,"endColumn":6},{"ruleId":"604","severity":1,"message":"638","line":5,"column":9,"nodeType":"606","messageId":"607","endLine":5,"endColumn":19},{"ruleId":"604","severity":1,"message":"625","line":5,"column":21,"nodeType":"606","messageId":"607","endLine":5,"endColumn":33},{"ruleId":"661","severity":1,"message":"662","line":55,"column":5,"nodeType":"602","messageId":"614","endLine":57,"endColumn":6},{"ruleId":"600","severity":1,"message":"601","line":4,"column":5,"nodeType":"602","messageId":"603","endLine":6,"endColumn":6},{"ruleId":"604","severity":1,"message":"635","line":2,"column":9,"nodeType":"606","messageId":"607","endLine":2,"endColumn":14},{"ruleId":"604","severity":1,"message":"663","line":3,"column":8,"nodeType":"606","messageId":"607","endLine":3,"endColumn":26},{"ruleId":"604","severity":1,"message":"664","line":1,"column":28,"nodeType":"606","messageId":"607","endLine":1,"endColumn":36},{"ruleId":"604","severity":1,"message":"665","line":2,"column":13,"nodeType":"606","messageId":"607","endLine":2,"endColumn":21},{"ruleId":"604","severity":1,"message":"666","line":5,"column":10,"nodeType":"606","messageId":"607","endLine":5,"endColumn":20},{"ruleId":"604","severity":1,"message":"667","line":5,"column":22,"nodeType":"606","messageId":"607","endLine":5,"endColumn":34},{"ruleId":"604","severity":1,"message":"668","line":5,"column":36,"nodeType":"606","messageId":"607","endLine":5,"endColumn":46},{"ruleId":"604","severity":1,"message":"669","line":8,"column":10,"nodeType":"606","messageId":"607","endLine":8,"endColumn":15},{"ruleId":"604","severity":1,"message":"670","line":11,"column":10,"nodeType":"606","messageId":"607","endLine":11,"endColumn":24},{"ruleId":"604","severity":1,"message":"671","line":14,"column":10,"nodeType":"606","messageId":"607","endLine":14,"endColumn":16},{"ruleId":"604","severity":1,"message":"639","line":90,"column":15,"nodeType":"606","messageId":"607","endLine":90,"endColumn":19},{"ruleId":"604","severity":1,"message":"672","line":235,"column":9,"nodeType":"606","messageId":"607","endLine":235,"endColumn":19},{"ruleId":"604","severity":1,"message":"664","line":1,"column":27,"nodeType":"606","messageId":"607","endLine":1,"endColumn":35},{"ruleId":"604","severity":1,"message":"635","line":2,"column":9,"nodeType":"606","messageId":"607","endLine":2,"endColumn":14},{"ruleId":"604","severity":1,"message":"673","line":3,"column":8,"nodeType":"606","messageId":"607","endLine":3,"endColumn":28},{"ruleId":"604","severity":1,"message":"674","line":43,"column":15,"nodeType":"606","messageId":"607","endLine":43,"endColumn":22},{"ruleId":"604","severity":1,"message":"675","line":133,"column":13,"nodeType":"606","messageId":"607","endLine":133,"endColumn":22},{"ruleId":"604","severity":1,"message":"676","line":2,"column":8,"nodeType":"606","messageId":"607","endLine":2,"endColumn":18},{"ruleId":"642","severity":1,"message":"658","line":13,"column":58,"nodeType":"623","endLine":16,"endColumn":12},{"ruleId":"642","severity":1,"message":"658","line":18,"column":66,"nodeType":"623","endLine":21,"endColumn":12},{"ruleId":"642","severity":1,"message":"658","line":28,"column":46,"nodeType":"623","endLine":32,"endColumn":16},{"ruleId":"611","severity":1,"message":"612","line":28,"column":90,"nodeType":"613","messageId":"614","endLine":28,"endColumn":92},{"ruleId":"611","severity":1,"message":"612","line":28,"column":138,"nodeType":"613","messageId":"614","endLine":28,"endColumn":140},{"ruleId":"611","severity":1,"message":"612","line":55,"column":31,"nodeType":"613","messageId":"614","endLine":55,"endColumn":33},{"ruleId":"611","severity":1,"message":"612","line":103,"column":20,"nodeType":"613","messageId":"614","endLine":103,"endColumn":22},{"ruleId":"611","severity":1,"message":"612","line":103,"column":38,"nodeType":"613","messageId":"614","endLine":103,"endColumn":40},{"ruleId":"611","severity":1,"message":"612","line":121,"column":44,"nodeType":"613","messageId":"614","endLine":121,"endColumn":46},{"ruleId":"611","severity":1,"message":"612","line":124,"column":38,"nodeType":"613","messageId":"614","endLine":124,"endColumn":40},{"ruleId":"611","severity":1,"message":"612","line":127,"column":38,"nodeType":"613","messageId":"614","endLine":127,"endColumn":40},{"ruleId":"611","severity":1,"message":"612","line":130,"column":38,"nodeType":"613","messageId":"614","endLine":130,"endColumn":40},{"ruleId":"600","severity":1,"message":"601","line":5,"column":5,"nodeType":"602","messageId":"603","endLine":7,"endColumn":6},{"ruleId":"604","severity":1,"message":"677","line":1,"column":16,"nodeType":"606","messageId":"607","endLine":1,"endColumn":25},{"ruleId":"604","severity":1,"message":"678","line":2,"column":9,"nodeType":"606","messageId":"607","endLine":2,"endColumn":16},{"ruleId":"604","severity":1,"message":"635","line":2,"column":18,"nodeType":"606","messageId":"607","endLine":2,"endColumn":23},{"ruleId":"604","severity":1,"message":"625","line":4,"column":21,"nodeType":"606","messageId":"607","endLine":4,"endColumn":33},{"ruleId":"604","severity":1,"message":"610","line":5,"column":8,"nodeType":"606","messageId":"607","endLine":5,"endColumn":16},{"ruleId":"604","severity":1,"message":"657","line":6,"column":8,"nodeType":"606","messageId":"607","endLine":6,"endColumn":20},{"ruleId":"604","severity":1,"message":"679","line":9,"column":8,"nodeType":"606","messageId":"607","endLine":9,"endColumn":13},{"ruleId":"604","severity":1,"message":"680","line":10,"column":8,"nodeType":"606","messageId":"607","endLine":10,"endColumn":12},{"ruleId":"604","severity":1,"message":"681","line":11,"column":8,"nodeType":"606","messageId":"607","endLine":11,"endColumn":11},{"ruleId":"604","severity":1,"message":"682","line":42,"column":10,"nodeType":"606","messageId":"607","endLine":42,"endColumn":19},{"ruleId":"604","severity":1,"message":"683","line":50,"column":12,"nodeType":"606","messageId":"607","endLine":50,"endColumn":17},{"ruleId":"604","severity":1,"message":"684","line":53,"column":11,"nodeType":"606","messageId":"607","endLine":53,"endColumn":23},{"ruleId":"604","severity":1,"message":"685","line":58,"column":11,"nodeType":"606","messageId":"607","endLine":58,"endColumn":22},{"ruleId":"642","severity":1,"message":"643","line":76,"column":17,"nodeType":"623","endLine":76,"endColumn":83},{"ruleId":"642","severity":1,"message":"643","line":77,"column":17,"nodeType":"623","endLine":77,"endColumn":83},{"ruleId":"642","severity":1,"message":"643","line":78,"column":17,"nodeType":"623","endLine":78,"endColumn":83},{"ruleId":"642","severity":1,"message":"643","line":79,"column":17,"nodeType":"623","endLine":79,"endColumn":83},{"ruleId":"642","severity":1,"message":"643","line":80,"column":17,"nodeType":"623","endLine":80,"endColumn":83},{"ruleId":"642","severity":1,"message":"643","line":81,"column":17,"nodeType":"623","endLine":81,"endColumn":83},{"ruleId":"642","severity":1,"message":"643","line":82,"column":17,"nodeType":"623","endLine":82,"endColumn":83},{"ruleId":"642","severity":1,"message":"643","line":83,"column":17,"nodeType":"623","endLine":83,"endColumn":83},{"ruleId":"642","severity":1,"message":"643","line":84,"column":17,"nodeType":"623","endLine":84,"endColumn":83},{"ruleId":"642","severity":1,"message":"643","line":85,"column":17,"nodeType":"623","endLine":85,"endColumn":83},{"ruleId":"642","severity":1,"message":"643","line":86,"column":17,"nodeType":"623","endLine":86,"endColumn":83},{"ruleId":"642","severity":1,"message":"643","line":87,"column":17,"nodeType":"623","endLine":87,"endColumn":83},{"ruleId":"642","severity":1,"message":"643","line":88,"column":17,"nodeType":"623","endLine":88,"endColumn":83},{"ruleId":"686","severity":1,"message":"687","line":166,"column":1,"nodeType":"688","messageId":"689","endLine":172,"endColumn":2},{"ruleId":"686","severity":1,"message":"687","line":173,"column":1,"nodeType":"688","messageId":"689","endLine":246,"endColumn":2},{"ruleId":"690","severity":1,"message":"691","line":21,"column":21,"nodeType":"692","endLine":21,"endColumn":36},{"ruleId":"690","severity":1,"message":"693","line":22,"column":20,"nodeType":"692","endLine":22,"endColumn":34},{"ruleId":"690","severity":1,"message":"694","line":23,"column":17,"nodeType":"692","endLine":23,"endColumn":28},{"ruleId":"604","severity":1,"message":"695","line":73,"column":9,"nodeType":"606","messageId":"607","endLine":73,"endColumn":19},{"ruleId":"604","severity":1,"message":"696","line":76,"column":14,"nodeType":"606","messageId":"607","endLine":76,"endColumn":26},{"ruleId":"604","severity":1,"message":"697","line":137,"column":10,"nodeType":"606","messageId":"607","endLine":137,"endColumn":15},{"ruleId":"604","severity":1,"message":"698","line":139,"column":6,"nodeType":"606","messageId":"607","endLine":139,"endColumn":12},{"ruleId":"604","severity":1,"message":"699","line":142,"column":6,"nodeType":"606","messageId":"607","endLine":142,"endColumn":13},{"ruleId":"700","severity":1,"message":"701","line":149,"column":9,"nodeType":"606","messageId":"702","endLine":149,"endColumn":15},{"ruleId":"700","severity":1,"message":"701","line":150,"column":30,"nodeType":"606","messageId":"702","endLine":150,"endColumn":36},{"ruleId":"611","severity":1,"message":"612","line":182,"column":15,"nodeType":"613","messageId":"614","endLine":182,"endColumn":17},{"ruleId":"703","severity":1,"message":"704","line":191,"column":13,"nodeType":"606","messageId":"705","endLine":191,"endColumn":15},{"ruleId":"703","severity":1,"message":"706","line":192,"column":9,"nodeType":"606","messageId":"705","endLine":192,"endColumn":16},{"ruleId":"604","severity":1,"message":"631","line":2,"column":8,"nodeType":"606","messageId":"607","endLine":2,"endColumn":13},{"ruleId":"604","severity":1,"message":"677","line":1,"column":16,"nodeType":"606","messageId":"607","endLine":1,"endColumn":25},{"ruleId":"600","severity":1,"message":"601","line":17,"column":5,"nodeType":"602","messageId":"603","endLine":21,"endColumn":6},{"ruleId":"707","severity":1,"message":"708","line":26,"column":22,"nodeType":"709","messageId":"710","endLine":26,"endColumn":33},{"ruleId":"621","severity":1,"message":"622","line":78,"column":21,"nodeType":"623","endLine":78,"endColumn":70},{"ruleId":"621","severity":1,"message":"622","line":81,"column":21,"nodeType":"623","endLine":81,"endColumn":70},{"ruleId":"621","severity":1,"message":"622","line":84,"column":21,"nodeType":"623","endLine":84,"endColumn":70},{"ruleId":"621","severity":1,"message":"622","line":87,"column":21,"nodeType":"623","endLine":87,"endColumn":69},{"ruleId":"604","severity":1,"message":"711","line":4,"column":8,"nodeType":"606","messageId":"607","endLine":4,"endColumn":13},{"ruleId":"604","severity":1,"message":"712","line":5,"column":8,"nodeType":"606","messageId":"607","endLine":5,"endColumn":13},{"ruleId":"604","severity":1,"message":"713","line":6,"column":8,"nodeType":"606","messageId":"607","endLine":6,"endColumn":13},{"ruleId":"604","severity":1,"message":"714","line":7,"column":8,"nodeType":"606","messageId":"607","endLine":7,"endColumn":12},{"ruleId":"604","severity":1,"message":"715","line":1,"column":10,"nodeType":"606","messageId":"607","endLine":1,"endColumn":27},{"ruleId":"604","severity":1,"message":"677","line":2,"column":18,"nodeType":"606","messageId":"607","endLine":2,"endColumn":27},{"ruleId":"604","severity":1,"message":"648","line":3,"column":8,"nodeType":"606","messageId":"607","endLine":3,"endColumn":16},{"ruleId":"604","severity":1,"message":"716","line":4,"column":8,"nodeType":"606","messageId":"607","endLine":4,"endColumn":19},{"ruleId":"604","severity":1,"message":"717","line":5,"column":10,"nodeType":"606","messageId":"607","endLine":5,"endColumn":27},{"ruleId":"604","severity":1,"message":"718","line":17,"column":12,"nodeType":"606","messageId":"607","endLine":17,"endColumn":20},{"ruleId":"611","severity":1,"message":"612","line":84,"column":31,"nodeType":"613","messageId":"614","endLine":84,"endColumn":33},{"ruleId":"604","severity":1,"message":"719","line":3,"column":8,"nodeType":"606","messageId":"607","endLine":3,"endColumn":14},{"ruleId":"604","severity":1,"message":"664","line":1,"column":27,"nodeType":"606","messageId":"607","endLine":1,"endColumn":35},{"ruleId":"604","severity":1,"message":"664","line":1,"column":27,"nodeType":"606","messageId":"607","endLine":1,"endColumn":35},{"ruleId":"720","severity":1,"message":"721","line":22,"column":41,"nodeType":"613","messageId":"722","endLine":22,"endColumn":42},{"ruleId":"604","severity":1,"message":"664","line":1,"column":27,"nodeType":"606","messageId":"607","endLine":1,"endColumn":35},{"ruleId":"611","severity":1,"message":"612","line":25,"column":33,"nodeType":"613","messageId":"614","endLine":25,"endColumn":35},{"ruleId":"611","severity":1,"message":"612","line":49,"column":33,"nodeType":"613","messageId":"614","endLine":49,"endColumn":35},{"ruleId":"611","severity":1,"message":"612","line":51,"column":40,"nodeType":"613","messageId":"614","endLine":51,"endColumn":42},{"ruleId":"604","severity":1,"message":"723","line":95,"column":13,"nodeType":"606","messageId":"607","endLine":95,"endColumn":20},{"ruleId":"604","severity":1,"message":"724","line":4,"column":8,"nodeType":"606","messageId":"607","endLine":4,"endColumn":12},{"ruleId":"604","severity":1,"message":"725","line":5,"column":8,"nodeType":"606","messageId":"607","endLine":5,"endColumn":18},{"ruleId":"604","severity":1,"message":"726","line":6,"column":8,"nodeType":"606","messageId":"607","endLine":6,"endColumn":17},{"ruleId":"604","severity":1,"message":"727","line":7,"column":8,"nodeType":"606","messageId":"607","endLine":7,"endColumn":19},{"ruleId":"604","severity":1,"message":"728","line":8,"column":8,"nodeType":"606","messageId":"607","endLine":8,"endColumn":19},{"ruleId":"604","severity":1,"message":"729","line":10,"column":8,"nodeType":"606","messageId":"607","endLine":10,"endColumn":14},{"ruleId":"604","severity":1,"message":"730","line":11,"column":8,"nodeType":"606","messageId":"607","endLine":11,"endColumn":18},{"ruleId":"604","severity":1,"message":"731","line":12,"column":8,"nodeType":"606","messageId":"607","endLine":12,"endColumn":18},{"ruleId":"604","severity":1,"message":"732","line":14,"column":8,"nodeType":"606","messageId":"607","endLine":14,"endColumn":20},{"ruleId":"604","severity":1,"message":"733","line":15,"column":8,"nodeType":"606","messageId":"607","endLine":15,"endColumn":17},{"ruleId":"604","severity":1,"message":"734","line":17,"column":8,"nodeType":"606","messageId":"607","endLine":17,"endColumn":20},{"ruleId":"604","severity":1,"message":"735","line":62,"column":11,"nodeType":"606","messageId":"607","endLine":62,"endColumn":28},{"ruleId":"604","severity":1,"message":"631","line":6,"column":8,"nodeType":"606","messageId":"607","endLine":6,"endColumn":13},{"ruleId":"604","severity":1,"message":"736","line":7,"column":9,"nodeType":"606","messageId":"607","endLine":7,"endColumn":12},{"ruleId":"604","severity":1,"message":"737","line":3,"column":9,"nodeType":"606","messageId":"607","endLine":3,"endColumn":19},{"ruleId":"604","severity":1,"message":"738","line":3,"column":20,"nodeType":"606","messageId":"607","endLine":3,"endColumn":28},{"ruleId":"604","severity":1,"message":"739","line":3,"column":29,"nodeType":"606","messageId":"607","endLine":3,"endColumn":36},{"ruleId":"604","severity":1,"message":"740","line":3,"column":37,"nodeType":"606","messageId":"607","endLine":3,"endColumn":48},{"ruleId":"604","severity":1,"message":"741","line":132,"column":13,"nodeType":"606","messageId":"607","endLine":132,"endColumn":21},{"ruleId":"604","severity":1,"message":"742","line":133,"column":13,"nodeType":"606","messageId":"607","endLine":133,"endColumn":16},{"ruleId":"604","severity":1,"message":"743","line":134,"column":13,"nodeType":"606","messageId":"607","endLine":134,"endColumn":20},{"ruleId":"744","severity":1,"message":"745","line":139,"column":21,"nodeType":"709","messageId":"746","endLine":139,"endColumn":48},{"ruleId":"744","severity":1,"message":"745","line":140,"column":20,"nodeType":"709","messageId":"746","endLine":140,"endColumn":46},{"ruleId":"604","severity":1,"message":"747","line":144,"column":13,"nodeType":"606","messageId":"607","endLine":144,"endColumn":23},{"ruleId":"604","severity":1,"message":"737","line":2,"column":9,"nodeType":"606","messageId":"607","endLine":2,"endColumn":19},{"ruleId":"604","severity":1,"message":"738","line":2,"column":20,"nodeType":"606","messageId":"607","endLine":2,"endColumn":28},{"ruleId":"604","severity":1,"message":"739","line":2,"column":29,"nodeType":"606","messageId":"607","endLine":2,"endColumn":36},{"ruleId":"604","severity":1,"message":"740","line":2,"column":37,"nodeType":"606","messageId":"607","endLine":2,"endColumn":48},{"ruleId":"604","severity":1,"message":"748","line":3,"column":8,"nodeType":"606","messageId":"607","endLine":3,"endColumn":14},{"ruleId":"600","severity":1,"message":"601","line":8,"column":5,"nodeType":"602","messageId":"603","endLine":11,"endColumn":6},{"ruleId":"611","severity":1,"message":"612","line":29,"column":29,"nodeType":"613","messageId":"614","endLine":29,"endColumn":31},{"ruleId":"604","severity":1,"message":"677","line":1,"column":17,"nodeType":"606","messageId":"607","endLine":1,"endColumn":26},{"ruleId":"604","severity":1,"message":"748","line":2,"column":8,"nodeType":"606","messageId":"607","endLine":2,"endColumn":14},{"ruleId":"600","severity":1,"message":"601","line":7,"column":5,"nodeType":"602","messageId":"603","endLine":10,"endColumn":6},{"ruleId":"604","severity":1,"message":"640","line":28,"column":13,"nodeType":"606","messageId":"607","endLine":28,"endColumn":16},{"ruleId":"604","severity":1,"message":"633","line":1,"column":17,"nodeType":"606","messageId":"607","endLine":1,"endColumn":26},{"ruleId":"604","severity":1,"message":"635","line":12,"column":9,"nodeType":"606","messageId":"607","endLine":12,"endColumn":14},{"ruleId":"604","severity":1,"message":"749","line":17,"column":10,"nodeType":"606","messageId":"607","endLine":17,"endColumn":22},{"ruleId":"604","severity":1,"message":"750","line":17,"column":24,"nodeType":"606","messageId":"607","endLine":17,"endColumn":39},{"ruleId":"604","severity":1,"message":"751","line":21,"column":12,"nodeType":"606","messageId":"607","endLine":21,"endColumn":21},{"ruleId":"611","severity":1,"message":"612","line":26,"column":38,"nodeType":"613","messageId":"614","endLine":26,"endColumn":40},{"ruleId":"611","severity":1,"message":"612","line":26,"column":66,"nodeType":"613","messageId":"614","endLine":26,"endColumn":68},{"ruleId":"611","severity":1,"message":"612","line":33,"column":20,"nodeType":"613","messageId":"614","endLine":33,"endColumn":22},{"ruleId":"611","severity":1,"message":"612","line":33,"column":38,"nodeType":"613","messageId":"614","endLine":33,"endColumn":40},{"ruleId":"604","severity":1,"message":"638","line":3,"column":9,"nodeType":"606","messageId":"607","endLine":3,"endColumn":19},{"ruleId":"604","severity":1,"message":"625","line":3,"column":21,"nodeType":"606","messageId":"607","endLine":3,"endColumn":33},{"ruleId":"604","severity":1,"message":"736","line":3,"column":35,"nodeType":"606","messageId":"607","endLine":3,"endColumn":38},{"ruleId":"604","severity":1,"message":"665","line":2,"column":8,"nodeType":"606","messageId":"607","endLine":2,"endColumn":16},{"ruleId":"604","severity":1,"message":"631","line":2,"column":8,"nodeType":"606","messageId":"607","endLine":2,"endColumn":13},{"ruleId":"604","severity":1,"message":"736","line":3,"column":9,"nodeType":"606","messageId":"607","endLine":3,"endColumn":12},{"ruleId":"604","severity":1,"message":"635","line":6,"column":9,"nodeType":"606","messageId":"607","endLine":6,"endColumn":14},{"ruleId":"604","severity":1,"message":"752","line":20,"column":16,"nodeType":"606","messageId":"607","endLine":20,"endColumn":19},"no-native-reassign",["753"],"no-negated-in-lhs",["754"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'MypagePageComp' is defined but never used.","Identifier","unusedVar","'MyPage' is defined but never used.","'Tour' is defined but never used.","'TourList' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'style_hr' is assigned a value but never used.",["753"],["754"],"'NoticeMiniComp' is defined but never used.","'ShareBoardMiniComp' is defined but never used.","'boards' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'RowItem' is defined but never used.","'mainViewType' is defined but never used.","'applyMiddleware' is defined but never used.","'thunk' is defined but never used.","'composeEnhancers' is assigned a value but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'axios' is defined but never used.","'React' is defined but never used.","'useEffect' is defined but never used.","'PropTypes' is defined but never used.","'Route' is defined but never used.","'ShareBoardFormComp' is defined but never used.","'store' is defined but never used.","'actionType' is defined but never used.","'data' is assigned a value but never used.","'url' is assigned a value but never used.","'FormHelperText' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a return value from function.","ReturnStatement","expectedReturnValue","'reactDOM' is defined but never used.","'responseGoogle' is assigned a value but never used.","'Home' is defined but never used.","'Login' is defined but never used.","'ShareBoard' is defined but never used.","'Notice' is defined but never used.","'Reservation' is defined but never used.","'Admin' is defined but never used.","'Logo2' is defined but never used.","'TourPageComp' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["753"],["754"],"no-dupe-class-members","Duplicate name 'componentWillUnmount'.","'ShareBoardPageComp' is defined but never used.","'useState' is defined but never used.","'ReactDOM' is defined but never used.","'makeStyles' is defined but never used.","'createStyles' is defined but never used.","'WithStyles' is defined but never used.","'Theme' is defined but never used.","'createMuiTheme' is defined but never used.","'Upload' is defined but never used.","'uploadFile' is assigned a value but never used.","'ShareBoardUpdateForm' is defined but never used.","'scrollY' is assigned a value but never used.","'scrollTop' is assigned a value but never used.","'Pagination' is defined but never used.","'Component' is defined but never used.","'NavLink' is defined but never used.","'Paper' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'a11yProps' is defined but never used.","'value' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'setMainView' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react-hooks/exhaustive-deps","Assignments to the 'longitude' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'latitude' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'title' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'infowindow' is assigned a value but never used.","'closeOverlay' is defined but never used.","'order' is assigned a value but never used.","'menuEl' is assigned a value but never used.","'listStr' is assigned a value but never used.","no-use-before-define","'itemEl' was used before it was defined.","usedBeforeDefined","no-redeclare","'el' is already defined.","redeclared","'itemStr' is already defined.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'jeju1' is defined but never used.","'jeju2' is defined but never used.","'jeju3' is defined but never used.","'udo1' is defined but never used.","'getSuggestedQuery' is defined but never used.","'GoogleLogin' is defined but never used.","'refreshTokenSetup' is defined but never used.","'userData' is assigned a value but never used.","'styled' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'regroup' is assigned a value but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.","'Avatar' is defined but never used.","'IconButton' is defined but never used.","'Typography' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'handleExpandClick' is assigned a value but never used.","'URL' is defined but never used.","'FaUtensils' is defined but never used.","'FaMugHot' is defined but never used.","'FaHotel' is defined but never used.","'FaHamburger' is defined but never used.","'category' is assigned a value but never used.","'day' is assigned a value but never used.","'wishday' is assigned a value but never used.","no-new-wrappers","Do not use String as a constructor.","noConstructor","'betweenDay' is assigned a value but never used.","'moment' is defined but never used.","'alertSetOpen' is assigned a value but never used.","'setAlertSetOpen' is assigned a value but never used.","'isShowing' is assigned a value but never used.","'row' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]