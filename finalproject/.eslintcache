[{"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\index.js":"1","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\App.js":"2","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\reportWebVitals.js":"3","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\MainComp.js":"4","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\HeaderComp.js":"5","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\footer\\FooterComp.js":"6","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\Menu.js":"7","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\redux\\config.js":"8","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\notice\\NoticePageComp.js":"9","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\MainPageComp.js":"10","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\admin\\MemberListPageComp.js":"11","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\tour\\TourPageComp.js":"12","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\auth\\LoginPageComp.js":"13","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\redux\\store.js":"14","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ReservationPageComp.js":"15","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\join\\SignupPageComp.js":"16","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mypage\\MypagePageComp.js":"17","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\ShareBoardPageComp.js":"18","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\menus\\index.js":"19","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\SearchComp.js":"20","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\NoticeMiniComp.js":"21","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\ShareBoardMiniComp.js":"22","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\admin\\RowItem.js":"23","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\auth\\GoogleLoginBtnComp.js":"24","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\auth\\GoogleLogoutBtnComp.js":"25","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\ShareBoardFormComp.js":"26","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\menus\\Notice.js":"27","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\menus\\Reservation.js":"28","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\menus\\Tour.js":"29","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\menus\\ShareBoard.js":"30","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\menus\\MyPage.js":"31","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\menus\\Home.js":"32","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\menus\\Login.js":"33","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\menus\\Admin.js":"34","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\menus\\Join.js":"35","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\auth\\refreshToken.js":"36","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mypage\\Calendar.js":"37","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\ShareBoardRowItem.js":"38","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\tour\\PageComp.js":"39","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\tour\\ItemComp.js":"40","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mypage\\header.js":"41","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mypage\\Header.js":"42","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\tour\\DetailTourComp.js":"43","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\auth\\NaverLoginBtnComp.js":"44","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\auth\\FaceBookLoginBtnComp.js":"45","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\tour\\DetailReviewComp.js":"46","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\tour\\MapComp.js":"47","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\tour\\ReviewListComp.js":"48","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\HotPlaceComp.js":"49","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\MainPhotoComp.js":"50","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\MyPlanComp.js":"51","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\EtcBoardComp.js":"52","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\notice\\BoardItem.js":"53","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\tour\\Tourintro.js":"54","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\menus\\TourList.js":"55","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\tour\\ReviewItemComp.js":"56","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\theme.js":"57","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\WaveBorder.js":"58","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\ShareBoardUpdateForm.js":"59","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\modal.js":"60","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mypage\\MemberUpdateFormComp.js":"61","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mypage\\MySchedule.js":"62","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\ShareReview.js":"63","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\ReviewItem.js":"64","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\Modal.js":"65","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mypage\\DayItem.js":"66"},{"size":535,"mtime":1611317614952,"results":"67","hashOfConfig":"68"},{"size":5950,"mtime":1611538720710,"results":"69","hashOfConfig":"68"},{"size":375,"mtime":1611023828837,"results":"70","hashOfConfig":"68"},{"size":3950,"mtime":1611317614923,"results":"71","hashOfConfig":"68"},{"size":787,"mtime":1611317614922,"results":"72","hashOfConfig":"68"},{"size":889,"mtime":1611317614921,"results":"73","hashOfConfig":"68"},{"size":7244,"mtime":1611538720614,"results":"74","hashOfConfig":"68"},{"size":1102,"mtime":1611538938702,"results":"75","hashOfConfig":"68"},{"size":3309,"mtime":1611305337510,"results":"76","hashOfConfig":"68"},{"size":2411,"mtime":1611317614924,"results":"77","hashOfConfig":"68"},{"size":2557,"mtime":1611305337499,"results":"78","hashOfConfig":"68"},{"size":5406,"mtime":1611538720626,"results":"79","hashOfConfig":"68"},{"size":4339,"mtime":1611305337501,"results":"80","hashOfConfig":"68"},{"size":2338,"mtime":1611538720632,"results":"81","hashOfConfig":"68"},{"size":463,"mtime":1611023828834,"results":"82","hashOfConfig":"68"},{"size":8227,"mtime":1611538720617,"results":"83","hashOfConfig":"68"},{"size":3715,"mtime":1611623462493,"results":"84","hashOfConfig":"68"},{"size":2327,"mtime":1611317614926,"results":"85","hashOfConfig":"68"},{"size":618,"mtime":1611305337497,"results":"86","hashOfConfig":"68"},{"size":3727,"mtime":1611538720620,"results":"87","hashOfConfig":"68"},{"size":1619,"mtime":1611110631877,"results":"88","hashOfConfig":"68"},{"size":1634,"mtime":1611110631877,"results":"89","hashOfConfig":"68"},{"size":563,"mtime":1611305337500,"results":"90","hashOfConfig":"68"},{"size":1906,"mtime":1611024045230,"results":"91","hashOfConfig":"68"},{"size":770,"mtime":1611023828830,"results":"92","hashOfConfig":"68"},{"size":4685,"mtime":1611534768027,"results":"93","hashOfConfig":"68"},{"size":297,"mtime":1611023828826,"results":"94","hashOfConfig":"68"},{"size":323,"mtime":1611023828827,"results":"95","hashOfConfig":"68"},{"size":255,"mtime":1611538720615,"results":"96","hashOfConfig":"68"},{"size":315,"mtime":1611023828827,"results":"97","hashOfConfig":"68"},{"size":291,"mtime":1611023828826,"results":"98","hashOfConfig":"68"},{"size":1507,"mtime":1611023828825,"results":"99","hashOfConfig":"68"},{"size":288,"mtime":1611023828826,"results":"100","hashOfConfig":"68"},{"size":288,"mtime":1611023828825,"results":"101","hashOfConfig":"68"},{"size":326,"mtime":1611023828826,"results":"102","hashOfConfig":"68"},{"size":713,"mtime":1611023828830,"results":"103","hashOfConfig":"68"},{"size":5478,"mtime":1611632986690,"results":"104","hashOfConfig":"68"},{"size":6155,"mtime":1611317614929,"results":"105","hashOfConfig":"68"},{"size":2438,"mtime":1611538720624,"results":"106","hashOfConfig":"68"},{"size":2250,"mtime":1611538720623,"results":"107","hashOfConfig":"68"},{"size":1437,"mtime":1611298430641,"results":"108","hashOfConfig":"68"},{"size":1437,"mtime":1611298430641,"results":"109","hashOfConfig":"68"},{"size":2446,"mtime":1611538720622,"results":"110","hashOfConfig":"68"},{"size":7518,"mtime":1611538720617,"results":"111","hashOfConfig":"68"},{"size":1615,"mtime":1611538720616,"results":"112","hashOfConfig":"68"},{"size":4267,"mtime":1611538720622,"results":"113","hashOfConfig":"68"},{"size":19084,"mtime":1611538720623,"results":"114","hashOfConfig":"68"},{"size":3809,"mtime":1611317614934,"results":"115","hashOfConfig":"68"},{"size":6330,"mtime":1611538720618,"results":"116","hashOfConfig":"68"},{"size":2770,"mtime":1611538900700,"results":"117","hashOfConfig":"68"},{"size":7267,"mtime":1611538720619,"results":"118","hashOfConfig":"68"},{"size":332,"mtime":1611305337503,"results":"119","hashOfConfig":"68"},{"size":486,"mtime":1611305337508,"results":"120","hashOfConfig":"68"},{"size":2138,"mtime":1611538720626,"results":"121","hashOfConfig":"68"},{"size":263,"mtime":1611538720615,"results":"122","hashOfConfig":"68"},{"size":1027,"mtime":1611538720625,"results":"123","hashOfConfig":"68"},{"size":602,"mtime":1611305337507,"results":"124","hashOfConfig":"68"},{"size":2301,"mtime":1611305337506,"results":"125","hashOfConfig":"68"},{"size":5148,"mtime":1611305337512,"results":"126","hashOfConfig":"68"},{"size":1019,"mtime":1611317614932,"results":"127","hashOfConfig":"68"},{"size":7187,"mtime":1611317614925,"results":"128","hashOfConfig":"68"},{"size":1980,"mtime":1611627525441,"results":"129","hashOfConfig":"68"},{"size":712,"mtime":1611317614930,"results":"130","hashOfConfig":"68"},{"size":253,"mtime":1611317614926,"results":"131","hashOfConfig":"68"},{"size":1019,"mtime":1611538720693,"results":"132","hashOfConfig":"68"},{"size":1598,"mtime":1611632147904,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"14srmj2",{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"136"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"136"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"136"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"136"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"136"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"136"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"136"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"136"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"136"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"136"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"136"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"136"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"136"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"136"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"136"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"136"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"136"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"136"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"136"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"136"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"136"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"136"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"136"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"136"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"136"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"136"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"136"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"136"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"136"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"136"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"136"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"282"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"282"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"136"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"144"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"136"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"136"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"136"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"136"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\index.js",[],["308","309"],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\App.js",[],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\reportWebVitals.js",[],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\MainComp.js",["310","311","312","313","314","315","316","317","318"],"import React, {Component} from \"react\";\r\nimport MainPageComp from \"./mainpage/MainPageComp\";\r\nimport ReservationPageComp from \"./reservation/ReservationPageComp\";\r\nimport NoticePageComp from \"./notice/NoticePageComp\";\r\nimport ShareBoardPageComp from \"./shareboard/ShareBoardPageComp\";\r\nimport LoginPageComp from \"./auth/LoginPageComp\";\r\nimport MemberListPageComp from \"./admin/MemberListPageComp\";\r\nimport store from \"../../redux/store\";\r\nimport {mainViewType} from \"../../redux/config\";\r\nimport MypagePageComp from \"./mypage/MypagePageComp\";\r\nimport TourPageComp from \"./tour/TourPageComp\";\r\nimport SignupPageComp from \"./join/SignupPageComp\";\r\n\r\nclass MainComp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"MainComp constructor\", props, store.getState().mainView);\r\n\r\n        store.subscribe(function () {\r\n            console.log(\"MainComp subscribe()\");\r\n            this.setState({\r\n                mainView: store.getState().mainView,\r\n            });\r\n        }.bind(this));\r\n    }\r\n\r\n    setMainView = () => {\r\n        const _mainView = store.getState().mainView;\r\n        console.log(\"MainComp setMainView()\", _mainView, mainViewType.MainPage);\r\n\r\n        if (_mainView == mainViewType.MainPage) {\r\n            return (\r\n                <MainPageComp/>\r\n            )\r\n        } else if (_mainView == mainViewType.Reservation) {\r\n            return (\r\n                <ReservationPageComp/>\r\n            )\r\n        } else if (_mainView == mainViewType.Notice) {\r\n            return (\r\n                <NoticePageComp/>\r\n            )\r\n        } else if (_mainView == mainViewType.Tour) {\r\n            return (\r\n                <TourPageComp/>\r\n            )\r\n        } else if (_mainView == mainViewType.ShareBoard) {\r\n            return (\r\n                <ShareBoardPageComp/>\r\n            )\r\n        } else if (_mainView == mainViewType.MyPage) {\r\n            return (\r\n                <MypagePageComp/>\r\n            )\r\n        } else if (_mainView == mainViewType.Login) {\r\n            return (\r\n                <LoginPageComp/>\r\n            )\r\n        } else if (_mainView == mainViewType.Admin) {\r\n            return (\r\n                <MemberListPageComp/>\r\n            )\r\n        } else if (_mainView == mainViewType.JoinForm) {\r\n            return (\r\n                <SignupPageComp />\r\n            )\r\n        } else {\r\n            return (\r\n                <p>\r\n                    Not Found...\r\n                </p>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(\"MainComp render()\", this.props);\r\n        return (\r\n            <div>\r\n                <h1>MainComp</h1>\r\n                {this.setMainView()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MainComp;\r\n",["319","320"],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\HeaderComp.js",[],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\footer\\FooterComp.js",[],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\Menu.js",["321","322","323","324","325","326","327"],"import React, {Component} from 'react';\r\nimport {NavLink, Route} from \"react-router-dom\";\r\nimport {Home, Login, ShareBoard, MyPage, Notice, Reservation, Tour, Admin} from './menus';\r\nimport store from \"../../redux/store\";\r\nimport {actionType, mainViewType} from \"../../redux/config\";\r\n\r\nclass Menu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"Menu constructor \", this.props)\r\n    }\r\n\r\n    setMainView = (mainView) => {\r\n        console.log(\"Home setMainView()\");\r\n        store.dispatch({\r\n            type: actionType.setMainView,\r\n            // mainView: mainViewType.MainPage\r\n            mainView: mainView\r\n        });\r\n    }\r\n\r\n    render() {\r\n        // 부모컴포넌트(App->HeaderComp)에서 받아온 logged, onLogout을 통해 로그인 전에는 '로그인'을 로그인 후에는 '로그아웃'으로 글씨 변경\r\n        // 로그아웃일 경우 onLogout함수를 통해 logged를 다시 false로 바꿔준다.\r\n        // 부모컴포넌트가 HeaderComp->App이므로 props를 통해 value를 전달받을 수 있다. 그러나 Login컴포넌트의경우는 여러번 전달해야함.\r\n        // 따라서 전역적인 상태가 필요하다.\r\n\r\n        const {logged, onLogout} = this.props;\r\n        console.log(\"Menu render \", this.props);\r\n\r\n        return (\r\n            <div>\r\n                <ul className=\"menu\">\r\n                    <li>\r\n                        <NavLink exact to=\"/\"\r\n                                 onClick={() => {\r\n                                     console.log(\"Home NavLink onClick\");\r\n                                     this.setMainView(mainViewType.MainPage);\r\n                                 }}\r\n                        >홈(로고)</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink exact to=\"/Reservation\"\r\n                                 onClick={() => {\r\n                                     console.log(\"Reservation NavLink onClick\");\r\n                                     this.setMainView(mainViewType.Reservation);\r\n                                 }}\r\n                        >예약</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink exact to=\"/Notice\"\r\n                                 onClick={() => {\r\n                                     console.log(\"Notice NavLink onClick\");\r\n                                     this.setMainView(mainViewType.Notice);\r\n                                 }}\r\n                        >공지사항</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink exact to=\"/Tour\"\r\n                                 onClick={() => {\r\n                                     console.log(\"Tour NavLink onClick\");\r\n                                     this.setMainView(mainViewType.Tour);\r\n                                 }}\r\n                        >관광명소</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink exact to=\"/ShareBoard\"\r\n                                 onClick={() => {\r\n                                     console.log(\"ShareBoard NavLink onClick\");\r\n                                     this.setMainView(mainViewType.ShareBoard);\r\n                                 }}\r\n                        >공유게시판</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink exact to=\"/MyPage\"\r\n                                 onClick={() => {\r\n                                     console.log(\"MyPage NavLink onClick\");\r\n                                     this.setMainView(mainViewType.MyPage);\r\n                                 }}\r\n                        >MyPage</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        {logged ?\r\n                            <NavLink exact to=\"/\" onClick={() => {\r\n                                onLogout();\r\n                                console.log(\"Logout NavLink onClick\");\r\n                                this.setMainView(mainViewType.Logout);\r\n                            }}>Logout</NavLink> :\r\n                            <NavLink exact to=\"/Login\"\r\n                                     onClick={() => {\r\n                                         console.log(\"Login NavLink onClick\");\r\n                                         this.setMainView(mainViewType.Login);\r\n                                     }}\r\n                            >Login</NavLink>\r\n                        }\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <NavLink exact to=\"/Join\"\r\n                                 onClick={() => {\r\n                                     console.log(\"Join NavLink onClick\");\r\n                                     this.setMainView(mainViewType.JoinForm);\r\n                                 }}\r\n                        >회원가입</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink exact to=\"/Admin\"\r\n                                 onClick={() => {\r\n                                     console.log(\"Admin NavLink onClick\");\r\n                                     this.setMainView(mainViewType.Admin);\r\n                                 }}\r\n                        >Admin</NavLink>\r\n                    </li>\r\n                </ul>\r\n\r\n                <hr style={{clear: 'both'}}/>\r\n\r\n                <Route exact path=\"/\">\r\n                    {/*<Home></Home>*/}\r\n                </Route>\r\n                <Route exact path=\"/Reservation/:name?\">\r\n                    {/*<Reservation></Reservation>*/}\r\n                </Route>\r\n                <Route exact path=\"/Notice/:name?\">\r\n                    {/*<Notice></Notice>*/}\r\n                </Route>\r\n                {/* <Route exact path=\"/Tour/:name?\">\r\n                    <Tour></Tour>\r\n                </Route> */}\r\n                <Route exact path=\"/Tour/:name?\" component={Tour}></Route>\r\n                <Route exact path=\"/ShareBoard/:name?\">\r\n                    {/*<ShareBoard></ShareBoard>*/}\r\n                </Route>\r\n                <Route exact path=\"/MyPage/:name?\">\r\n                    {/*<MyPage></MyPage>*/}\r\n                </Route>\r\n                <Route exact path=\"/Login/:name?\">\r\n                    {/*<Login></Login>*/}\r\n                </Route>\r\n                <Route exact path=\"/Admin:name?\">\r\n                    {/*<Admin></Admin>*/}\r\n                </Route>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;\r\n","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\redux\\config.js",["328","329","330","331","332"],"import { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from 'axios';\r\nimport React, { useEffect } from \"react\";\r\nimport {  } from \"../component/main/admin/MemberListPageComp\";\r\n\r\nexport const URL = \"http://ec2-3-36-28-35.ap-northeast-2.compute.amazonaws.com:8080/FinalProjectSpringBoot8\";\r\n// export const URL = \"http://localhost:9002\";\r\n\r\nexport const actionType = {\r\n    setMainView: \"setMainView\",\r\n\r\n    SIGN_UP: \"SIGN_UP\",\r\n    LOG_IN: \"LOG_IN\",\r\n    LOGIN_REQUEST: \"LOGIN_REQUEST\",\r\n    LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\r\n    LOGIN_FAILURE: \"LOGIN_FAILURE\",\r\n    MEMBER_LIST: \"MEMBER_LIST\", // 회원 리스트 요청 시작\r\n    MB_LIST_S: \"MB_LIST_S\", // 회원 리스트 요청 성공\r\n    MB_LIST_F: \"MB_LIST_F\", // 회원 리스트 요청 실패\r\n}\r\n\r\nexport const mainViewType = {\r\n    MainPage: \"mainPage\",\r\n    Home: \"home\",\r\n    Login: \"login\",\r\n    Logout: \"Logout\",\r\n    MyPage: \"myPage\",\r\n    Notice: \"notice\",\r\n    Reservation: \"reservation\",\r\n    ShareBoard: \"shareBoard\",\r\n    Tour: \"tour\",\r\n    TourList: \"tourList\",\r\n    Admin: \"admin\",\r\n    JoinForm: \"joinForm\",\r\n}","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\notice\\NoticePageComp.js",[],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\MainPageComp.js",[],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\admin\\MemberListPageComp.js",["333","334","335"],"import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\nimport RowItem from \"./RowItem\";\r\nimport store from \"../../../redux/store\";\r\nimport { actionType, mainViewType } from \"../../../redux/config\";\r\n\r\nclass MemberListPageComp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"LoginPageComp constructor\", props);\r\n        \r\n        this.state={\r\n            // id:'',  //아이디를 저장하고 있을 state\r\n            // password:'',\r\n            // pwCheck: \"\",//비밀번호 두개가 일치하는가\r\n            // name : \"\",\r\n            // birth_date: \"\",\r\n            // phone : \"\",\r\n            // email : \"\",\r\n            // address : \"\",\r\n            // idcanUse: false,//중복된 아이디찾기 true여야 로그인가능\r\n\r\n            memberData: []\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    // 스프링에서 목록 가져오기\r\n    list = () => {\r\n        let url = \"http://localhost:9002/member/list\";\r\n        axios.get(url)\r\n        .then(response=>{\r\n            this.setState({\r\n                memberData:response.data\r\n            })\r\n        }).catch(err=>{\r\n            console.log(\"목록 오류:\"+err);\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.list(); //처음 시작시 백엔드로부터 데이타 가졍괴\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        console.log(\"MemberListPageComp render()\", this.props);\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <b>회원 목록</b>\r\n                    <div>\r\n                        번호&nbsp;아이디&nbsp;이메일&nbsp;이름&nbsp;이미지&nbsp;휴대폰\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            this.state.memberData.map((row, idx) => (\r\n                                <RowItem row={row} key={idx} />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MemberListPageComp;\r\n","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\tour\\TourPageComp.js",[],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\auth\\LoginPageComp.js",["336","337","338","339","340"],"import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\nimport GoogleLoginBtnComp from \"./GoogleLoginBtnComp\";\r\nimport GoogleLogoutBtnComp from \"./GoogleLogoutBtnComp\";\r\nimport store from \"../../../redux/store\";\r\nimport { actionType, mainViewType } from \"../../../redux/config\";\r\n\r\nclass LoginPageComp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"LoginPageComp constructor\", props);\r\n        \r\n        this.state={\r\n            id:'',  //아이디를 저장하고 있을 state\r\n            password:'',\r\n            pwCheck: \"\",//비밀번호 두개가 일치하는가\r\n            name : \"\",\r\n            birth_date: \"\",\r\n            phone : \"\",\r\n            email : \"\",\r\n            address : \"\",\r\n            idcanUse: false,//중복된 아이디찾기 true여야 로그인가능\r\n        }\r\n\r\n        //함수 선언\r\n        this.onIdChk=this.onIdChk.bind(this);\r\n    }\r\n\r\n\r\n\r\n    // 변수 선언시 state 영역에 추가했을 경우에만 나중에 값변경이 가능하다\r\n    // 값 변경시에는 setState 를 이용해야만 한다\r\n    // 이벤트\r\n    changeEvent=(e)=>{\r\n        \r\n        console.log(e.target.id+\":\"+e.target.value);\r\n        // 만약 엔터 누를때만 변경되도록 하고 싶으면\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    //방법2\r\n    onIdChk=(e)=>{\r\n        e.preventDefault();\r\n        console.log(this.state.id);\r\n        const data = {\r\n            id: this.state.id//현재 id state 값을 data.id에 넣는다\r\n        }\r\n        // ↓은 백엔드로 fetch해서 입력된 값을 POST\r\n        fetch(\"http://localhost:9002/member/checkid\", \r\n                {//localhost 9002번 포트 checkid라우터를 찾는다\r\n                    method: \"POST\",\r\n                    headers: {\r\n                    \"Content-Type\" : \"application/json\"\r\n                    },\r\n                body: JSON.stringify(data),//json화 해버리기\r\n                })\r\n            .then(response => response.json())\r\n            .then(json=> {\r\n                console.log(\"확인입니다\");\r\n                if(json.idcanUse == true){  //uson을받아왔는데idcanUse값이true면사용가능\r\n                    alert(\"사용가능한 ID입니다\");\r\n                    this.setState({\r\n                        idcanUse: true\r\n                    })\r\n                }\r\n                else{\r\n                    alert(\"다른 ID를 입력해주세요\");\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        console.log(\"LoginPageComp render()\", this.props);\r\n        return (\r\n            <div>\r\n                <h4>로그인</h4>\r\n                <div>\r\n                    {this.state.id}\r\n                    <h4 className=\"showIdResult\">{this.state.showIdResult}</h4>\r\n                </div>\r\n                <br />\r\n                아이디 :\r\n                <input type=\"text\" name=\"id\"\r\n                onChange={this.changeEvent.bind(this)}\r\n                ref=\"id\" value={this.state.id}\r\n                />\r\n                <br />\r\n                비밀번호 : \r\n                <input type=\"password\" name=\"password\"\r\n                onChange={this.changeEvent.bind(this)}\r\n                ref=\"password\" value={this.state.password}\r\n                />\r\n                <br />\r\n                <button type=\"button\">\r\n                    Sign in\r\n                </button>\r\n                <h5>\r\n                    내 아이디는 {this.state.id} 입니다\r\n                    내 비밀번호는 {this.state.password} 입니다\r\n                </h5>\r\n                <GoogleLoginBtnComp />\r\n                <GoogleLogoutBtnComp />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default LoginPageComp;\r\n","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\redux\\store.js",["341","342"],"import {createStore} from \"redux\";\r\nimport {actionType, mainViewType} from \"./config\";\r\nimport logger from \"redux-logger\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nexport default createStore(\r\n    function (state, action) {\r\n\r\n        //state 초기화.\r\n        if (state === undefined) {\r\n            return {\r\n                mainView: mainViewType.MainPage,\r\n                spotView: '',\r\n                logged: false,\r\n                memberData: [], // 회원목록\r\n            }\r\n        }\r\n\r\n        // state 불변성 유지해야함. immutability\r\n        // newState 새로 파서 기존꺼 + 변경할거 넣은다음 redux의 state 바꿔치기.\r\n        let newState = {};\r\n\r\n        //action.type 별로 로직처리 다르게 하기.\r\n        if (action.type === actionType.setMainView) {\r\n\r\n            newState = Object.assign({}, state, {\r\n                mainView: action.mainView,\r\n            });\r\n        }\r\n        else if (action.type === actionType.setSpotView) {\r\n            newState = Object.assign({}, state, {\r\n                spotView: action.spotView\r\n            });\r\n        }\r\n        else if (action.type === actionType.SIGN_UP) {\r\n            \r\n            newState = Object.assign({}, state, {\r\n                mainView: action.mainView,\r\n            });\r\n        }\r\n        else if (action.type === actionType.LOG_IN) {\r\n            newState = Object.assign({}, state, {\r\n                \r\n            });\r\n        }\r\n        else if (action.type === actionType.LOGIN_REQUEST) {\r\n            newState = Object.assign({}, state, {\r\n\r\n            });\r\n        }\r\n        else if (action.type === actionType.LOGIN_SUCCESS) {\r\n            newState = Object.assign({}, state, {\r\n                logged: true,\r\n                id: action.type.id,\r\n            });\r\n        }\r\n        else if (action.type === actionType.LOGIN_FAILURE) {\r\n            newState = Object.assign({}, state, {\r\n                logged: false,\r\n                id: \"\",\r\n            });\r\n        }\r\n        else if (action.type === actionType.MEMBER_LIST) {\r\n            newState = Object.assign({}, state, {\r\n                memberData: action.payload\r\n            });\r\n        }\r\n        \r\n\r\n        console.log(\"reducer()\", state, action, newState);\r\n        return newState;\r\n    }\r\n    , window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\n","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\reservation\\ReservationPageComp.js",[],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\join\\SignupPageComp.js",["343","344"],"import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\n\r\nclass SignupPageComp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"SignupPageComp constructor\", props);\r\n        \r\n        this.state={\r\n            id:'',  //아이디를 저장하고 있을 state\r\n            password:'',\r\n            pwCheck: \"\",//비밀번호 두개가 일치하는가\r\n            name : '',\r\n            birth_date: \"\",\r\n            phone : \"\",\r\n            email : '',\r\n            address : \"\",\r\n            idcanUse: false,//중복된 아이디찾기 true여야 로그인가능\r\n        }\r\n\r\n        //함수 선언\r\n        this.onIdChk=this.onIdChk.bind(this);\r\n    }\r\n\r\n\r\n\r\n    // 변수 선언시 state 영역에 추가했을 경우에만 나중에 값변경이 가능하다\r\n    // 값 변경시에는 setState 를 이용해야만 한다\r\n    // 이벤트\r\n    changeEvent=(e)=>{\r\n        \r\n        console.log(e.target.id+\":\"+e.target.value);\r\n        // 만약 엔터 누를때만 변경되도록 하고 싶으면\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    //방법2\r\n    onIdChk=(e)=>{\r\n        e.preventDefault();\r\n        console.log(this.state.id);\r\n        const data = {\r\n            id: this.state.id//현재 id state 값을 data.id에 넣는다\r\n        }\r\n        // ↓은 백엔드로 fetch해서 입력된 값을 POST\r\n        fetch(\"http://localhost:9002/member/checkid\", \r\n                {//localhost 9002번 포트 checkid라우터를 찾는다\r\n                    method: \"POST\",\r\n                    headers: {\r\n                    \"Content-Type\" : \"application/json\"\r\n                    },\r\n                body: JSON.stringify(data),//json화 해버리기\r\n                })\r\n            .then(response => response.json())\r\n            .then(json=> {\r\n                console.log(\"확인입니다\");\r\n                if(json.idcanUse == true){  //uson을받아왔는데idcanUse값이true면사용가능\r\n                    alert(\"사용가능한 ID입니다\");\r\n                    this.setState({\r\n                        idcanUse: true\r\n                    })\r\n                }\r\n                else{\r\n                    alert(\"다른 ID를 입력해주세요\");\r\n                }\r\n            });\r\n    }\r\n\r\n    onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n    };\r\n    render() {\r\n        console.log(\"SingupPageComp render()\", this.props);\r\n        return (\r\n            <div>\r\n                <form\r\n                onSubmit = { this.onSubmitHandler.bind(this) }>\r\n                <h1>회원가입</h1>\r\n                <div>\r\n                    {this.state.id}\r\n                    <h4 className=\"showIdResult\">{this.state.showIdResult}</h4>\r\n                </div>\r\n                <br />\r\n                <label>이메일</label>\r\n                <input type=\"email\" name = \"email\" value = { this.state.email } onChange={this.changeEvent.bind(this)} />\r\n                <br />\r\n                <label>이름</label>\r\n                <input type=\"text\" name = \"name\" value = { this.state.name } onChange={this.changeEvent.bind(this)} />\r\n                <br />\r\n                아이디 :\r\n                <input type=\"text\" name=\"id\"\r\n                onChange={this.changeEvent.bind(this)}\r\n                ref=\"id\" value={this.state.id}\r\n                />\r\n                <button type=\"button\"\r\n                onClick={this.onIdChk.bind(this)}>\r\n                    아이디 확인\r\n                </button>\r\n                <br />\r\n                <label>비밀번호</label>\r\n                <input type=\"password\" name=\"password\"\r\n                onChange={this.changeEvent.bind(this)}\r\n                ref=\"password\" value={this.state.password}\r\n                />\r\n                <br />\r\n                <label>비밀번호 확인</label>\r\n                <input\r\n                type = \"password\"\r\n                name = \"pwCheck\"\r\n                value = { this.state.pwCheck }\r\n                onChange = { this.changeEvent.bind(this) }\r\n                />\r\n                <br />\r\n                <b>\r\n                    내 아이디는 {this.state.id} 입니다\r\n                    내 비밀번호는 {this.state.password} 입니다\r\n                    내 확인비밀번호는 { this.state.pwCheck } 입니다\r\n                    내 이메일은 { this.state.email } 입니다\r\n                    내 이름은 { this.state.name } 입니다\r\n                </b>\r\n                <br />\r\n                <button type = \"submit\">회원 가입</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SignupPageComp;\r\n","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mypage\\MypagePageComp.js",[],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\ShareBoardPageComp.js",[],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\menus\\index.js",[],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\SearchComp.js",["345"],"import React, {Component} from \"react\";\r\n\r\nclass SearchComp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*<a href=\"#SearchComp\">{this.props.name}</a>*/}\r\n                <br/>\r\n                {this.props.name}<br/>\r\n                <select>\r\n                    <option>전체</option>\r\n                    <option>지역</option>\r\n                    <option>명소</option>\r\n                    <option>태그</option>\r\n                </select>\r\n                <input type=\"text\" placeholder=\"검색할 단어를 입력하세요.\"/>\r\n                <button type=\"button\">검색</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SearchComp;\r\n","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\NoticeMiniComp.js",["346","347","348","349"],"import React, {Component} from \"react\";\r\nimport PlusImg from \"../../../image/plus.png\";\r\n\r\nclass NoticeMiniComp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br/>\r\n                <h5>공지사항</h5>\r\n                <button>\r\n                    <img src={PlusImg}\r\n                         style={{width: \"50px\"}}\r\n                    />\r\n                </button>\r\n                <table className=\"noticeList\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>제목</th>\r\n                        <th>작성일</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.props.list.map(function (e, i) {\r\n                        // console.log(i, e);\r\n                        if (i < 5) {\r\n                            return (\r\n                                <tr key={i}>\r\n                                    <td>\r\n                                        <a href=\"#\">\r\n                                            <span>{e.subject}</span>\r\n                                        </a>\r\n                                    </td>\r\n                                    <td>{e.writeday}</td>\r\n                                </tr>\r\n                            );\r\n                        } else {\r\n                            return;\r\n                        }\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default NoticeMiniComp;\r\n","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\ShareBoardMiniComp.js",["350","351","352","353"],"import React, {Component} from \"react\";\r\nimport PlusImg from \"../../../image/plus.png\";\r\n\r\nclass ShareBoardMiniComp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br/>\r\n                <h5>공유게시판</h5>\r\n                <button>\r\n                    <img src={PlusImg}\r\n                         style={{width: \"50px\"}}\r\n                    />\r\n                </button>\r\n                <table className=\"shareBoardList\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>제목</th>\r\n                        <th>작성일</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.props.list.map(function (e, i) {\r\n                        // console.log(i, e);\r\n                        if (i < 5) {\r\n                            return (\r\n                                <tr key={i}>\r\n                                    <td>\r\n                                        <a href=\"#\">\r\n                                            <span>{e.subject}</span>\r\n                                        </a>\r\n                                    </td>\r\n                                    <td>{e.writeday}</td>\r\n                                </tr>\r\n                            );\r\n                        } else {\r\n                            return;\r\n                        }\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ShareBoardMiniComp;\r\n","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\admin\\RowItem.js",[],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\auth\\GoogleLoginBtnComp.js",["354","355"],"import React , { Component } from 'react';\r\nimport reactDOM from 'react-dom';\r\nimport GoogleLogin from 'react-google-login';\r\nimport { refreshTokenSetup } from \"./refreshToken\";\r\n\r\n\r\nclass GoogleLoginBtnComp extends Component\r\n{\r\n    // 백엔드에 정보를 저장하기 위해 state에 id, name, provider를 저장함\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            provider: '',\r\n            accessToken: ''\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const responseGoogle = (response) => {\r\n            console.log(response);\r\n        }\r\n        \r\n        // 로그인에 성공하면 json을 반환해줌 => onSuccess함수에서 state에 id, name을 저장\r\n        const onSuccess = (res) => {\r\n            console.log('[Login Success] 로그인한 사용자:', res.profileObj);\r\n            console.log('로그인한 사용자 id : ' +  res.googleId);\r\n\r\n            this.setState({\r\n                id: res.googleId,\r\n                name: res.profileObj.name,\r\n                provider: 'google'\r\n            });\r\n\r\n            // initializing the setup\r\n            refreshTokenSetup(res);\r\n        };\r\n\r\n        // 로그인에 실패한 경우에는 에러를 넘겨줌 => onFailure함수에서 error 출력\r\n        const onFailure = (res) => {\r\n            console.log('[Login failed] res:', res);\r\n        };\r\n\r\n        return (\r\n            <>\r\n            <br />\r\n            <br />\r\n            <GoogleLogin\r\n                clientId=\"256166181377-83u2uuteqgosooa3um2i3o36ho1325md.apps.googleusercontent.com\"\r\n                buttonText=\"Login\"\r\n                onSuccess={onSuccess}\r\n                onFailure={onFailure}\r\n                cookiePolicy={'single_host_origin'}\r\n                isSignedIn={true}\r\n            />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GoogleLoginBtnComp;","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\auth\\GoogleLogoutBtnComp.js",["356","357"],"import React , { Component } from 'react';\r\nimport reactDOM from 'react-dom';\r\nimport { GoogleLogout } from 'react-google-login';\r\n\r\n\r\nclass GoogleLogoutBtnComp extends Component\r\n{\r\n    render() {\r\n        const responseGoogle = (response) => {\r\n            console.log(response);\r\n        }\r\n\r\n        const onSuccess = (res) => {\r\n            alert('Logout 되었습니다');\r\n        };\r\n\r\n        return (\r\n            <>\r\n            <br />\r\n            <br />\r\n            <GoogleLogout\r\n                clientId=\"256166181377-83u2uuteqgosooa3um2i3o36ho1325md.apps.googleusercontent.com\"\r\n                buttonText=\"Logout\"\r\n                onLogoutSuccess={onSuccess}\r\n            />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GoogleLogoutBtnComp;","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\ShareBoardFormComp.js",[],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\menus\\Notice.js",["358"],"import React, {Component} from \"react\";\r\n\r\nclass Notice extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*<b>공지사항</b>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notice;\r\n","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\menus\\Reservation.js",["359"],"import React, {Component} from \"react\";\r\n\r\n\r\nclass Reservation extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*<b>비행기 렌터카 예약</b>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reservation;\r\n","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\menus\\Tour.js",["360"],"import React, {Component} from \"react\";\r\nimport store from \"../../../redux/store\";\r\nimport {actionType} from \"../../../redux/config\";\r\n\r\nconst Tour = ({match}) => {\r\n    console.log(\"Tour match\", match.params.name);\r\n\r\n    store.dispatch({\r\n        type: actionType.setSpotView,\r\n        spotView: match.params.name\r\n    });\r\n\r\n    return(\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tour;\r\n","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\menus\\ShareBoard.js",["361"],"import React, {Component} from 'react';\r\n\r\nclass ShareBoard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*<b>맛집공유게시판</b>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShareBoard;\r\n","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\menus\\MyPage.js",["362"],"import React, {Component} from \"react\";\r\n\r\nclass MyPage extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*<b>MyPage</b>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyPage;\r\n","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\menus\\Home.js",["363","364","365"],"import React, {Component} from \"react\";\r\n// import BigText from '../component/BigText';\r\n// import Header from \"../component/Header\";\r\nimport store from \"../../../redux/store\";\r\nimport {actionType, mainViewType} from \"../../../redux/config\";\r\n\r\n// page init\r\n// constructor -> componentWillMount -> render\r\n\r\n// 다른메뉴 -> Home menu click\r\n// constructor -> componentWillMount -> render -> componentDidMount\r\n\r\n// Home menu 에서 -> 다른메뉴로 갈때.\r\n// componentWillUnmount\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"Home constructor\", this.props, this.state, store.getState());\r\n    }\r\n\r\n    componentWillMount() {\r\n        console.log(\"Home componentWillMount()\");\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState, nextContext) {\r\n        console.log(\"Home componentWillUpdate()\");\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        console.log(\"Home componentWillUnmount()\");\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(\"Home render()\");\r\n        return (\r\n            <div>\r\n                {/*<Header />*/}\r\n                {/*<BigText>홈</BigText>*/}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"Home componentDidMount()\");\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(\"Home componentDidUpdate()\");\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log(\"Home componentWillUnmount()\");\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\menus\\Login.js",["366"],"import React, {Component} from \"react\";\r\n\r\nclass Login extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*<b>Login</b>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\menus\\Admin.js",["367"],"import React, {Component} from \"react\";\r\n\r\nclass Admin extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*<b>Admin</b>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Admin;\r\n","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\menus\\Join.js",[],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\auth\\refreshToken.js",[],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mypage\\Calendar.js",["368","369","370"],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\ShareBoardRowItem.js",["371","372"],"import React, {Component} from \"react\";\r\n\r\n\r\n\r\n\r\n\r\nclass ShareBoardRowItem extends Component {\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const {row,idx,history}=this.props;\r\n        return (\r\n            <div>\r\n                <div style={{border:'1px solid black',marginBottom:'50px'}}>\r\n             \r\n                <th style={{width: '400px', borderRight: '1px solid black'}} >이미지</th>\r\n\r\n                <th style={{width: '600px', borderRight: '1px solid black'}}>\r\n                    \r\n                    <tr><span>{row.star}</span></tr>\r\n                    <tr><span>{row.subject}</span></tr>\r\n                    <tr><span>{row.addr}</span></tr>\r\n                    <tr><span>{row.content}</span></tr>\r\n                    <tr><span>{row.id}/{row.writerday}</span></tr> \r\n                </th>\r\n\r\n                <th style={{width: '200px'}} >\r\n                    <tr>\r\n                        <button type=\"button\">좋아요</button>\r\n                    </tr>\r\n                    <tr>\r\n                        <button type=\"button\">찜하기</button>\r\n                    </tr>\r\n                    <td>\r\n                        <button type=\"button\">댓글쓰기</button>\r\n                        <button type=\"button\">댓글목록</button>\r\n                    </td>\r\n                </th> \r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ShareBoardRowItem;\r\n","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\tour\\PageComp.js",["373","374","375","376"],"import React,{Component} from 'react';\r\n\r\nclass PageComp extends Component {\r\n\r\n    render() {\r\n        const{startPage, endPage, currentPage, totalPage, paginate} = this.props;\r\n\r\n        let prev = startPage>1?<li class=\"page-item\"><a class=\"page-link\" onClick={(e)=>{\r\n            e.preventDefault();\r\n            this.props.paginate(startPage - 1);\r\n        }}>◀</a></li>:\"\";\r\n\r\n        let next = endPage < totalPage?<li class=\"page-item\"><a class=\"page-link\" onClick={(e)=>{\r\n            e.preventDefault();\r\n            this.props.paginate(endPage + 1);\r\n        }}>▶</a></li>:\"\";\r\n\r\n        let page = [];\r\n        for(let i=startPage; i<=endPage; i++){\r\n            page.push(i);\r\n        }\r\n        let pages = page.map(function(num,idx){\r\n            return <li class=\"page-item\"><a class=\"page-link\" style={{color : num==currentPage?\"red\":\"black\"}} onClick={(e)=>{\r\n                e.preventDefault();\r\n                paginate(num);\r\n            }}>{num}</a></li>\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                {startPage},{endPage},{totalPage}\r\n                <ul class=\"pagination\">\r\n                    {prev}\r\n                    {pages}\r\n                    {next}\r\n\t\t\t    </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PageComp;","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\tour\\ItemComp.js",["377","378","379"],"import React,{Component} from 'react';\r\n\r\nclass ItemComp extends Component {\r\n    render() {\r\n        const {row,idx,history}=this.props;\r\n\r\n        return (\r\n            <div>\r\n                <img style={{width: '100px', height: '100px'}} src={row.thumbnail}></img><br/>\r\n                title : {row.title}<br/>\r\n                addr : {row.roadaddr}<br/>\r\n                <hr/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemComp;","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mypage\\header.js",["380"],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mypage\\Header.js",["381","382","383"],"import React, { Component } from 'react'\r\nimport moment from 'moment';\r\nimport {IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\r\n\r\n\r\n class Header extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n    }\r\n    render() {\r\n        // const [getMoment, setMoment]=useState(moment());     \r\n        // const today = getMoment;   \r\n        return (\r\n            <div className=\"RCA-header-container\">\r\n                <h2 className=\"RCA-header-calendarYM RCA-header-middle\">\r\n                    {this.props.calendarYM}\r\n                </h2>\r\n                <h3 className=\"RCA-header-today RCA-header-middle\">\r\n                    {this.props.today}\r\n                </h3>\r\n                <ul className=\"RCA-header-buttons RCA-header-middle\">\r\n                    <li>\r\n                    <i className=\"move-button left icon\" onClick={()=>{this.props.moveMonth(-1)}}>\r\n                        <IoIosArrowBack />   \r\n                    </i>\r\n                    </li>\r\n                    <li className=\"move\">\r\n                        이동\r\n                    </li>\r\n                    <li>\r\n                    <i className=\"move-button right icon\" onClick={()=>{this.props.moveMonth(1)}}>\r\n                        <IoIosArrowForward />\r\n                    </i>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Header;\r\n\r\n\r\n","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\tour\\DetailTourComp.js",[],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\auth\\NaverLoginBtnComp.js",["384","385","386","387","388"],"import { getSuggestedQuery } from '@testing-library/react';\r\nimport React , { Component, useEffect } from 'react';\r\nimport reactDOM from 'react-dom';\r\nimport GoogleLogin from 'react-google-login';\r\nimport { refreshTokenSetup } from \"./refreshToken\";\r\n\r\nconst { naver } = window;\r\n\r\nexport default function NaverLoginBtnComp () {\r\n\r\n    const Login = () => {\r\n        Naver();\r\n        UserProfile();\r\n    }\r\n\r\n    useEffect(Login, []);\r\n\r\n    const Naver = () => {\r\n        const naverLogin = new naver.LoginWithNaverId({\r\n            clientId: 'dPXRHN5aH3Xl6lXxm7bn',\r\n            callbackUrl: \"http://ec2-3-36-28-35.ap-northeast-2.compute.amazonaws.com:8080/FinalProjectSpringBoot1\",\r\n            isPopup: false,\r\n            loginButton: {color: \"green\", type: 3, height: 60},\r\n            callbackHandle: true\r\n        });\r\n        naverLogin.init();\r\n    }\r\n\r\n    const UserProfile = () => {\r\n        window.location.href.includes('access_token') && GetUser();\r\n        function GetUser() {\r\n            const location = window.location.href.split('=')[1];\r\n            console.log(location);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"naverIdLogin\" onClick={Login}>\r\n            네이버로그인\r\n        </div>\r\n    );\r\n}\r\n\r\n// class NaverLoginBtnComp extends Component\r\n// {\r\n//     // 백엔드에 정보를 저장하기 위해 state에 id, name, provider를 저장함\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             id: '',\r\n//             name: '',\r\n//             provider: '',\r\n//             accessToken: ''\r\n//         }\r\n//     }\r\n\r\n//     render() {\r\n        \r\n        \r\n        \r\n//         return (\r\n//             <>\r\n//             <br />\r\n//             <br />\r\n            \r\n//             </>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default NaverLoginBtnComp;","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\auth\\FaceBookLoginBtnComp.js",["389","390"],"import FacebookLogin from \"react-facebook-login\";\r\nimport React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FaFacebookSquare } from \"react-icons/fa\";\r\n\r\nclass FaceBookLoginBtnComp extends Component {\r\n\r\n    state = {\r\n        isLoggedIn: false,\r\n        id: '',\r\n        name: '',\r\n        email: '',\r\n    }\r\n\r\n    responseFacebook = response => {\r\n        console.log(response);\r\n\r\n        this.setState({\r\n            isLoggedIn:true,\r\n            id: response.id,\r\n            name: response.name,\r\n            email: response.email,\r\n        });\r\n    };\r\n\r\n    componentClicked = () => console.log('clicked');\r\n\r\n    render() {\r\n\r\n        let fbContent;\r\n\r\n        if(this.state.isLoggedIn) {\r\n            fbContent = (\r\n                <div>\r\n                    <h2>{this.state.name}</h2>\r\n                    Email : {this.state.email}\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            fbContent = (\r\n                <FacebookLogin\r\n                    appId=\"513629929622627\"\r\n                    autoLoad={true} // 실행과 동시에 자동으로 로그인 팝업창이 뜸\r\n                    fields=\"name,email.picture\" // 어떤정보를 받아올지 입력하는 필드\r\n                    scope=\"public_profile,user_friends\"\r\n                    onClick={this.componentClicked} // this.바인딩 추가\r\n                    callback={this.responseFacebook} // this.바인딩 추가\r\n                />\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {fbContent}\r\n            </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default FaceBookLoginBtnComp;","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\tour\\DetailReviewComp.js",[],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\tour\\MapComp.js",["391","392","393","394","395","396","397","398","399","400","401","402","403"],"/*global kakao */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport './kakaomap.css';\r\nimport Box from '@material-ui/core/Box';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\r\nimport LocalCafeIcon from '@material-ui/icons/LocalCafe';\r\nimport HotelIcon from '@material-ui/icons/Hotel';\r\n\r\nconst MapComp=(props)=> {\r\n\r\n    let longitude = useState(0);\r\n    let latitude = useState(0);\r\n    let title = useState(\"\");\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    console.log(\"longitude : \" + props.longitude);\r\n    useEffect(() => {\r\n        \r\n        longitude = props.longitude;\r\n        latitude = props.latitude;\r\n        title = props.title;\r\n\r\n        mapscript();\r\n    });\r\n\r\n  const mapscript = () => {\r\n    \r\n    //let markers = [];\r\n    let placeOverlay = new kakao.maps.CustomOverlay({zIndex:1}), \r\n        contentNode = document.createElement('div'), // 커스텀 오버레이의 컨텐츠 엘리먼트 입니다 \r\n        markers = [], // 마커를 담을 배열입니다\r\n        currCategory = '';\r\n\r\n\r\n    let mapContainer = document.getElementById(\"map\"), mapOption = {\r\n        center: new kakao.maps.LatLng(latitude, longitude), // 지도의 중심좌표\r\n        level: 3 // 지도의 확대 레벨\r\n    };\r\n\r\n    const map = new kakao.maps.Map(mapContainer, mapOption);\r\n    let ps = new kakao.maps.services.Places(map);\r\n    \r\n    //마커가 표시 될 위치\r\n    let markerPosition = new kakao.maps.LatLng(\r\n        latitude,\r\n        longitude\r\n    );\r\n\r\n    // 마커를 생성\r\n    let marker = new kakao.maps.Marker({\r\n        map:map,\r\n      position: markerPosition,\r\n      title: title\r\n    });\r\n\r\n    let content = '<div className=\"wrap\"><div className=\"info\"><div className=\"mtitle\">' + title\r\n            + '<div className=\"close\" onClick={this.closeOverlay.bind(this)} title=\"닫기\"></div></div></div></div>';\r\n\r\n    //마커 위에 커스텀오버레이를 표시합니다\r\n    //마커를 중심으로 커스텀 오버레이를 표시하기위해 CSS를 이용해 위치를 설정했습니다\r\n    let overlay = new kakao.maps.CustomOverlay({\r\n        content: content,\r\n        map: map,\r\n        position: marker.getPosition()       \r\n    });\r\n    //마커를 클릭했을 때 커스텀 오버레이를 표시합니다\r\n    kakao.maps.event.addListener(marker, 'click', function() {\r\n        overlay.setMap(map);\r\n    });\r\n    // 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\r\n    let infowindow = new kakao.maps.InfoWindow({zIndex:1});\r\n\r\n    //커스텀 오버레이를 닫기 위해 호출되는 함수입니다 \r\n    function closeOverlay() {\r\n        overlay.setMap(null);     \r\n    }\r\n    // 지도에 idle 이벤트를 등록합니다\r\n    kakao.maps.event.addListener(map, 'idle', searchPlaces);\r\n    // 커스텀 오버레이의 컨텐츠 노드에 css class를 추가합니다 \r\n    contentNode.className = 'placeinfo_wrap';\r\n    // 커스텀 오버레이의 컨텐츠 노드에 mousedown, touchstart 이벤트가 발생했을때\r\n    // 지도 객체에 이벤트가 전달되지 않도록 이벤트 핸들러로 kakao.maps.event.preventMap 메소드를 등록합니다 \r\n    addEventHandle(contentNode, 'mousedown', kakao.maps.event.preventMap);\r\n    addEventHandle(contentNode, 'touchstart', kakao.maps.event.preventMap);\r\n    // 커스텀 오버레이 컨텐츠를 설정합니다\r\n    placeOverlay.setContent(contentNode);  \r\n    // 각 카테고리에 클릭 이벤트를 등록합니다\r\n    addCategoryClickEvent();   \r\n    \r\n    //searchPlaces();\r\n\r\n    function addEventHandle(target, type, callback) {\r\n        if (target.addEventListener) {\r\n            target.addEventListener(type, callback);\r\n        } else {\r\n            target.attachEvent('on' + type, callback);\r\n        }\r\n    }\r\n    // 키워드 검색을 요청하는 함수입니다\r\n    function searchPlaces() {\r\n        if (!currCategory) {\r\n            return;\r\n        }\r\n        \r\n        // 커스텀 오버레이를 숨깁니다 \r\n        placeOverlay.setMap(null);\r\n        // 지도에 표시되고 있는 마커를 제거합니다\r\n        removeMarker();\r\n        \r\n        ps.categorySearch(currCategory, placesSearchCB, {useMapBounds:true});\r\n        \r\n    }\r\n    // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\r\nfunction placesSearchCB(data, status, pagination) {\r\n\r\n    if (status === kakao.maps.services.Status.OK) {\r\n         // 정상적으로 검색이 완료됐으면 지도에 마커를 표출합니다\r\n\r\n         displayPlaces(data);\r\n         \r\n      // 페이지 번호를 표출합니다\r\n         displayPagination(pagination);\r\n     } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\r\n         // 검색결과가 없는경우 해야할 처리가 있다면 이곳에 작성해 주세요\r\n         displayPlaces(null);\r\n     } else if (status === kakao.maps.services.Status.ERROR) {\r\n         // 에러로 인해 검색결과가 나오지 않은 경우 해야할 처리가 있다면 이곳에 작성해 주세요\r\n         \r\n     }\r\n }\r\n // 검색 결과 목록과 마커를 표출하는 함수입니다\r\n function displayPlaces(places) {\r\n    // 몇번째 카테고리가 선택되어 있는지 얻어옵니다\r\n     // 이 순서는 스프라이트 이미지에서의 위치를 계산하는데 사용됩니다\r\n     var order = document.getElementById(currCategory).getAttribute('data-order');\r\n     var listEl = document.getElementById('placesList'), \r\n     menuEl = document.getElementById('menu_wrap'),\r\n     fragment = document.createDocumentFragment(), \r\n     bounds = new kakao.maps.LatLngBounds(), \r\n     listStr = '';\r\n  // 검색 결과 목록에 추가된 항목들을 제거합니다\r\n     removeAllChildNods(listEl);\r\n     // 지도에 표시되고 있는 마커를 제거합니다\r\n     removeMarker();\r\n     \r\n     if(places == null){\r\n        itemEl = getListItem(-1, null);\r\n        fragment.appendChild(itemEl);\r\n     }\r\n    else{\r\n        for ( var i=0; i<places.length; i++ ) {\r\n            // 마커를 생성하고 지도에 표시합니다\r\n            var placePosition = new kakao.maps.LatLng(places[i].y, places[i].x),\r\n                marker = addMarker(placePosition, i), \r\n                itemEl = getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다\r\n            // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n            // LatLngBounds 객체에 좌표를 추가합니다\r\n            bounds.extend(placePosition);\r\n            // 마커와 검색결과 항목에 mouseover 했을때\r\n            // 해당 장소에 인포윈도우에 장소명을 표시합니다\r\n            // mouseout 했을 때는 인포윈도우를 닫습니다\r\n            (function(marker, place) {\r\n                kakao.maps.event.addListener(marker, 'click', function() {\r\n                    displayPlaceInfo(place);\r\n                });\r\n            })(marker, places[i]);\r\n            fragment.appendChild(itemEl);\r\n        }\r\n    }\r\n    \r\n     // 검색결과 항목들을 검색결과 목록 Elemnet에 추가합니다\r\n     listEl.appendChild(fragment);\r\n    // menuEl.scrollTop = 0;\r\n     // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n     //map.setBounds(bounds);\r\n }\r\n // 검색결과 항목을 Element로 반환하는 함수입니다\r\n function getListItem(index, places) {\r\n     \r\n     if(index == -1){\r\n        var el = document.createElement('li'),\r\n        itemStr = \"<div><br/>검색 결과가 존재하지 않습니다.</div>\";\r\n        el.innerHTML = itemStr;\r\n        el.className = 'item';\r\n    \r\n        return el;\r\n     }\r\n    else{\r\n        var el = document.createElement('li'),\r\n        itemStr = '<table className=\"table table-bordered\" id=\"placeListTable\"><tr>' +\r\n                    '<td style={{width:\"20%\"}}><span class=\"markerbg marker_' + (index+1) + '\"></span></td>' +\r\n                    '<td style={{width:\"60%\"}}><a class=\"info\" href=\"' + places.place_url + '\" target=\"_blank\" title=\"' + places.place_name + '\">' +\r\n                    '<p>' + places.place_name + '</p>';\r\n        itemStr += '<span class=\"gray\">' +  places.address_name  + '</span>';      \r\n        itemStr += '<span class=\"tel\">' + places.phone  + '</span>' + \r\n                    '</a></td>' +\r\n                    '<td style={{width:\"20%\"}}>일정추가</td></tr></table>';\r\n                    el.innerHTML = itemStr;\r\n                    el.className = 'item';\r\n                \r\n                    return el;\r\n    }\r\n    \r\n     \r\n }\r\n // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\r\n function addMarker(position, idx, title) {\r\n     var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png', // 마커 이미지 url, 스프라이트 이미지를 씁니다\r\n         imageSize = new kakao.maps.Size(36, 37),  // 마커 이미지의 크기\r\n         imgOptions =  {\r\n             spriteSize : new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기\r\n             spriteOrigin : new kakao.maps.Point(0, (idx*46)+10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\r\n             offset: new kakao.maps.Point(13, 37) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\r\n         },\r\n         markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\r\n             marker = new kakao.maps.Marker({\r\n             position: position, // 마커의 위치\r\n             image: markerImage \r\n         });\r\n     marker.setMap(map); // 지도 위에 마커를 표출합니다\r\n     markers.push(marker);  // 배열에 생성된 마커를 추가합니다\r\n     return marker;\r\n }\r\n // 지도 위에 표시되고 있는 마커를 모두 제거합니다\r\n function removeMarker() {\r\n     for ( var i = 0; i < markers.length; i++ ) {\r\n         markers[i].setMap(null);\r\n     }   \r\n     markers = [];\r\n }\r\n // 검색결과 목록 하단에 페이지번호를 표시는 함수입니다\r\n function displayPagination(pagination) {\r\n     var paginationEl = document.getElementById('pagination'),\r\n         fragment = document.createDocumentFragment(),\r\n         i; \r\n     // 기존에 추가된 페이지번호를 삭제합니다\r\n     while (paginationEl.hasChildNodes()) {\r\n         paginationEl.removeChild (paginationEl.lastChild);\r\n     }\r\n     for (i=1; i<=pagination.last; i++) {\r\n         var el = document.createElement('a');\r\n         el.href = \"#\";\r\n         el.innerHTML = i;\r\n         if (i===pagination.current) {\r\n             el.className = 'on';\r\n         } else {\r\n             el.onclick = (function(i) {\r\n                 return function() {\r\n                     pagination.gotoPage(i);\r\n                 }\r\n             })(i);\r\n         }\r\n         fragment.appendChild(el);\r\n     }\r\n     paginationEl.appendChild(fragment);\r\n }\r\n\r\n    // 클릭한 마커에 대한 장소 상세정보를 커스텀 오버레이로 표시하는 함수입니다\r\n    function displayPlaceInfo (place) {\r\n        var content = '<div class=\"placeinfo\">' +\r\n                        '   <a class=\"title\" href=\"' + place.place_url + '\" target=\"_blank\" title=\"' + place.place_name + '\">' + place.place_name + '</a>';   \r\n\r\n        if (place.road_address_name) {\r\n            content += '    <span title=\"' + place.road_address_name + '\">' + place.road_address_name + '</span>' +\r\n                        '  <span class=\"jibun\" title=\"' + place.address_name + '\">(지번 : ' + place.address_name + ')</span>';\r\n        }  else {\r\n            content += '    <span title=\"' + place.address_name + '\">' + place.address_name + '</span>';\r\n        }                \r\n    \r\n        content += '    <span class=\"tel\">' + place.phone + '</span>' + \r\n                    '</div>' + \r\n                    '<div class=\"after\"></div>';\r\n\r\n        contentNode.innerHTML = content;\r\n        placeOverlay.setPosition(new kakao.maps.LatLng(place.y, place.x));\r\n        placeOverlay.setMap(map);  \r\n    }\r\n\r\n    // 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\r\n    // 인포윈도우에 장소명을 표시합니다\r\n    // function displayInfowindow(marker, place) {\r\n    //     //var content = '<div style=\"padding:5px;z-index:1;\">' + title + '</div>';\r\n        \r\n    //     var content = '<div class=\"placeinfo\">' +\r\n    //                     '   <a className=\"title\" href=\"' + place.place_url + '\" target=\"_blank\" title=\"' + place.place_name + '\">' + place.place_name + '</a>';   \r\n                            \r\n    //     if (place.road_address_name) {\r\n    //         content += '    <span title=\"' + place.road_address_name + '\">' + place.road_address_name + '</span>' +\r\n    //                     '  <span className=\"jibun\" title=\"' + place.address_name + '\">(지번 : ' + place.address_name + ')</span>';\r\n    //     }  else {\r\n    //         content += '    <span title=\"' + place.address_name + '\">' + place.address_name + '</span>';\r\n    //     }                \r\n        \r\n    //     content += '    <span className=\"tel\">' + place.phone + '</span>' + \r\n    //                 '</div>' + \r\n    //                 '<div className=\"after\"></div>';\r\n                    \r\n    //     infowindow.setContent(content);\r\n    //     infowindow.open(map, marker);\r\n    // }\r\n    // 검색결과 목록의 자식 Element를 제거하는 함수입니다\r\n    function removeAllChildNods(el) {   \r\n        while (el.hasChildNodes()) {\r\n            el.removeChild (el.lastChild);\r\n        }\r\n    }\r\n  \r\n    //각 카테고리에 클릭 이벤트를 등록합니다\r\n    function addCategoryClickEvent() {\r\n        var category = document.getElementById('category'),\r\n            children = category.children;\r\n        for (var i=0; i<children.length; i++) {\r\n            children[i].onclick = onClickCategory;\r\n        }\r\n    }\r\n    //카테고리를 클릭했을 때 호출되는 함수입니다\r\n    function onClickCategory() {\r\n        var id = this.id, className = this.className;\r\n\r\n        placeOverlay.setMap(null);\r\n        if (className === 'on') {\r\n            currCategory = '';\r\n            // changeCategoryClass();\r\n            removeMarker();\r\n        } else {\r\n            currCategory = id;\r\n            // changeCategoryClass(this);\r\n            searchPlaces();\r\n        }\r\n    }\r\n    //클릭된 카테고리에만 클릭된 스타일을 적용하는 함수입니다\r\n    // function changeCategoryClass(el) {\r\n    //     var category = document.getElementById('category'),\r\n    //         children = category.children,\r\n    //         i;\r\n    //     for ( i=0; i<children.length; i++ ) {\r\n    //         children[i].className = '';\r\n    //     }\r\n    //     if (el) {\r\n    //         el.className = 'on';\r\n    //     } \r\n    // } \r\n    // 마커를 지도 위에 표시\r\n    marker.setMap(map);\r\n  };\r\n\r\n  return (\r\n      <div>\r\n          {/* <div id=\"map\" style={{ width: \"500px\", height: \"500px\" }}></div> */}\r\n          \r\n          <Box className=\"map_wrap\" style={{textAlign: 'center'}}\r\n                        display=\"flex\"\r\n                        flexWrap=\"wrap\"\r\n                        p={1}\r\n                        m={1}\r\n                        bgcolor=\"background.paper\"\r\n                        justifyContent=\"center\"\r\n                        css={{ maxWidth: '100%' }}\r\n                    >\r\n                        \r\n                        <Box m={1} id=\"map\" style={{position:'relative', overflow:'hidden'}}>\r\n                            <input type=\"hidden\" value={title} id=\"keyword\" size=\"15\"></input>\r\n                        </Box>\r\n\r\n                        <br/><br/>\r\n                        \r\n                        <Box m={1} id=\"placeListBox\">\r\n                            <BottomNavigation\r\n                                    id=\"category\"\r\n                                    value={value}\r\n                                    onChange={(event, newValue) => {\r\n                                        setValue(newValue);\r\n                                    }}\r\n                                    showLabels\r\n                                    >\r\n                                    <BottomNavigationAction id=\"FD6\" data-order=\"0\" label=\"Food\" icon={<RestaurantIcon />} \r\n                                        style={{borderLeft: '1px solid #ddd', borderTop: '1px solid #ddd', borderBottom: '1px solid #ddd'}} />\r\n                                    <BottomNavigationAction id=\"CE7\" data-order=\"1\" label=\"Cafe\" icon={<LocalCafeIcon />} style={{border: '1px solid #ddd'}} />\r\n                                    <BottomNavigationAction id=\"AD5\" data-order=\"2\" label=\"Rooms\" icon={<HotelIcon />}\r\n                                        style={{borderRight: '1px solid #ddd', borderTop: '1px solid #ddd', borderBottom: '1px solid #ddd'}}/>\r\n                                    </BottomNavigation>\r\n                            <div id=\"menu_wrap\" class=\"bg_white\">\r\n                                <ul id=\"placesList\">\r\n                                    <li style={{marginTop: '30px'}}>원하시는 카테고리를 선택해주세요.</li>\r\n                                </ul>\r\n                                <div id=\"pagination\"></div>\r\n                            </div>\r\n                        </Box>\r\n                        \r\n                    </Box>\r\n\r\n          \r\n          {/* <div style={{display:'flex', width:'100%'}}>\r\n                \r\n                <div className=\"map_wrap\" className=\"map_wrap\" style={{textAlign: 'center', display:'flex', flexShrink:'1', justifyContent:'center'}}>\r\n                    <div id=\"map\" style={{position:'relative', overflow:'hidden'}}>\r\n                    <ul id=\"category\">\r\n                        <li id=\"FD6\" data-order=\"0\"> \r\n                            <span className=\"category_bg restaurant\"></span>\r\n                            음식점\r\n                        </li>  \r\n                        <li id=\"CE7\" data-order=\"1\"> \r\n                            <span className=\"category_bg cafe\"></span>\r\n                            카페\r\n                        </li>\r\n                        <li id=\"AD5\" data-order=\"2\"> \r\n                            <span className=\"category_bg hotel\"></span>\r\n                            숙박\r\n                        </li>     \r\n                    </ul>   \r\n                    <input type=\"hidden\" value={title} id=\"keyword\" size=\"15\"></input>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <br/><br/>\r\n                <div style={{display:'flex', flexShrink:'1', justifyContent:'center'}}>\r\n                    <ul id=\"placesList\"></ul>\r\n                    <div id=\"pagination\"></div>\r\n                </div>\r\n            </div> */}\r\n      </div>   \r\n  );\r\n}\r\n\r\nexport default MapComp;","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\tour\\ReviewListComp.js",[],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\HotPlaceComp.js",["404","405","406"],"import React, {Component} from \"react\";\r\nimport {NavLink, Route} from \"react-router-dom\";\r\nimport store from \"../../../redux/store\";\r\nimport {actionType, mainViewType} from \"../../../redux/config\";\r\nimport TourList from '../../header/menus/TourList';\r\n\r\nclass HotPlaceComp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    setMainView = (mainView) => {\r\n        console.log(\"HotPlaceComp setMainView()\");\r\n        store.dispatch({\r\n            type: actionType.setMainView,\r\n            mainView: mainView\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"hotPlaceComp\">\r\n                hotPlaceComp\r\n                <br/>\r\n                {this.props.name}<br/>\r\n                <NavLink exact to=\"/TourList/jeju\"\r\n                                 onClick={() => {\r\n                                     console.log(\"TourList NavLink onClick\");\r\n                                     this.setMainView(mainViewType.TourList);\r\n                                 }}\r\n                        >제주</NavLink>\r\n                <NavLink exact to=\"/TourList/jocheon\"\r\n                                 onClick={() => {\r\n                                     console.log(\"TourList NavLink onClick\");\r\n                                     this.setMainView(mainViewType.TourList);\r\n                                 }}\r\n                        >조천</NavLink>\r\n                <NavLink exact to=\"/TourList/gujwa\"\r\n                                 onClick={() => {\r\n                                     console.log(\"TourList NavLink onClick\");\r\n                                     this.setMainView(mainViewType.TourList);\r\n                                 }}\r\n                        >구좌</NavLink>\r\n                <NavLink exact to=\"/TourList/sungsan\"\r\n                                 onClick={() => {\r\n                                     console.log(\"TourList NavLink onClick\");\r\n                                     this.setMainView(mainViewType.TourList);\r\n                                 }}\r\n                        >성산</NavLink>\r\n                <NavLink exact to=\"/TourList/namwon\"\r\n                                 onClick={() => {\r\n                                     console.log(\"TourList NavLink onClick\");\r\n                                     this.setMainView(mainViewType.TourList);\r\n                                 }}\r\n                        >남원</NavLink>\r\n                <NavLink exact to=\"/TourList/seogwipo\"\r\n                                 onClick={() => {\r\n                                     console.log(\"TourList NavLink onClick\");\r\n                                     this.setMainView(mainViewType.TourList);\r\n                                 }}\r\n                        >서귀포</NavLink>\r\n                        <br/>\r\n                <NavLink exact to=\"/TourList/andeok\"\r\n                                 onClick={() => {\r\n                                     console.log(\"TourList NavLink onClick\");\r\n                                     this.setMainView(mainViewType.TourList);\r\n                                 }}\r\n                        >안덕</NavLink>\r\n                <NavLink exact to=\"/TourList/daejung\"\r\n                                 onClick={() => {\r\n                                     console.log(\"TourList NavLink onClick\");\r\n                                     this.setMainView(mainViewType.TourList);\r\n                                 }}\r\n                        >대정</NavLink>\r\n                <NavLink exact to=\"/TourList/hangyeong\"\r\n                                 onClick={() => {\r\n                                     console.log(\"TourList NavLink onClick\");\r\n                                     this.setMainView(mainViewType.TourList);\r\n                                 }}\r\n                        >한경</NavLink>\r\n                <NavLink exact to=\"/TourList/hanrim\"\r\n                                 onClick={() => {\r\n                                     console.log(\"TourList NavLink onClick\");\r\n                                     this.setMainView(mainViewType.TourList);\r\n                                 }}\r\n                        >한림</NavLink>\r\n                <NavLink exact to=\"/TourList/aewol\"\r\n                                 onClick={() => {\r\n                                     console.log(\"TourList NavLink onClick\");\r\n                                     this.setMainView(mainViewType.TourList);\r\n                                 }}\r\n                        >애월</NavLink>\r\n                <NavLink exact to=\"/TourList/udo\"\r\n                                 onClick={() => {\r\n                                     console.log(\"TourList NavLink onClick\");\r\n                                     this.setMainView(mainViewType.TourList);\r\n                                 }}\r\n                        >우도</NavLink>\r\n                        <br/>\r\n\r\n                {/*<a href=\"#HotPlaceComp\">{this.props.name}</a>*/}\r\n\r\n                {/* <a href=\"/Tour/jeju\">제주</a> */}\r\n                {/* <a href=\"#jocheon\">조천</a>\r\n                <a href=\"#gujwa\">구좌</a>\r\n                <a href=\"#sungsan\">성산</a>\r\n                <a href=\"#pyoseon\">표선</a>\r\n                <a href=\"#namwon\">남원</a>\r\n                <a href=\"#seogwipo\">서귀포</a><br/>\r\n                <a href=\"#andeok\">안덕</a>\r\n                <a href=\"#daejung\">대정</a>\r\n                <a href=\"#hangyeong\">한경</a>\r\n                <a href=\"#hanrim\">한림</a>\r\n                <a href=\"#aewol\">애월</a>\r\n                <a href=\"#udo\">우도</a><br/><br/> */}\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default HotPlaceComp;\r\n","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\MainPhotoComp.js",["407","408","409","410","411","412","413","414","415","416","417"],"import React, {Component} from 'react';\r\nimport jeju1 from \"../../../image/jeju1.jpg\";\r\nimport jeju2 from \"../../../image/jeju2.jpg\";\r\nimport jeju3 from \"../../../image/jeju3.jpeg\";\r\nimport udo1 from \"../../../image/udo1.jpg\";\r\nimport gsap from \"gsap\";\r\nimport WaveBorder from \"./WaveBorder\";\r\nimport { createMuiTheme, MuiThemeProvider, WithStyles } from \"@material-ui/core\";\r\nimport { ThemeProvider } from 'styled-components';\r\nimport theme from \"./theme\";\r\nimport PropTypes from \"prop-types\";\r\nimport styledComponents from \"styled-components\";\r\n\r\nclass MainPhotoComp extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // this.setImageScroll();\r\n    }\r\n\r\n    setImageScroll = (photoNum, preNum = 4) => {\r\n        const duration = 5;\r\n        const imgCnt = 4;\r\n        let arrImg = new Array();\r\n\r\n        //over index setting\r\n        if (photoNum > imgCnt) {\r\n            photoNum = 1;\r\n        }\r\n\r\n        //img element array setting.\r\n        for (let i = 1; i <= imgCnt; i++) {\r\n            let tempImgIdx = (photoNum - 1) + i;\r\n            tempImgIdx = tempImgIdx > imgCnt ? tempImgIdx - imgCnt : tempImgIdx;\r\n            arrImg.push(document.querySelector(`img.mainPhotoComp_img${tempImgIdx}`));\r\n        }\r\n        console.log(\"arrImg:\", arrImg);\r\n        console.log(\"photoNum\", photoNum, \"preNum\", preNum);\r\n\r\n        if(arrImg[0] != null){\r\n            //zIndex setting.\r\n            for (let i = 0; i < imgCnt; i++) {\r\n                arrImg[i].style.zIndex = imgCnt - i;\r\n            }\r\n\r\n            //tween action.\r\n            gsap.fromTo(`.mainPhotoComp_img${photoNum}`\r\n                , {\r\n                    opacity: 0,\r\n                }, {\r\n                    opacity: 1,\r\n                    duration: duration,\r\n                });\r\n            gsap.fromTo(`.mainPhotoComp_img${preNum}`\r\n                , {\r\n                    opacity: 1,\r\n                }, {\r\n                    opacity: 0,\r\n                    duration: duration,\r\n                });\r\n\r\n            //next action preparing.\r\n            setTimeout(this.setImageScroll.bind(this, photoNum + 1, photoNum), (duration + 3) * 1000);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setImageScroll(1);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"mainPhotoComp\">\r\n                    <img className=\"mainPhotoComp_img1\" src={jeju1}/>\r\n                    <img className=\"mainPhotoComp_img2\" src={jeju2}/>\r\n                    <img className=\"mainPhotoComp_img3\" style={{width: \"1920px\"}} src={jeju3}/>\r\n                    <img className=\"mainPhotoComp_img4\" src={udo1}/>\r\n                </div>\r\n                <MuiThemeProvider theme={theme}>\r\n                    <WaveBorder\r\n                        upperColor=\"#FFFFFF\"\r\n                        lowerColor=\"#FFD700\"//{theme.palette.common.darkBlack}\r\n                        animationNegativeDelay={4}\r\n                        className=\"wave\"\r\n                    />\r\n                </MuiThemeProvider>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainPhotoComp\r\n","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\MyPlanComp.js",[],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\EtcBoardComp.js",[],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\notice\\BoardItem.js",[],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\tour\\Tourintro.js",["418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443"],"import React,{Component} from 'react';\r\nimport './TourCss.css';\r\nimport udo from '../../../image/Tour_udo.jpg';\r\nimport seogwipo from '../../../image/Tour_seogwipo.jpg';\r\nimport aewol from '../../../image/Tour_aewol.jpg';\r\nimport andeok from '../../../image/Tour_andeok.jpg';\r\nimport daejung from '../../../image/Tour_daejung.jpg';\r\nimport gujwa from '../../../image/Tour_Gujwa.jpg';\r\nimport hangyeong from '../../../image/Tour_hangyeong.jpg';\r\nimport hanrim from '../../../image/Tour_hanrim.jpg';\r\nimport jeju from '../../../image/Tour_jeju.jpg';\r\nimport jocheon from '../../../image/Tour_jocheon.jpg';\r\nimport namwon from '../../../image/Tour_namwon.jpg';\r\nimport pyoseon from '../../../image/Tour_pyoseon.jpg';\r\nimport sungsan from '../../../image/Tour_sungsan.jpg';\r\n\r\nclass Tourintro extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.area = this.props.area;\r\n    }\r\n\r\n    render() {\r\n\r\n        let img = this.area==\"jeju\"?<img id=\"jejuImg\" src={jeju}/>:(this.area==\"jocheon\"?<img id=\"jocheonImg\" src={jocheon}/>:\r\n            (this.area==\"aewol\"?<img id=\"aewolImg\" src={aewol}/>:(this.area==\"andeok\"?<img id=\"andeokImg\" src={andeok}/>:\r\n            (this.area==\"daejung\"?<img id=\"daejungImg\" src={daejung}/>:(this.area==\"gujwa\"?<img id=\"gujwaImg\" src={gujwa}/>:\r\n            (this.area==\"hangyeong\"?<img id=\"hangyeongImg\" src={hangyeong}/>:(this.area==\"hanrim\"?<img id=\"hanrimImg\" src={hanrim}/>:\r\n            (this.area==\"namwon\"?<img id=\"namwonImg\" src={namwon}/>:(this.area==\"pyoseon\"?<img id=\"pyoseonImg\" src={pyoseon}/>:\r\n            (this.area==\"seogwipo\"?<img id=\"seogwipoImg\" src={seogwipo}/>:(this.area==\"sungsan\"?<img id=\"sungsanImg\" src={sungsan}/>:\r\n            (this.area==\"udo\"?<img id=\"udoImg\" src={udo}/>:\"\"))))))))))));\r\n        return (\r\n            <div>\r\n                {/* <h4>Tourintro {this.props.area}</h4> */}\r\n                <div id=\"mainImg\">\r\n                    {img}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tourintro;","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\header\\menus\\TourList.js",["444"],"import React, {Component} from \"react\";\r\nimport store from \"../../../redux/store\";\r\nimport {actionType} from \"../../../redux/config\";\r\n\r\nconst TourList = ({match}) => {\r\n    console.log(\"TourList match\", match.params.name);\r\n\r\n    store.dispatch({\r\n        type: actionType.setSpotView,\r\n        spotView: match.params.name\r\n    });\r\n\r\n    return(\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TourList;\r\n","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\tour\\ReviewItemComp.js",["445"],"import React,{Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nclass ReviewItemComp extends Component {\r\n\r\n\r\n    render() {\r\n        const {row}=this.props;\r\n        const photoname = row.photoname===\"no\"?\"\":row.photo;\r\n        return (\r\n            <tr>\r\n                <td style={{width:'15%'}}>\r\n                    <img src={photoname} alt=\"이미지 없음\" style={{width:'100px', height:'100px'}}/>\r\n                </td>\r\n                <td valign=\"top\" style={{width:'50%'}} align=\"left\">\r\n                    <span style={{color: '#F0CD58', fontSize: '18px'}}>★★★★★</span>\r\n                    <br/><br/>\r\n                    <p style={{fontSize: '12pt'}}>{row.content}</p>\r\n                </td>\r\n                <td valign=\"bottom\" style={{width:'15%'}}>\r\n                    <div style={{float: 'right'}}>\r\n                        <b>{row.memNum}</b> | {row.writeday}\r\n                    </div>\t\t\r\n                </td>\r\n            </tr> \r\n        );\r\n    }\r\n}\r\n\r\nexport default ReviewItemComp;","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\theme.js",[],["446","447"],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mainpage\\WaveBorder.js",["448","449","450","451"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport jeju1 from \"../../../image/jeju1.jpg\";\r\nimport jeju2 from \"../../../image/jeju2.jpg\";\r\nimport jeju3 from \"../../../image/jeju3.jpeg\";\r\nimport udo1 from \"../../../image/udo1.jpg\";\r\n\r\nconst styles = {\r\n    waves: {\r\n        position: \"relative\",\r\n        width: \"100%\",\r\n        // marginBottom: -7,\r\n        height: \"7vw\",\r\n        minHeight: \"7vw\",\r\n        // \"z-index\": 9999999,\r\n    },\r\n    \"@keyframes moveForever\": {\r\n        from: { transform: \"translate3d(-90px, 0, 0)\" },\r\n        to: { transform: \"translate3d(85px, 0, 0)\" }\r\n    },\r\n    parallax: {\r\n        \"& > use\": {\r\n            animation: \"$moveForever 4s cubic-bezier(0.62, 0.5, 0.38, 0.5) infinite\",\r\n            animationDelay: props => `-${props.animationNegativeDelay}s`\r\n        }\r\n    }\r\n};\r\n\r\nfunction WaveBorder(props) {\r\n    const id = String(Math.random());\r\n    const {\r\n        className,\r\n        lowerColor,\r\n        upperColor,\r\n        classes,\r\n        animationNegativeDelay,\r\n        ...rest\r\n    } = props;\r\n    return (\r\n        <div className={className} style={{ background: upperColor }} {...rest}>\r\n            {/* <img className=\"mainPhotoComp_img1\" src={jeju1}/> */}\r\n\r\n            <svg\r\n                className={classes.waves}\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                xlink=\"http://www.w3.org/1999/xlink\"\r\n                viewBox=\"0 24 150 28\"\r\n                preserveAspectRatio=\"none\"\r\n                shapeRendering=\"auto\">\r\n                    <defs>\r\n                    <path\r\n                        id={id}\r\n                        d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\"\r\n                    />\r\n                    </defs>\r\n                    <g className={classes.parallax}>\r\n                        <use href={`#${id}`} x=\"48\" y=\"0\" fill={lowerColor} />\r\n                    </g>\r\n                </svg>\r\n        </div>\r\n    );\r\n}\r\n\r\nWaveBorder.propTypes = {\r\n    lowerColor: PropTypes.string.isRequired,\r\n    upperColor: PropTypes.string.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    animationNegativeDelay: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(WaveBorder);","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\ShareBoardUpdateForm.js",["452"],"import React,{Component}  from 'react';\r\nimport { Route,Link } from \"react-router-dom\";\r\nimport ShareBoardPageComp from \"./ShareBoardPageComp\";\r\n// import ShareBoardFormComp from \"./ShareBoardFormComp\";\r\nimport axios from \"axios\";\r\n\r\nclass ShareBoardUpdateForm extends Component\r\n{\r\n    constructor({match},props)\r\n    {\r\n        super(props);\r\n        console.log(\"ShareBoardUpdateForm constructor\", props);\r\n        this.num=match.params.num;\r\n        this.state={       \r\n            photoname:''\r\n        }\r\n    }\r\n   \r\n\r\n      //서버에 이미지 업로드하는 함수\r\n      uploadImage=(e)=>{\r\n        const uploadFile = e.target.files[0];\r\n        const upload=new FormData();\r\n        upload.append(\"uploadFile\", uploadFile);\r\n        \r\n         let url=\"http://ec2-3-36-28-35.ap-northeast-2.compute.amazonaws.com:8080/FinalProjectSpringBoot/share/upload\";\r\n\r\n         axios({\r\n            method: 'post',\r\n            url:url,\r\n            data: upload,\r\n            headers:{'Content-Type':'multipart/form-data'}\r\n         }).then(res=>{\r\n            this.setState({\r\n               photoname: res.data.photoname\r\n            })\r\n         }).catch(err=>{\r\n            console.log(\"shareboard upload 오류 : \" + err);\r\n         })\r\n\r\n     }\r\n\r\n    //num 에 해당하는 데이타 가져오기\r\n    onSelectData=()=>{\r\n        let url=\"http://ec2-3-36-28-35.ap-northeast-2.compute.amazonaws.com:8080/FinalProjectSpringBoot/share/select?num=\"+this.num;\r\n        axios.get(url)\r\n        .then(res=>{\r\n            this.refs.subject.value=res.data.subject;\r\n            this.refs.addr.value=res.data.addr;\r\n            this.refs.content.value=res.data.content;\r\n            //이미지명은 state 이므로\r\n            this.setState({\r\n                photoname:res.data.photoname\r\n            })            \r\n        })  \r\n\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.onSelectData();\r\n    }\r\n\r\n\r\n    onDataUpdate=()=>{\r\n        //입력값 변수에 저장하기\r\n        let subject=this.refs.subject.value;\r\n        let addr=this.refs.addr.value;\r\n        let content=this.refs.content.value;\r\n        let star = 0;\r\n        \r\n        //db 에 update\r\n        let url=\"http://ec2-3-36-28-35.ap-northeast-2.compute.amazonaws.com:8080/FinalProjectSpringBoot/share/update\";\r\n        let num=this.num;\r\n        axios.post(url,{num,subject,addr,content,star})\r\n        .then(res=>{\r\n            //리스트로 이동\r\n            this.props.history.push(\"/ShareBoard\"+num);\r\n        }).catch(err=>{\r\n         console.log(\"수정시 오류남:\"+err);\r\n      })\r\n\r\n    }\r\n\r\n   //  handleSubmit(event) {\r\n   //      alert('수정하였습니다.' + this.state.subject);\r\n   //      event.preventDefault();\r\n   //      this.onDataInsert();\r\n   //    }\r\n\r\n    render(){\r\n        const url=\"http://ec2-3-36-28-35.ap-northeast-2.compute.amazonaws.com:8080/FinalProjectSpringBoot/share/upload\";\r\n        console.log(\"ShareBoardUpateForm render()\", this.props);\r\n        return (\r\n            <div>\r\n                     <table style={{width:'800px',border:'1px solid black'}}>\r\n                   <tr>\r\n                      <th><span>맛집이름</span></th>\r\n                      <td>\r\n                         <input type=\"text\" style={{width:'200px',height:'20px'}} placeholder=\"맛집이름을 적어주세요\" ref=\"subject\" />\r\n                      </td>\r\n                   </tr>\r\n\r\n                   <tr>\r\n                      <th><span>맛집주소</span></th>\r\n                      <td>\r\n                         <input type=\"text\" style={{width:'400px',height:'20px'}} placeholder=\"맛집주소를 적어주세요\" ref=\"addr\"/>\r\n                      </td>\r\n                   </tr>\r\n\r\n                   <tr>\r\n                      <th><span>이미지</span></th>\r\n                      <td>\r\n                      <input type=\"file\" onChange={this.uploadImage.bind(this)}/>\r\n                      {/* <img src={url + this.state.photoname} alt=\"이미지없음\" style={{width:'200px',height:'300px'}}/> */}\r\n                      </td>\r\n                   </tr>\r\n\r\n                   <tr>\r\n                      <th><span>리뷰</span></th>\r\n                      <td>\r\n                         <textarea maxLength=\"1200\" style={{width:'400px',height:'120px',resize:'none'}} ref=\"content\" ></textarea>\r\n                      </td>\r\n                   </tr>\r\n\r\n                   <tr>\r\n                      <th><span>평가</span></th>\r\n                      <td>\r\n                         <b>별점 이미지</b>\r\n                      </td>\r\n                   </tr>\r\n\r\n                </table>\r\n                {/* <button type=\"button\" onClick={this.handleSubmit.bind(this)}>수정하기</button> */}\r\n                <button type=\"button\" onClick={this.onDataUpdate.bind(this)}>수정하기</button>\r\n                <Link to=\"/ShareBoardPageComp\">\r\n                <button type=\"button\">취소</button>\r\n                </Link>\r\n                <Route exact path=\"/ShareBoardPageComp\" component={ShareBoardPageComp}/>\r\n\r\n           \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShareBoardUpdateForm;\r\n","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\modal.js",["453"],"import React, { Component,useState } from 'react';\r\nimport './modal.css'\r\n\r\nclass modal extends Component {\r\n    render() {\r\n        // 열기, 닫기, 모달 헤더 텍스트를 부모로부터 받아옴\r\n        const { open, close, header } = this.props;\r\n\r\n        return (\r\n            <div className={ open ? 'openModal modal': 'modal' }>\r\n                { open ? (  \r\n                    <section>\r\n                        <header>\r\n                            { header }\r\n                            <button className=\"close\" onClick={close}> &times; </button>\r\n                        </header>\r\n                        <main>\r\n                            {this.props.children}\r\n                        </main>\r\n                        <footer>\r\n                            <button className=\"close\" onClick={close}> close </button>\r\n                        </footer>\r\n                    </section>\r\n                ) : null }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default modal;","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mypage\\MemberUpdateFormComp.js",["454"],"import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\nimport {URL} from \"../../../redux/config\";\r\n\r\nclass MemberUpdateFormComp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"MemberUpdateFormComp constructor\", props);\r\n\r\n        this.state={\r\n            memberData:[],\r\n            email2:''\r\n        }\r\n    }    \r\n    \r\n    // 스프링에서 목록 가져오기\r\n    getData = () => {\r\n        let url = URL + '/member/getdata?id=sanghee';\r\n        axios.get(url)\r\n        .then(response=>{\r\n            this.setState({\r\n                memberData:response.data,\r\n                email2: response.data.email2\r\n            })\r\n        }).catch(err=>{\r\n            console.log(\"목록 오류:\"+err);\r\n        })\r\n    }\r\n    changeEmail = (e) => {\r\n        console.log(\"changeEmail 함수\");\r\n        this.setState({\r\n          email2: e.target.value\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n          memberData: e.target.value\r\n        })\r\n    }\r\n    \r\n    updateMember = (e) => {\r\n        e.preventDefault();\r\n    \r\n        let member = {\r\n          id: this.state.memberData.id,\r\n          name: this.state.memberData.name,\r\n          gender: this.state.memberData.gender,\r\n          photo: this.state.memberData.photo,\r\n          address: this.state.memberData.address,\r\n          addrdetail: this.state.memberData.addrdetail,\r\n          email: this.state.memberData.email,\r\n          email2: this.state.email2,\r\n          hp: this.state.memberData.hp,\r\n          pass: this.state.memberData.pass\r\n        }\r\n    \r\n      }\r\n\r\n    onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        this.onUpdateMember();\r\n    };\r\n\r\n    //사진 업로드시 호출되는 함수\r\n    imageUpload=(e)=>{\r\n        const uploadFile = e.target.files[0];\r\n\r\n        //서버에 업로드\r\n        const memberFile = new FormData();\r\n        memberFile.append(\"uploadFile\",uploadFile);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: URL + '/member/upload',\r\n            data: memberFile,\r\n            headers: {'Content-Type':'multipart/form-data'}\r\n        }).then(response=>{\r\n            alert(response.data.photoname+\" 이미지명으로 저장합니다\");\r\n            //이미지명 변경\r\n            this.setState({\r\n                photoname: response.data.photoname\r\n            })\r\n        }).catch(err=>{\r\n            console.log(\"이미지 업로드시 오류남:\"+err);\r\n        })\r\n    }\r\n\r\n    onUpdateMember = () => {\r\n        let data = this.state;\r\n        let url = URL + \"/member/update\";\r\n\r\n        axios.post(url, data)\r\n        .then(response => {\r\n            this.props.history.push(\"/Mypage\");//정보 변경후 마이페이지로 이동\r\n        }).catch(err=>{\r\n            console.log(\"회원가입시 오류남:\"+err);\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(); //처음 시작시 백엔드로부터 데이타 가져오기\r\n    }\r\n\r\n    render() {\r\n        console.log(\"MemberUpdateFormComp render()\", this.props);\r\n        return (\r\n            <div>\r\n                <form>\r\n                <h1>회원정보 수정</h1>\r\n                <br/>\r\n                <span>id</span>&nbsp;&nbsp;{this.state.memberData.id}<br/>\r\n                <span>name</span>&nbsp;&nbsp;\r\n                <input type=\"text\" name = \"name\" value = {this.state.memberData.name} onChange={this.handleChange}/><br/>\r\n                <span>gender</span>&nbsp;&nbsp;\r\n                <input type=\"text\" name = \"gender\" value = {this.state.memberData.gender} onChange={this.handleChange}/><br/>\r\n                <span>photo</span>&nbsp;&nbsp;\r\n                <input type=\"file\" name = \"photo\" value = {this.state.memberData.photo} onChange={this.handleChange}/><br/>\r\n                <span>address</span>&nbsp;&nbsp;\r\n                <input type=\"text\" name = \"address\" value = {this.state.memberData.address} onChange={this.handleChange}/>\r\n                <button type=\"button\"><span>주소검색</span></button><br/>\r\n                <span>addrdetail</span>&nbsp;&nbsp;\r\n                <input type=\"text\" name = \"addrdetail\" value = {this.state.memberData.addrdetail} onChange={this.handleChange}/><br/>\r\n                <span>email</span>&nbsp;&nbsp;\r\n                <input type=\"text\" name = \"email\" value = {this.state.memberData.email} onChange={this.handleChange}/>\r\n                <input type=\"text\" name = \"email2\" value = {this.state.email2} onChange={this.handleChange}/>\r\n                <select name=\"selectemail\" onChange={this.changeEmail}>\r\n                    <option disabled>선택하세요</option>\r\n                    <option value=\"\">직접입력</option>\r\n                    <option value=\"naver.com\">naver.com</option>\r\n                    <option value=\"gmail.com\">gmail.com</option>\r\n                    <option value=\"nate.com\">nate.com</option> \r\n                </select><br/>\r\n                <span>hp</span>&nbsp;&nbsp;\r\n                <input type=\"text\" name = \"hp\" value = {this.state.memberData.hp} onChange={this.handleChange}/><br/>\r\n                <span>pass</span>&nbsp;&nbsp;\r\n                <input type=\"password\" name=\"password\"/><br/>\r\n                <button type = \"submit\">정보수정</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemberUpdateFormComp;\r\n\r\n\r\n\r\n","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mypage\\MySchedule.js",[],"C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\ShareReview.js",["455"],"import React, { Component,useState } from 'react';\r\nimport ReviewItem from './ReviewItem';\r\n\r\nclass ShareReview extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            listData:[]\r\n        }\r\n        this.regroup = this.props.regroup;\r\n    }\r\n\r\n    getList=()=>{\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n               {\r\n                    this.state.listData.map((row,idx)=>(\r\n                        <ReviewItem row={row} key={idx} list={this.list.bind(this)}\r\n                            history={this.props.history}/>\r\n                    ))\r\n                 }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShareReview;","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\ReviewItem.js",["456","457"],"import React, { Component,useState } from 'react';\r\n\r\nclass ReviewItem extends Component {\r\n    \r\n    render() {\r\n        const {row}=this.props;\r\n        return (\r\n            <div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReviewItem;","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\shareboard\\Modal.js",["458"],"import React, { Component,useState } from 'react';\r\nimport './Modal.css'\r\n\r\nclass Modal extends Component {\r\n    render() {\r\n        // 열기, 닫기, 모달 헤더 텍스트를 부모로부터 받아옴\r\n        const { open, close, header } = this.props;\r\n\r\n        return (\r\n            <div className={ open ? 'openModal modal': 'modal' }>\r\n                { open ? (\r\n                    <section>\r\n                        <header>\r\n                            { header }\r\n                            <button className=\"close\" onClick={close} > &times; </button>\r\n                        </header>\r\n                        <main>\r\n                            {this.props.children}\r\n                        </main>\r\n                        {/* <footer>\r\n                            <button className=\"close\" onClick={close}> 댓글목록 </button>\r\n                        </footer> */}\r\n                    </section>\r\n                ) : null }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;\r\n","C:\\java0901\\finalproject\\jeju-front\\finalproject\\src\\component\\main\\mypage\\DayItem.js",["459","460","461","462","463","464","465"],{"ruleId":"466","replacedBy":"467"},{"ruleId":"468","replacedBy":"469"},{"ruleId":"470","severity":1,"message":"471","line":32,"column":23,"nodeType":"472","messageId":"473","endLine":32,"endColumn":25},{"ruleId":"470","severity":1,"message":"471","line":36,"column":30,"nodeType":"472","messageId":"473","endLine":36,"endColumn":32},{"ruleId":"470","severity":1,"message":"471","line":40,"column":30,"nodeType":"472","messageId":"473","endLine":40,"endColumn":32},{"ruleId":"470","severity":1,"message":"471","line":44,"column":30,"nodeType":"472","messageId":"473","endLine":44,"endColumn":32},{"ruleId":"470","severity":1,"message":"471","line":48,"column":30,"nodeType":"472","messageId":"473","endLine":48,"endColumn":32},{"ruleId":"470","severity":1,"message":"471","line":52,"column":30,"nodeType":"472","messageId":"473","endLine":52,"endColumn":32},{"ruleId":"470","severity":1,"message":"471","line":56,"column":30,"nodeType":"472","messageId":"473","endLine":56,"endColumn":32},{"ruleId":"470","severity":1,"message":"471","line":60,"column":30,"nodeType":"472","messageId":"473","endLine":60,"endColumn":32},{"ruleId":"470","severity":1,"message":"471","line":64,"column":30,"nodeType":"472","messageId":"473","endLine":64,"endColumn":32},{"ruleId":"466","replacedBy":"474"},{"ruleId":"468","replacedBy":"475"},{"ruleId":"476","severity":1,"message":"477","line":3,"column":9,"nodeType":"478","messageId":"479","endLine":3,"endColumn":13},{"ruleId":"476","severity":1,"message":"480","line":3,"column":15,"nodeType":"478","messageId":"479","endLine":3,"endColumn":20},{"ruleId":"476","severity":1,"message":"481","line":3,"column":22,"nodeType":"478","messageId":"479","endLine":3,"endColumn":32},{"ruleId":"476","severity":1,"message":"482","line":3,"column":34,"nodeType":"478","messageId":"479","endLine":3,"endColumn":40},{"ruleId":"476","severity":1,"message":"483","line":3,"column":42,"nodeType":"478","messageId":"479","endLine":3,"endColumn":48},{"ruleId":"476","severity":1,"message":"484","line":3,"column":50,"nodeType":"478","messageId":"479","endLine":3,"endColumn":61},{"ruleId":"476","severity":1,"message":"485","line":3,"column":69,"nodeType":"478","messageId":"479","endLine":3,"endColumn":74},{"ruleId":"476","severity":1,"message":"486","line":1,"column":10,"nodeType":"478","messageId":"479","endLine":1,"endColumn":21},{"ruleId":"476","severity":1,"message":"487","line":1,"column":23,"nodeType":"478","messageId":"479","endLine":1,"endColumn":34},{"ruleId":"476","severity":1,"message":"488","line":2,"column":8,"nodeType":"478","messageId":"479","endLine":2,"endColumn":13},{"ruleId":"476","severity":1,"message":"489","line":3,"column":8,"nodeType":"478","messageId":"479","endLine":3,"endColumn":13},{"ruleId":"476","severity":1,"message":"490","line":3,"column":17,"nodeType":"478","messageId":"479","endLine":3,"endColumn":26},{"ruleId":"476","severity":1,"message":"491","line":4,"column":8,"nodeType":"478","messageId":"479","endLine":4,"endColumn":13},{"ruleId":"476","severity":1,"message":"492","line":5,"column":10,"nodeType":"478","messageId":"479","endLine":5,"endColumn":20},{"ruleId":"476","severity":1,"message":"493","line":5,"column":22,"nodeType":"478","messageId":"479","endLine":5,"endColumn":34},{"ruleId":"476","severity":1,"message":"488","line":2,"column":8,"nodeType":"478","messageId":"479","endLine":2,"endColumn":13},{"ruleId":"476","severity":1,"message":"491","line":5,"column":8,"nodeType":"478","messageId":"479","endLine":5,"endColumn":13},{"ruleId":"476","severity":1,"message":"492","line":6,"column":10,"nodeType":"478","messageId":"479","endLine":6,"endColumn":20},{"ruleId":"476","severity":1,"message":"493","line":6,"column":22,"nodeType":"478","messageId":"479","endLine":6,"endColumn":34},{"ruleId":"470","severity":1,"message":"471","line":63,"column":34,"nodeType":"472","messageId":"473","endLine":63,"endColumn":36},{"ruleId":"476","severity":1,"message":"494","line":3,"column":8,"nodeType":"478","messageId":"479","endLine":3,"endColumn":14},{"ruleId":"476","severity":1,"message":"495","line":4,"column":10,"nodeType":"478","messageId":"479","endLine":4,"endColumn":29},{"ruleId":"476","severity":1,"message":"488","line":2,"column":8,"nodeType":"478","messageId":"479","endLine":2,"endColumn":13},{"ruleId":"470","severity":1,"message":"471","line":59,"column":34,"nodeType":"472","messageId":"473","endLine":59,"endColumn":36},{"ruleId":"496","severity":1,"message":"497","line":4,"column":5,"nodeType":"498","messageId":"499","endLine":7,"endColumn":6},{"ruleId":"496","severity":1,"message":"497","line":5,"column":5,"nodeType":"498","messageId":"499","endLine":8,"endColumn":6},{"ruleId":"500","severity":1,"message":"501","line":16,"column":21,"nodeType":"502","endLine":18,"endColumn":23},{"ruleId":"503","severity":1,"message":"504","line":34,"column":41,"nodeType":"502","endLine":34,"endColumn":53},{"ruleId":"505","severity":1,"message":"506","line":42,"column":29,"nodeType":"507","messageId":"508","endLine":42,"endColumn":36},{"ruleId":"496","severity":1,"message":"497","line":5,"column":5,"nodeType":"498","messageId":"499","endLine":8,"endColumn":6},{"ruleId":"500","severity":1,"message":"501","line":16,"column":21,"nodeType":"502","endLine":18,"endColumn":23},{"ruleId":"503","severity":1,"message":"504","line":34,"column":41,"nodeType":"502","endLine":34,"endColumn":53},{"ruleId":"505","severity":1,"message":"506","line":42,"column":29,"nodeType":"507","messageId":"508","endLine":42,"endColumn":36},{"ruleId":"476","severity":1,"message":"509","line":2,"column":8,"nodeType":"478","messageId":"479","endLine":2,"endColumn":16},{"ruleId":"476","severity":1,"message":"510","line":21,"column":15,"nodeType":"478","messageId":"479","endLine":21,"endColumn":29},{"ruleId":"476","severity":1,"message":"509","line":2,"column":8,"nodeType":"478","messageId":"479","endLine":2,"endColumn":16},{"ruleId":"476","severity":1,"message":"510","line":9,"column":15,"nodeType":"478","messageId":"479","endLine":9,"endColumn":29},{"ruleId":"496","severity":1,"message":"497","line":4,"column":5,"nodeType":"498","messageId":"499","endLine":6,"endColumn":6},{"ruleId":"496","severity":1,"message":"497","line":5,"column":5,"nodeType":"498","messageId":"499","endLine":7,"endColumn":6},{"ruleId":"476","severity":1,"message":"511","line":1,"column":16,"nodeType":"478","messageId":"479","endLine":1,"endColumn":25},{"ruleId":"496","severity":1,"message":"497","line":4,"column":5,"nodeType":"498","messageId":"499","endLine":6,"endColumn":6},{"ruleId":"496","severity":1,"message":"497","line":4,"column":5,"nodeType":"498","messageId":"499","endLine":6,"endColumn":6},{"ruleId":"476","severity":1,"message":"492","line":5,"column":9,"nodeType":"478","messageId":"479","endLine":5,"endColumn":19},{"ruleId":"476","severity":1,"message":"493","line":5,"column":21,"nodeType":"478","messageId":"479","endLine":5,"endColumn":33},{"ruleId":"512","severity":1,"message":"513","line":55,"column":5,"nodeType":"498","messageId":"473","endLine":57,"endColumn":6},{"ruleId":"496","severity":1,"message":"497","line":4,"column":5,"nodeType":"498","messageId":"499","endLine":6,"endColumn":6},{"ruleId":"496","severity":1,"message":"497","line":4,"column":5,"nodeType":"498","messageId":"499","endLine":6,"endColumn":6},{"ruleId":"514","severity":1,"message":"515","line":137,"column":21,"nodeType":"516","messageId":"517","endLine":137,"endColumn":48},{"ruleId":"514","severity":1,"message":"515","line":138,"column":20,"nodeType":"516","messageId":"517","endLine":138,"endColumn":46},{"ruleId":"476","severity":1,"message":"518","line":142,"column":13,"nodeType":"478","messageId":"479","endLine":142,"endColumn":23},{"ruleId":"476","severity":1,"message":"519","line":13,"column":20,"nodeType":"478","messageId":"479","endLine":13,"endColumn":23},{"ruleId":"476","severity":1,"message":"520","line":13,"column":24,"nodeType":"478","messageId":"479","endLine":13,"endColumn":31},{"ruleId":"503","severity":1,"message":"521","line":8,"column":54,"nodeType":"502","endLine":11,"endColumn":12},{"ruleId":"503","severity":1,"message":"521","line":13,"column":62,"nodeType":"502","endLine":16,"endColumn":12},{"ruleId":"503","severity":1,"message":"521","line":23,"column":42,"nodeType":"502","endLine":26,"endColumn":16},{"ruleId":"470","severity":1,"message":"471","line":23,"column":82,"nodeType":"472","messageId":"473","endLine":23,"endColumn":84},{"ruleId":"476","severity":1,"message":"519","line":5,"column":20,"nodeType":"478","messageId":"479","endLine":5,"endColumn":23},{"ruleId":"476","severity":1,"message":"520","line":5,"column":24,"nodeType":"478","messageId":"479","endLine":5,"endColumn":31},{"ruleId":"500","severity":1,"message":"501","line":9,"column":17,"nodeType":"502","endLine":9,"endColumn":84},{"ruleId":"476","severity":1,"message":"511","line":1,"column":17,"nodeType":"478","messageId":"479","endLine":1,"endColumn":26},{"ruleId":"476","severity":1,"message":"511","line":1,"column":17,"nodeType":"478","messageId":"479","endLine":1,"endColumn":26},{"ruleId":"476","severity":1,"message":"522","line":2,"column":8,"nodeType":"478","messageId":"479","endLine":2,"endColumn":14},{"ruleId":"496","severity":1,"message":"497","line":7,"column":5,"nodeType":"498","messageId":"499","endLine":10,"endColumn":6},{"ruleId":"476","severity":1,"message":"523","line":1,"column":10,"nodeType":"478","messageId":"479","endLine":1,"endColumn":27},{"ruleId":"476","severity":1,"message":"511","line":2,"column":18,"nodeType":"478","messageId":"479","endLine":2,"endColumn":27},{"ruleId":"476","severity":1,"message":"509","line":3,"column":8,"nodeType":"478","messageId":"479","endLine":3,"endColumn":16},{"ruleId":"476","severity":1,"message":"524","line":4,"column":8,"nodeType":"478","messageId":"479","endLine":4,"endColumn":19},{"ruleId":"476","severity":1,"message":"525","line":5,"column":10,"nodeType":"478","messageId":"479","endLine":5,"endColumn":27},{"ruleId":"476","severity":1,"message":"526","line":3,"column":8,"nodeType":"478","messageId":"479","endLine":3,"endColumn":14},{"ruleId":"476","severity":1,"message":"527","line":4,"column":10,"nodeType":"478","messageId":"479","endLine":4,"endColumn":26},{"ruleId":"528","severity":1,"message":"529","line":21,"column":21,"nodeType":"530","endLine":21,"endColumn":36},{"ruleId":"528","severity":1,"message":"531","line":22,"column":20,"nodeType":"530","endLine":22,"endColumn":34},{"ruleId":"528","severity":1,"message":"532","line":23,"column":17,"nodeType":"530","endLine":23,"endColumn":28},{"ruleId":"476","severity":1,"message":"533","line":73,"column":9,"nodeType":"478","messageId":"479","endLine":73,"endColumn":19},{"ruleId":"476","severity":1,"message":"534","line":76,"column":14,"nodeType":"478","messageId":"479","endLine":76,"endColumn":26},{"ruleId":"476","severity":1,"message":"535","line":137,"column":10,"nodeType":"478","messageId":"479","endLine":137,"endColumn":15},{"ruleId":"476","severity":1,"message":"536","line":139,"column":6,"nodeType":"478","messageId":"479","endLine":139,"endColumn":12},{"ruleId":"476","severity":1,"message":"537","line":142,"column":6,"nodeType":"478","messageId":"479","endLine":142,"endColumn":13},{"ruleId":"538","severity":1,"message":"539","line":149,"column":9,"nodeType":"478","messageId":"540","endLine":149,"endColumn":15},{"ruleId":"538","severity":1,"message":"539","line":150,"column":30,"nodeType":"478","messageId":"540","endLine":150,"endColumn":36},{"ruleId":"470","severity":1,"message":"471","line":182,"column":15,"nodeType":"472","messageId":"473","endLine":182,"endColumn":17},{"ruleId":"541","severity":1,"message":"542","line":191,"column":13,"nodeType":"478","messageId":"543","endLine":191,"endColumn":15},{"ruleId":"541","severity":1,"message":"544","line":192,"column":9,"nodeType":"478","messageId":"543","endLine":192,"endColumn":16},{"ruleId":"476","severity":1,"message":"545","line":2,"column":18,"nodeType":"478","messageId":"479","endLine":2,"endColumn":23},{"ruleId":"476","severity":1,"message":"546","line":5,"column":8,"nodeType":"478","messageId":"479","endLine":5,"endColumn":16},{"ruleId":"496","severity":1,"message":"497","line":8,"column":5,"nodeType":"498","messageId":"499","endLine":11,"endColumn":6},{"ruleId":"476","severity":1,"message":"547","line":8,"column":10,"nodeType":"478","messageId":"479","endLine":8,"endColumn":24},{"ruleId":"476","severity":1,"message":"548","line":8,"column":44,"nodeType":"478","messageId":"479","endLine":8,"endColumn":54},{"ruleId":"476","severity":1,"message":"549","line":9,"column":10,"nodeType":"478","messageId":"479","endLine":9,"endColumn":23},{"ruleId":"476","severity":1,"message":"550","line":11,"column":8,"nodeType":"478","messageId":"479","endLine":11,"endColumn":17},{"ruleId":"476","severity":1,"message":"551","line":12,"column":8,"nodeType":"478","messageId":"479","endLine":12,"endColumn":24},{"ruleId":"496","severity":1,"message":"497","line":17,"column":5,"nodeType":"498","messageId":"499","endLine":21,"endColumn":6},{"ruleId":"552","severity":1,"message":"553","line":26,"column":22,"nodeType":"516","messageId":"554","endLine":26,"endColumn":33},{"ruleId":"500","severity":1,"message":"501","line":77,"column":21,"nodeType":"502","endLine":77,"endColumn":70},{"ruleId":"500","severity":1,"message":"501","line":78,"column":21,"nodeType":"502","endLine":78,"endColumn":70},{"ruleId":"500","severity":1,"message":"501","line":79,"column":21,"nodeType":"502","endLine":79,"endColumn":96},{"ruleId":"500","severity":1,"message":"501","line":80,"column":21,"nodeType":"502","endLine":80,"endColumn":69},{"ruleId":"470","severity":1,"message":"471","line":27,"column":28,"nodeType":"472","messageId":"473","endLine":27,"endColumn":30},{"ruleId":"500","severity":1,"message":"501","line":27,"column":37,"nodeType":"502","endLine":27,"endColumn":67},{"ruleId":"470","severity":1,"message":"471","line":27,"column":78,"nodeType":"472","messageId":"473","endLine":27,"endColumn":80},{"ruleId":"500","severity":1,"message":"501","line":27,"column":90,"nodeType":"502","endLine":27,"endColumn":126},{"ruleId":"470","severity":1,"message":"471","line":28,"column":23,"nodeType":"472","messageId":"473","endLine":28,"endColumn":25},{"ruleId":"500","severity":1,"message":"501","line":28,"column":33,"nodeType":"502","endLine":28,"endColumn":65},{"ruleId":"470","severity":1,"message":"471","line":28,"column":76,"nodeType":"472","messageId":"473","endLine":28,"endColumn":78},{"ruleId":"500","severity":1,"message":"501","line":28,"column":87,"nodeType":"502","endLine":28,"endColumn":121},{"ruleId":"470","severity":1,"message":"471","line":29,"column":23,"nodeType":"472","messageId":"473","endLine":29,"endColumn":25},{"ruleId":"500","severity":1,"message":"501","line":29,"column":35,"nodeType":"502","endLine":29,"endColumn":71},{"ruleId":"470","severity":1,"message":"471","line":29,"column":82,"nodeType":"472","messageId":"473","endLine":29,"endColumn":84},{"ruleId":"500","severity":1,"message":"501","line":29,"column":92,"nodeType":"502","endLine":29,"endColumn":124},{"ruleId":"470","severity":1,"message":"471","line":30,"column":23,"nodeType":"472","messageId":"473","endLine":30,"endColumn":25},{"ruleId":"500","severity":1,"message":"501","line":30,"column":37,"nodeType":"502","endLine":30,"endColumn":77},{"ruleId":"470","severity":1,"message":"471","line":30,"column":88,"nodeType":"472","messageId":"473","endLine":30,"endColumn":90},{"ruleId":"500","severity":1,"message":"501","line":30,"column":99,"nodeType":"502","endLine":30,"endColumn":133},{"ruleId":"470","severity":1,"message":"471","line":31,"column":23,"nodeType":"472","messageId":"473","endLine":31,"endColumn":25},{"ruleId":"500","severity":1,"message":"501","line":31,"column":34,"nodeType":"502","endLine":31,"endColumn":68},{"ruleId":"470","severity":1,"message":"471","line":31,"column":79,"nodeType":"472","messageId":"473","endLine":31,"endColumn":81},{"ruleId":"500","severity":1,"message":"501","line":31,"column":91,"nodeType":"502","endLine":31,"endColumn":127},{"ruleId":"470","severity":1,"message":"471","line":32,"column":23,"nodeType":"472","messageId":"473","endLine":32,"endColumn":25},{"ruleId":"500","severity":1,"message":"501","line":32,"column":36,"nodeType":"502","endLine":32,"endColumn":74},{"ruleId":"470","severity":1,"message":"471","line":32,"column":85,"nodeType":"472","messageId":"473","endLine":32,"endColumn":87},{"ruleId":"500","severity":1,"message":"501","line":32,"column":97,"nodeType":"502","endLine":32,"endColumn":133},{"ruleId":"470","severity":1,"message":"471","line":33,"column":23,"nodeType":"472","messageId":"473","endLine":33,"endColumn":25},{"ruleId":"500","severity":1,"message":"501","line":33,"column":31,"nodeType":"502","endLine":33,"endColumn":59},{"ruleId":"476","severity":1,"message":"511","line":1,"column":16,"nodeType":"478","messageId":"479","endLine":1,"endColumn":25},{"ruleId":"476","severity":1,"message":"488","line":2,"column":8,"nodeType":"478","messageId":"479","endLine":2,"endColumn":13},{"ruleId":"466","replacedBy":"555"},{"ruleId":"468","replacedBy":"556"},{"ruleId":"476","severity":1,"message":"557","line":4,"column":8,"nodeType":"478","messageId":"479","endLine":4,"endColumn":13},{"ruleId":"476","severity":1,"message":"558","line":5,"column":8,"nodeType":"478","messageId":"479","endLine":5,"endColumn":13},{"ruleId":"476","severity":1,"message":"559","line":6,"column":8,"nodeType":"478","messageId":"479","endLine":6,"endColumn":13},{"ruleId":"476","severity":1,"message":"560","line":7,"column":8,"nodeType":"478","messageId":"479","endLine":7,"endColumn":12},{"ruleId":"476","severity":1,"message":"561","line":91,"column":15,"nodeType":"478","messageId":"479","endLine":91,"endColumn":18},{"ruleId":"476","severity":1,"message":"562","line":1,"column":27,"nodeType":"478","messageId":"479","endLine":1,"endColumn":35},{"ruleId":"476","severity":1,"message":"563","line":46,"column":13,"nodeType":"478","messageId":"479","endLine":46,"endColumn":19},{"ruleId":"476","severity":1,"message":"562","line":1,"column":27,"nodeType":"478","messageId":"479","endLine":1,"endColumn":35},{"ruleId":"476","severity":1,"message":"562","line":1,"column":27,"nodeType":"478","messageId":"479","endLine":1,"endColumn":35},{"ruleId":"476","severity":1,"message":"564","line":6,"column":16,"nodeType":"478","messageId":"479","endLine":6,"endColumn":19},{"ruleId":"476","severity":1,"message":"562","line":1,"column":27,"nodeType":"478","messageId":"479","endLine":1,"endColumn":35},{"ruleId":"476","severity":1,"message":"565","line":2,"column":9,"nodeType":"478","messageId":"479","endLine":2,"endColumn":19},{"ruleId":"476","severity":1,"message":"566","line":2,"column":20,"nodeType":"478","messageId":"479","endLine":2,"endColumn":28},{"ruleId":"476","severity":1,"message":"567","line":2,"column":29,"nodeType":"478","messageId":"479","endLine":2,"endColumn":36},{"ruleId":"476","severity":1,"message":"568","line":2,"column":37,"nodeType":"478","messageId":"479","endLine":2,"endColumn":48},{"ruleId":"476","severity":1,"message":"522","line":3,"column":8,"nodeType":"478","messageId":"479","endLine":3,"endColumn":14},{"ruleId":"496","severity":1,"message":"497","line":8,"column":5,"nodeType":"498","messageId":"499","endLine":11,"endColumn":6},{"ruleId":"470","severity":1,"message":"471","line":29,"column":29,"nodeType":"472","messageId":"473","endLine":29,"endColumn":31},"no-native-reassign",["569"],"no-negated-in-lhs",["570"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["569"],["570"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'ShareBoard' is defined but never used.","'MyPage' is defined but never used.","'Notice' is defined but never used.","'Reservation' is defined but never used.","'Admin' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'axios' is defined but never used.","'React' is defined but never used.","'useEffect' is defined but never used.","'store' is defined but never used.","'actionType' is defined but never used.","'mainViewType' is defined but never used.","'logger' is defined but never used.","'composeWithDevTools' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a return value from function.","ReturnStatement","expectedReturnValue","'reactDOM' is defined but never used.","'responseGoogle' is assigned a value but never used.","'Component' is defined but never used.","no-dupe-class-members","Duplicate name 'componentWillUnmount'.","no-new-wrappers","Do not use String as a constructor.","NewExpression","noConstructor","'betweenDay' is assigned a value but never used.","'idx' is assigned a value but never used.","'history' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'moment' is defined but never used.","'getSuggestedQuery' is defined but never used.","'GoogleLogin' is defined but never used.","'refreshTokenSetup' is defined but never used.","'styled' is defined but never used.","'FaFacebookSquare' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'longitude' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'latitude' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'title' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'infowindow' is assigned a value but never used.","'closeOverlay' is defined but never used.","'order' is assigned a value but never used.","'menuEl' is assigned a value but never used.","'listStr' is assigned a value but never used.","no-use-before-define","'itemEl' was used before it was defined.","usedBeforeDefined","no-redeclare","'el' is already defined.","redeclared","'itemStr' is already defined.","'Route' is defined but never used.","'TourList' is defined but never used.","'createMuiTheme' is defined but never used.","'WithStyles' is defined but never used.","'ThemeProvider' is defined but never used.","'PropTypes' is defined but never used.","'styledComponents' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","preferLiteral",["569"],["570"],"'jeju1' is defined but never used.","'jeju2' is defined but never used.","'jeju3' is defined but never used.","'udo1' is defined but never used.","'url' is assigned a value but never used.","'useState' is defined but never used.","'member' is assigned a value but never used.","'row' is assigned a value but never used.","'FaUtensils' is defined but never used.","'FaMugHot' is defined but never used.","'FaHotel' is defined but never used.","'FaHamburger' is defined but never used.","no-global-assign","no-unsafe-negation"]